{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4ca14d0f-046a-4d2f-a8d0-87eddbf9c6d2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c7a2d30d-bf43-4b30-a0be-0d96c8a63bee",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45e53625-e100-4385-8699-814e7c71b059",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5cc18e0a-72f1-4ac5-a177-e4bc1ef888fc"
                }
              }
            ]
          },
          {
            "id": "fd3c4ece-ada6-4f6b-bb40-34c414c9c25b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40e7f5a1-12d0-4d9a-84b6-686d0111acb5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fd78a4a4-4f2d-487c-a54b-2eff9ea512c7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d5341715-c355-44f1-b5f6-f81a673b1d89",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2b95d6c8-6d1a-4172-a77e-b8a1d88632b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9e89622-682c-4045-9935-f5461f7a752e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d39f911-61a1-46ee-aaca-389f9c1c1d5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66a0c462-4058-4ec8-a4ea-21b1ee330789"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6bb2ff26-e7ac-4eb3-9b51-2e9c2c5d717d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6b7b94c-3ff8-471d-9046-5d23e5455520"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6b798cc1-0606-4059-b8d8-16cd3f633524",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a2b4bdc-c01d-4260-ac55-3a5db2dfd0b8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62172b8b-a0d5-43ce-b023-38eefe280299",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5cf78794-fe64-4268-9036-4b850cb1cb25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "049c6457-5374-4913-b3cb-6b6f225bcb0b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37ef07cb-ec2c-46e4-961b-b4de02d7fc31"
            }
          }
        ]
      },
      {
        "id": "e4b0be41-f187-4e9e-a97b-91d382eda956",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c5275e5c-315f-4f9a-aebb-4c7dd6bf8717",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2deea445-88f5-4aa9-8fa7-37c9634f52b3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bcaa113f-25e9-43ea-865d-230065954156",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08b71bc-4213-468d-b21b-ca327f8f0e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8939ab36-7aec-46ea-bc6d-754e50e458d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39724e16-86eb-44c3-8a88-22ff5a6c69df",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9ff346-3acb-4674-ae3e-7a1d3c4dd808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0af46e7a-3a0c-4841-8f95-2e74f450eea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7475ac4-3639-467f-981d-fd8f5adec71b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44195e1-b2d8-4d0a-8bfb-ec9cbaa35721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f578da5-509e-41c3-ba28-8481a9aead92"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a70ed0aa-145c-448c-836a-d0ed0c123e45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d10d5b7d-7084-4f83-87b4-945dcf9af583",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6520370d-8d73-4119-baa8-aa448c731968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0c146a0-4c56-40f7-b390-dea690c72355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9b8bde-eb23-427a-abdf-2b7baeccd4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b86330-6a2c-4fd9-8358-321a43ebf98a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4dc886b1-014e-4ffc-81f3-6d06f1a87a52",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a54cfa2d-695a-466b-b3e0-0bed94516e30",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58939acf-a425-48a9-bd98-41be18134d80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "551e75f0-071a-4e0b-a5db-b991b20ca834"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c01bbeb-f8aa-4b76-9ec6-01f5e1eff7c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e12f9e4b-82a7-46b1-8a0b-3d2ced7b4cab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50cb170c-9c57-49e1-9fee-a7c503f2a1fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9cb91050-3d37-4c55-831b-cc779890787c"
            }
          }
        ]
      },
      {
        "id": "92d0f7b4-0679-402c-8a90-dcf87e162633",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d1663fc2-7ad3-4849-bffb-6f289ba018db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d561631a-74ec-426d-9a9a-6e878c1f9892",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "130aedd0-3be8-4543-8021-b9aa307003ca",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fa30e9-2c09-4dd7-a4cf-15f80b5caa60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b710a5c-16ab-4c1a-9d59-84bdee255838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a070ec-61c1-42bf-93e6-cf20344a25fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de87e8fc-9aa1-4c88-b187-01d7cdd4308b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693f303a-1f56-4a1f-9b47-24d658576e86",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1584e117-38ef-4281-8304-87fa633e3a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60acb388-bd1a-4302-b88b-2defcb659359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae14e26-2da1-40fc-9cd9-ff40faa0feb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bec9443-86b6-4e78-a457-000814469809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc496b5-53a0-4a22-8800-0e7d4e044876",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be20b5a2-29be-4669-8a7f-6a06aa32cb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d4fc3f-5cb8-48fd-8928-87c77af6493d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600ec356-d9a1-4b60-9438-2cd1fe8e2a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3f44298-9b42-42c8-96fb-9b7a835f59b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe11412-720a-4ecc-b0f1-e55679ead490",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14da8423-dbf9-4060-ba98-3db8edd045fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc76751-7c08-4217-bbb0-dced721db971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce862929-d718-438e-809c-f394bb5749b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daed7149-c363-4133-82fd-dc1c66f69507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7468bcc-6704-430a-9cdd-015e9d55ca76",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d769e494-30d3-4e27-b0be-9ee2942fac32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d27b8a-ba86-4fc7-a1b5-e108e417b7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9401d379-fb09-4a55-9c50-aff1b020c035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffce43a8-8ac1-4ec6-87d0-c1d46851b2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb2a317-ab8b-4980-9429-3c759fddcf7b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc56f4d-4fa4-4566-91d4-df602db1ac8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58aa059-0b23-4e60-819e-9e685277e132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062e52f9-1f57-4d56-bf00-1a161a76bdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b87c2656-6f60-48a2-b3d5-a8f40b7d8433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489ec21e-0249-449b-acc8-6acd4b73741b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4079945f-f918-458f-8859-abd1f28b0105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0f3a49-7f4a-49cb-ad5d-82d38aab1d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dc39de-2a4e-4e8d-a416-95725754d9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e5eac6c-cd37-4fcc-967b-148efc459302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f1a261-315d-4bd2-b5cd-10ebc84c8647",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120b149a-2728-4270-bc7f-57d5190e8d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3468422-934f-414b-9581-d71b31d4c8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d1ee26-7d8f-4ab1-b107-36b023b93fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55c74b4a-8ddf-4474-9d63-c4facfa4bb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616a9e50-ad2f-4759-8c45-d8f0334d7f59",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e80ad0-1963-495e-8858-69f6219ccf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37606f59-b6c1-4e2d-b48a-3d0619eaebac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c5b64a-4b9d-4038-8061-08000f937cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06af9433-d868-43da-a38c-961a3e6f1cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e1c870-97b8-46e0-9580-35739b665da3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3eff96-4f12-4d7e-886f-c33c72b22101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f716dc2a-4e92-47a6-bc09-a6278b870ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165640c6-7c2b-4702-828e-0dad2941bd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09eebddd-dbc9-4ec0-8063-57cbc299f058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25915373-8dc6-4d61-98f1-dab6d04116c4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ea54f3-3aae-4eba-8e64-1156e826acb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d477824-66ff-4a13-8daa-1d0824c4143f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5165f9e7-00df-418e-a85d-148e3dc83c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34916d2e-9642-4b61-980a-4a13713ea0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfae549-d338-4ae0-9a6c-410bf8658e64",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932829a4-10af-4d84-89d6-ee06dc042623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb52187-abf2-4b18-91c8-67c04d80f259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba32c61a-56b4-4ca1-a193-7a0375b83d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da293cdc-5dd5-4b1a-b30b-e99044eb0a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d73ca1-1dac-46ae-8f42-c712b8b419bd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee57835-f0d7-4adb-bbf1-f64f662aa189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efeba96-f456-4b0b-84a5-7befcca9ba69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746d8d9f-7f8c-4518-9bd7-68e334046bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61e16b09-13a7-45f1-b6d7-fe330be49dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d913f8-f03c-4bb6-930c-0b24cc545847",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71365b57-bc39-4fe7-8e5b-9c78a63fb310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2e9da6-c68d-4064-bf38-e7bf9f293b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5e9d13-889a-4b81-be49-260345c09081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf65b620-10c3-4ae6-a4b1-2dcec44a99bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541f5b34-b670-4401-8ac6-7eec13aeb289",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74475d67-f82f-4be4-8a44-c9122499c44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3abb8f-2cd6-4971-bada-e06386f730bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc3dab1-c684-4c3a-9278-5ceb6e800528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e532c8a-df7e-47ad-9b5e-c831fe0d9122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6aea10-08bf-4bdd-a48e-ef5e9c0b7ddc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e80f7e-7393-43d7-835a-285939574895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185d9faf-0819-4682-b424-4bb2b26a6a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce0974a-444d-42ff-baca-89a148b1bf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9407262f-c0bd-4910-843d-cebbf2f33546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212a4cf6-2558-454f-acdf-779bc9addd6c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af9c28d-4a1a-4c7a-926f-2ee255310699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a710e836-99d5-4e74-ad3c-b17826edabe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd6b30f-d4c4-4c35-a1f2-d50918e83648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64617d3d-36ca-4d29-be65-bb85ec909fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ddf531-2fc3-474c-b477-0adc6a36a735",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1c05ca-3f38-467f-9c27-8aa53342f003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9426a27e-2460-4f3e-becb-21582e307321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d92bb0-cd05-46f0-ba04-e861dae119bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb117b2-adb5-4dbf-a838-39e9c3fbcfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb0e8bd-c1a7-4f0f-a9e9-bccc610624fd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e939ce07-706f-4d28-8ea4-0e5b3eb27eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc05108-4bb9-4d8c-8a83-0cf7d0c88c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a7c173-4454-4fb4-9ebd-519485c41971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7024b6a7-6355-4917-b849-f92cc23424d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478ecfb9-6b76-49e9-a959-17a24fb36245",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de0da7a-096e-41da-8973-43d1a4c78243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce6582d-f4ca-4f15-9a1f-7e6f04219136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cc3e3b-05d2-421c-9751-4844968728f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc758b00-961b-40ad-b5d9-224e8277f8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843135d8-df1a-4dfe-b1a8-3f019b09dadb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f26b7e-b68d-41ea-a117-bfdb140854c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9c9c28-ead1-4524-86f7-2393db4cf5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9514451-338e-4014-85dc-d8a98e8344aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c065897c-cb4d-40c4-aea9-3cd1f2954990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088b7526-cd58-4eac-9624-0bce5f810f59",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752f6a11-ffe7-43b6-a094-94e1dce1b713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3662602f-b5fe-4ce0-bb16-5000bdb3f169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc6f101-e43f-4a9e-93df-bef6f48594d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9057fe-b648-4f5f-866b-faeb17b61c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dad9d1-aff7-4541-bd84-090783fa49e7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dab289-71a1-45e9-a795-dbba401d8698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5894f826-6fa9-488f-af63-dda9c0fc9c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c62192-280f-4ca4-843a-1dac4ec5b9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1de5e883-218e-41f8-9cb7-ff60b8de3bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b634a81c-5943-489b-81db-b1298522e918",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cf00fb-cb7e-40ca-ab65-a7da6c5900f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1def523a-7447-492f-8ebd-dce189287ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47f4be0-44f8-4f8d-8941-1b73ebcd72fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b161ecd8-6e64-45d3-9385-812d130fd2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1369ce0-efdd-4e27-b0be-31580d785036",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3a0914-e9d7-4087-8e76-8c72057aaa2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf851884-f84d-4f59-8ead-0691910a9880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2973d382-b4f4-4ad6-80c5-93b74e6a02ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1681949-e646-41d1-ad29-69d728f8ecaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3606dc7-3d5a-48af-8dde-432c602e3b54",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a84f1c-bffb-4e5c-a143-6b16e9a2e5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aaaaa84-3cd2-45e2-99a4-83d18d3c4a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecba557-4049-4075-820e-c2795ed2d99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8330f4c-d8dd-456b-8577-4380f7c723f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cd60b9-57df-4d0a-b35b-54bd49339609",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cad9855-0b97-4912-a996-80c182852f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c605db-35b4-41e1-8cee-6c2190f18d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38e20df-89c4-4264-93a2-a775e3521fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd8b1dc-2b17-4112-88f4-3cc9088c8c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdd17e3-440a-4c9d-a0bb-9aeff71e1a06",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa250be8-220d-4ef0-ad95-836b4053cefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2042ec2f-6324-4b96-827f-9ad869558292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b68205-d6a9-4993-a711-ea079c968e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7183edda-783a-4005-bb46-744b231ad03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd2f14b-9ca5-4b62-b654-e33e8d0623ce",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b696c3e-eec0-401e-83cd-9802dc92e9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79ad1e3-d6cf-471b-af3d-7319c58922d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3d93ef-fd99-422a-907a-053a7ed229e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e084940a-1370-4b57-b3d5-741af2215193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febb2885-b913-4231-9df3-82339b5fd19b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c4135c-59ee-4099-add2-13d29118ce60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a637d32-ca18-48c1-9f13-7fc12515b5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2184d86f-d67b-47bb-9991-9a9aeb8c5510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d06189-215d-40d1-bb61-005c2ab96aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae62446d-c5c0-41b7-8524-f040ff91aac2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00abd9aa-e3ab-4238-a46e-a2782377860e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70801499-6f40-4e20-94dd-f0e5330cd2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0242ede6-446c-471d-b465-6be7244e68b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49ece080-8e78-44a5-a01f-9850d7f7a578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209d66dc-3582-4888-a5b2-22cb79913ca7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df24ae67-b684-4051-a874-271f6a85fd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06185ad8-26ba-464e-bd65-672984175b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b5fecf-2030-4065-b062-e4d3d540cce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fec9f3d-d455-40c9-afd0-6286399fd89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2ab28b-c877-4737-afdc-b3ffd790177e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca7032b-dfd2-4ca9-865e-346285974f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e797943f-5226-4bed-b96a-4d3867e03426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315e6737-ce6d-47b8-9b5d-ab18c3eca3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "489a7027-f8ce-4d39-a892-a015bd2e4225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb051f0-11ae-47f9-b0e3-9c64411e95d9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcbd0d3-7785-4f5b-a465-977eaa67b3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8dec43-a24d-4cf6-9f90-86f2c0300595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af681dd-a3f1-4618-ab6a-6dd11dd794ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d251d07-1c2e-40a5-8668-ae0430c9eb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9146802e-373b-4e4f-834a-55a1439658da",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899d3538-2330-4edf-bce8-0b5513fad101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7308f29d-36ab-4297-9253-48d487cd490f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f689b4e1-3e2c-4830-a4ca-41909aeb5308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "95a670d3-6e04-43fc-a16c-6755c5f5594f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8729d220-d08e-41ab-9068-a9768c773d88",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0eeb19-344b-43a1-b16d-59a962f3e2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a736861-8286-4c06-b2c5-2db200ef63e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105db4f6-4b9e-41f4-af62-d056b1fdc7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52059fc6-389f-434e-a873-f40e7157a793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915ecb9a-5e6c-4db5-b200-33ac621f6fcc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f9476f-c8a8-4e91-895d-4725ee4a3eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685e83af-b48a-46db-962d-98550e840904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7396c0ee-6a58-4c6e-810d-987f5205eb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b4fff6-36c2-42e1-9809-a7e9fea0c077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96bb3e3-e058-40ca-9434-394f2b1392ae",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca068ffd-63dc-4bba-be0e-204308729fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e771d43c-5132-4a32-b83e-c2e00c7f0d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4538a980-7112-4253-8589-2280225b3128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "975ab10c-1a3b-49fd-abd6-96d1d4d617ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580ebd8e-5081-40bc-8c34-2d564a0ae000",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3deb58a6-dea2-48c0-bc5e-3ca7a134dbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03682ea9-42b7-4d02-9ce2-330a0af614f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da26d2e8-5d7a-4701-9777-7f0319ccd584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd96719a-b4a8-46fa-b190-6fa1e05083ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48094bb-b86b-41d3-aaa1-e21e2f62bb09",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bf4ba9-3aa8-41f3-8a1c-7d293e1df22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f293a9-5569-4929-a184-fad8eafbae11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd674f9-17b6-41a0-841f-0a8be2944414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d679d239-fbf6-4341-8084-f4c74d737b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e572c7-df1c-49ba-9eef-4d0bb1c675c1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb43e54-5d3f-430c-989b-2bf07ce911c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a5a4b5-a0c7-43bd-9f90-37468d17f08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10c9460-5e12-435f-9a11-427def0aadc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "57064d72-f305-441c-92bc-6bfc93f43bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7750d56b-691b-4c8d-832f-7d91a91f6105",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbf36bd-b717-45f7-970a-93a39cc6d2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1fe6d2-629f-44ee-adac-5974aea07472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1551425e-579e-49e1-bca0-f7430baf5bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9df7f1a9-14c2-40f3-83db-e482959fbcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de64703b-28ef-4a50-a36c-a7ff6744ee90",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562dc660-71cb-4559-b920-33c06e769bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad42bf2-be80-467f-869d-c7763a26c023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa77319e-9511-4b76-936c-41790e4e8cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "48093ea9-e339-4886-9b95-43435e21af9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ae3b90-d039-4370-b3a7-d9949ebc1017",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941ff696-cb46-4855-b7c0-0c8ac0f91044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca302cc7-5875-46ca-9ec5-57e78683a507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c473084-0b81-446b-9a75-c854f530caa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f906d3bc-9892-4a42-a4f3-05eb546d208e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2886e8-0225-458f-abc5-4016c96c3827",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5257be3b-dafd-4a50-983e-43fb335246c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef9bef5-9bcf-43eb-b09f-58bfa094cce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a3e377-0a26-4a62-b5ad-506c1f7b89ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1896c019-f33a-4445-a609-2a301c560d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7a0b18-b34f-46c6-af65-b8705fc6b1c8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e5ff1f-cc3c-4124-a12c-86e7ebb4f51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48633c1-bf1f-4184-8586-45c6d4676b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e3b91c-27de-487a-844f-04c766d13c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10090b6b-59d6-4059-8097-af37eda9f457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdec262-5e17-4d4c-8908-8f2bf1945612",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d927bf44-3806-4fac-8f34-a97674e655f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f6e13c-ab37-4262-99bc-959b3926afe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19ffb3e-7750-4e0d-aebe-506c1bd28a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7aea2f-4a5b-4058-9303-b9a3de35cec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d46355-2b8e-401e-83fb-6307f55caf47",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d65a25-0586-499f-9e3c-72980f31a4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961e43c6-9ef7-466c-97df-e9b1b32300a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da245ec3-c384-4396-964f-25e40de8e70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46fad3e4-97b1-4f62-a3f4-a340929393a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a948e76-fb9a-4214-83cd-b3dfcd3a45ca",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad870121-b154-4f67-8e59-e2ff889be0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb50eab-31f4-4337-b5b6-2b5749ad15dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a734a98-f030-4006-aaa4-a4d51f83ecef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0dcd3cd-1360-4195-a2d6-14aeca03aa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03e3690-44e7-49b4-99f2-1df99a696fff",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c768ee-7ff3-4ab0-963f-fc04e528194a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c872a2f-7322-474d-aacf-396e5b7d70f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adb263f-e6fc-4851-a15b-fb19e205215c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cd5a51-9ff4-4903-b1d1-e7cf3d21897a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7469f4ac-a551-4870-a439-046cf9aecc09",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773091cf-2fa8-4df2-8b2e-d34590ff0d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8b7a26-a8f0-4ee2-b988-4965d3a2a166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dc2b02-646c-4c32-9494-d4d0b73db6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0d9076-b95b-42db-be85-1cfcc2cf20fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50afdadc-4213-4507-a852-d4e12edc6710",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbd95b6-a875-4567-a924-4d073bd3e2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6578550-dd54-4168-a4e7-06d662412563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1dfd36f-93ca-44cc-9e02-875523d65be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "85d0dcdb-715b-4271-aedb-8917f3c538ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba6d638-4cb4-42a9-bfbc-241df4ed6d14",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c417116c-6394-4168-bf54-8b1b11b502ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a31857-bceb-4236-befe-614aadcc0770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39eaabbf-6de6-4bc0-b105-86492e3f9b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a954ff1-d982-4e43-a190-0b2124be7dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4da448-4c3f-4a66-83ec-7b6aa740a57e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5321447d-2759-46b7-998f-9369f5b5b908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9632ae11-357b-46f2-a325-62e6dc8abe2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987cac82-d59d-4c32-9dfd-747102d3efba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "033d2808-2df7-43a2-acb5-032bd7f0462a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cde725-bf94-492a-8681-7ba9f291912c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc606c1-3b65-48e6-9cf4-a20142ebf2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a48c62b1-50c1-442d-af2a-30e1007636fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fb69d6-07be-46ff-8e68-76a3bb50822d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25ea3e7d-966d-4d95-9233-2863c1f7e679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8943c5e7-e5c8-4a0b-b562-f14dc97a4a53",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a455154e-87f2-49ed-a7a8-0a881ab60f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbd48bb-ad97-46eb-bac5-375468053b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb622ce-6554-4f7d-b00b-104cd11935b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9f05156f-d482-47b7-9e7f-5561b053c8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b787463d-aaf6-4e32-96f9-30e514a73687",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed1d13b-c110-4dce-8620-7db7406d915c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e5e305-c395-4ca1-aebe-f75eac8d764d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba30c1bc-82c1-468a-b49a-2d17b19e4c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "226016b4-49f0-4a02-b46e-eab5710711b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c378c8-3354-4bfc-a2a5-a1b12836caa4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b0ff0a-93dd-4f1a-8532-b90d871f25fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5cc7ced-70e8-4d97-99a5-cbf767a62e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919dae37-ecab-450f-a63d-7a6356a72740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "46e9403f-7cb3-422b-9bf2-b7a7cb2e9711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcec78f-a116-44e1-be66-9485e195c687",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa1978c-5ea7-45c9-b164-05ac5ff93f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c1fa7d-40e5-4a5c-a1ed-d1bc378b044d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0febe3c-d4ae-401d-872c-eeb7fcc7c55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d14482a1-9278-46a0-9158-04a734e40c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c0089b-e8c7-419e-a25f-ca78304a9812",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b921cd43-3370-40c6-9bd1-9df010731a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbfb617-c061-4c96-be09-b40636e14197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4211eb19-8c8a-4f95-92aa-cdb387ad97be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "db1ba41d-8217-44cd-8fc7-40c903b3591e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fca8750-a6be-4e54-817b-79c875f75ca1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0218bc2d-cc9a-4c7b-b46b-b161157e3535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6450063b-73d5-44ef-84c4-fd56c0cd71c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae2c61c-fdf1-48c7-aad4-44e989488616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f44a457c-04df-459e-95ef-01386f17ad59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebb31df-931c-45f8-99c8-eaad24f9ac39",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232146f2-36ee-4a13-acb4-3655ae86e71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd834b4d-9186-4c53-974e-ffe09a9cc7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acca47f3-9764-4443-97ac-d238413ba2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "247e6385-e701-4f16-a866-9976ab08a6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d25fd48-a06a-43cb-8f4e-52c29b61dab9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a70a05b-320e-4768-82a5-3bd04892b68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac565dc-dbbf-4ff9-9bf3-77b5064cd535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55923fa3-31c4-413f-a571-94020fb1fdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4317560-4887-440b-9c59-cf9ed20b358d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e79efb8-5548-40fc-9ce2-4c067f442a73",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bed5ed3-5bbc-40d9-b20f-84b9969fcda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c2a84a-6007-4e15-8cd3-aa3ab2b30c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ae9c19-1122-4a82-9507-fa570b44a381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3670e9b-e6e4-4c04-bca2-dadc9d74f6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19df1eae-ee08-48ec-9d02-c6b4fe3a7351",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8778ac-6dc2-46aa-bfe3-f41e3d41a233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f70563e-2482-4228-9cdd-a9b40a042590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db40bca7-d965-4fa8-b0eb-05228c3b66a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7592e58b-f801-46b2-9583-6b40a2e0a52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a51ebd4-b215-4cbb-a247-10c5f5f17ba4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713f0efb-0f1f-4a67-9691-61942e08a26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d819836-1849-456d-bf0f-41702d3043ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a8c019-0abc-4a6e-8a59-f4bf07ed43bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e7ea3b-343b-42c2-85d9-b118622117b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74b82de-0b62-4b62-bcd4-6abc29d2daf5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9438c54-0dc7-4f08-9c0b-af3140f3ebbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228fdfbc-2f5a-45d1-877e-61d6b704764f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c3a456-66af-48d7-8237-0994387ad9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed63831-ab0d-4066-8b48-1db560444287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d1af8e-85a1-4f24-8c3d-2ecffbba5974",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493c652c-bc84-4946-936d-845b17c3a68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed2332f-6177-4ae9-b680-57b11711a1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf71a91-ad2f-47f9-97cb-91b6aa185dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "74540f1f-d1e6-410c-8b90-333469690db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49d9d8f-4ae5-4613-8874-a5e73f9f77f1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd86e869-55bf-4a3b-baa4-cffed43f245b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449a3511-7502-450a-83c0-f0a701f1b3c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04da2e4-c6e7-40b8-bb9d-908fc2162d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "49499719-6ad3-47b6-b48c-344558a4b116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a901122-9cbe-4036-a580-cee3087a2d17",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8859e1-0120-4014-886d-d0742bcd38a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a9367a-6e86-4ab2-b8f9-b0d369687186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28ff35f-f552-4c4b-a416-dfd6b5aa66c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "240b7871-3c5c-41be-bd10-62ad6d30b411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76fe4f8-4450-4c3a-88dc-c5a92cbe4351",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4104ae35-4ef6-4156-aab8-2e10a4fb06f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed54435-b4df-431e-a886-7a46c4bac7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc77a92-2f46-4089-8e0f-96c70d2b18d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19dcd053-2059-4e7e-80f0-62c359d3ea9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a362e2-d03e-4607-bb21-eb42e9a27cd7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2fabb1-dc23-4380-a14a-2d7093141033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd380d4-6e68-400f-9d6a-a0a2f4b48a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b544b3ab-90d5-41ee-a478-4b9e3f8ee0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6318b02f-09f8-433e-b083-09355cd6afea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6469a5a2-93f5-40ce-8997-e126d89f17e4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1d8006-d71b-4e97-b106-05283074465a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b9a7bd-37e9-4385-a769-b41a5e5f81f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93baac25-d3e6-435d-b59f-28f91d9daa30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be239031-e9df-4f8b-bc33-c4a784728f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f912f906-b9ce-4b2f-983a-4bb702fe5ab1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa7b830-3b90-4c46-99d9-39682325ea77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5812a369-fcab-4779-813f-f6079035a197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c15a04e-fb43-438e-ba33-7567beb23085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3ae6f7-66e6-4f60-adb6-e2fc32f474b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37265c09-f081-4575-9dfa-0bb96726d32b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafa854d-afbd-410d-b4f8-f6ce78a1b47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1daa0782-cc1e-413f-96d1-3a2b54e28e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79254fd-d2d8-4944-82b7-e294f1f42818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d9d129-3824-484c-bfc9-9db9964a30fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b124114b-9467-4d07-83f1-061395e5c7c8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9809769-9846-40a8-88d9-fa241584af3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2518563-912f-4e99-8374-d17f4027548d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7343420e-5fe0-4bda-86e4-693a9881f5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27a1c8e5-800d-4a4a-8697-1b97c233aa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d7f721-5252-44f0-8e62-dc9e025c0d7f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121cfe22-a4a7-42c5-93c6-72f0243e0f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11d57f6-74f7-4616-ad6d-2f23dd923661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ecedd6-662b-4c4f-a258-964a8c54277a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a034218d-07a1-4f31-98ff-d19aa537404b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852bf956-d1b4-49e0-814c-dbee1769f5b1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b79222-a1c1-42c2-8fb9-0afbfb62c260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8559227e-3062-4fbe-bc4f-86ba95cc05c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913df31d-006f-4ab8-b38a-2e40541f73a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccb432e-23cb-40b9-9955-e0daa22f8db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69a15c5-c157-44ab-bb27-205e80eedcad",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347f4762-bf8e-4c20-9af4-509c255f5bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d84d7d5-7331-4087-9969-78cc4ec86c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d218f88-0b71-4e33-a11e-256ac769c7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a781fd7-106c-4c35-b966-7c208cf1db48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4b78f3-1065-486b-b5e2-d6c37209e779",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc68a50d-f0be-4b5d-a650-fdd2ca4111aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1c950a-94ae-4161-b652-7aac2f59adaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1922db-f092-4217-ad6a-e784ca7f0f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90019da4-fef0-4598-b330-9e900a14d60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1145f6-eeda-4371-9a6e-edaed4e26f2d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eed6bb5-7500-4aec-8f31-d676cb25a1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726329cb-725b-4471-8697-39b7eac18d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820d2585-8a5b-409e-acf3-3567570dbe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d76fbf37-e332-451c-aa7e-84041042f82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c2696b-2e39-4c66-9af8-531a1c7b5cd7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d311e830-cf44-4573-a336-4ce82d6ca04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d964df96-0535-4ddd-833b-84dd1825590c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb307bc3-feb1-49f9-b56f-bd3e77a726e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd766f8-ff9a-48a9-a2d6-1a222f9d80bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6fa798-6dbb-4112-9b33-5d1395a6cb5c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8990c78-184c-4d43-8457-bae884bf65a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7aaecd-b898-43ed-ad70-bd439e281806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefd79c2-86c8-4a67-8d5d-defb6ea2800c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aecd26c-d709-4c3a-bb46-62cceeaa5119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bd124b-5ad7-4d5c-968c-5593727194b9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685c3400-59da-401c-89ad-e4da2c4648da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1a2c49-ae16-479b-a5e6-3e9e0f27871f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f535ee9-6ab3-48f8-b6eb-13cfab938a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b58ef304-3bda-4d66-a528-cfab585c6bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdffb182-ebd2-49a1-8274-056353a9dfca",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35994f8-bce2-48cf-b400-b5f4095df33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e29fc3-6555-4f62-9dd7-7cc7ae3940b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b25f55-910d-4de4-8c4f-1a379ec8b9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5737f9ba-6240-4b48-a4c9-0aa3b7a514fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e0dd45-b0b6-43b0-b69c-7a6f320e7d45",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9154cc42-2eb9-4eea-98b3-dfb612377df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528f9aac-d222-4529-ab2d-81b477e48d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41399f74-8851-4eea-8a56-99ce75c4e14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c841e9a-3e2c-412b-b148-1c1cede03707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2e8ec1-4049-4dd9-8d3e-62ca68504fce",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c74989c-03f7-4b2a-a08d-f4e788a6a515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f024fa-f7c5-43fb-a68b-efd3275b9e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dac0e2a-59cc-4bd5-948d-b8ef18b45061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "474f863b-6a7e-4b85-9804-d084fc089678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039b0e6f-83df-4032-bdc4-6be00ae793ae",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f3ab29-673b-4bc7-a3d5-a5c636e8e8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86228370-fd5a-49bb-9a4f-170f1e38bd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f0d36b-10cb-4076-95ad-166035fc69dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f100a4c8-e8df-4715-99eb-ae430f62e2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624fb203-350f-479f-b226-0ea023eb8d78",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cdf864-9f14-4770-8ab0-a30aac932acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a94c31-173c-4c40-9ebd-23341d7052fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2102959b-49b9-44f6-b5a9-e83d0b801694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "295d2d71-e291-4fd9-9b50-2c4ab16ac230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcef213-602c-4ed2-9988-502db43c5d2f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4723625b-91de-4915-8de0-91ae534e501d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4291467-ee69-4974-9a01-d2bfcb19fd3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d41b1d4-1b86-4bf9-9f9f-122935f21120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d53639b-71c5-4dc8-a387-fff18e575511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff0f01a-1c2c-4957-a368-f96ab566d6c2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9bec2b-e013-4a79-a29a-d19940898182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6423d01-e814-4342-ad6b-1cffdabeeb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32984a7c-55f7-4946-b442-d255ef68db10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e48fdde8-e226-44d7-b72a-5d336586c9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c449ec3-3470-4ccb-ad09-06d12bb6fdaf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7480b484-58f6-4fe8-bdc3-e5c87db32a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7e2ffb8f-e8ec-4f62-a5b9-3f402b2d6523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f5ee8f-b1e3-4998-8cb3-9b9f48fa170a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "87b27215-d48d-404a-8d64-317e9ffae81a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "00d10ddf-1de0-4bda-b47a-12d600f18015",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd19a054-4ba9-4c45-9356-ea873a74f498",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782df10c-d860-4ef1-9dd1-241340a12acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2d79e54-67eb-4787-98fc-ae18b74e67f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef85e92b-4405-4489-badd-ee356d1f0c5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "567ca2e1-8963-497c-abfd-92a24a81cd5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f012687f-fea0-41e5-8ff8-8c69aac57963",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57ed609d-7d73-438c-85de-1424b7fe7bb2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1672f92-8480-44c8-a5ed-aca1623f5d1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8069be74-b04b-42ae-a1b6-6ca502ad14b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d08bbad-de5a-4abd-b7c8-76895549b169",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1adb9c96-0ea5-4bfe-8a12-6474a6bdb805"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ff03b614-2266-49a2-af09-f623fe712c6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d406a0a0-343a-4a1b-929a-e3839dca554c"
                }
              }
            ]
          },
          {
            "id": "6a8c41cc-941f-484c-afa5-c35437504e6a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1ae47a8-f50e-4fa0-8889-38cc7ef24e99",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "02c66e14-102c-4952-a47a-ec0d08845898",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae7282f-d773-4015-bae9-fe1c7cbce1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "12f3a8fc-2006-4c36-883d-74be4a95bd94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96288a4-28f8-4882-afef-36b769491f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb2aa19-e182-46d3-82b3-63bc4eb24679"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c0ee7d0-e988-4896-a3d3-0769b289dce0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63a36cb1-650d-4fc5-a728-b8fa372d7773",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fdc33b8-8056-4920-97b6-33588d80e0fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "354e1ca6-2c98-471c-8e4e-1be58deb8c27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3b152849-4597-4901-aed5-845b0621368f"
                    }
                  }
                ]
              },
              {
                "id": "e3a3e529-5a3d-4cd1-a9a6-c75cdb8358ef",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f8015af-9a0d-4bce-a5e1-9b61331170e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d24f1555-5404-4076-8bad-085d7df79f4c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9a989e1-c203-448c-964f-80a5c2b733d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f282ab5-2329-4078-94df-4271893006c4"
                    }
                  }
                ]
              },
              {
                "id": "def97ee9-4d2a-4999-9110-228eaaaa91d2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84402a45-8417-4a34-9905-f1e27f6b7acc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf8c4835-6b7d-48fb-b9e6-388ad666616c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c3d3437-9c85-48a5-b639-457d5421822a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9bcdca59-c363-41f6-867b-7f04cabd82c1"
                    }
                  }
                ]
              },
              {
                "id": "8788e87a-ae07-440b-ae8c-4b28149f231f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d223289-8564-45f1-a9bc-3b413df1d6f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d2070e1-26ab-4cb3-8c92-cae6fbfb1f6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d7bf846-3ee1-458c-af4c-491875912094",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d508303a-8731-42f3-98e1-7bd92db03d3b"
                    }
                  }
                ]
              },
              {
                "id": "d6428907-eb39-4498-a33d-22280c9ac357",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82187814-209e-4bf4-b7e6-58076086e03e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f917188-e023-47db-9fb9-e43645a95fe3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df61e154-76d1-4295-bd5c-3a17841a1a50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "665d5767-216d-4c31-a62f-93c013379d6b"
                    }
                  }
                ]
              },
              {
                "id": "2a4b8bb4-5063-43ec-b5ce-eb86d6dc4c09",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "984af11c-c75a-47ca-90f0-d1580ed8e977",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9d2cda8-145f-4564-94e8-394e2abae4ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd7427ff-82cf-4f3b-a158-db88b002ae96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "263a3606-df92-40f6-bb69-fe6775e65bf4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93d6942a-af03-4139-9830-a92476f7c9d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c960f5f-f202-4f5d-a94c-dac9ea380a3c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dc1051e5-285f-418e-84be-edb4b0ca3049",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e69797a-bdf3-4313-8a06-c1f744fe6617"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63772dc8-399e-492c-82e4-8b527ffe3a5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1b1ea7dd-0e38-4d36-b2cb-dc45900fc56d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc8e0fa3-c46e-4b17-aa20-cd2362df9c7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb019f1b-45fc-422d-837d-718cd089a9b3"
            }
          }
        ]
      },
      {
        "id": "87b651bb-1800-4a2f-997d-d63161a4cf60",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c03a4372-d43d-4a5d-9c77-cf780c8b51ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5908baae-bb56-44d0-89de-bc40c5fef180",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6b0fca17-3d10-4d15-9ef9-fae2993f7750",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c35ff7a-e7fa-4669-9049-7ebe560b09f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94470c2-affd-4044-b586-7c6fd3570c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6ad308-5dfd-4cd2-8904-5304696c59b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f78f603-979d-43f6-986a-36ae72da2ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0561a48c-d0cb-45ed-b3ab-5390517da7e1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82f7a42-a348-4d33-bbb5-1724b7b24068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bd2a54-654f-4be0-9988-63d7ced2690b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2600d1-7a2f-4aaa-9a24-2bb5c84b2510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "243c887d-9bd6-4f9a-bf41-2edb60ef52ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c598bbc-653d-4bc2-927b-5353aca7dbfc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40092447-3dd5-4e6e-ad02-8a3ca56b02b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188c97d6-7c60-4247-8c75-f5171736c857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c2871d-aec4-4eb8-976f-c76c5fcb6c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6102aedf-167e-47a8-a432-582c1a4f1fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e14f47-f189-4325-a06a-45c802115b76",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c9703f-9f43-4b4d-b685-6c2cac0715c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2898d5-6796-47a6-bfc4-c1c3942aeada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05e0877-e660-4057-9e48-996baa84af45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdae7040-85e3-4fb6-90ab-03607a793b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08102bee-f00e-45f9-b3cf-a3c4bab36ede",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc16c54c-6cdb-4899-8aad-cdccee72ac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbd596a-1474-4573-966e-9c2da522df68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c666b9c-0073-4140-892f-612268f3184f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14f0f8ef-6c48-4ba3-85c2-52fa1ec5f4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab99dac6-7098-4ec4-9adb-e58b0968d3d3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04fd52a-61e7-4cbc-b488-6b96575aa04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de692dd7-7ebc-4e31-a996-936c831d755c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7262d4-c429-4f01-b2d4-eb7020495d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25a710ea-fae8-49d5-9efd-654ce4eeb14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c9dfc4-16d1-4a6e-b32e-1c2abc6eaa62",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a1e5c5-f7e0-489a-94f3-775ba2c1567b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358592c7-1391-4a8a-8ba6-262214d161dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5eba4d3-ddc6-4968-8e77-262d6700ede6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e18bc399-95b7-4007-a642-0f4adc11ad04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a15dd7-c9a6-4b05-8c92-8ef5a472c47a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd54cd26-f3d7-4e91-bb8b-fe1c01189afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b2b3fd-ff83-4aca-95ab-1b31af4bd8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e92227-b4c3-485f-a0e3-b86c206db0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e680575-cb11-404a-a744-c89b652059f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae73a29-dc32-4658-886c-b45c5bb98fa0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46410664-9bdf-4b83-a17b-1f28692b19c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687c6a08-bbdd-4a96-b6d5-ee0c6481ea2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7706e7-4e74-42d0-9f92-69f4a06a7be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb30325-496b-4e38-95ef-ef74eac679f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e870ee73-46d6-4ada-b236-61df2bfff101",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbea7cf-91e7-4f50-9f02-5c377fa4948a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7e7a7c-829e-48fc-b39b-762b8e302c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc46b4f-44e1-4ece-b139-4d5c471797a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c25d85a8-7e46-4d92-ac9d-133ca19feff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659946f7-8a74-4a2c-8ce2-da1463a02c4f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac8efdf-641c-45d8-aa0a-8246f9e7d0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad580de1-c4eb-45db-8901-8151dd824afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469413ac-396c-457f-bc28-2fc01d6946b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2942e8-5bd5-4a23-a48c-bece900c5fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba200f7-15e3-4ccd-9221-46fca6254288",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13f7e84-157f-4954-950c-3d9c8e87679b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba64d26-7ad2-4e6a-be76-744c7d9e8b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef9c880-bd9f-48de-ba20-d16dd8eac226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f716e42-d762-46a8-adc6-44d89b99081e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22018bd-5922-45b1-aad0-86c4d4f5cb81",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e9ec25-dcf2-49cf-bff4-dc45ae8b4cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2aa9061-e293-4009-a495-af895af232a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaae2965-f9f9-4ccc-8f07-e2faa6880d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b14c3c8-e59d-46ee-bde6-54190c6e72c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daac4b37-ede0-460c-94ad-778fcd06b70c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9d239d-2cba-4d7b-a23e-198f3eada226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b647aa0-6946-4f19-8dca-30b12457015f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b8d28c-aa34-4716-b62e-ae5f9e5c618d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "df6a5ed1-575e-472a-9657-af895eae3adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa657a8-f21b-45df-9c5f-7c4f7b27c143",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb24259-7a3d-4a33-9069-048bf84b48b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2fb0df-0025-4f35-b5c2-3e52d041b34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cbaa4e-f903-42c3-a5c4-3f1ed4eb135f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "36d53157-6b74-41a5-8c84-87c0e0007b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0f33da-9b00-4195-8698-5ef2394bc685",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22782b4e-bbb9-47e5-ae82-8a26bb20f121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db25238b-efa0-4f84-a55c-3bb08b8504ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3a6081-bc13-42ef-8f93-5ed56b8f4237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e25450b0-a3bd-4e58-8b15-a9254ae603e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cde5b6d-ca0b-4d8b-8333-9745e2adbd84",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d964bd2-b977-4210-a078-bd86e6f19a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcff53f5-fddf-409e-ba28-cc3f25bafcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9008cd80-385b-4254-86d9-44ec67628534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2db3f0-6aba-4389-b107-4980284a4c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3284a1f4-52f2-40c3-91a7-9d3172033a3d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a406cf-a996-4318-89cf-c418d2628a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d867dac7-0e1a-4319-a15b-a3ea8cbc6b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6740578c-30c3-4ccd-9c45-4f19e41826dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "13786152-0c06-47d7-8f84-30fb3dab9b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612ce5fb-abe5-4774-9e9d-cb2730359ba5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8391fe8-81ad-4729-9c2f-ab89723c7ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae65e12a-25ed-4371-9034-18c9e82005ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158d793b-cd66-49f7-b712-025ce08abe1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24e75262-9a67-410b-aaca-0a127d1269cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7438928-935b-4ba3-b9e1-29986cd7ca1b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10bad2b-76c5-4aef-8dd9-69d614db19d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09c35c2-afb4-44d3-9350-2a26ffe838f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818edc3f-9b25-4817-88cd-218ae134d282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc11b46-f51b-4b12-b931-735791794b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5e1dc9-62d3-45b9-8940-05df97111f23",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb047a8b-7a82-4abf-a22b-0632ca34a5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577c3af0-9001-485e-8bf7-7b66de72a5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f69eee-240b-4ad8-906f-7d427397fb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1e27da-bc6a-4f56-bb93-4b02bafce049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d838de-bb1f-4660-a0ad-22e2cbb0b03e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c37b072-136e-44ba-ad07-20f42fd687e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033d357d-fbe4-4c73-9c09-d870ab81711e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3f8cca-55c2-42ee-9c1f-a974c2673f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9351ab-377e-4ac5-b3cc-65beb9b40443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f896e9-c9e2-482a-8023-760e585d7276",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f13d384-11a3-461f-bfa4-aa7bc44bd871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0a3971-983a-43c3-b3f5-ba7ff99860d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b37844-f02f-4c8d-9604-49db4e919f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7dbf0c-3ef1-4205-b270-a0376f74ce9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bdc4c6-0986-4c3a-968f-80384cb50fc0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3139a151-affc-4b25-b191-0438f8747855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299f18ca-1325-4906-8859-2290a0c78db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c187049-16c2-4724-bdee-9bbe60828bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3fcd62-03d5-4d74-b5c7-b8cd1016289b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f01b443-14e1-4cbf-ba5a-8bc65c907797",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f83fbd7-aff7-4b77-80c1-f2d2ed572ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280f2f41-a4f2-4f36-9010-290bd2258eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3efbaf-732a-4b89-a75b-008b5da5e786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb56abc8-21f2-4819-ba1d-d3677058f47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d71092-436d-4170-baf7-f0f88615945e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de28bf67-988e-4742-a603-44bcccf46de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2b84a1-f708-4b4b-b5e1-15b0dda3fee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7738821d-edc5-448a-b112-1e490a4a2ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6173743a-e85b-4a01-9aca-34a7a4b6dae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d95eabf-b942-49be-ad6a-91b4f8eea29c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea0820a-ea00-40f8-96be-71c31f1a0a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4535d9f1-d698-476a-8d90-3ac3e33b7011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cf095d-87f3-47fa-b80f-74be4f9a3db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd2ff6f-8b7e-4e73-bda7-1ad391861e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80045f6f-00a3-4e50-8af9-4c82280250bc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c8f46b-3bc4-47b5-af18-a9ee73a956d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7879868f-57a9-4102-a507-f7e481c82254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da694eab-bcf3-498a-9dc3-4d02b42f9da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e405d2-ffe8-4404-a1c5-b9d313ad23ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c57b96f-27b2-463b-a583-2248a90c7384",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a75027-a2af-41ef-aa74-3e45cc87e358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89252b94-fb6c-4795-b0bc-1711e5307247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ff454c-addf-48d6-8a1f-549dd7e9af7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "707dc1de-894f-4544-bf1d-30e740bdf17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdeee2a4-b179-4252-87f4-7f65ad3aaf26",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149de254-6b2f-4f76-9679-338f852beb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d57c23-c04d-47e4-9508-f5cf1b8ddf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64414fdd-086f-4101-9463-ca2f2a3c3f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21f02318-b6ad-4b24-baf7-472289fbd8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1bedf2-f7a2-4fd4-ac67-7c449bc2e064",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a117783c-14e6-4a88-b619-73a162da283b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe94e90-c18d-4605-8ffb-5704376ccabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050a5d1d-4d3b-4ec4-90ec-375272c814f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f062a5d-aee9-4b4a-a12f-0aa82c253c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6eea64-68eb-49c2-a541-6c1f48c2e934",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de09595-abde-4162-83d3-9c3d9e1da0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051b1e41-71b5-43b7-ad0c-171ae164616a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfdae35-19bb-4989-843b-b4d447d41e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd074705-7fa8-4641-b889-04a6ecc2a129"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "435954c6-5028-4bc2-8b1d-1efde0d1b06b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6fba59e0-0c44-42b7-b4d6-4cb9e0d97a16",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cabf50-847c-47e6-8057-3e8347ac7798",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a36287-d754-4f27-8e61-8d605224e958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb2f43d-1116-41d4-b182-f9092303f253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9c9789e-a53c-4170-96ec-41ce268ba033"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af75b9b8-6935-4d27-990a-dbfb2ba68ca7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba351dcd-88c7-4d20-9f81-83aecbcee2ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "623dee29-4138-4454-a5cd-aaac0186c2ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9696562a-b868-432d-b881-8b47016cc533"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c55511d1-2ce1-4e21-a295-27ba91f7283a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5913ab30-51ef-4ce7-b621-e672665b1437"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "175dc021-9f5e-4997-a845-44205e5d6aea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86e947d6-23d7-4054-9190-1a37fdd00acf"
            }
          }
        ]
      },
      {
        "id": "f0757a98-87b9-4259-b906-ff512a0aa643",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "30f91b14-82fc-4be0-a419-12f87abbc389",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63bbdffd-60f4-4a8e-abc1-5d52b7f82a95",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "517fa185-5812-4f66-b9da-effed288ca1d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bd739c-cc46-48e5-a2e1-c9209dd40856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e3d281-57f0-4fda-baaa-04399a32737a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0c9476-c72b-497e-abca-3d7a2a302608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7490d2-a82a-4fb4-ab7e-10399ee3340c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d52a351-0479-4454-bd6a-58d653f2e5ed",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95e9a48-da43-4eee-9cfb-c13d265e2754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81eb1db-578c-4743-95c1-98eb30f5cffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4c240c-40a7-4c2f-baeb-1adef1413f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11289843-7971-430e-a960-14056a7ee249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae361684-ec48-49ff-8d26-e422722fdb89",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32750874-f302-4249-a5a8-a5f6d2040d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10817c18-0e1b-4cf4-95d6-70ed6d920fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44d6566-ee30-4e7f-80c0-a1ab7e79bae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3623f1-6ca2-4880-ab3d-c62627a97742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794d7c68-88bc-47bc-82fe-111a621915cb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305ad1d0-2fbe-49b6-90d4-fdd7a23d4698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3fb004-334f-49d3-b5c3-c1b069d778e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32878693-e1fc-42b2-aab0-35fbe04084a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d89bf59c-5929-4ad6-a288-9a481810babb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19be615a-2c03-4ab5-b976-f1969bbe2e10",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1e843d-317e-4b24-9409-af75b7634da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c16cc1-35e9-40ac-8584-80ece8f24c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53ae3f5-9a4a-4a80-b05b-ed9037492bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e75dc918-deed-44b9-9caa-284ab9fffc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b343427b-9ae2-406f-861c-e5134e052ee8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232a5c80-b122-40fc-9005-c369bb1b9bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b4388b-1b4b-4b5e-9f10-05ee9a95ef23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf70a11-0418-42b8-bee8-29c538c754a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a8d232-29da-44fb-9da2-4a05f1b6b103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3a1be9-595a-4476-a67f-9455afbeb8cd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1236e2b8-bc9d-4bc6-aa3e-9f3c2d14c11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8731aa97-11d2-4e0c-9dfd-26b9084f4207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72afa49c-bc4c-4030-b90e-53c965e4d002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c266de4-7c83-4ca6-b6c0-cc946d05bea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb667be-06d8-405f-b8f4-31478d53e54b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76f2a48-7675-4124-ac8b-743928d5f2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343fe015-88a3-45a1-ba59-7e4e7ddacd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975a2e22-8f8b-4ec5-9178-c935f0beaacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb4bdd1-4fe6-4e74-9826-fafa9a8472e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b32ece-6e5e-4a33-90fb-e9ef8b39fd34",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b826ad-66a0-421f-9bce-3fbb0bab1aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b6ddc9-1a05-4b6c-b7dd-5e8d79a8ea49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25d1414-0a72-4d01-8cf8-4f13641426b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f749c308-3b01-4599-b662-e055264467e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacbee80-9492-4581-8597-8ba985412973",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cb5a06-8cc2-4974-a625-056ad10d1a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6686cbf7-0544-4781-95af-c652365e30df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529769c2-7e86-4e40-9ff6-e1e0996da574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "722f856b-2090-4735-b4fb-f05b9b140fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfb40e6-91a3-403b-8efe-01fb2faa8588",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5224e3-6886-42bf-ba41-59e59d692097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a7dfed-3e6f-4291-ac22-05635940d369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f629cb-5375-4f7f-b841-a37a22e15f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b56e5546-d76e-44e2-baa8-a02acefb31ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b15b45a-fbc9-405e-85d4-a4dedffd8dac",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f317de-53d1-4e8e-a234-5e74d85d3c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59eef6e6-fd96-4fac-a781-5c9e8cd9d049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287670f5-fac9-4b2c-8a7c-fdb6ce326d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96e54a77-cd2b-4cb4-a43b-59d413d24c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858580a0-7300-4a67-8391-d7462a9e4d34",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ea34df-ba57-421c-ba05-569144fa6215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd65a110-5b0f-46bf-a769-d476a5ec9039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3cb998-4571-4a15-862f-1cfa77c92ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb3f6c4-7b06-48dd-bb78-f5f28056160e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc819b1a-7399-4799-ad31-a4f6a4351787",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1f3d6c-af69-452f-97ce-a501113673dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6258283-d70a-4094-8976-3373bad94c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81b45e4-0345-4c5d-9686-190a93a69f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff03312-8beb-446f-a32f-3add902ebab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841997bc-198a-469c-b186-9a36b0faed5e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd44c2e-de1d-4b80-ba28-b120d9b0d96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e79c7c-0a91-4dc7-82c5-e28b2faf92dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ffea9f-fcda-499c-aed7-c088156c2529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d3f0f4-4977-44d8-99a2-f81d82460f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e7be5e-f7c9-419c-b9dd-a88d3bfe682c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8fe75f-b483-4d13-8cbc-21d87e77b7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf423a7-2fa4-4c7e-8b28-75917c2ca5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462cae4f-6e65-4505-b164-d66f6e924ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "744f6f02-ad27-4dff-81b8-84acac1a06d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745875ac-b4b4-4f2b-a4b6-79a0e5d45494",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09ccc14-9636-40aa-b330-954b584338fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075143a8-5087-488f-a25b-7ce2359541af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea679508-edc7-4cb7-af96-5bb5427c8a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0164989-6332-4193-9ab7-1ac95a27b5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138faadf-cec9-47bc-84a6-24d421aa881b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b9c56e-789c-4e7c-b1a1-f9a3ff20ab03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbf86ef-d759-430e-bc79-a2cd2bca20d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07e2636-1209-4e47-9fc4-6b60f1f847c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7ab981-4031-4835-90c8-bc5e1bb05969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adfe925-6d1d-4c87-98f1-4a2590c8f100",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd92ab5-eb01-4ab1-bf8a-78d18545fbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18f66a4-1e38-4e9c-beed-495cb8a279ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af1d3b5-848c-491b-88d4-fbfdec26edf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ef5207-3c37-4889-ade1-7ed423311a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bbdf99-3b4f-4741-92b1-fe645bcb10f3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870d1f45-e34f-4d6e-8657-43ae3277c347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd984f9-acf0-45aa-9c17-c12650f5eab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b153a77b-72d4-44ef-8fea-57674d8edc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb88b42e-690c-4848-adfb-e45a546ae3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b1187b-7bc1-411a-a42c-24ca9b9504a4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eddc73-f101-4efd-90ec-4db3127747bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25805f4-9181-4e31-9d04-528958295496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d6947f-ff43-4305-b8b8-591d19283c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77b141de-4b6b-4fdb-a504-cdb7513a212a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4849a8bc-7325-49d6-994e-eef28fd85c4b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cd7ab7-66bb-4cfa-9925-60bdc6910030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba425a1e-d768-40a6-841e-c37d0f3623a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23de983-6440-478f-98f0-1fe160871258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20821030-4d30-4c12-bb8e-4ef72a97fb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d1a1fc-cadf-4530-9c50-a06bb9438983",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71721177-6755-4633-934e-b2e4cf27078a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a0a91e-31cb-49e4-bae3-82b70e82dd24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e407c001-028d-48f4-a0ce-42d6daafb834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94b9ef11-1190-4a1d-8b1a-5eba227d3030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c3d53e-d58e-4496-90d1-cd8e13e0a274",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee5e32b-c5d4-4747-9cd1-9c7f107e4c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a24df78-678a-49d4-9492-6f7f75fba96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c545c9-3c12-447a-81f9-e2922d555aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a82c23ed-fbdc-44a3-97fc-8914dab85e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9eff5f-f475-4382-bb18-dd43269bc4d5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1027725d-6cc7-402d-96a0-8e03b0894456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d57cbc-c704-467a-b9e6-c8ece35e49fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1485c7a4-deef-4a8a-9b7a-a323a4f434f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc86a987-6f16-48f8-a629-9e75d874eadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cc7322-7012-45b2-83c7-cc8d49d6f186",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b03abea-9383-469b-9805-fcb3e63e8858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd507b89-922f-4740-92fa-fe6e65f5a60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9c2893-cfb8-4acf-bc28-ee090b8dae7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "665bc293-8223-4933-ba4d-84e9182c156f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb8ed0b-54bd-416a-8d6f-97f8212e2714",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d505877-e93a-4dfc-af63-b24715ddac8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70f7fdf-b303-48e7-b2ff-c377eaa1b0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3faf73-9a0b-4395-ba44-f6f25cf1a2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d90d5e-4fa4-4e94-8f2b-65b4b07f7da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ab113f-c4ae-49a8-af4f-b00d70092862",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a38b886-73ff-48cb-acf4-2c5b2e41cd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612615da-5d35-4be3-8b8c-859a5532e0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48828185-a4c8-4061-9a18-5aac2715bca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38f30a29-cf52-4215-844c-f4dd55c96605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ee4d14-2b52-49da-b3ef-1c93480e940a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5241a6-e38b-4cd9-bd08-f4c345cbeae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a2fa12-341b-44c8-acef-abd9893b1e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0cf746-f1c1-4867-8055-0be0b1d1b4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7edde1c-270b-417c-bfb4-5fabf309b706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d68f3a6-fad1-4636-b5b9-f7c662691ac8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e3d7d6-fee6-4244-a256-3df46eb214a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3969eba-5c99-45c9-a37e-a36f36c9df91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f2c125-ca15-4199-baa0-e5a6156fa1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "169b82b0-54fd-42b7-a7cf-62db6659d601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ac8ec5-754f-4f8d-86cb-cf8932b752c3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4207e949-c4ca-4cc5-aa4a-8adf247aa233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a480a23-4bd9-41f5-9884-e440f08bf6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934f8472-a45b-4088-ad88-169619ec7d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f9117a-ddc7-4a17-b744-a22d34c16193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78efa443-555c-4952-acce-80ce1e520da9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950228d4-853e-4bd2-80d3-9927f4a58cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f48eb4-4d68-4016-9dec-f20faa412074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958aad00-fa3a-46fd-b3d2-f8093f647e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd82cf8a-a27f-44fd-9393-a692013956d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a134e92f-665c-4f97-8279-20f2c8caf4be",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7428a89-ad4f-4c1c-8f18-89e85c513b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e145443-2243-4e53-9863-bd99832ee437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82632502-7d7d-43e9-9a96-9266aa8a32e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e98ae744-a7c3-4036-b711-de12c4c585e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eace2d44-c79c-4439-a780-8ed135ee1ed6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8eac8d-773c-4f2b-8287-ff6e27c908e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9d190e-fc08-40ea-81dc-cb749433bc87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce7db43-877a-4ade-8e1b-45ec3f36a87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec7d31f-4878-4ee3-bef2-3dd085b0976c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb782c1e-4f14-4cc4-a479-d847241ae196",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150ba51c-e294-47ad-b2d8-7852ee27d6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561513c9-dba2-4c7c-a19c-aaa2a696a3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48960930-aa7b-4d9f-b4f3-24d7c7b91795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4b6668-a56e-432c-8c67-8cad4b26f06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08a7906-ca68-4499-9eab-ae82b9c0ef9d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131f3ea3-f518-4497-b503-935643bb44b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b219ac0-df59-48e9-a7f8-0bcf4e9a70ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9304c5e-0254-4fb7-9e69-6222f562d6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b30e9754-10bf-47fb-875a-3c2c4bcf209e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1df8ec7-b862-435a-bbb5-89f9a7df662a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b50a46-10ac-4d0d-b0fe-ddc86fc242bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b564c815-0e90-42c1-8ba1-6b0813166395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7350ff36-1643-489d-95e4-a1d41db4ffcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "033ba881-1e7f-44f8-b3f4-281b2427584b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d826447-9d04-4fe4-95ae-afdfb33dac15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bb49816-a1b2-402c-8382-143e24b8e513",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401e3c80-830f-40c2-8c10-f428b817a986",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc41095-f5cb-4881-b296-dfe039696110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2930927b-f54a-4870-8516-bf24acf8e2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5914dd82-2bba-487c-b7c1-654cde1c4ad9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db68e157-978a-41b7-ba5a-8f14f3e1fbb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22aa7e59-6def-4cb1-8f3f-92f3b9ae9c2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c34f8cca-bdec-492a-bf5b-185220369a1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de977fec-1d5d-4ec2-a4a4-6bdabdb4980f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cad9292-cff7-4c21-81e0-2bf11145333f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4a77af41-1fa2-4f9e-8333-08012a5378c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56e50010-8c6d-451e-ad22-4c55fb031874",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd066d98-0401-42cd-9ead-dce82bba0f63"
            }
          }
        ]
      },
      {
        "id": "93b5f796-6d07-42ae-8b22-7b4c4f1a9917",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "37d86078-1a2b-4040-97db-893162e8c3e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5da83871-9b5b-4316-99db-1f31bb04f1a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c53ef7dd-7917-4da8-8d2e-86a4af82b0d8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee93f21b-82ba-4cf9-82ee-bd5403f50f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebf6815-b5ba-4e8a-bc09-c0816e0e9532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22929f31-fbd1-4d7a-bb19-18a1efe1db42",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e48b0ca-e37f-49ce-8b93-23c55b8a14ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a34489-e58c-4580-95d2-8f85742a0a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917d9f13-577e-4f4a-a699-cd2a6f29d970",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee16795-fca3-4f93-95d0-fb84032428b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc82b841-f1e0-4a89-a3a0-1f46987fcb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7826ddcb-dc27-4a47-ae09-c07e3bda7fb3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d064ccbd-dcd1-4876-a522-78d5c3fe42f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4f84fb-61e2-4764-a8bf-e28cb056dc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4a1c0a-6ade-4bd4-b45c-95e78613915e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67929cc-710d-474e-b8fd-a742efb93631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0508ab-7780-4217-b601-18d67f4fa191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed8e470-a398-4260-a47c-facc29f12bd8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f68c3b-d3e2-4231-8100-21c1c0644c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59369d90-5791-4040-849f-30c1654c8046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad23649-ccf4-459e-91d1-2e986323e6c6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255dd69f-f3c9-424c-9d64-2ae06f278b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ad1de9-90d0-4006-900e-121adbf9a478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288482f4-b889-4463-80f5-81d87036f9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf20e43b-89d4-4f16-a2aa-e72f8c71b67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1bfeaf-a425-4e7b-b9df-c8a8cb530225",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335bf76f-925a-4b1d-acdb-475c483529a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01a70a82-9f87-4355-9710-81090d60d150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc15c017-48d8-4c1b-99ca-526b9e3c793d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5278f8a-8710-40a5-bdf2-458794fe8373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaa9eeb-3342-4e80-b438-62653f475578",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1425401e-690d-42de-8691-e1f9a1b8181d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "630c17fc-51c2-4490-b7eb-a1958fcbd9c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e570506-02e6-42b6-b0da-3266a193681c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a966412-e69a-40b5-b18e-2c20ee05de0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bc70d1-bca0-42d7-9553-de985b801350",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56d7870-0235-4bfe-bf0f-2ea22fd391cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec80f5e-d9b1-423c-bcb2-2e3fa4cfd5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bad363-2f73-4a20-9e79-4eb35c136517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00dddc7e-11e6-491a-a3c3-de4aa8b68c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95782388-a410-4424-9fab-221beb85f370",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961b938b-0ce4-4d1e-9461-2b80de9eb704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c31326-fcd1-4cde-a2d6-4de0a0eb8bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a501b189-a989-42e1-8cf4-b52888162339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0b3fb0-ab35-4e12-91de-bf722c1784bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715dbab4-bc96-43a2-908a-1a0abb30808e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217e6bbf-3cfc-4334-bbca-c896bf25d774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94c3db9-7903-4066-82f6-9591b8f1f177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b0c6fa-8bd1-44e4-8431-710a6bde7633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0828c2b-1ac8-4fb4-91c1-a72075a1e90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08720773-9357-4896-99e8-824d43759ab4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a42d427-7f13-4e38-88cc-86f75ae274a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b97bc1-e8dd-4ea2-baa4-4e879788a632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c228c9d-349d-4096-a6da-ae4995d44d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb0c943-f135-4478-b749-8695a33993ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb37acba-24ac-4d44-9876-5a2792aa2c38",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a683a0-ff42-4aff-a96f-facb18fe5908",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12d7681-6556-49e7-8219-958356c164ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839ad280-3d34-4fc8-b2aa-c537e8f8edc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2902dacc-2a7a-4fea-8fa3-ef5b4417f5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff4cc1d-5d02-4bcb-81ef-e5b2ebf7da15",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318c0437-75ab-42da-b66b-c325efb17903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0850ad49-d900-48aa-a683-e446195f4596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a3e24c-f092-4c30-9daa-2797208aff5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dea2e06-1b8c-4d78-b358-3b8a0293b543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca768bc-ed50-4924-b04a-4411d22d26d5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5379a97f-66f2-4173-a3cd-f05454fed572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d0865fa-4f53-491e-af0e-f2f74501c7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d95d98c-df6a-47c1-a509-f61feaa2729e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a8a65c-a431-43fa-9314-04e737800ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c1fb55-bb26-45f3-8016-e4fa7841a7a4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc56246-8f1c-4c32-bb88-7331569d98a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a076b7-e525-4d66-83f8-26e2ac14878c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c834f8ba-22be-4766-aeb3-b9b9c62c261f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48798ea3-b96b-4e63-983d-cc297ae6ee7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328311f8-4d78-4283-8491-d1f4b9eb9fe6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997629c5-adb0-4aaa-a935-6198122e82a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09eeb1e8-739d-4340-b86f-7f3c58bc9c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39888dec-6506-4c72-85f6-f1dfc2834ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b41803-9b3a-4dfc-a419-299accb919fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a701d45a-7c00-468e-af9a-0488b93672e1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f9aca1-b562-4f7c-9c0f-ca65c1a4d6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4899ca86-846f-4b5d-bd56-8831d0b51c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f012524-a9df-41c9-91a4-24941ffb235e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87730789-2af3-4ef8-9dd8-adb3f664d3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577636e5-2da7-4513-a1bc-5a83c7251569",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8074f8e6-2c9d-4f54-bca3-f1b8f3f5236f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cab794b-3a72-45e3-a045-227b7342261c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5b7bf4-7dd8-43db-81b4-b06ae54fc5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf33818e-7a5d-4e8e-88d3-4e357a07bd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903e243c-20a1-48ff-92ab-59289aad00b4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e792a507-8e14-4eab-b5a2-d21679565b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe47703-52da-4925-ab22-5aa07d2646fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c075136b-5be4-4522-8692-20e608ddfa1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d50858-dfd1-47be-b0c2-031efb770433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae08ff39-1bc5-4fff-a7dc-426917b372f9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57bf38f-697d-483d-8600-74b8eca23cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c34c31-bee4-4cbc-84e6-291acd02cb3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c23234-7f8d-4d52-bdb8-33ef9c88862a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516418ad-39e2-492a-8ac7-8fb7e9727959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a573f018-e5a9-4e86-85ef-70f504285728",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1c9b44-b53c-4f69-8fc3-f3b11b164426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf943fc-f68b-4c69-a39c-0df179561149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c20e3ca-f355-4e2d-a419-fbaff20cdf1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bcbdf2-42f8-49fe-a2e4-e8fde8bda2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a537c7c-7e85-4666-bf1b-be161f74e3db",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7994d09f-a9b5-44a9-8249-e7964ed0711d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78281e02-a5a4-4bce-b829-7ab94908af84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d07990a-bcf2-4b42-8688-0848bc2deb39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b090fe9c-11c7-413d-add3-fa56d3f2d521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6255a9c7-fb89-456d-819c-c2209d1e8446",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648648d8-4aa2-44c2-a918-94f336fcf494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74a20b3d-1b15-4488-a6ca-c00c723b97ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463af0f5-d8cb-4b10-ac87-817f4ab7d0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1596df4-6547-4377-9c1d-340c24d7fcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ee698a-96d3-4a15-baf4-99c2b9a85d8d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7e5ed0-b4c3-465c-86a0-3a793f528b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d114b7-4fb6-4aa0-b9aa-656378558600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d99fbe5-01d5-4aff-8cf7-9951f6a22c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc2f040-e938-43c2-abd6-dc2ddd3fa8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e4ed59-74ef-40dc-afd7-0b8ca47fdf41",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8a8a1d-7c99-418a-85ec-00c96fc0fa86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c489bcf-b251-4e22-98be-b6120b6a3db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1861f1-0b3b-4c93-90ad-088563d0a32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cba3a7c-4597-4986-8630-ba891b097242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed693aa-f8d4-4d8b-a275-ef0a1b0790cb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939cf763-ab2c-4367-8589-e2bb65c07145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2fa8c7-730f-482d-a51b-7f9993360a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103c7f81-1a35-4a60-b4b9-65574cb66029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268335ac-31f0-43e7-bd5f-5fe9c5dd900e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720713b9-daf8-40d1-9c68-bdf3e2ae2438",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8a4804-4c40-4ced-b40c-564d906e4289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3be5143-1df9-4b9a-aac5-6f04f0a613b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5eea867-1478-4aeb-96ed-2e4d4812d038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83df31e6-cd2d-427f-aa65-51d16ef1f1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111aea41-d5b4-4d9a-8780-d1f2772505b3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c99ecf2-f07e-47b3-9818-f782510219bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad36aa94-7895-4e18-9e33-8816b5164ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4d3b80-0cfc-4a0c-b017-87200e293284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b59a3b4-97eb-4d69-8128-640f161c5c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d396ed09-f3a4-4133-b0cb-527b37581a17",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee84972-16fe-4ed1-a51e-b6f0cc18054b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "311289d8-81aa-425e-9247-6e4d274ffd8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725759f5-023f-4fb0-899a-41a8f5b17d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52206ac-4f7a-4595-988c-e17df2a49991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424b1668-845e-4b1b-ae12-890e0abd5b41",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07612ff1-382b-4349-9d3b-9f3ef90e674b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d347be5-884c-4f1e-9ec1-ae62782baa31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418d7f2c-5e49-43e7-9dda-607ae3e9be09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bcbcbf-db33-453b-b0f3-f73621e21b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf498a48-3fcd-48a4-b44c-fda40692efcd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a08ab5-91f2-46d7-bd8b-038ad7314236",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35ddd01c-b287-427c-9964-a91cd1ba40b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc6b897-39a3-455e-9135-57e24b1add84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e1005a-e94b-4abf-9b3a-4e0880609c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6404274-34d8-41be-905c-ce23ae166cbb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb446139-5de0-42fe-8369-11bc7f4dcc94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee89577-b7c3-45a5-a3d1-2f0f74a4ebdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2688a29-08f2-45af-8849-970fc52c8ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59f7201-712f-4e3a-8798-a58625018a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94452cc9-314a-4505-a726-23c50b63a09e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9e7186-5168-47ca-a9f5-a069a46c386e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fde2d1-b4dc-45a2-b58a-d35db7c8d492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bf2d89-2900-46fc-ac53-228a8cbfd03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a362846-3cb1-4d74-9a13-f298e3e0a50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f46ad58-d4cd-4a58-9115-484bf8688c8d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d3d1bf-d290-4610-82f0-d7bf5be4dc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7442353e-732e-43e3-a6bf-fdab6636a785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e681f265-6c31-42e0-abed-b63c70072115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1087db4d-e145-4425-af6d-5deec4b0707f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed10ac54-27f6-4f0e-9c53-f2370b948c65",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ff6b1b-16a2-4cad-9ac5-196040bd0737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fd68a0-ea71-48a3-9dba-cbaa11422aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22612083-774a-4940-a6a6-13118465a50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2d63e3-71c4-4090-ae4a-5556cda11d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29f9546-6e01-4ac4-bae8-8083155ef52b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1523d90-e441-4f13-91fa-88a842261e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fb62a2-88bd-4ccd-bae7-e10e2c788dc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49174da0-34bb-4509-9ef2-a10a8470d046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d07927-2233-48f9-b0a5-2d25f66284cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c2d320-e4b1-48ee-a96b-d2887f364ddb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18152a0-871e-4044-977a-13b07afbbc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d00b10-b10c-4b4f-939c-25c2519c186d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070378ab-d5e0-4d77-9d5c-c9d668d132bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e227c3b6-46ec-4368-afbf-06879fd1ca62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190c3ab1-d485-40c7-a6a1-36227b88b57f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9017e330-fe54-490b-bea6-2f085bf95aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91856d57-8cf7-4998-a26a-9ba04efb45b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c2c007-2eb8-470e-80ea-0ef0bdc666c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0ba513-fadb-496e-9ed7-5d5cd538fb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a957354-35bb-4a6d-accb-6ff82544c101",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37b93da-1ffa-4d8f-b85a-22763025689c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0feb99d0-d9ac-4183-91f9-be306e45d1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ab0ccf-5876-46eb-a49a-353f941591be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5b5534-44a7-4508-95d2-a8d269f278dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28edec33-18c8-48fa-a12a-25ab52fe6b54",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415e5a60-14d7-4494-8c0c-d27d81ad7b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa658387-31df-44cd-8132-be280f2c86eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2403328-c3d2-4d00-aac3-a3e40f669e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4150c9-2fdf-4e6b-b539-9cfb374343e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e955c5-fb3a-4598-ad41-e57b9a07eef0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2ea546-79fc-48b6-8286-28fd5ac66172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80058e9d-8cb0-4b5b-92b2-f58a44ad5ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58de53d4-6bab-4f79-8863-605b34ad9d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2b7346-4bac-41e8-9188-3ba6641a3584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b71385-b32f-4a4d-b9e9-a62b90104047",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39fe121-918e-4821-8e1e-4416ec3e4fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a834b951-6d0e-4323-b872-d954feddfa61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde32ee8-fb6c-4027-a9ff-4a019fb2bc65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271d52ac-8996-4e3b-82fb-ab09ee05fa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d0e83a-5207-442c-a9b2-a37f72f533c1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd865d4c-80b2-4b62-9c67-07681430a332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c001ca-df21-4ff9-9555-537f6935d576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11470d6-9515-4bdd-82e8-4372da0de1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a383b2f-73e5-4c64-b04e-48e1a5eb6a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f18664-262b-4924-ab0b-f487121b084a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f21189-e097-4ed5-8cae-1534c851a575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885c56e1-0e4c-48cf-b1c9-a1090f9be010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf5574e-d2f2-4161-a348-0944cf2623eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925850f2-425c-4fa6-bd84-0b0c7423dc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b742ca-9657-4368-90db-4cb541971207",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17256376-95ee-4759-8458-e5bef8a0a153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ec9b65-0ca2-4055-9e21-8402ab22a8cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111aca7d-8694-4bb4-804c-fbcac4c8ea5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f2fca4-7544-4c0d-9cbe-f697d9253a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8275172-4f5f-4f16-a4e6-24b9e53ff838",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a33c0e-1b01-4337-bb8f-fe686b60ff5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32996ae-4bec-48f3-abe6-698abbdd111d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719017c4-f8dd-45a7-86f3-85c6faa60e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807b5dd5-072f-4b56-892c-70d1021c91d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae62d31-aacf-41d3-a29a-2c8e617bf024",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410ddddb-758c-412e-9c4f-ae514b92b356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb50ad5-59b2-4f12-b7e9-1a4c8ee4d777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6504d9-38cd-4384-916c-f7f0d30237e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d721c007-6f4d-49ad-8e25-dbf919069fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48816de2-c367-4e89-a96c-ba119c41b29e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ad219f-0a40-45a7-bca1-cc38cd9240b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a337552a-5bf5-4269-b431-3e7dd4449a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f860e2-3148-4ef9-b983-455c892058c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920ec518-49c1-4e3e-86e5-ed38d1bd680d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccf0e93-8653-4f28-99e9-2746502e1a2f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a3b257-38c2-4fc6-a6b3-08097e0501a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f64e82-60fe-4dc9-aea5-8c4273376428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e80a480-6ce3-4e00-90a3-05f7b19db3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f8630c-e4a0-4ee7-b722-0ba38e7940f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac91b5d-a4c2-4ce9-bf09-9e8871bc7cc1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cde6d8b-97b9-4484-9cc8-36fd22785117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1867ff8c-3b91-4958-b9e6-0aec0cb17f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c6a872-bb53-4b21-b662-92c452ccd4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f6986a-621f-4fc2-b273-7c6e90b74ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228f6bf5-f27f-4a8e-971c-337d33643432",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e21817a-a598-42d5-9426-b52f2405bd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccee7d90-3dc9-4d80-b588-2a274c296755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6075dd9-5db2-4568-99ee-a9d16d6ba2cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe33375-dea2-42fb-8f4f-9d666e7ade39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b7d480-01b8-4ea8-a867-29b1fe1180a2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c714824-53ff-453b-915e-5ef4052e45a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5768eb8e-db4f-4fe5-a2c6-a207bad3ac36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed95858-22a3-4d1e-9b46-2a188958320a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16dee1b9-1770-4bb5-ae0e-62fa2cb6982c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbb8dd5-1dd9-4bb1-8dbf-441f910e1255",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48eca541-86b4-40e3-83b8-7092831d2be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6087d826-57b6-43db-a1dd-d38cc77f9341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3b0db8-03fd-4c15-a6ab-39e80b354c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac87b981-ae74-423a-be31-4c72b1616803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c9f786-6194-4ec7-a056-2736f87cbf01",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e001c8c8-4b11-474a-a99e-400ec091aa89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a96c4d-92a1-4ad4-a27b-f8cc7cb61eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cac943-24b6-4919-9878-1d4bbe64165b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e370175-1606-4545-ab3d-10c84918381b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb752de-fa73-4da2-b578-13c06439c315",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e717b6af-5f02-4216-961f-f23568b6e660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0b3274-6aca-45b7-bc38-c74d701f9d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6ad88f-5ef0-4cc2-9c7f-eaae34c9b156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a38c727-dbaf-4eca-abe8-94d764f75f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3d78a1-e31c-45a5-8614-d85cbbc160d9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50094b18-c6d9-42ca-8b6c-065860dfe0ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78efbc3b-cd8a-4c11-929a-61c02cf214c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362909d8-4d9c-4666-bcdd-4d4af4047289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35447de-c2eb-4c7f-9956-6c39646acd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661bee54-5240-4ac4-94b7-7c7cce62525e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e59c4f-81f9-44af-8aa4-f213b6b7bd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996313ba-167e-457a-a7ab-680ab336a401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a344a8be-a0a7-4945-a927-a81b34455e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f73c80-44c3-4244-9ffc-d85a0854c4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1a356d-ebd2-4b73-909d-b836f5c6304b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdac2f10-4c11-4a7b-bbfe-40315aeaf15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63ef47d-9fa6-4438-8ae0-f4fd45f87f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca4c483-e71a-4737-a45c-b4aad94b5185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c27a75e-7b1c-4afb-b593-2777da1114fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c7d704-1eb6-45dd-b03b-8147117344e0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58ddeb8-7cd9-4330-9587-bfc714f22cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d551cc-f8b3-42c7-9bfc-d72b28cd5c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ed789c-c77e-43a4-a0ee-5cbaef16b338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95314acd-7d78-4c1e-9506-058b4740cf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9260bc0b-e2a7-459c-94cd-17ed37101962",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aed04a4-5bcd-415f-87bc-32f787fe0f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f89aa43-27ef-49e4-b0a7-9e96b8bf1b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871b596c-cfe2-48a3-9229-bb04bd620d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8ad3d8-11e2-4ad7-863b-d8cf97dae20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be26a1c3-ed19-4c23-b16f-db6907411c81",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88a68a3-272b-4472-b31e-f394a465dd92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1ddcf5-3389-45f7-aaa7-64248977217b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f95d6ad-22f8-414a-9696-3eb11abda067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9fc943-9a1c-43af-b522-846587b3e3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0441fa77-40bf-4831-a5eb-327bda3168b9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee3755e-6029-4178-8b06-7ebc96bee73e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e30b7d37-3d96-4cd3-9a53-0a734b1d494a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d6e684-cef9-4585-8ba8-064d0c31087c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78f34df-5897-4d78-8f76-4755035189d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d29040-c659-4c26-b2b3-e17a1adf05a0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a6fd0f-9ba1-473c-9e95-acf7d5f17f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62382c16-0de8-4853-ac61-6d9583faf371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b2f223-4e31-414b-bdfa-dc591d5d52ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34002ce-de8b-45ad-8b4b-814e6b960018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f41ab8d-465f-4842-ad4b-5369be7231a5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848800ee-4df6-4c8d-a0cc-bf003ccfa8d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d301e8d8-f2af-4668-aedf-046d59c6f12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33ef1ec-b570-46ac-a019-8bae5480014b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0922b0-83b8-40b1-9775-1260d9ef5e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f13a3c-c6f3-40af-a151-9aa4458f8e64",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b937196-00d1-407f-8ce6-586ace8342f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ef6f39-b334-446a-9186-9f5c676f0a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f65b8c1-0494-467d-b719-76c6df095385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0123693-0713-4dca-9b1e-4e68593547ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e320d51a-6fff-4aa7-9ee4-97980b3551ff",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefdc385-b974-48d0-910f-94f4777fb85a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84718b5f-dbe7-48e2-8c08-06a71b24d44b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "538857e7-fef9-4bc1-b003-da217d96af52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39da5617-cf9b-4079-bae2-f5315b5645f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39490aff-abac-42a2-babb-5294922f7465",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58a8a33-ca45-4ffd-bff7-b9d83d3e2ff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef8d611-424f-41d8-9003-fa426c6722d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9974004f-b0a2-4dfc-8a2e-71ba06326eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69dc5b64-11e1-4bdc-b1be-6081b2c21f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1395c74e-f7da-4f3f-887c-73d9198696a4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b53d2de-c5f3-4ad9-a90d-8285163e1f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f1fafa3-c223-4cc2-9178-d8dceb7c2f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d9b66c-03fb-4322-8a17-bc334f9841a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43988a48-6f9e-499d-bd1f-aad7b4f46a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42821de8-9802-49e2-8afb-9ec0e9789ee7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc872610-4939-4343-9d2b-f14b6a8aa20f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b04e7f-2537-4492-af30-0d9385f3a3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097bcf8f-5d44-4e14-9196-a9ff9eb9b05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b3262a-5fdb-41e1-9569-d933e1899d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf3ceac-103c-401b-9757-96220c05c259",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850499ea-1ee8-47fd-a377-5bb43bb774bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "165ab0e2-8e9d-4969-a142-ee74c321a774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebb7722-c72c-4f78-8b92-95ba2d0f3529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbda4260-70ae-4c3d-9f7c-980d4408fffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710755b5-9c4c-426e-aff9-ddfbbfff855e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320db2ca-ced2-4b87-9b76-dd3a21e54cc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ee922d7-4562-42e0-a78b-2c94a8d2dfa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2c5dd9-f69c-4be4-8e59-2d25b40ace54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15cb80f-9642-426c-8f60-85839e0c4104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cab8452-d0cd-4de7-8648-518aae74b6f4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a7a1b4-59ae-49de-b4a2-27ba793ecb43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b86a2e78-736a-4b3c-84a9-99a510694b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc47393-7145-47d9-96e3-8b5060e623cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07de3547-233c-4aa7-b5ea-2d03983f5451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5982a79a-1fd8-4a2a-a424-2bcf920fd672",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10faeeb1-e635-4223-b93b-d2b08ba70dcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0869b21d-7cd2-475e-8f20-6e58f0d6c4d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4c82a5-db89-46ee-af04-13d34e7db74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56a7c04-bde2-4e63-b811-35987d32318f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa81003-ef4e-48dd-97ac-1958199ec04d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4951da-58b5-4de2-84e6-a9642ea11c82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90266d91-5ca3-4dd4-abd3-e5f99c6337da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1cc6ce-e66f-4a11-a626-a9a9ec7c9477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6495954c-90ec-403d-befb-26224ada9b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b21c519-0f95-4658-a95c-781e6be79be7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd675e09-c7cd-4097-9639-d946aeecf5a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "504cf013-eba1-43d0-bc6c-6eafcddeef47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ea4947-f1d4-40dd-b1fa-503acf03a075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee2b699-8c73-4bc6-9a60-f66f61a3289e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75ea2d4-6bbf-4487-8c93-8c80e5d1817b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c4ce7c-f742-4c5e-8781-b698ecc5ecaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5139d872-6d44-426e-8360-446969c839e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9b7199-f793-4c6b-b56d-9d25fc099673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ddd4e2-0807-4383-b43b-a522929ed097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5b2c8a-d9af-4c9f-a939-61f45586f066",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1a5ba1-186e-49be-928d-7447444915b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0029b0c0-f7b7-4ad1-8dc2-e190ca00b57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad09155b-4eb4-4998-8d59-702a4544d285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3f855c-c87c-475a-a102-3027e495c227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07faaa8-7a96-4641-9202-fc4ad796841c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cfca26-b6f2-43ab-82da-7fcb820fbf58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77c496e1-1911-4d10-822f-f5b2797a4a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbacafa-c4ec-4fa9-ae23-f2602986204b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a56c7a4-21c1-4090-a5f8-a25eb71457e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0447035c-7fb1-4c1e-b03a-c409a2ee0dc9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26212826-47de-4413-9522-2520ff7c2017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37aa2395-25a7-4fde-9106-ec7d6f274c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cbaa0d-01bd-4136-b437-c705c32101d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56fea19-0246-4e18-a812-cc7660687048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f3fc66-f21c-40ff-b293-c2a7672cb24f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23aaf999-bb19-4fb8-8f57-18dc121fd0da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d61224c7-98e1-4281-9f2b-40fc93719619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2a6f3f-9735-46e2-b766-c62ae889dbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525ee1b7-3538-4e21-9720-db3f5d06d0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f2d397-ccd0-47e0-b28a-1ec108937e2d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476201b7-ec36-407b-ab53-512aa56dc906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "218ba56d-d306-4cdf-a754-88f2379e9acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "276f40a2-8453-44b0-87f9-b647258f7145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f4943c-839e-4f10-91f6-a8ddfadc15f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec5bcd8-301c-4bd0-9f42-87fc28ec685e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f498c9-60c9-41e9-9c88-45727914184d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5229eba3-2df0-412d-922b-836fa75c0175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b66215-f534-4f2a-bfca-1870bb6a1e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c678aa7-d994-4d86-9b8d-467ddcc5e126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856dbf92-ac36-46ac-958b-414e0e279b94",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca275ca-363e-4eab-9664-56552234921e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2226f817-199f-4a7d-b79b-63e95b4eadd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4917ba1-964a-48a3-970a-0c8b53619910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a43e00-0d1f-487f-8e31-b3d4c9aacefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f22cf0-dace-4d5c-9450-46807191c543",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371755be-f80b-4dfc-9c4c-1a1c868f753e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf3a15a8-3519-4df8-87a3-7534324323c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7692c0a7-551d-440a-9d38-4eff33085bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fe07ff-8ba7-4d5a-88f1-6363a5496e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aaf7250-e25f-4e4a-aeb4-e6d2583f87ca",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d49e94f-2d3e-456d-a4e7-d7c0bb24139d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11e5ed7b-60cf-4112-b96c-688e0536c0aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c5ecfa-5ded-4d67-bdb2-9fc0a3d2d67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb27b706-5db2-45ed-8d24-86b78b9dd766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef9c7b0-12b9-47e8-88ea-880a11886524",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bf382b-149e-4bf3-89c3-32a27eda001b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfe87b4e-45d3-475c-aeb1-1250aa76b775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7429fad-938e-40ef-b43b-e602d6dd0f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb2392b-18f1-44f0-aa12-04e2296d1229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b617b0ff-e13c-4bad-8905-23abaa6ee7e0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bd8f10-e5d9-44ed-9fe2-005974079907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c146ec9e-c678-4723-96ad-9806a9f48fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967dfaaa-010b-42ae-8ad7-591478ceea0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72a5294-1a3e-4780-b1db-c5f18560d2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddb5506-5676-4abb-8118-cb1470d13dc5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3b64ae-be63-4427-a276-c520df1aee19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a27e55e-061a-4ec4-9dd0-a4ca64f1255c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df44179-744b-46c9-a2f3-927536f149f2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb287b3-7706-4b6a-af3e-64673aba67c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9078f68-0525-492e-8e0c-c47b7d61a722",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51475181-8ea9-490c-84ec-93a11f27e4ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e0156ac-f0ce-4d2b-86de-e5f5884ffab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1ad30a-091c-4f4a-84ff-c24c8a816db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f46a99a-a25d-4653-8ae2-ab2a01cdc3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73a9cda-0478-4903-b00a-7c5e52d73f80",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178c9fbc-6ebb-4e7a-9de9-31799a5e94ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71dc40c8-2b0f-4426-b500-319ec9e1d393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ccd2fe-350d-4767-b75d-bf3d5b28e49c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502ff6f6-49e6-4128-89d0-0dc27757f645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7924dbb4-bbc6-47d5-8d79-30bb37537391",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39773d47-592a-403a-969f-3edfdd867fec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "950f5946-83ec-4ec7-9e3a-c1de9aeefef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45eb3fba-55ec-49a0-9a43-874495675fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36801ea8-67f6-4470-8140-b4f3a464e7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22253334-aa4b-4671-b235-cbde283949dd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428a3c40-7e9b-4722-9750-b0dc331e3efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "918ae14a-a886-4794-9fba-a85a787e866d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6303c9e4-3035-4f3d-9901-03e887f15f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48e6e77-aeac-4b8a-a472-ae95491d17ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6a74fc-b6d2-4b91-a69f-56498dc88be9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32aa2b9c-dab6-401e-b866-9feda5f5836a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a078a8-4304-4534-ba8b-ccf03176a232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdbb158-d5e9-4a87-9b32-78e4d0741afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3f21db-953e-4e84-a245-ca03a6962d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a044c31e-fd13-4235-9234-5d7f81a0b957",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565b7c0c-2705-405a-9f0d-812fca6bda79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea4e5556-9737-41b3-8fa8-59ee7bafe483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08697c9b-df06-4910-9837-1f7c535eded6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8eb5acd-3ef6-4f64-924a-a5f5a9e74250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72e9279-42a3-40d4-a880-06268faa99fd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73724a5e-4627-4b98-8272-16f606c092e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f206e37-68e8-4511-bf26-d37d38b00bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14173e8a-dad1-4d24-8b96-28975856a8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1422ec36-f0c8-4b65-b0b7-55d3bcd178f0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97ff41e8-f24d-4e2e-8cc4-88d9d753e7ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6cd8c3c-5780-4278-9bea-4e80545a27bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6eff0bfa-5a15-4a7d-932e-a3814e56af2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1dbfd2c3-9ceb-4555-8917-fbd0ab451fa3"
                    }
                  }
                ]
              },
              {
                "id": "89d571ce-7c8c-4f76-93fc-261f31462c39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "780be41b-80a7-4d82-952e-e9e447352565",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2577982e-b653-4e33-be6a-aadfb1fcbb67",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a0953104-607d-48ae-a85f-fb2eb68cc4f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddad45ef-ab09-4908-a565-e9fc7a5d5b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ede0edda-a7ca-4288-a9ab-03143fd5ee23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5de1a2cc-4cfb-4751-a2ec-0f52083469d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb5eaf0c-4952-47cb-b93e-2b9e40613730"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "667e8b14-21b4-471d-aa28-cbfa525a4e13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79b73513-d875-48a6-becc-8a26ad2d3b22"
                    }
                  }
                ]
              },
              {
                "id": "3b916d90-aae5-478d-b1c2-17d2530a2c2f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "15aac302-0775-47e5-9b9a-1026189c8ccb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad79229-aa6d-42b1-a276-6abeb382a8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3cdfa93c-4e78-4b37-a220-9225699570a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910292de-e24f-4c12-bfca-8dcb395f02a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b988e40b-fa14-4e3e-83a0-40661dd1796e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3453af20-0959-4d2b-8cad-f87524bba2ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac63e43a-a445-40de-9017-193acd140266",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b98cbba-9e3c-49cb-a4e3-4ddded8ded82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bf0674a1-619f-496f-a7c4-0fe5c711d960"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9bac30f-46ca-4552-a7f4-d792ad910175",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e001c4fa-e8c8-4166-acb9-bce0d9629381"
                    }
                  }
                ]
              },
              {
                "id": "bf9928e1-b18f-406b-ae65-efea24ef0cf7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e769daec-d623-4af1-8aec-bf00010f9041",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "16701365-02b4-484a-a41a-3f4818a4a950"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb875d77-a1d1-4609-913d-11b9bef5bc4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5403c0f3-2052-4c54-84d9-f4189dad4b51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "326a6ce4-f22b-42c7-aa3a-d607d5edd614",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9d75c183-581b-42b1-89ee-8cf19b785e9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cd84d24-ba8a-4636-aee8-7eeb32812e6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ea82dd5-60c8-4753-9f59-6528b0353eab"
            }
          }
        ]
      },
      {
        "id": "46c65fde-db31-4ac6-ae10-18a1ac930942",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "04d5ca28-f2e6-4e29-ab92-6a7d924decba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed523c8a-4f84-47ac-91cb-0783e8f65a92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df61772e-6055-4ace-aeee-792335c24960",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ced4b16-bf83-4f3b-bc1e-7668d69f4a37",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8cd7bb22-73f3-4e74-b807-09f3a857df60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be33f975-ca35-417e-b451-f3ee75b124f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fccc50c-a886-48c4-90e1-996781b1c89c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccc08791-9c5c-4ca5-a1e9-884096f9bf5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11ee4992-70ce-45a8-a13f-aebacfa08122"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1603663-48da-4584-a869-67241450d374",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d56a0d99-4192-421b-af12-f1154f29af16"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "834a0d96-4dca-448d-aa2e-4e7fff59e3f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "65a787a1-063c-4599-958b-6087eb3267cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d706b4c9-8ef3-4b6c-a791-88b06d79a3d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "daa58b52-a06c-4495-9cfb-2843429ba46e"
            }
          }
        ]
      },
      {
        "id": "8350c7d5-ff4c-4fb5-b43d-ea50dfef1f06",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5ce419ff-accb-4eeb-bc47-b95e0728714e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0276dc9d-d805-4646-9a81-fb6381fb8ff2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc4f91d7-6dc6-42e5-adcf-1a68c132b0b2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de9d023-b5e2-488b-bd6c-000698f9bb69",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dff6a619-bad4-44c7-9e4d-e76ea0df59ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc01fec5-7b34-4b4f-825a-776bcdbdf5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bc702ac-ec97-4369-b0fd-e3657bdbec56"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0be2a157-aeeb-4d99-9de5-7b6fa56902fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3e37b17-6055-43d1-9185-642297904078"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b262202a-6b6c-4c67-aa6c-2ffe592eb7ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46674843-b67a-4f1e-a1a3-1caf2e9a85fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95758ca2-9270-478c-ad20-356532dd55e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8acbe3e5-6e8b-43d6-ada6-de6a7593f437"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a188e85-c25a-4efa-b0b7-93290434542c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a87a498-8531-4b0a-aa19-8f25f25abc6a"
            }
          }
        ]
      },
      {
        "id": "9515137f-29ba-4363-80d0-a71693449ccd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0858ebf2-7884-477e-9418-a93d2dbb6e73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3410d14-c335-4d60-8b93-3e31c13d8d0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "764d0008-9283-437f-81ca-b03eabd3d28e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a221a2-2f98-4966-b420-b11fed363a6d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "612cfa1b-5ebc-42b9-9ca2-783cf604f2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfec719-8950-4a85-86aa-9259b4a77ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a4b5ad5-840f-4a3f-9150-c85cc246fed6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "405dcccf-cdc3-4b1d-a7d6-3ce57117e4bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a117edb8-a4c5-42dc-8b79-8b85fe00ae65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32089710-c4fb-433a-89c2-6048937a2e57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ebf8a83-a79b-44c6-bdc8-0d5144bb91a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8e48efd-fccd-43dc-ad55-12a70299788d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "53363bf0-4ae6-4fbc-9e24-6fe37c68c19b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e2acfa1-e6c1-488f-9bf3-1c84697d8511",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "102a0ff0-bc23-4699-94dd-22afc4bc46c2"
            }
          }
        ]
      },
      {
        "id": "535d223c-d280-4e2d-a2cf-f94cabca63fb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e0e6a4c-e699-4e6f-9911-46075ec7952c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77ce4ec2-ea86-45fb-adf8-adaca6f63bdf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a19f997e-3a41-4340-b6b4-0b6bdcce00a7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4dfc3818-d4b9-4212-80f2-f5367a200602",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6742a008-b9bc-4bd4-976b-8ecc89409855",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 293.70877192982465,
      "responseMin": 19,
      "responseMax": 8846,
      "responseSd": 1093.086402626646,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699835740483,
      "completed": 1699835836713
    },
    "executions": [
      {
        "id": "c7a2d30d-bf43-4b30-a0be-0d96c8a63bee",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8edb08c6-3b44-4276-8455-803bc02bc12e",
          "httpRequestId": "a6368611-37d5-41a6-b25e-2a6d8582fafa"
        },
        "item": {
          "id": "c7a2d30d-bf43-4b30-a0be-0d96c8a63bee",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7c0e0575-f8eb-4ef9-8482-0f35c26f09bf",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 0
        }
      },
      {
        "id": "fd3c4ece-ada6-4f6b-bb40-34c414c9c25b",
        "cursor": {
          "ref": "7339b7c3-6c2b-402b-b2ba-b17e9541573a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2a0181e9-dfbc-4cbc-8592-28ac1152359a"
        },
        "item": {
          "id": "fd3c4ece-ada6-4f6b-bb40-34c414c9c25b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a2ab4af0-cb3e-446f-b389-571a5038e150",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "d9e89622-682c-4045-9935-f5461f7a752e",
        "cursor": {
          "ref": "55771302-3c24-4f18-a4fb-b0a79e559d1e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4e10ca76-8ac8-404a-92b6-1f2d2f0e9ca7"
        },
        "item": {
          "id": "d9e89622-682c-4045-9935-f5461f7a752e",
          "name": "did_json"
        },
        "response": {
          "id": "d82fedfd-f824-4b5d-ae70-9c3d9bc6122c",
          "status": "OK",
          "code": 200,
          "responseTime": 1603,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcaa113f-25e9-43ea-865d-230065954156",
        "cursor": {
          "ref": "2e3dfb5f-260f-425b-a5b7-b0e4b809c131",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6a34b90a-8968-47b7-81c4-5cb6ba334bbc"
        },
        "item": {
          "id": "bcaa113f-25e9-43ea-865d-230065954156",
          "name": "did:invalid"
        },
        "response": {
          "id": "4eee4736-1096-48a6-a76e-dc38e8837b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcaa113f-25e9-43ea-865d-230065954156",
        "cursor": {
          "ref": "2e3dfb5f-260f-425b-a5b7-b0e4b809c131",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6a34b90a-8968-47b7-81c4-5cb6ba334bbc"
        },
        "item": {
          "id": "bcaa113f-25e9-43ea-865d-230065954156",
          "name": "did:invalid"
        },
        "response": {
          "id": "4eee4736-1096-48a6-a76e-dc38e8837b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39724e16-86eb-44c3-8a88-22ff5a6c69df",
        "cursor": {
          "ref": "067ebfdc-367e-4a16-8bde-d69576be115e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "31d11cbd-ed0d-4de6-93f1-5fd9d83fa371"
        },
        "item": {
          "id": "39724e16-86eb-44c3-8a88-22ff5a6c69df",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9de66ba9-29d7-4968-bae1-c58818654baf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1075,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7475ac4-3639-467f-981d-fd8f5adec71b",
        "cursor": {
          "ref": "a114cdb4-f197-425e-8ca8-a954e04a7dbe",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "142e098d-965d-4621-8f69-b4b8da5d773e"
        },
        "item": {
          "id": "d7475ac4-3639-467f-981d-fd8f5adec71b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f7925f15-7ecc-405b-852a-0ea908cae975",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10d5b7d-7084-4f83-87b4-945dcf9af583",
        "cursor": {
          "ref": "08faac95-772a-42af-a1f4-2b46f2d484f0",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "689a92d5-2b20-4766-9d81-0a2bdc74534c"
        },
        "item": {
          "id": "d10d5b7d-7084-4f83-87b4-945dcf9af583",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "22c310e0-d303-4c08-86a3-3403bbbb658f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54cfa2d-695a-466b-b3e0-0bed94516e30",
        "cursor": {
          "ref": "7c4ece44-086e-4c48-8649-c3c170a1d634",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "19a4c753-2190-427d-ba1b-50dba72feffe"
        },
        "item": {
          "id": "a54cfa2d-695a-466b-b3e0-0bed94516e30",
          "name": "identifiers"
        },
        "response": {
          "id": "54e2f256-89be-4a39-aca6-2eaf0397b616",
          "status": "OK",
          "code": 200,
          "responseTime": 1216,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130aedd0-3be8-4543-8021-b9aa307003ca",
        "cursor": {
          "ref": "5f8268e5-a0c0-4460-b2df-b72ae2b8c147",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ecd1d79a-d643-4d9c-8895-ae15117a41b6"
        },
        "item": {
          "id": "130aedd0-3be8-4543-8021-b9aa307003ca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e81da755-eeb6-4d10-bd34-ac2db1c2e706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693f303a-1f56-4a1f-9b47-24d658576e86",
        "cursor": {
          "ref": "cf5adaec-6f2b-4824-a2f9-245f6f4f1327",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d8a3db67-76e3-4592-8305-425bc83b2c95"
        },
        "item": {
          "id": "693f303a-1f56-4a1f-9b47-24d658576e86",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "829d75e0-082a-4e5c-8f3b-bf8783eaf95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc496b5-53a0-4a22-8800-0e7d4e044876",
        "cursor": {
          "ref": "2f880522-90a0-411e-9f4b-343bf192176a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "163e439f-7751-47b1-91d0-2855e6f093eb"
        },
        "item": {
          "id": "6bc496b5-53a0-4a22-8800-0e7d4e044876",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "985562fa-6843-423e-b7b8-957a253f1a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe11412-720a-4ecc-b0f1-e55679ead490",
        "cursor": {
          "ref": "ed51ccd7-983d-498c-a0d7-3b3618935d06",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cb16cf2f-f183-4faf-8255-59023bead66a"
        },
        "item": {
          "id": "afe11412-720a-4ecc-b0f1-e55679ead490",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c52ef637-ee85-46e5-918d-975a6a68194f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7468bcc-6704-430a-9cdd-015e9d55ca76",
        "cursor": {
          "ref": "73d7f3ef-b950-4975-88a9-79bb0c2308bf",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2dda5972-8c12-4b6b-af78-8b4b947ac659"
        },
        "item": {
          "id": "f7468bcc-6704-430a-9cdd-015e9d55ca76",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "49fcf6d6-0942-4990-8025-6de344dbe0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb2a317-ab8b-4980-9429-3c759fddcf7b",
        "cursor": {
          "ref": "8eab7c8c-b0f0-4eb8-b510-8f069f6b8a89",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b07d1dd5-eacc-4bb1-b33a-0c9fabb9f58f"
        },
        "item": {
          "id": "3fb2a317-ab8b-4980-9429-3c759fddcf7b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b26512e8-fd77-484a-88e7-25f95fcb1b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489ec21e-0249-449b-acc8-6acd4b73741b",
        "cursor": {
          "ref": "8f628e7a-5cbf-4732-8ce9-49bd556a0e4f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "79ae18a0-2845-4b1b-93ea-f0423cc730c3"
        },
        "item": {
          "id": "489ec21e-0249-449b-acc8-6acd4b73741b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "320bbb7b-89cd-415b-bf7f-d26b747bc4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f1a261-315d-4bd2-b5cd-10ebc84c8647",
        "cursor": {
          "ref": "309a2fde-9702-4c01-a97d-e69c269b504e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cc2546b5-bc21-4a1b-ba7d-b366ee3cd250"
        },
        "item": {
          "id": "23f1a261-315d-4bd2-b5cd-10ebc84c8647",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "68b8d840-fba0-4814-b313-df25ed1613c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616a9e50-ad2f-4759-8c45-d8f0334d7f59",
        "cursor": {
          "ref": "de51b637-95df-4d5b-a3d6-1eb6e73b0d8d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9c069960-c36a-4e05-890b-5b3d7b8754f3"
        },
        "item": {
          "id": "616a9e50-ad2f-4759-8c45-d8f0334d7f59",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "de3d8415-a63a-4b69-aba5-4395498a2217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e1c870-97b8-46e0-9580-35739b665da3",
        "cursor": {
          "ref": "662a7e4c-da8e-402f-98b2-00cb539e07cc",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "70fb847c-8d9c-4287-9300-d31eaccddfcc"
        },
        "item": {
          "id": "39e1c870-97b8-46e0-9580-35739b665da3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "38ae12a4-90a3-45e6-9bab-bc27841c7b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25915373-8dc6-4d61-98f1-dab6d04116c4",
        "cursor": {
          "ref": "1998b87b-136f-42c6-a9d5-2d50cfc01fa6",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "167654db-f445-42f0-b158-13a842a9ffbe"
        },
        "item": {
          "id": "25915373-8dc6-4d61-98f1-dab6d04116c4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4bb8d480-8678-4338-b85a-4935718943da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfae549-d338-4ae0-9a6c-410bf8658e64",
        "cursor": {
          "ref": "0b9b9345-f97c-4226-a4ec-4f36ca64e449",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "37ee16ba-c3e1-400e-b1e4-3994bbbf6152"
        },
        "item": {
          "id": "1dfae549-d338-4ae0-9a6c-410bf8658e64",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d5431116-24f8-4cdc-ac55-cf172fc83b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d73ca1-1dac-46ae-8f42-c712b8b419bd",
        "cursor": {
          "ref": "c2aa20c4-2189-4b7c-b710-60d0d89e740f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "458a3f81-505f-49c1-96da-236185f2105d"
        },
        "item": {
          "id": "38d73ca1-1dac-46ae-8f42-c712b8b419bd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "686de56f-b581-4a16-82df-c7ac66e14562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d913f8-f03c-4bb6-930c-0b24cc545847",
        "cursor": {
          "ref": "cfac9cd2-5a2b-4e85-a775-91de222250d2",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "78f6d82a-2cdf-4135-97b6-08fa91650412"
        },
        "item": {
          "id": "17d913f8-f03c-4bb6-930c-0b24cc545847",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c5ddc2f4-7da6-4b72-905d-b3b4c9c3cc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541f5b34-b670-4401-8ac6-7eec13aeb289",
        "cursor": {
          "ref": "e975b8ce-7817-4b5f-91d4-ad32fcd23b3e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "449e874a-69f3-49bf-82c1-66113d933b14"
        },
        "item": {
          "id": "541f5b34-b670-4401-8ac6-7eec13aeb289",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "55181d4d-35a1-40be-aaf6-0010575880ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6aea10-08bf-4bdd-a48e-ef5e9c0b7ddc",
        "cursor": {
          "ref": "25f85e30-c644-406f-ad11-242fc8f97ef0",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0ea7f1b6-7131-4f35-8e34-9072ae8a066e"
        },
        "item": {
          "id": "ad6aea10-08bf-4bdd-a48e-ef5e9c0b7ddc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "086d9529-390a-4be4-9b1f-f38b270b6af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212a4cf6-2558-454f-acdf-779bc9addd6c",
        "cursor": {
          "ref": "636e7a09-3ee1-4580-8898-e60f8ba2f0cf",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "01793364-482d-42a8-9d26-a2b4b24a8056"
        },
        "item": {
          "id": "212a4cf6-2558-454f-acdf-779bc9addd6c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "31d86faf-d2dd-4f26-8f80-c88f59f4979f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ddf531-2fc3-474c-b477-0adc6a36a735",
        "cursor": {
          "ref": "e8340cd5-83d3-44b1-81c4-1105099c4a5e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "be4874ee-8d19-47bf-b89b-41e2441adc5d"
        },
        "item": {
          "id": "51ddf531-2fc3-474c-b477-0adc6a36a735",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0b97872b-fae3-41fd-9539-0a59862d141e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb0e8bd-c1a7-4f0f-a9e9-bccc610624fd",
        "cursor": {
          "ref": "6f8c7bc7-59d5-491e-9e61-7af4fa2d3ca0",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bd33585c-6298-4607-9fb4-cb23924b008c"
        },
        "item": {
          "id": "5cb0e8bd-c1a7-4f0f-a9e9-bccc610624fd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c5f8c570-9f2f-4754-9159-3d33b3afa69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478ecfb9-6b76-49e9-a959-17a24fb36245",
        "cursor": {
          "ref": "a0cce484-60d1-46ad-8433-448f3f1e0d97",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2f89461d-aea3-45c3-b752-33e428dedb0d"
        },
        "item": {
          "id": "478ecfb9-6b76-49e9-a959-17a24fb36245",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "361db87d-dabf-4329-a9a5-6a48495fc2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843135d8-df1a-4dfe-b1a8-3f019b09dadb",
        "cursor": {
          "ref": "986a9fc1-d828-4e66-beae-bd38b585a0e2",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5533cf03-3f6a-4f49-9ea0-1aa5fe55a8f8"
        },
        "item": {
          "id": "843135d8-df1a-4dfe-b1a8-3f019b09dadb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b6e9b3d3-1a19-48b5-8784-6de4194e5348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088b7526-cd58-4eac-9624-0bce5f810f59",
        "cursor": {
          "ref": "ebb80bed-918b-4192-89cb-d08204939b3c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e7f119d8-2e0c-4c50-8a69-9f5e80ab8858"
        },
        "item": {
          "id": "088b7526-cd58-4eac-9624-0bce5f810f59",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "521842b0-1d52-4986-bff6-9097e4331e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dad9d1-aff7-4541-bd84-090783fa49e7",
        "cursor": {
          "ref": "a01c7a3a-bb08-440a-bab9-665e0aba9370",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2bdeeeef-873f-4930-8682-4f4a0853b403"
        },
        "item": {
          "id": "27dad9d1-aff7-4541-bd84-090783fa49e7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bdda2f06-d052-4cab-bc2b-0d5f155bc011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b634a81c-5943-489b-81db-b1298522e918",
        "cursor": {
          "ref": "e95d6861-a186-4236-9954-73150fdc4581",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "44eafa01-f51c-4c63-8da6-3d0fe122eed7"
        },
        "item": {
          "id": "b634a81c-5943-489b-81db-b1298522e918",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d683811b-d120-455f-9f39-71694868f929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1369ce0-efdd-4e27-b0be-31580d785036",
        "cursor": {
          "ref": "0f0017de-6f3e-481b-a9fa-24cdeda62f1c",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a4f65788-9a23-4741-871d-f6da0db578dd"
        },
        "item": {
          "id": "a1369ce0-efdd-4e27-b0be-31580d785036",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5898d025-6907-42ff-9f00-dc9ae9a7e6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3606dc7-3d5a-48af-8dde-432c602e3b54",
        "cursor": {
          "ref": "4ad1209c-b760-4065-b7e1-6d0e2cecb10d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e377996a-4db3-4bbc-a3ab-d82750919044"
        },
        "item": {
          "id": "a3606dc7-3d5a-48af-8dde-432c602e3b54",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1c37d95a-2c2a-4f62-8a2f-9546766a2b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cd60b9-57df-4d0a-b35b-54bd49339609",
        "cursor": {
          "ref": "19f2be69-06e0-496f-9a3b-ebbe13e53272",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9302ef8f-e9dd-4ce9-9a11-4143d1be6ae2"
        },
        "item": {
          "id": "f2cd60b9-57df-4d0a-b35b-54bd49339609",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "70be4ce7-f62b-410f-b6cf-06adcc0c9b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdd17e3-440a-4c9d-a0bb-9aeff71e1a06",
        "cursor": {
          "ref": "390ee34c-f97c-42c8-a29f-a57fd199abca",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "14f8bd22-e590-41b6-91b6-891332324ac2"
        },
        "item": {
          "id": "4bdd17e3-440a-4c9d-a0bb-9aeff71e1a06",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "257668b9-41f3-4348-aa18-9b8de1afc1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd2f14b-9ca5-4b62-b654-e33e8d0623ce",
        "cursor": {
          "ref": "3cc595ae-a0f3-483e-904c-89ec9e72b7b8",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6888a9f9-495f-4d35-9aea-08efc6a81486"
        },
        "item": {
          "id": "bfd2f14b-9ca5-4b62-b654-e33e8d0623ce",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "61d262d2-a837-4cc4-bb4f-0d6c94d24ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febb2885-b913-4231-9df3-82339b5fd19b",
        "cursor": {
          "ref": "c7e14028-9499-4fc7-92a1-7e1cabc02d63",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "779540bc-9672-4707-b1ba-dd4b91aedb46"
        },
        "item": {
          "id": "febb2885-b913-4231-9df3-82339b5fd19b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "47dacba0-b510-4968-92b4-8fe37153691a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae62446d-c5c0-41b7-8524-f040ff91aac2",
        "cursor": {
          "ref": "45ff0a25-1180-4706-92ad-8319b90925b5",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d15335c9-96e8-4951-a6d6-e055980574a1"
        },
        "item": {
          "id": "ae62446d-c5c0-41b7-8524-f040ff91aac2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ca3f0d7a-041a-4da1-b33d-c78d58c655b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209d66dc-3582-4888-a5b2-22cb79913ca7",
        "cursor": {
          "ref": "fbafe904-9938-4696-ac85-4b2ebddaa19d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b6fa1510-f65a-407d-ad26-f8258fe5a3ed"
        },
        "item": {
          "id": "209d66dc-3582-4888-a5b2-22cb79913ca7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "642960dc-f0c1-487c-9f82-bc83b053b50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2ab28b-c877-4737-afdc-b3ffd790177e",
        "cursor": {
          "ref": "e3ec8249-9623-41d8-84f7-5192d81a301a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0c95ab0f-0520-4796-836b-35095bf0b494"
        },
        "item": {
          "id": "fa2ab28b-c877-4737-afdc-b3ffd790177e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4557f3c5-ffaa-4727-ba73-6625bb412b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb051f0-11ae-47f9-b0e3-9c64411e95d9",
        "cursor": {
          "ref": "1f07215d-1472-4414-8cdd-e3b730db7d62",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "477013f1-61d5-462e-9c74-ab50fbc3f515"
        },
        "item": {
          "id": "2bb051f0-11ae-47f9-b0e3-9c64411e95d9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ab6d4c4f-3517-4981-9bba-a97c1573336e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9146802e-373b-4e4f-834a-55a1439658da",
        "cursor": {
          "ref": "1c8a229e-bd4f-4763-9033-21f78a3cbe18",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "870ac616-a5b6-4378-94db-8d13e5fafed2"
        },
        "item": {
          "id": "9146802e-373b-4e4f-834a-55a1439658da",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "24158c00-c87f-4769-b180-f1ded0dcbce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8729d220-d08e-41ab-9068-a9768c773d88",
        "cursor": {
          "ref": "93d743b9-036d-44c9-92d0-969c6a650455",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "34a2936b-bfb5-43a4-b3b2-4baba26a222b"
        },
        "item": {
          "id": "8729d220-d08e-41ab-9068-a9768c773d88",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "89256df3-b543-41ef-8b6a-d53ec38be3fe",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1466,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915ecb9a-5e6c-4db5-b200-33ac621f6fcc",
        "cursor": {
          "ref": "9f08d0f9-2460-4fe4-bf7f-918706ff0711",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0051071f-d1b4-4046-89b9-51f93c96dc75"
        },
        "item": {
          "id": "915ecb9a-5e6c-4db5-b200-33ac621f6fcc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "04c15a9f-e640-4156-be70-e89e52f84fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96bb3e3-e058-40ca-9434-394f2b1392ae",
        "cursor": {
          "ref": "eca69491-769f-45bf-b9d9-7ce78aeabcb7",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0a62a9cf-242b-4417-aff1-26610608f40f"
        },
        "item": {
          "id": "b96bb3e3-e058-40ca-9434-394f2b1392ae",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c45e999d-43d1-45b2-b2f3-0dcb5537652e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580ebd8e-5081-40bc-8c34-2d564a0ae000",
        "cursor": {
          "ref": "e706acb4-420d-4c4b-ad43-bff69be893a0",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "23f0c8d5-611e-433d-ad4a-5296da5c6862"
        },
        "item": {
          "id": "580ebd8e-5081-40bc-8c34-2d564a0ae000",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "97385272-b755-448e-8621-7fbe545bbb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48094bb-b86b-41d3-aaa1-e21e2f62bb09",
        "cursor": {
          "ref": "5468e64a-428b-418f-bbe6-ee449499c297",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "19f427eb-7d11-4e20-b211-f37918687428"
        },
        "item": {
          "id": "a48094bb-b86b-41d3-aaa1-e21e2f62bb09",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "81fd807c-8a73-4139-9591-62e86f958df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e572c7-df1c-49ba-9eef-4d0bb1c675c1",
        "cursor": {
          "ref": "ef05cbec-5098-42d9-94fe-0695a5b5e43c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a0c406ff-7590-4104-94ab-002f28def1e3"
        },
        "item": {
          "id": "33e572c7-df1c-49ba-9eef-4d0bb1c675c1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "faa0d319-1927-49ce-bf0c-0ff070242336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7750d56b-691b-4c8d-832f-7d91a91f6105",
        "cursor": {
          "ref": "ffe23762-75b2-42ac-9ec0-ba317654b100",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "020ce159-a811-49b4-bcc0-f035956cbea7"
        },
        "item": {
          "id": "7750d56b-691b-4c8d-832f-7d91a91f6105",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3b523323-4a4e-4153-a2ff-19a6982a3147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de64703b-28ef-4a50-a36c-a7ff6744ee90",
        "cursor": {
          "ref": "55d06a67-9dcc-4735-910b-e4aee6367093",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e9f2880c-4b04-4617-8597-da370e4ed891"
        },
        "item": {
          "id": "de64703b-28ef-4a50-a36c-a7ff6744ee90",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ec7ddfea-bb31-46d8-a9bb-1589a33d3fee",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1495,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ae3b90-d039-4370-b3a7-d9949ebc1017",
        "cursor": {
          "ref": "60a57112-55df-4714-b53a-044f5f538676",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "25063d41-2d30-4a9d-b14a-4d6ebeb969b6"
        },
        "item": {
          "id": "e0ae3b90-d039-4370-b3a7-d9949ebc1017",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4b6484f0-0cb9-426f-91fe-be6a4a6e2c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2886e8-0225-458f-abc5-4016c96c3827",
        "cursor": {
          "ref": "84f06e4c-d35e-4a17-9875-1bac68a00ed3",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b2d0b584-1485-49de-9200-7c0c4ef94164"
        },
        "item": {
          "id": "1d2886e8-0225-458f-abc5-4016c96c3827",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "16d47b65-02af-444b-a34c-312a8f9c073e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7a0b18-b34f-46c6-af65-b8705fc6b1c8",
        "cursor": {
          "ref": "b749f02f-5171-4232-910f-05f9a6964f39",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c004bdf7-ac39-417e-9046-437c1b97ffdd"
        },
        "item": {
          "id": "eb7a0b18-b34f-46c6-af65-b8705fc6b1c8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ce9efe5f-6d29-43ef-bdbc-74dd29adc37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdec262-5e17-4d4c-8908-8f2bf1945612",
        "cursor": {
          "ref": "46376149-e4d1-4802-93fc-57103c8ff474",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5a428766-a950-4a9b-a172-d71579b280e4"
        },
        "item": {
          "id": "ecdec262-5e17-4d4c-8908-8f2bf1945612",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "575fccea-eb81-4e90-9623-72a21b90d7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d46355-2b8e-401e-83fb-6307f55caf47",
        "cursor": {
          "ref": "eeb8ea5c-aac3-4cb7-9b1d-e36ab8ff6d19",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7b33fbfa-7885-442e-a24e-c414ff984cf4"
        },
        "item": {
          "id": "15d46355-2b8e-401e-83fb-6307f55caf47",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c261e411-1950-4d02-918d-1e50d4460cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a948e76-fb9a-4214-83cd-b3dfcd3a45ca",
        "cursor": {
          "ref": "dfaea252-afff-4361-acf2-0a41a77d64e8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6fd6e11f-6587-452f-9789-20fc82e259a5"
        },
        "item": {
          "id": "4a948e76-fb9a-4214-83cd-b3dfcd3a45ca",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2adb4f7a-e48b-4a35-a415-126f790b3486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03e3690-44e7-49b4-99f2-1df99a696fff",
        "cursor": {
          "ref": "61f1cf81-5ad4-44d8-84c0-7fb4e64a96bb",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d6794ee1-df59-4510-816d-5f7dfbb513fc"
        },
        "item": {
          "id": "b03e3690-44e7-49b4-99f2-1df99a696fff",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cba31d60-8aa0-4e3f-85a8-009439b092d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7469f4ac-a551-4870-a439-046cf9aecc09",
        "cursor": {
          "ref": "16ad1448-d487-4121-b0d0-974aaa9e359a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "991bb552-fd87-4c30-9fb3-69233efbb552"
        },
        "item": {
          "id": "7469f4ac-a551-4870-a439-046cf9aecc09",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6ed14aa0-faa2-413b-b43e-73705f524097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50afdadc-4213-4507-a852-d4e12edc6710",
        "cursor": {
          "ref": "af1a81b5-eace-494d-8ae9-0e060236c256",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "41c60ac9-4991-4c3d-a0df-9f50f7897b41"
        },
        "item": {
          "id": "50afdadc-4213-4507-a852-d4e12edc6710",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b8a868d3-5bd3-4f47-a279-75552f521dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba6d638-4cb4-42a9-bfbc-241df4ed6d14",
        "cursor": {
          "ref": "2b8098d7-a8b8-4d0d-932e-0c4c4a2cd1eb",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c6d5aa3a-e7d0-4042-a649-3bb3a620f25c"
        },
        "item": {
          "id": "3ba6d638-4cb4-42a9-bfbc-241df4ed6d14",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "000512c2-bd01-40b4-a26a-2459f1226637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4da448-4c3f-4a66-83ec-7b6aa740a57e",
        "cursor": {
          "ref": "c76460e6-eee9-4817-865c-5aa6b17e85b0",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "78c60dab-7e3f-43f1-8f5c-d1243f9e7f76"
        },
        "item": {
          "id": "cf4da448-4c3f-4a66-83ec-7b6aa740a57e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "70e28967-6074-43d6-8c1b-53fe72ab9710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cde725-bf94-492a-8681-7ba9f291912c",
        "cursor": {
          "ref": "69ead703-9877-4965-9558-02ba9691f86b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7ebffd22-7feb-453e-888b-7f9e9f3ed628"
        },
        "item": {
          "id": "62cde725-bf94-492a-8681-7ba9f291912c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "78cf5d70-63b3-4f11-9c25-e0df66652678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8943c5e7-e5c8-4a0b-b562-f14dc97a4a53",
        "cursor": {
          "ref": "d3c5d44d-c539-4747-947f-3f1c951c4d98",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e9f1f262-4cd4-495d-b081-4ad37cf66838"
        },
        "item": {
          "id": "8943c5e7-e5c8-4a0b-b562-f14dc97a4a53",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ac1058ed-b70f-44c4-a325-605dc2e11b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b787463d-aaf6-4e32-96f9-30e514a73687",
        "cursor": {
          "ref": "414ef93f-2ca4-412f-82ad-dce393acacc9",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "76041e8b-d289-488c-85e5-93c781c87e12"
        },
        "item": {
          "id": "b787463d-aaf6-4e32-96f9-30e514a73687",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "89e0fa48-4c66-47c0-bf70-c3bd7be954a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c378c8-3354-4bfc-a2a5-a1b12836caa4",
        "cursor": {
          "ref": "ef961f83-5462-405c-b84c-94353b26eb75",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "467db8e0-6138-4a6a-8322-749b932257ce"
        },
        "item": {
          "id": "e2c378c8-3354-4bfc-a2a5-a1b12836caa4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "afaef6ac-9ad0-4203-bcee-40afa86917a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcec78f-a116-44e1-be66-9485e195c687",
        "cursor": {
          "ref": "c4740d22-6ec0-48b4-baab-d43dd932d3ab",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4b4754dd-885a-4e8a-9dfa-4d5356316c88"
        },
        "item": {
          "id": "2bcec78f-a116-44e1-be66-9485e195c687",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "56484201-8f91-424e-9256-15cd817a54ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c0089b-e8c7-419e-a25f-ca78304a9812",
        "cursor": {
          "ref": "eecac157-06c8-430a-bfb6-f784e3bcf469",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a43b6299-3ff0-4760-8484-8dbdc2c2a77c"
        },
        "item": {
          "id": "f4c0089b-e8c7-419e-a25f-ca78304a9812",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3ca996a3-9207-4b9b-8f7b-dd34e85dddb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fca8750-a6be-4e54-817b-79c875f75ca1",
        "cursor": {
          "ref": "81cf18ff-a3a3-4224-afb3-3ea4f4aef8f3",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a2d03d1a-9f5e-493c-82bf-77f2b3bc1bdc"
        },
        "item": {
          "id": "4fca8750-a6be-4e54-817b-79c875f75ca1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "aed12b23-db04-4ba6-9f88-69c19f9ba85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebb31df-931c-45f8-99c8-eaad24f9ac39",
        "cursor": {
          "ref": "8ced21ba-dcdc-442f-9033-89a61bbee6c6",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8ee0a39d-32ec-488c-b7f5-1e0299877ec8"
        },
        "item": {
          "id": "0ebb31df-931c-45f8-99c8-eaad24f9ac39",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9a84df0b-cad5-4a4e-aa79-ba7180f2b48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d25fd48-a06a-43cb-8f4e-52c29b61dab9",
        "cursor": {
          "ref": "c3ed1daf-a4c4-497d-81fe-08744b4c4de6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7c4d445c-cb4e-4dea-a302-cc26132bbd57"
        },
        "item": {
          "id": "6d25fd48-a06a-43cb-8f4e-52c29b61dab9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a7a1d3bd-f169-43d5-8de3-5c1abe4bd8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e79efb8-5548-40fc-9ce2-4c067f442a73",
        "cursor": {
          "ref": "eab8ebc7-5c2d-41d3-a564-e70a867577bc",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3d5e33e3-7803-4339-9e8c-2535e382802b"
        },
        "item": {
          "id": "5e79efb8-5548-40fc-9ce2-4c067f442a73",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "032332e2-5be3-4277-99d5-ed88bd237172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19df1eae-ee08-48ec-9d02-c6b4fe3a7351",
        "cursor": {
          "ref": "a9b38c5b-2ecf-4fe9-885b-a33585a27144",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "96f3f499-bb6f-4a34-98de-0994865e6478"
        },
        "item": {
          "id": "19df1eae-ee08-48ec-9d02-c6b4fe3a7351",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a0a94716-7a42-4c08-b890-df1aa7268bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a51ebd4-b215-4cbb-a247-10c5f5f17ba4",
        "cursor": {
          "ref": "d27430dc-2aea-464e-8b85-3caeacfd4ece",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f8b972e4-0811-441d-8da9-d5de3ed33235"
        },
        "item": {
          "id": "0a51ebd4-b215-4cbb-a247-10c5f5f17ba4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3d6fec6b-abb6-46e5-accb-4a0fc92c85c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74b82de-0b62-4b62-bcd4-6abc29d2daf5",
        "cursor": {
          "ref": "ef50b06b-e1f0-4ff4-8dec-b8b30f248090",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cccda198-e8c7-4479-b58d-450dda0a9754"
        },
        "item": {
          "id": "b74b82de-0b62-4b62-bcd4-6abc29d2daf5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e9fd2a07-10b5-4181-b044-f50b4bce9e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d1af8e-85a1-4f24-8c3d-2ecffbba5974",
        "cursor": {
          "ref": "1c5991c0-e4d8-487d-8648-c31a257eb1ea",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f16e362d-b691-42cd-8fd6-213100d05287"
        },
        "item": {
          "id": "b1d1af8e-85a1-4f24-8c3d-2ecffbba5974",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ff89693f-c8b2-4bc0-a1b1-ef2d845fe3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49d9d8f-4ae5-4613-8874-a5e73f9f77f1",
        "cursor": {
          "ref": "c5f56f0e-2066-4074-8d26-68e94fe61f42",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ec02f956-c386-42bf-b6e8-4e62570e4e21"
        },
        "item": {
          "id": "d49d9d8f-4ae5-4613-8874-a5e73f9f77f1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7fe756a5-5c0d-46c0-ac87-aca126393a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a901122-9cbe-4036-a580-cee3087a2d17",
        "cursor": {
          "ref": "d3a8fce2-2527-4d51-b75d-19e3fa3ab2f4",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9c260915-5f49-4400-abdb-35742edb8c76"
        },
        "item": {
          "id": "2a901122-9cbe-4036-a580-cee3087a2d17",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f17c2192-049d-4931-8e3e-635b1b4922df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76fe4f8-4450-4c3a-88dc-c5a92cbe4351",
        "cursor": {
          "ref": "6caef073-e7d3-45e4-825a-bbe440321525",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "395150a3-5058-481e-bed8-640ec027988b"
        },
        "item": {
          "id": "c76fe4f8-4450-4c3a-88dc-c5a92cbe4351",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a53299a1-f6e0-46da-bfca-644bdd7b06b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a362e2-d03e-4607-bb21-eb42e9a27cd7",
        "cursor": {
          "ref": "5a1dd896-466d-43a9-b3c5-bd08401dfb2b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2928d90c-9708-4689-9d47-52b9fa9b921f"
        },
        "item": {
          "id": "74a362e2-d03e-4607-bb21-eb42e9a27cd7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f6fbe662-bdaf-48b1-bc17-698ea52c4b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6469a5a2-93f5-40ce-8997-e126d89f17e4",
        "cursor": {
          "ref": "d1707258-57bc-442b-910f-b1b1c4d72f8a",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c5f6f96a-687b-40c2-b63b-ce7f40e993a1"
        },
        "item": {
          "id": "6469a5a2-93f5-40ce-8997-e126d89f17e4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6ad2cf8e-57b7-4960-a09c-e0748275ccdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f912f906-b9ce-4b2f-983a-4bb702fe5ab1",
        "cursor": {
          "ref": "f46dbbd3-ba7f-490e-bba8-1438cee5b8df",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2ce75983-01b4-4e57-a175-badc19b0efc0"
        },
        "item": {
          "id": "f912f906-b9ce-4b2f-983a-4bb702fe5ab1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b84dca65-7744-40b7-8a36-b8b3c010a1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37265c09-f081-4575-9dfa-0bb96726d32b",
        "cursor": {
          "ref": "69f3f748-114c-4ab4-bd07-6128dbafa622",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c54606cc-17f1-4a5b-ad6d-32e58e735064"
        },
        "item": {
          "id": "37265c09-f081-4575-9dfa-0bb96726d32b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "94021d00-ed4f-4e61-9748-5215eac8c6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b124114b-9467-4d07-83f1-061395e5c7c8",
        "cursor": {
          "ref": "d2f8bafb-7e71-4d0a-b041-6bb2841fb6f8",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a67db837-db2c-4b13-88f1-897f2ab792e3"
        },
        "item": {
          "id": "b124114b-9467-4d07-83f1-061395e5c7c8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6238a526-19f3-4f79-9925-29c9fb1ad48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d7f721-5252-44f0-8e62-dc9e025c0d7f",
        "cursor": {
          "ref": "c0e5b0e1-5d2d-4760-ac57-e2fc314287c8",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "eb37ca13-8a49-448f-ac05-4eb83781bf19"
        },
        "item": {
          "id": "a9d7f721-5252-44f0-8e62-dc9e025c0d7f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "99a9a914-5b01-4e3d-8f23-abc652ed31cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852bf956-d1b4-49e0-814c-dbee1769f5b1",
        "cursor": {
          "ref": "708729a8-4d8c-4730-b449-60a8147a8c86",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "af7d66b8-463f-4212-a83c-1f106081d7f7"
        },
        "item": {
          "id": "852bf956-d1b4-49e0-814c-dbee1769f5b1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "82eb9ccd-8bec-4b17-bc93-f16d47411e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69a15c5-c157-44ab-bb27-205e80eedcad",
        "cursor": {
          "ref": "ca1fefd5-12bf-418f-9844-565ece52a175",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4f11872a-6336-4db6-a8a5-b02adbf53480"
        },
        "item": {
          "id": "c69a15c5-c157-44ab-bb27-205e80eedcad",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "35811258-987f-4800-90b7-dfca428692d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4b78f3-1065-486b-b5e2-d6c37209e779",
        "cursor": {
          "ref": "42d80b50-cc84-47bc-9d8c-241a06a3d567",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f26253d5-d95c-4953-8d4e-c6a30251fd70"
        },
        "item": {
          "id": "0d4b78f3-1065-486b-b5e2-d6c37209e779",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9ad085ce-65d8-49fb-a4c8-48ed81aafdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1145f6-eeda-4371-9a6e-edaed4e26f2d",
        "cursor": {
          "ref": "84f06dcc-a754-4a7b-b72e-e722aa2a3874",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8cd9b7f5-3267-4c23-96a9-3cab7b638c2b"
        },
        "item": {
          "id": "4c1145f6-eeda-4371-9a6e-edaed4e26f2d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "219f1232-4642-44c8-a410-5153e24e8a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c2696b-2e39-4c66-9af8-531a1c7b5cd7",
        "cursor": {
          "ref": "b14ea80a-61ee-477f-816d-2466ace3ed11",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1bd3beb0-73b6-4b94-a5c8-cc94ba1c192b"
        },
        "item": {
          "id": "85c2696b-2e39-4c66-9af8-531a1c7b5cd7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "77ec68d3-c979-4536-b4f5-bcf0ecf9957f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6fa798-6dbb-4112-9b33-5d1395a6cb5c",
        "cursor": {
          "ref": "f2a06d5a-2c5f-4c37-b787-cbc8a8a19a64",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "57b1e74d-3e36-41a8-a6d0-f2ec78678897"
        },
        "item": {
          "id": "aa6fa798-6dbb-4112-9b33-5d1395a6cb5c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6abcc796-4467-497b-8524-916df4454b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bd124b-5ad7-4d5c-968c-5593727194b9",
        "cursor": {
          "ref": "ef0d0b17-42b9-44a4-87b5-f83c39073073",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e054ae5b-ffc2-4a87-bc1b-13ad3a882e9d"
        },
        "item": {
          "id": "90bd124b-5ad7-4d5c-968c-5593727194b9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dbfff08f-802c-4776-bc9c-20f1a14f5a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdffb182-ebd2-49a1-8274-056353a9dfca",
        "cursor": {
          "ref": "46f342db-7a4a-4b6a-a967-5f5b94edfa50",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d3ea03a6-8192-43f0-9928-3a78127755a2"
        },
        "item": {
          "id": "fdffb182-ebd2-49a1-8274-056353a9dfca",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dd83e738-f82f-4647-978d-6553e52eb7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e0dd45-b0b6-43b0-b69c-7a6f320e7d45",
        "cursor": {
          "ref": "dc3b7e8d-ff81-4ff0-acb7-ff5069f404c3",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "049297ad-7c6e-44b9-af29-11ab1dffe55a"
        },
        "item": {
          "id": "a8e0dd45-b0b6-43b0-b69c-7a6f320e7d45",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6478f90e-ede4-44dd-b639-9f8d2a8312f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2e8ec1-4049-4dd9-8d3e-62ca68504fce",
        "cursor": {
          "ref": "4d059733-b175-4b51-b8fb-6f45e11b5ff7",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "308de02d-7e5c-4939-9c18-823056a1fe01"
        },
        "item": {
          "id": "4d2e8ec1-4049-4dd9-8d3e-62ca68504fce",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "aed43b5f-946e-437f-8265-ef5f29d2d075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039b0e6f-83df-4032-bdc4-6be00ae793ae",
        "cursor": {
          "ref": "0c331ba4-88e2-45d1-bb89-6cb37e596acc",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2184def9-9c33-4a1a-ab56-f1b4a8c077b2"
        },
        "item": {
          "id": "039b0e6f-83df-4032-bdc4-6be00ae793ae",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c93f05f2-a669-4e09-b190-df4f235efa31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624fb203-350f-479f-b226-0ea023eb8d78",
        "cursor": {
          "ref": "982c5998-a419-4568-96c1-95476e202b7a",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ca3f2d0e-8625-4159-9728-8bcaed8a8fa7"
        },
        "item": {
          "id": "624fb203-350f-479f-b226-0ea023eb8d78",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ae77dc3a-9c7b-4fda-9a9e-78f4accf0e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcef213-602c-4ed2-9988-502db43c5d2f",
        "cursor": {
          "ref": "7f68ba14-d939-4417-bbc0-63f328cb1144",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "862d4c7b-d711-47c1-99bb-e86274e9c61b"
        },
        "item": {
          "id": "4dcef213-602c-4ed2-9988-502db43c5d2f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0597cabe-4513-416e-9fab-aae600b0f22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff0f01a-1c2c-4957-a368-f96ab566d6c2",
        "cursor": {
          "ref": "d9beb012-919a-4ac0-9131-2ed9ae233803",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2284bb9d-c2e9-4342-85a2-1b16eb8c59b4"
        },
        "item": {
          "id": "7ff0f01a-1c2c-4957-a368-f96ab566d6c2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bb265596-a8b4-4a18-8266-c7ff62ecf054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c449ec3-3470-4ccb-ad09-06d12bb6fdaf",
        "cursor": {
          "ref": "7c40c936-505f-4f00-958d-208097155d60",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6fc8a0ca-dd21-4231-923d-f0af68227255"
        },
        "item": {
          "id": "1c449ec3-3470-4ccb-ad09-06d12bb6fdaf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "33faa67c-53d6-4e13-a22b-c1f59b4bd6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd19a054-4ba9-4c45-9356-ea873a74f498",
        "cursor": {
          "ref": "0a8b575e-c90d-4480-af66-0c88e616e09d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c84cc423-6acf-4fe0-8e0c-1e6fb9f36f4b"
        },
        "item": {
          "id": "fd19a054-4ba9-4c45-9356-ea873a74f498",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ceedf82d-c979-4e54-9d26-81070be30b6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c66e14-102c-4952-a47a-ec0d08845898",
        "cursor": {
          "ref": "4c87e766-0d2c-4145-b1c1-0beab2468c95",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cd5c55d5-3191-4012-88c9-80f920ee784c"
        },
        "item": {
          "id": "02c66e14-102c-4952-a47a-ec0d08845898",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5869a85e-d3d1-43ab-8622-05e611b44e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6c0ee7d0-e988-4896-a3d3-0769b289dce0",
        "cursor": {
          "ref": "ad0e800b-c834-452f-9312-6d48337207e8",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3e2c69a5-a82d-4bdb-9d54-139b7bdcba93"
        },
        "item": {
          "id": "6c0ee7d0-e988-4896-a3d3-0769b289dce0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8d968650-9ecb-4f12-842c-9ba7a1f3c362",
          "status": "Created",
          "code": 201,
          "responseTime": 8846,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a3e529-5a3d-4cd1-a9a6-c75cdb8358ef",
        "cursor": {
          "ref": "9493657a-5875-4111-8d2d-4575cdd78a79",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a9ad68fb-b81d-4fba-857e-0c76891429bc"
        },
        "item": {
          "id": "e3a3e529-5a3d-4cd1-a9a6-c75cdb8358ef",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "aa4f1209-9c38-4964-978e-37038083a84a",
          "status": "Created",
          "code": 201,
          "responseTime": 7914,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "def97ee9-4d2a-4999-9110-228eaaaa91d2",
        "cursor": {
          "ref": "19a88605-b48e-418a-878d-f5d0b394b8bb",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "436e8111-2f0b-443f-9e58-0e54ef74b911"
        },
        "item": {
          "id": "def97ee9-4d2a-4999-9110-228eaaaa91d2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3f33e826-5082-4102-9345-339cc59eb360",
          "status": "Created",
          "code": 201,
          "responseTime": 8436,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8788e87a-ae07-440b-ae8c-4b28149f231f",
        "cursor": {
          "ref": "ec42eaf2-639f-42ee-bc5a-b029ec847735",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6748b1c4-6998-4952-a3de-a9908f4a2975"
        },
        "item": {
          "id": "8788e87a-ae07-440b-ae8c-4b28149f231f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4da4beba-7ae7-4dda-b628-117ff6e8fef4",
          "status": "Created",
          "code": 201,
          "responseTime": 8108,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6428907-eb39-4498-a33d-22280c9ac357",
        "cursor": {
          "ref": "8b7e34b0-5262-42e0-9b08-e2ea1c3069aa",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "59dc5e25-d82e-4271-9d97-4830526bbc99"
        },
        "item": {
          "id": "d6428907-eb39-4498-a33d-22280c9ac357",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "975e0633-8c22-4eb5-882c-819f4763e4ea",
          "status": "Created",
          "code": 201,
          "responseTime": 8015,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4b8bb4-5063-43ec-b5ce-eb86d6dc4c09",
        "cursor": {
          "ref": "bf537603-e552-4dd9-91c4-d62f09a269a5",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f04a250f-3dc1-4cf4-a32e-7c175da87327"
        },
        "item": {
          "id": "2a4b8bb4-5063-43ec-b5ce-eb86d6dc4c09",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e50397fb-3174-454d-9b23-615826443a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6b0fca17-3d10-4d15-9ef9-fae2993f7750",
        "cursor": {
          "ref": "ca7095e2-4826-473b-9f69-2d687c37eb8f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "28d38b9c-855e-44e4-aecc-a703bc2cbc0c"
        },
        "item": {
          "id": "6b0fca17-3d10-4d15-9ef9-fae2993f7750",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "13e48250-174a-46ad-a064-b7dcc7719c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0561a48c-d0cb-45ed-b3ab-5390517da7e1",
        "cursor": {
          "ref": "37a1d3ac-69a6-4660-be76-57220be24d31",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "90304cd3-35ad-4cf4-9b75-2f7574409edb"
        },
        "item": {
          "id": "0561a48c-d0cb-45ed-b3ab-5390517da7e1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "547d78bb-3d20-4e6d-9f51-2e971546ef3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c598bbc-653d-4bc2-927b-5353aca7dbfc",
        "cursor": {
          "ref": "c186d93b-3f34-4c30-bfdd-7d60635beaa1",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3e372f90-12be-41dc-b849-c38e189a6959"
        },
        "item": {
          "id": "1c598bbc-653d-4bc2-927b-5353aca7dbfc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6e64c6ca-1b45-4ac8-96ed-3f7e7dd2602f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e14f47-f189-4325-a06a-45c802115b76",
        "cursor": {
          "ref": "a87b1afa-3b68-4629-a8e3-d693343ac5d3",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "aa47380a-355a-4494-93be-014fca0fc285"
        },
        "item": {
          "id": "93e14f47-f189-4325-a06a-45c802115b76",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ea00e524-2924-4c26-929e-4cbf990427a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08102bee-f00e-45f9-b3cf-a3c4bab36ede",
        "cursor": {
          "ref": "0c4b41c5-6ca3-4c97-870a-4b84f74917f4",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "811fbbff-10bf-44dc-8100-769b45160939"
        },
        "item": {
          "id": "08102bee-f00e-45f9-b3cf-a3c4bab36ede",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b7edb178-a8ff-4b2c-9399-d4f191042872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab99dac6-7098-4ec4-9adb-e58b0968d3d3",
        "cursor": {
          "ref": "68573fce-9b73-405e-a885-887bf603dd59",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "32725323-9fd3-48a9-8474-23e0bc4e0297"
        },
        "item": {
          "id": "ab99dac6-7098-4ec4-9adb-e58b0968d3d3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "190ba0f0-76f0-4269-8d51-fc64eb4f6509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c9dfc4-16d1-4a6e-b32e-1c2abc6eaa62",
        "cursor": {
          "ref": "24f069d3-cde6-4882-a104-baf557910ab0",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ea3f595f-1f25-496e-b9d6-1a7e223b778d"
        },
        "item": {
          "id": "30c9dfc4-16d1-4a6e-b32e-1c2abc6eaa62",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4468e942-73a7-4cfc-a008-76f50777e853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a15dd7-c9a6-4b05-8c92-8ef5a472c47a",
        "cursor": {
          "ref": "c2e118f0-0a68-4eec-b72f-526ca0aed966",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "47989034-388c-4cf8-bf37-9568ae8131a3"
        },
        "item": {
          "id": "17a15dd7-c9a6-4b05-8c92-8ef5a472c47a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "95866469-8a2e-4723-86d1-e1e6fc1eceab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae73a29-dc32-4658-886c-b45c5bb98fa0",
        "cursor": {
          "ref": "13bee82f-9f9a-487f-adf4-266ee63259f6",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f1a9299d-9eb8-4e23-b0c9-b41e78120d64"
        },
        "item": {
          "id": "2ae73a29-dc32-4658-886c-b45c5bb98fa0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f47930cb-1789-48c2-9a41-c639f95ff471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e870ee73-46d6-4ada-b236-61df2bfff101",
        "cursor": {
          "ref": "0ab50003-2d57-406a-9757-884ce127dc19",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "50f24bd4-164b-4ea3-a180-b1d700225415"
        },
        "item": {
          "id": "e870ee73-46d6-4ada-b236-61df2bfff101",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e6d07d2c-c3cc-4c6a-b1ff-2be02c77a750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659946f7-8a74-4a2c-8ce2-da1463a02c4f",
        "cursor": {
          "ref": "5a022c0b-94db-42b0-9238-9daa6b93d5ad",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b8732271-dfbf-454d-8200-1b0aa013f4ac"
        },
        "item": {
          "id": "659946f7-8a74-4a2c-8ce2-da1463a02c4f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b56a1a02-3732-4ea2-b7f7-7cdc8e7166aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba200f7-15e3-4ccd-9221-46fca6254288",
        "cursor": {
          "ref": "8ee56293-f91b-4c98-9705-38907a332dfb",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0f0f052b-f5d7-425c-a115-bb94439f6a63"
        },
        "item": {
          "id": "8ba200f7-15e3-4ccd-9221-46fca6254288",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5229d103-f1d2-45f2-b936-101e752b6c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22018bd-5922-45b1-aad0-86c4d4f5cb81",
        "cursor": {
          "ref": "0268110e-3c69-400a-ac98-e2731749d3c6",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fd921d3b-df04-42e0-85f7-a9b32488768b"
        },
        "item": {
          "id": "a22018bd-5922-45b1-aad0-86c4d4f5cb81",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6ae8a590-cb1a-4422-a8ee-2f6cb8c54014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daac4b37-ede0-460c-94ad-778fcd06b70c",
        "cursor": {
          "ref": "f3a0ae6f-0a33-4b90-a6b3-b74a9c190715",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6b2c1af1-0e86-4ddd-bf5f-e9297259ab94"
        },
        "item": {
          "id": "daac4b37-ede0-460c-94ad-778fcd06b70c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5991d918-ffb3-41cf-bc57-4f689138bce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa657a8-f21b-45df-9c5f-7c4f7b27c143",
        "cursor": {
          "ref": "0b563f3b-9066-4ac6-8def-ceffabe4836b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a102bc88-ff17-467d-a440-b4e0fc730ad7"
        },
        "item": {
          "id": "daa657a8-f21b-45df-9c5f-7c4f7b27c143",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "88d5c7f2-4d7d-441d-aa66-971088c2af45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0f33da-9b00-4195-8698-5ef2394bc685",
        "cursor": {
          "ref": "d34d3948-1406-4217-891c-819272d63f11",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ab1b85dc-7d2f-41f6-8234-90c42b12064f"
        },
        "item": {
          "id": "1c0f33da-9b00-4195-8698-5ef2394bc685",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e839b22a-b27a-4f9b-9a09-6e730ccbf576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cde5b6d-ca0b-4d8b-8333-9745e2adbd84",
        "cursor": {
          "ref": "e6cfe50a-5dbf-427b-bd9e-57739f1a9dad",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3b2aedb3-7974-4d80-9c0c-824a86e80f57"
        },
        "item": {
          "id": "2cde5b6d-ca0b-4d8b-8333-9745e2adbd84",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2698e5b2-d1b0-428d-b79e-70561f2c8f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3284a1f4-52f2-40c3-91a7-9d3172033a3d",
        "cursor": {
          "ref": "d28f1fd9-b188-45c3-9c37-1e27ce0d8572",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "066b0bc2-9e87-4b96-b5ba-a5b670e9b783"
        },
        "item": {
          "id": "3284a1f4-52f2-40c3-91a7-9d3172033a3d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b7382f2d-8184-4612-8f51-0b06097b0b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612ce5fb-abe5-4774-9e9d-cb2730359ba5",
        "cursor": {
          "ref": "707f300e-e0c3-484c-ac25-9e5906a473e3",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "34433376-f841-4204-a2c3-1cdfc5feb145"
        },
        "item": {
          "id": "612ce5fb-abe5-4774-9e9d-cb2730359ba5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "650775e9-35ab-4055-b40b-aefa7230fbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7438928-935b-4ba3-b9e1-29986cd7ca1b",
        "cursor": {
          "ref": "462a952b-68c3-4b85-8ab4-0a5f43b19b83",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9a419c5d-660b-4d21-a6e4-b5dd84fe1857"
        },
        "item": {
          "id": "b7438928-935b-4ba3-b9e1-29986cd7ca1b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8953f4da-9393-428e-b260-2c85b7475ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5e1dc9-62d3-45b9-8940-05df97111f23",
        "cursor": {
          "ref": "0b498749-0d8c-4798-83a2-c8fd1d83e266",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "40fc21b8-aa2f-4c77-8c1f-e293bd76b9d0"
        },
        "item": {
          "id": "3c5e1dc9-62d3-45b9-8940-05df97111f23",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a35ea148-8eee-4392-b7ac-75b8911653db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d838de-bb1f-4660-a0ad-22e2cbb0b03e",
        "cursor": {
          "ref": "a3b1589e-db4c-4594-a3aa-c81a27e929f0",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6826c5e5-6d36-4e58-830c-4b2419a3de39"
        },
        "item": {
          "id": "e6d838de-bb1f-4660-a0ad-22e2cbb0b03e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3a8b4453-9ccf-46a3-8319-c7188caad503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f896e9-c9e2-482a-8023-760e585d7276",
        "cursor": {
          "ref": "ad771a7c-ea9d-4683-99a8-8a6bdaa4ee63",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4beefe5f-70af-4f6c-b841-58940d172016"
        },
        "item": {
          "id": "52f896e9-c9e2-482a-8023-760e585d7276",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f5dd9afd-1e6d-4a34-884a-50cbe264973a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bdc4c6-0986-4c3a-968f-80384cb50fc0",
        "cursor": {
          "ref": "1bc0b24c-1938-4510-9419-a4daf3390d4c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "67e2968f-b589-4243-bb8f-862f6835b95b"
        },
        "item": {
          "id": "08bdc4c6-0986-4c3a-968f-80384cb50fc0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "55e8328c-e2c3-46af-a569-f9bf1fd8f2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f01b443-14e1-4cbf-ba5a-8bc65c907797",
        "cursor": {
          "ref": "b01e63e9-0d89-4032-b551-cefbc73ff78e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9bf0d010-4ebc-43d1-86e5-d0dc848f77a0"
        },
        "item": {
          "id": "5f01b443-14e1-4cbf-ba5a-8bc65c907797",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e6ae1b24-2efa-4f5f-862f-4c5a58a97011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d71092-436d-4170-baf7-f0f88615945e",
        "cursor": {
          "ref": "d9ca6551-0209-406c-b1e3-fc133e253c4d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1333ff4d-4a86-4934-bb78-4c52bcdb4aee"
        },
        "item": {
          "id": "79d71092-436d-4170-baf7-f0f88615945e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "58f0a897-5dff-4247-b944-a86d4945a6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d95eabf-b942-49be-ad6a-91b4f8eea29c",
        "cursor": {
          "ref": "14385126-8444-49fd-a8e4-a678a1865d64",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8848e405-cdf4-4e56-a83e-b592cc0979b6"
        },
        "item": {
          "id": "9d95eabf-b942-49be-ad6a-91b4f8eea29c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e88d16f0-5dc9-43d4-a5e8-83e41667666f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80045f6f-00a3-4e50-8af9-4c82280250bc",
        "cursor": {
          "ref": "e28ec82c-3dca-450c-bde4-1e208ad078b6",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6539ba75-551a-4cb2-9613-1fd6af6316d1"
        },
        "item": {
          "id": "80045f6f-00a3-4e50-8af9-4c82280250bc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "99953add-a305-499e-9bbf-8cc6dd9fe55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c57b96f-27b2-463b-a583-2248a90c7384",
        "cursor": {
          "ref": "69b555e8-8f38-4c56-8917-9ad51023c256",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "96f5af3e-8495-45a7-881d-6c00718c8aa6"
        },
        "item": {
          "id": "5c57b96f-27b2-463b-a583-2248a90c7384",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6c037d78-f967-4c16-ae91-ba311f5c82a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdeee2a4-b179-4252-87f4-7f65ad3aaf26",
        "cursor": {
          "ref": "8b9d4ff2-9c90-42f0-b505-4f43cb2e3027",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d184f39e-1ed9-4943-af24-70db39cbb9cb"
        },
        "item": {
          "id": "cdeee2a4-b179-4252-87f4-7f65ad3aaf26",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5725b295-715e-4c47-88b8-36a13c2a9fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1bedf2-f7a2-4fd4-ac67-7c449bc2e064",
        "cursor": {
          "ref": "1a19c2e5-2620-41b6-adef-34a6e0df04a1",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9f1d20b7-22bb-4f3e-ae06-23e51f71b973"
        },
        "item": {
          "id": "6c1bedf2-f7a2-4fd4-ac67-7c449bc2e064",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0627f201-939e-4714-8886-80ab06d6cb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6eea64-68eb-49c2-a541-6c1f48c2e934",
        "cursor": {
          "ref": "38ac6f57-e4c4-4df6-9131-7ac4e6e71b94",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e2c0bc52-b0bc-444b-af91-081f22fd5e2d"
        },
        "item": {
          "id": "4b6eea64-68eb-49c2-a541-6c1f48c2e934",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "62a9aeeb-52d5-4070-add3-5368fba35dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fba59e0-0c44-42b7-b4d6-4cb9e0d97a16",
        "cursor": {
          "ref": "aa3912b5-22c5-414c-b55b-73a87e30ec57",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d1741640-40f1-482c-8bea-03f4fa33bbd0"
        },
        "item": {
          "id": "6fba59e0-0c44-42b7-b4d6-4cb9e0d97a16",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "93e43d0a-1d37-46df-94a1-31e334d5bbfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517fa185-5812-4f66-b9da-effed288ca1d",
        "cursor": {
          "ref": "0d7897e9-c50a-4638-84cd-9165bbffedfb",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4a1c2a58-de4b-4d7d-ac2d-3dce71f1c8d4"
        },
        "item": {
          "id": "517fa185-5812-4f66-b9da-effed288ca1d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bba2ae28-b43b-493c-8736-2484ed263cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d52a351-0479-4454-bd6a-58d653f2e5ed",
        "cursor": {
          "ref": "bbf3ded7-d946-493c-9089-0f0eec8a25ce",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2d67b71d-1945-4335-b482-f3d8df7271ec"
        },
        "item": {
          "id": "4d52a351-0479-4454-bd6a-58d653f2e5ed",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6ae749d8-4dd2-4fbf-a36d-520f8169ccf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae361684-ec48-49ff-8d26-e422722fdb89",
        "cursor": {
          "ref": "b419a78e-0a58-4f5a-91eb-617126e44633",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "19e682e6-940e-4640-a0ec-42e639c46faf"
        },
        "item": {
          "id": "ae361684-ec48-49ff-8d26-e422722fdb89",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "53e0c111-ba73-4a07-a1e9-69fd1f03d12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794d7c68-88bc-47bc-82fe-111a621915cb",
        "cursor": {
          "ref": "2e26788a-a6ac-4880-9e84-ff2e712cf003",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "70add4ab-8932-4720-8c1a-b537ac1bec1c"
        },
        "item": {
          "id": "794d7c68-88bc-47bc-82fe-111a621915cb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "94ee4d84-70b3-4082-8671-66aa2ed1ce68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19be615a-2c03-4ab5-b976-f1969bbe2e10",
        "cursor": {
          "ref": "25e6eee9-cde0-4b8a-ab1c-41695a98f3e5",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3de9ada4-23c5-49b5-b2ad-9095f3588dea"
        },
        "item": {
          "id": "19be615a-2c03-4ab5-b976-f1969bbe2e10",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6ce182de-f600-4571-8023-3027abc7d598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b343427b-9ae2-406f-861c-e5134e052ee8",
        "cursor": {
          "ref": "915bb4c6-cb56-4384-92f9-9e39aba77fe7",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8b3cc63b-1a54-499e-a3f4-ab15595a0f33"
        },
        "item": {
          "id": "b343427b-9ae2-406f-861c-e5134e052ee8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3f1f333b-6608-4aee-92b3-9f004589b141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3a1be9-595a-4476-a67f-9455afbeb8cd",
        "cursor": {
          "ref": "ce00e1d3-2ec0-4f2c-bf2a-5c3e16987b8b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9801ea56-270d-4512-8b6d-a280356f81ca"
        },
        "item": {
          "id": "af3a1be9-595a-4476-a67f-9455afbeb8cd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "223c02f2-dd05-4504-bc23-af6771501d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb667be-06d8-405f-b8f4-31478d53e54b",
        "cursor": {
          "ref": "3aecbea1-0636-4cbe-aafc-618022c6e899",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bd8c55e0-8f80-4e1c-be18-38cc004cee7c"
        },
        "item": {
          "id": "ecb667be-06d8-405f-b8f4-31478d53e54b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ac4b04e4-966b-42d8-895d-f0051764c3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b32ece-6e5e-4a33-90fb-e9ef8b39fd34",
        "cursor": {
          "ref": "19f895de-f781-4dcc-bbef-d74821d45e0b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3a8a0834-7572-4adf-822b-d7e1bf7ccb9d"
        },
        "item": {
          "id": "17b32ece-6e5e-4a33-90fb-e9ef8b39fd34",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bfe54f0c-22f7-4427-8e3d-e0b92e41a45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacbee80-9492-4581-8597-8ba985412973",
        "cursor": {
          "ref": "913a5bd2-9c68-4a56-be88-0c8d4ab8031a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5c811fe2-4a82-46c6-8d02-32b4b28f20d0"
        },
        "item": {
          "id": "aacbee80-9492-4581-8597-8ba985412973",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "61f1f673-8038-4131-81b3-6b1233562000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfb40e6-91a3-403b-8efe-01fb2faa8588",
        "cursor": {
          "ref": "ca5d06d8-2322-4f16-8172-38271290857b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b471e605-0241-414c-8c63-b3c069313f37"
        },
        "item": {
          "id": "6bfb40e6-91a3-403b-8efe-01fb2faa8588",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8cd55d5b-9257-40e8-884d-bb7293ad15e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b15b45a-fbc9-405e-85d4-a4dedffd8dac",
        "cursor": {
          "ref": "8a958399-bb3d-4cc5-803e-0e10faf24f55",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7e446ec6-4ca8-46a5-8c60-722b93855566"
        },
        "item": {
          "id": "4b15b45a-fbc9-405e-85d4-a4dedffd8dac",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6cbc42df-40df-485d-af2f-2a026a14d6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1086,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858580a0-7300-4a67-8391-d7462a9e4d34",
        "cursor": {
          "ref": "1f337f88-6877-4a72-8a54-663844a63a01",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "34ebba24-efa3-425a-b678-2fe2708dfd27"
        },
        "item": {
          "id": "858580a0-7300-4a67-8391-d7462a9e4d34",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d0604268-b91c-4d75-9fb6-a1e99c1a1412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc819b1a-7399-4799-ad31-a4f6a4351787",
        "cursor": {
          "ref": "dc192a97-4542-4725-940b-be25064a3564",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "110bb30a-8cc1-4cbe-b063-92822d66d5dc"
        },
        "item": {
          "id": "cc819b1a-7399-4799-ad31-a4f6a4351787",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1ae18f05-ce62-4888-a963-8220bc2b6b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841997bc-198a-469c-b186-9a36b0faed5e",
        "cursor": {
          "ref": "23beeabf-7946-4837-9ad6-9467c331ec24",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ef52b929-dd04-450b-b745-6488558b5118"
        },
        "item": {
          "id": "841997bc-198a-469c-b186-9a36b0faed5e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7e780eaa-b72b-4315-a105-96e3ba9fcb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e7be5e-f7c9-419c-b9dd-a88d3bfe682c",
        "cursor": {
          "ref": "6a0aa472-2914-48d7-9510-f86ae8c16e9a",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "39c49907-79dc-4322-98a3-b852403eda90"
        },
        "item": {
          "id": "29e7be5e-f7c9-419c-b9dd-a88d3bfe682c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4de38040-fa59-4c31-9b27-033d11e5f5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745875ac-b4b4-4f2b-a4b6-79a0e5d45494",
        "cursor": {
          "ref": "947acdb8-91a4-4492-b664-4c633639fd4b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "12550c83-fcfb-4f2a-a6d9-73a8d1829fda"
        },
        "item": {
          "id": "745875ac-b4b4-4f2b-a4b6-79a0e5d45494",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6e08aefb-3007-41b7-8db9-9fd6ce8da4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138faadf-cec9-47bc-84a6-24d421aa881b",
        "cursor": {
          "ref": "d92e062d-76c4-411f-92d7-d82991ac39d2",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b53f5af1-ef66-405e-9654-30daeff57809"
        },
        "item": {
          "id": "138faadf-cec9-47bc-84a6-24d421aa881b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9a9a4d96-a816-40a2-a152-f7751c49bc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adfe925-6d1d-4c87-98f1-4a2590c8f100",
        "cursor": {
          "ref": "58003e18-2c58-4d02-9fa8-3d2d147b95de",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c1b3844a-8b74-413d-ac97-9ef76546e013"
        },
        "item": {
          "id": "7adfe925-6d1d-4c87-98f1-4a2590c8f100",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "85079913-756a-4056-8677-a013d360dca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bbdf99-3b4f-4741-92b1-fe645bcb10f3",
        "cursor": {
          "ref": "8091b7b6-a3f6-4b85-ab68-dcd9dd1106a6",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "85d2e800-87c0-4d62-8f93-a9d6e247d5c0"
        },
        "item": {
          "id": "60bbdf99-3b4f-4741-92b1-fe645bcb10f3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d91d85a3-b832-401a-aa8e-fc228b7ad215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b1187b-7bc1-411a-a42c-24ca9b9504a4",
        "cursor": {
          "ref": "4b03e9c0-073e-4f57-a243-df0fd48510eb",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "192ea38b-59a2-46af-93a0-0711e184cd14"
        },
        "item": {
          "id": "27b1187b-7bc1-411a-a42c-24ca9b9504a4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fe30fbb9-09bc-4376-bd79-c485cdee1269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4849a8bc-7325-49d6-994e-eef28fd85c4b",
        "cursor": {
          "ref": "11d58c2c-5f7e-45a2-a2f5-d755f4a00daf",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fca718aa-cc83-41b8-af0d-dd9bafdc4e68"
        },
        "item": {
          "id": "4849a8bc-7325-49d6-994e-eef28fd85c4b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e82850d5-cad6-4771-bcf3-6b70293e7d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d1a1fc-cadf-4530-9c50-a06bb9438983",
        "cursor": {
          "ref": "2f486ad5-ff51-4156-8eca-d9c62c679294",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6933664c-39e3-45e9-869e-f4aacc7b5017"
        },
        "item": {
          "id": "e0d1a1fc-cadf-4530-9c50-a06bb9438983",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "672022e7-5152-4be0-a7a3-0626291c5372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c3d53e-d58e-4496-90d1-cd8e13e0a274",
        "cursor": {
          "ref": "2b8880ef-217b-44c3-96dc-08b208b29e8b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9f0f8d92-d2f7-4fb5-b1d5-a089b78fd1e0"
        },
        "item": {
          "id": "49c3d53e-d58e-4496-90d1-cd8e13e0a274",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a3a6a44b-b49e-49ed-beb1-8c603333525a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9eff5f-f475-4382-bb18-dd43269bc4d5",
        "cursor": {
          "ref": "21df5185-c7ee-49be-91ad-04d551371556",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f1f8ff8b-f03b-4aa9-9e88-5dee0b3859cd"
        },
        "item": {
          "id": "fd9eff5f-f475-4382-bb18-dd43269bc4d5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6ef51b26-15cd-4e2f-b5c6-3c59155096a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cc7322-7012-45b2-83c7-cc8d49d6f186",
        "cursor": {
          "ref": "1e8f8f32-f43d-460e-9176-be0bb7aae9b6",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "47dea744-0ff8-49d7-9b0c-89422d2a01a1"
        },
        "item": {
          "id": "e4cc7322-7012-45b2-83c7-cc8d49d6f186",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ed00c336-e889-456a-b15b-5ca6a23ac31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb8ed0b-54bd-416a-8d6f-97f8212e2714",
        "cursor": {
          "ref": "196c9ab4-b4e2-4bbd-b415-725bdc701f05",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "237b49d1-38fa-4605-b3da-59907ca880f1"
        },
        "item": {
          "id": "dbb8ed0b-54bd-416a-8d6f-97f8212e2714",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d72f6633-9660-4419-ae16-06595e1b3d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ab113f-c4ae-49a8-af4f-b00d70092862",
        "cursor": {
          "ref": "fb9ffc9f-4cc6-484f-9264-30159a7536ff",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a3aa1bb6-522a-48eb-969f-e9c1ff838499"
        },
        "item": {
          "id": "49ab113f-c4ae-49a8-af4f-b00d70092862",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "664a3047-5e5d-4e78-adc6-6c9d78d5b1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ee4d14-2b52-49da-b3ef-1c93480e940a",
        "cursor": {
          "ref": "3d581389-7f47-4a96-80e7-cf876bd78a71",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "da1f2e78-114d-45fb-8ab2-c55247b1a2c9"
        },
        "item": {
          "id": "09ee4d14-2b52-49da-b3ef-1c93480e940a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "77543861-3eac-4f40-9e4f-20d7bba639e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d68f3a6-fad1-4636-b5b9-f7c662691ac8",
        "cursor": {
          "ref": "2f10ab94-64ed-4c94-9cf7-2283466aa319",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a5a1be9c-6efa-45da-9723-36d11d3f0ece"
        },
        "item": {
          "id": "9d68f3a6-fad1-4636-b5b9-f7c662691ac8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "605e2405-f7a2-4d75-ade0-1fd014aa1224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ac8ec5-754f-4f8d-86cb-cf8932b752c3",
        "cursor": {
          "ref": "33710998-ad6e-484f-96e4-77462e53b512",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8132d916-32e9-4e4e-85c0-c615e7b8c11a"
        },
        "item": {
          "id": "b9ac8ec5-754f-4f8d-86cb-cf8932b752c3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3b117388-e5f8-4b07-88d8-0632dcc637e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78efa443-555c-4952-acce-80ce1e520da9",
        "cursor": {
          "ref": "713d95ed-3820-4e32-b58f-d798bc8e90cf",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2a3ca6c6-ea9f-4368-8c80-b2f009a982e0"
        },
        "item": {
          "id": "78efa443-555c-4952-acce-80ce1e520da9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "91686d2d-15de-47ac-9fe6-a87aefa1b34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a134e92f-665c-4f97-8279-20f2c8caf4be",
        "cursor": {
          "ref": "d175b776-8333-4fc4-baaf-e400a1f7791f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "248fc05c-61af-4279-b976-3f2042704516"
        },
        "item": {
          "id": "a134e92f-665c-4f97-8279-20f2c8caf4be",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "26a14bde-efc9-4329-88d3-412ce9ac1444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eace2d44-c79c-4439-a780-8ed135ee1ed6",
        "cursor": {
          "ref": "2d676346-47b1-4c2d-b195-50c9d96ac325",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f378770f-56a9-4cc9-a8c7-d2169a56c56c"
        },
        "item": {
          "id": "eace2d44-c79c-4439-a780-8ed135ee1ed6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9c9d8afd-796b-4e46-b94f-395ca82ff3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb782c1e-4f14-4cc4-a479-d847241ae196",
        "cursor": {
          "ref": "ec13b0e5-6017-4c56-91b1-5fe33a6243b4",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b6d571d9-3f8c-4a4a-b8c4-0dc80da184ed"
        },
        "item": {
          "id": "eb782c1e-4f14-4cc4-a479-d847241ae196",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "83b2e75a-f0bb-4ae3-8e0e-1b8c0f3773b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08a7906-ca68-4499-9eab-ae82b9c0ef9d",
        "cursor": {
          "ref": "4367fb80-47e5-43bd-88c1-414971c3a9ca",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c875bbe9-8f61-4eae-8633-065aa236ff9c"
        },
        "item": {
          "id": "a08a7906-ca68-4499-9eab-ae82b9c0ef9d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ece6223e-f53b-4d83-8dbe-c48bb6f340a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1df8ec7-b862-435a-bbb5-89f9a7df662a",
        "cursor": {
          "ref": "1e7b1878-b4ca-4463-a8cc-8ad16d856973",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "32b4fb11-d150-414d-a99c-3a7ca716e6e2"
        },
        "item": {
          "id": "b1df8ec7-b862-435a-bbb5-89f9a7df662a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d19a4583-f95d-4fb9-889c-caccc040ba6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb49816-a1b2-402c-8382-143e24b8e513",
        "cursor": {
          "ref": "9b36130c-b3c6-482d-bf3a-f726bbf165ce",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3afc69d3-77a8-4378-a7a6-4f0002b510e8"
        },
        "item": {
          "id": "5bb49816-a1b2-402c-8382-143e24b8e513",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "35fb9787-af8d-48ff-a61c-38e4a548125c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 423,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53ef7dd-7917-4da8-8d2e-86a4af82b0d8",
        "cursor": {
          "ref": "7068d9f6-da50-46a4-b8f6-c6c45f59815d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fcb9b2e0-7a3d-4fc7-b402-e29ff22ff910"
        },
        "item": {
          "id": "c53ef7dd-7917-4da8-8d2e-86a4af82b0d8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dffa4b2c-235e-4688-975a-99bc2f5842a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22929f31-fbd1-4d7a-bb19-18a1efe1db42",
        "cursor": {
          "ref": "f2d69f97-fcea-49a4-9570-1b119d06fbc7",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f1200412-01b9-4268-b116-f9d36e60d3fd"
        },
        "item": {
          "id": "22929f31-fbd1-4d7a-bb19-18a1efe1db42",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0ceb0709-7f2a-48ba-9bd1-0288edfb7638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917d9f13-577e-4f4a-a699-cd2a6f29d970",
        "cursor": {
          "ref": "5b94b97a-907d-425b-8f49-398115d23ae1",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "89fae158-a765-46ba-b324-2fbae2fefbee"
        },
        "item": {
          "id": "917d9f13-577e-4f4a-a699-cd2a6f29d970",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "22794fc5-88ee-4f94-a57f-e7f7219c07b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7826ddcb-dc27-4a47-ae09-c07e3bda7fb3",
        "cursor": {
          "ref": "3cc70009-d1c6-41c7-b175-4f277af35f69",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "96e43313-805d-42b2-b545-6a1862e07539"
        },
        "item": {
          "id": "7826ddcb-dc27-4a47-ae09-c07e3bda7fb3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7c26de66-dba6-4851-b5e8-1c58d31aebc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4a1c0a-6ade-4bd4-b45c-95e78613915e",
        "cursor": {
          "ref": "6c91fb9d-2c6e-4ee0-bd5e-0f6b00d6a26a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e5e991b1-effd-4f01-980a-4712d3567e02"
        },
        "item": {
          "id": "6f4a1c0a-6ade-4bd4-b45c-95e78613915e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "125c641b-d110-4201-b7db-076b8600cea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed8e470-a398-4260-a47c-facc29f12bd8",
        "cursor": {
          "ref": "e4ff030f-06f0-4eac-b2a4-f8854dfe42e4",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7a26cbea-93b6-437f-9411-6fc62f0756af"
        },
        "item": {
          "id": "eed8e470-a398-4260-a47c-facc29f12bd8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9ab5ceea-e169-4b96-af56-7d2b14f33322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad23649-ccf4-459e-91d1-2e986323e6c6",
        "cursor": {
          "ref": "322ad37d-0403-4235-b8b7-c8da32679ef0",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5bd19fd4-893c-4f99-8c59-0d60d3b32f53"
        },
        "item": {
          "id": "cad23649-ccf4-459e-91d1-2e986323e6c6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "50da8a97-fcd6-44e5-9091-a52139e1c1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1bfeaf-a425-4e7b-b9df-c8a8cb530225",
        "cursor": {
          "ref": "c36a0f98-37dd-4ae3-a137-dc98ea1ba845",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8668a0c4-37d5-42a2-b6ff-576e911e29a2"
        },
        "item": {
          "id": "da1bfeaf-a425-4e7b-b9df-c8a8cb530225",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "96045ca5-eafb-4efe-98ec-647382a73e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaa9eeb-3342-4e80-b438-62653f475578",
        "cursor": {
          "ref": "d5b4e045-c8ed-4975-bd73-cdfc3b32b7d8",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d78ff67b-4b58-46b0-8042-7210e1cf56ca"
        },
        "item": {
          "id": "fcaa9eeb-3342-4e80-b438-62653f475578",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "30d967bb-c3c1-4a91-9a3f-24b0b4bb63e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bc70d1-bca0-42d7-9553-de985b801350",
        "cursor": {
          "ref": "525d1b2c-8551-409b-b067-afc190b49b6f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b3943f83-d09b-47fe-9763-a9cd395266df"
        },
        "item": {
          "id": "08bc70d1-bca0-42d7-9553-de985b801350",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "47c17ec6-88db-44b3-bb91-d9989b320f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95782388-a410-4424-9fab-221beb85f370",
        "cursor": {
          "ref": "0f99b3f7-5604-4b08-9c9b-16e135f286d7",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9754b21f-6737-4916-846a-f634ef49e5bc"
        },
        "item": {
          "id": "95782388-a410-4424-9fab-221beb85f370",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c8ecc717-7722-4ae7-8eab-7a23fa8e6c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715dbab4-bc96-43a2-908a-1a0abb30808e",
        "cursor": {
          "ref": "e2fea70e-9187-4754-971e-d604c182d571",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b8e05205-e98b-44a3-9f2d-e7126cd57f59"
        },
        "item": {
          "id": "715dbab4-bc96-43a2-908a-1a0abb30808e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9b4e94fc-39ac-451e-a2d0-80947c21d102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08720773-9357-4896-99e8-824d43759ab4",
        "cursor": {
          "ref": "5bbcc019-dc87-4523-882f-69f45b7c9731",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6e1284fd-9089-4879-8f92-310a6d3a44b3"
        },
        "item": {
          "id": "08720773-9357-4896-99e8-824d43759ab4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "adf20ac4-9537-4a66-a21d-171b7fba807d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb37acba-24ac-4d44-9876-5a2792aa2c38",
        "cursor": {
          "ref": "40113079-e2c4-4600-b946-6e6aea1f189e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2dc4111b-a57b-47d6-a1b6-3abc095dfdb5"
        },
        "item": {
          "id": "fb37acba-24ac-4d44-9876-5a2792aa2c38",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "672438ed-0cb3-4023-af4d-d6b771252b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff4cc1d-5d02-4bcb-81ef-e5b2ebf7da15",
        "cursor": {
          "ref": "8e8bad4c-56c1-422e-8f8c-4668e73d6f84",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "575c26ae-31fe-4277-8fe3-ae17720d45e9"
        },
        "item": {
          "id": "bff4cc1d-5d02-4bcb-81ef-e5b2ebf7da15",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e8b45f98-f4f0-4e75-bbbe-99fe0b001767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca768bc-ed50-4924-b04a-4411d22d26d5",
        "cursor": {
          "ref": "d2d05f06-cadc-45bb-a483-bfbb49d99dde",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "050e83a2-2a60-4542-bf80-9f72a9392ae0"
        },
        "item": {
          "id": "0ca768bc-ed50-4924-b04a-4411d22d26d5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "943acd5c-c89b-4ff4-aa4e-066cb877b14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c1fb55-bb26-45f3-8016-e4fa7841a7a4",
        "cursor": {
          "ref": "33d712c3-5798-4572-907f-4cf851bebf68",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "28dc1b71-edb9-445b-8db7-406216adb250"
        },
        "item": {
          "id": "81c1fb55-bb26-45f3-8016-e4fa7841a7a4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "962d493c-52c9-4c8c-bddf-1060fda958c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328311f8-4d78-4283-8491-d1f4b9eb9fe6",
        "cursor": {
          "ref": "9f283334-3b21-4336-9dcc-50687d2b303b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "89f9cd64-89e4-4909-8007-e344c4cc7817"
        },
        "item": {
          "id": "328311f8-4d78-4283-8491-d1f4b9eb9fe6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b686a3cb-49b6-4ff0-a2be-01d32095f752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a701d45a-7c00-468e-af9a-0488b93672e1",
        "cursor": {
          "ref": "4d2aef6e-df7e-4bce-bb90-2a928152c19b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d6dbac93-0113-49de-9b9e-dc2613ddf099"
        },
        "item": {
          "id": "a701d45a-7c00-468e-af9a-0488b93672e1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0098c78f-2fe6-46b2-b63b-17bc9c1231d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577636e5-2da7-4513-a1bc-5a83c7251569",
        "cursor": {
          "ref": "7db32bbc-1b20-4259-ae33-8df0937933cc",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "69121c13-69a5-4786-9955-1b75a513c15f"
        },
        "item": {
          "id": "577636e5-2da7-4513-a1bc-5a83c7251569",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "808a4efe-4923-4143-818c-caaf8f62b2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903e243c-20a1-48ff-92ab-59289aad00b4",
        "cursor": {
          "ref": "00707418-2d88-43fa-bbc4-4e6ee29edd39",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3859ec2e-76dc-434e-98f9-a2f812d2b56a"
        },
        "item": {
          "id": "903e243c-20a1-48ff-92ab-59289aad00b4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "efea02bd-898c-418f-8bfa-ec57fb70faba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae08ff39-1bc5-4fff-a7dc-426917b372f9",
        "cursor": {
          "ref": "de3c1cf7-72f3-4752-af47-f4e6ff8fd5f1",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0a95e643-69a7-4dfc-b4b1-d2a68da48fb0"
        },
        "item": {
          "id": "ae08ff39-1bc5-4fff-a7dc-426917b372f9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "16cca41f-dbe0-40ad-b3b3-9ca6a8517917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a573f018-e5a9-4e86-85ef-70f504285728",
        "cursor": {
          "ref": "08f18340-f056-4a0b-a57f-3fb3c0412de7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e4281429-f307-4868-957e-eb7a1577d3e0"
        },
        "item": {
          "id": "a573f018-e5a9-4e86-85ef-70f504285728",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4bf5a966-5f02-4ed9-8dcd-73292d74bf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a537c7c-7e85-4666-bf1b-be161f74e3db",
        "cursor": {
          "ref": "b556ef3a-cb23-4f72-9edf-b61fa5c81a65",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b00b61d0-15aa-4e67-bf92-98a68d46b0cc"
        },
        "item": {
          "id": "0a537c7c-7e85-4666-bf1b-be161f74e3db",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "55245c94-ba01-48c5-a0af-c84c64b8b77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6255a9c7-fb89-456d-819c-c2209d1e8446",
        "cursor": {
          "ref": "44dc7e81-9eae-438c-882f-5ef66e440243",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "649520a2-2a1b-41e5-b66d-05bcd812d045"
        },
        "item": {
          "id": "6255a9c7-fb89-456d-819c-c2209d1e8446",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ec329387-9912-4e9a-b539-3b88954f9d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ee698a-96d3-4a15-baf4-99c2b9a85d8d",
        "cursor": {
          "ref": "fdd2c184-d946-408b-ad12-5c92d307e7df",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c1613e51-97e9-46b3-926c-670af4a3640b"
        },
        "item": {
          "id": "39ee698a-96d3-4a15-baf4-99c2b9a85d8d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "71c7c7bb-b5d0-4655-9e51-064f46759c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e4ed59-74ef-40dc-afd7-0b8ca47fdf41",
        "cursor": {
          "ref": "d02adfde-3b7c-45c1-90b1-ecf43d42088b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bdf5bc35-d6a9-4090-880b-18090a6b2025"
        },
        "item": {
          "id": "62e4ed59-74ef-40dc-afd7-0b8ca47fdf41",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2f71260d-489f-4552-b4fe-f89d06957f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed693aa-f8d4-4d8b-a275-ef0a1b0790cb",
        "cursor": {
          "ref": "705508a4-c6ec-44ba-aa12-36e2361691a8",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e6d0909e-2d3d-4fab-8304-7c01d3f288db"
        },
        "item": {
          "id": "2ed693aa-f8d4-4d8b-a275-ef0a1b0790cb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "eebf95f7-5ed2-4578-a0b8-2680c2841e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720713b9-daf8-40d1-9c68-bdf3e2ae2438",
        "cursor": {
          "ref": "3d4fc036-226a-4b31-a84e-6cbc255b8ce1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2481cc26-8f86-4455-b5c3-e12cf323b225"
        },
        "item": {
          "id": "720713b9-daf8-40d1-9c68-bdf3e2ae2438",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "eb8b378d-76ff-4839-b56d-5a8bb2db19d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111aea41-d5b4-4d9a-8780-d1f2772505b3",
        "cursor": {
          "ref": "1d7c64ee-dd8d-4855-a2c9-c7d72debf26b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5ea4de3a-f83d-437f-a652-2d09362fa078"
        },
        "item": {
          "id": "111aea41-d5b4-4d9a-8780-d1f2772505b3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "38e590ff-da6a-46ed-862b-3e1b36fc6b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d396ed09-f3a4-4133-b0cb-527b37581a17",
        "cursor": {
          "ref": "30724303-9341-4e4c-8ad1-05b1da2046b8",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "18e02a23-4b1c-48f3-8c8e-f3df04a464bf"
        },
        "item": {
          "id": "d396ed09-f3a4-4133-b0cb-527b37581a17",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "16be779b-6702-45bd-9ba4-3d5b253877ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424b1668-845e-4b1b-ae12-890e0abd5b41",
        "cursor": {
          "ref": "01094bc8-58c6-437f-b3ce-2218c15b01b8",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4d3f8656-8e50-478e-a285-0f2afed54ae0"
        },
        "item": {
          "id": "424b1668-845e-4b1b-ae12-890e0abd5b41",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "218beed5-da1b-4b3a-999a-d2ebedc4a9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf498a48-3fcd-48a4-b44c-fda40692efcd",
        "cursor": {
          "ref": "763ced27-6a63-4b12-801c-dcd392ea4ba9",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "98a02cea-4f6a-49cb-9ef5-c63cacde19db"
        },
        "item": {
          "id": "bf498a48-3fcd-48a4-b44c-fda40692efcd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e92cd4e4-4413-41b2-b63d-557bcc762a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6404274-34d8-41be-905c-ce23ae166cbb",
        "cursor": {
          "ref": "d02617f0-3359-4d8e-bc73-1d70752bcde3",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c706731b-ff47-4f54-b13d-ba4f7653f32e"
        },
        "item": {
          "id": "e6404274-34d8-41be-905c-ce23ae166cbb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dc122116-fb9d-4161-9a1f-8aff5825bbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94452cc9-314a-4505-a726-23c50b63a09e",
        "cursor": {
          "ref": "01963d24-92f9-4f08-bc46-51480a8e563f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "92daace5-e167-4c99-b655-e67896d63a02"
        },
        "item": {
          "id": "94452cc9-314a-4505-a726-23c50b63a09e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bfad61eb-0fb6-42fd-a8c2-fd59865652e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f46ad58-d4cd-4a58-9115-484bf8688c8d",
        "cursor": {
          "ref": "25c15cd2-79cb-47cc-9874-e8ba6f49d24c",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "07e0ee10-1c93-4157-a27e-c1887d72217f"
        },
        "item": {
          "id": "7f46ad58-d4cd-4a58-9115-484bf8688c8d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "df856f36-ceff-4f73-8715-184f4a5211cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed10ac54-27f6-4f0e-9c53-f2370b948c65",
        "cursor": {
          "ref": "7589289c-0792-4612-8e08-410d9985ef7a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f0265a5a-4ff0-4b8a-819f-a6cb9b8bee8d"
        },
        "item": {
          "id": "ed10ac54-27f6-4f0e-9c53-f2370b948c65",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7e37b67a-eaf7-4464-a569-8777838216d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29f9546-6e01-4ac4-bae8-8083155ef52b",
        "cursor": {
          "ref": "8fb54646-bdc9-42ac-b458-68c3da4938e9",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "10abb3d8-e617-4157-a940-5b2f3d4916f7"
        },
        "item": {
          "id": "c29f9546-6e01-4ac4-bae8-8083155ef52b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "edf9deb4-bd2d-4e94-b14d-cf6b1a67f827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c2d320-e4b1-48ee-a96b-d2887f364ddb",
        "cursor": {
          "ref": "80dd4334-abf9-4ddc-866c-00333d0aabb5",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "11c6c7c0-4af0-4d57-93b3-05b9ba9ee525"
        },
        "item": {
          "id": "16c2d320-e4b1-48ee-a96b-d2887f364ddb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aa0ec193-32d0-4772-a2d6-ef5e8188a934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190c3ab1-d485-40c7-a6a1-36227b88b57f",
        "cursor": {
          "ref": "8fe1b392-f0f9-4d0d-96b0-092071fdae29",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5fdf6618-d263-4452-85aa-169a3bcc67b8"
        },
        "item": {
          "id": "190c3ab1-d485-40c7-a6a1-36227b88b57f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cabcdd11-b879-448e-ae36-9bc3012d5c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a957354-35bb-4a6d-accb-6ff82544c101",
        "cursor": {
          "ref": "43c21590-f68b-4049-9090-dcb253fe3884",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "66d6a919-3c74-4b2d-a53b-7077c5e5f66a"
        },
        "item": {
          "id": "8a957354-35bb-4a6d-accb-6ff82544c101",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7e4e9c0f-fbb5-4331-be87-8df1807fc88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28edec33-18c8-48fa-a12a-25ab52fe6b54",
        "cursor": {
          "ref": "5bdaec6e-6b09-4f2e-93ee-3e4d6bd42e1c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4c89e421-ccfd-4119-a46f-6d7046ef24c6"
        },
        "item": {
          "id": "28edec33-18c8-48fa-a12a-25ab52fe6b54",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9b3bbfcf-e27c-47d4-90f8-04f632323f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e955c5-fb3a-4598-ad41-e57b9a07eef0",
        "cursor": {
          "ref": "05085748-b156-44c8-ad62-944ec63dcd56",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c1da2b18-9995-46f1-9520-849c321f7068"
        },
        "item": {
          "id": "64e955c5-fb3a-4598-ad41-e57b9a07eef0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4becb1cd-9dea-4378-8d24-851f00bb92d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b71385-b32f-4a4d-b9e9-a62b90104047",
        "cursor": {
          "ref": "c8dcc0c2-86a7-4abf-a9a0-eaf8cc520d41",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9474382b-ac92-4a50-9a70-8b067d5b892b"
        },
        "item": {
          "id": "54b71385-b32f-4a4d-b9e9-a62b90104047",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "47cb9588-305c-44be-aa75-39c38700fd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d0e83a-5207-442c-a9b2-a37f72f533c1",
        "cursor": {
          "ref": "a2abc6cf-7b48-4486-af4a-d685168341ae",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a4b374f7-dd8f-4120-9ed2-026957a9a213"
        },
        "item": {
          "id": "38d0e83a-5207-442c-a9b2-a37f72f533c1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c4272437-95e5-4af6-b447-5cdb092d3907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f18664-262b-4924-ab0b-f487121b084a",
        "cursor": {
          "ref": "3a2cc49d-ee0d-4841-be6b-dff5a389167f",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5e8c76b8-30b8-4630-a0a0-f3f85b158732"
        },
        "item": {
          "id": "46f18664-262b-4924-ab0b-f487121b084a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8933de8c-32ed-4fb4-8bd1-c35bd0bf95e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b742ca-9657-4368-90db-4cb541971207",
        "cursor": {
          "ref": "e711d128-8fbc-438d-9c0d-4b228a664901",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "78194136-05c4-4df0-940d-39f3b7e02e47"
        },
        "item": {
          "id": "73b742ca-9657-4368-90db-4cb541971207",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6823f15f-e208-4ad9-8cf6-3d2b18b16a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8275172-4f5f-4f16-a4e6-24b9e53ff838",
        "cursor": {
          "ref": "53cbe077-1120-448b-a8bf-4386e4cdf3ac",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1566d77e-476d-47d7-a397-29e75df4e0bf"
        },
        "item": {
          "id": "a8275172-4f5f-4f16-a4e6-24b9e53ff838",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1871e28a-fbca-45c9-b2fa-f5559ccb3852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae62d31-aacf-41d3-a29a-2c8e617bf024",
        "cursor": {
          "ref": "0775edbd-81c2-4871-9841-e85f6e2e8cfb",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8d7e0ddb-d1d7-43cb-b2a6-6f99253ae144"
        },
        "item": {
          "id": "5ae62d31-aacf-41d3-a29a-2c8e617bf024",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3a276e7a-7500-4972-8049-21634cab39b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48816de2-c367-4e89-a96c-ba119c41b29e",
        "cursor": {
          "ref": "85b82ccd-e477-46dc-a944-7dcdaaf92ec7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b7559c54-59dd-4241-bbef-8dc3d8bbbc40"
        },
        "item": {
          "id": "48816de2-c367-4e89-a96c-ba119c41b29e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "553dd3d2-e26a-4ca9-b99d-e673834b1f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccf0e93-8653-4f28-99e9-2746502e1a2f",
        "cursor": {
          "ref": "a626d38c-4eb4-4a7d-a8d6-efd28cb32136",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7d11f5f6-a8b0-4562-bd27-f1226be22df2"
        },
        "item": {
          "id": "fccf0e93-8653-4f28-99e9-2746502e1a2f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d99fab48-ddc1-4656-8ac4-cc6a80c38c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac91b5d-a4c2-4ce9-bf09-9e8871bc7cc1",
        "cursor": {
          "ref": "bef3943d-a99b-4bc8-8e64-b8b2ca53b744",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f186f724-acc5-4df2-b97d-aad1a8e22fe4"
        },
        "item": {
          "id": "3ac91b5d-a4c2-4ce9-bf09-9e8871bc7cc1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fc0cef85-e581-41b5-a037-c796c1b29286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228f6bf5-f27f-4a8e-971c-337d33643432",
        "cursor": {
          "ref": "95b402b0-83a1-4f9a-baa7-98cbef88b0c2",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "09a0108c-45ac-473d-9fa0-35866e5b3580"
        },
        "item": {
          "id": "228f6bf5-f27f-4a8e-971c-337d33643432",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8ca819a0-d952-43ca-9422-ddb72d060536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b7d480-01b8-4ea8-a867-29b1fe1180a2",
        "cursor": {
          "ref": "82187ac2-be50-4377-a382-fb43da60e0d1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "031a7510-aee7-4611-9ace-ff382c1c52cb"
        },
        "item": {
          "id": "35b7d480-01b8-4ea8-a867-29b1fe1180a2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "796bf9b9-5f49-416c-b4e8-6decb391a0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbb8dd5-1dd9-4bb1-8dbf-441f910e1255",
        "cursor": {
          "ref": "75d9acef-34a6-4f37-9238-17bdf31bca32",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bea896e7-1326-4ed5-b65b-8c9af838b2bd"
        },
        "item": {
          "id": "bbbb8dd5-1dd9-4bb1-8dbf-441f910e1255",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2c7c561e-e37c-40e5-956e-c16930110da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c9f786-6194-4ec7-a056-2736f87cbf01",
        "cursor": {
          "ref": "536ebf6a-2932-40ea-9f7f-001b3644aa6d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0280faeb-2a25-48a5-bee0-71fce16c391b"
        },
        "item": {
          "id": "f9c9f786-6194-4ec7-a056-2736f87cbf01",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d7890c3a-84e0-4aac-bdb7-32ba69362e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb752de-fa73-4da2-b578-13c06439c315",
        "cursor": {
          "ref": "364c1ce9-da93-4563-8439-b72ed8beb222",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b6fc7e55-b016-4df2-b0b1-8f3e9c4bcbdf"
        },
        "item": {
          "id": "fbb752de-fa73-4da2-b578-13c06439c315",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fea0cd69-5476-4a36-9f73-e913cbd530c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3d78a1-e31c-45a5-8614-d85cbbc160d9",
        "cursor": {
          "ref": "76f61096-20ad-4f22-9b1d-f242ae7410d2",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2f3e3087-35d3-4512-ae7a-60344104341e"
        },
        "item": {
          "id": "af3d78a1-e31c-45a5-8614-d85cbbc160d9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c82a22eb-e26b-455b-8b0d-15d43f1aaf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661bee54-5240-4ac4-94b7-7c7cce62525e",
        "cursor": {
          "ref": "0f8c7bf1-ecc8-4960-8044-a6eb27ec4256",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "09bf6759-ab66-40fa-b32e-42c14449fcc4"
        },
        "item": {
          "id": "661bee54-5240-4ac4-94b7-7c7cce62525e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ea01d7cd-7abf-4798-a524-f65c679192c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1a356d-ebd2-4b73-909d-b836f5c6304b",
        "cursor": {
          "ref": "7eb67cd7-5336-4662-9c44-e05f43a35bc2",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4e3d7d45-9297-4711-af47-25f51d6080b5"
        },
        "item": {
          "id": "3d1a356d-ebd2-4b73-909d-b836f5c6304b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "60751738-eed4-4283-aa2b-29f11fcc13e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c7d704-1eb6-45dd-b03b-8147117344e0",
        "cursor": {
          "ref": "6a1c5827-4799-412c-b4f2-dd88b2004aaa",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c649a4f9-882d-4071-8be8-e50ce8860437"
        },
        "item": {
          "id": "37c7d704-1eb6-45dd-b03b-8147117344e0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b8dbfc4e-6e54-459e-a215-7f7c2b771624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9260bc0b-e2a7-459c-94cd-17ed37101962",
        "cursor": {
          "ref": "e1af6457-c733-4bb0-b0a4-b6c36de4b8b9",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d84c9d2c-f5db-45ac-9b0e-e1afa69715eb"
        },
        "item": {
          "id": "9260bc0b-e2a7-459c-94cd-17ed37101962",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1cda28f1-45b8-469b-ab93-3b81969c9645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be26a1c3-ed19-4c23-b16f-db6907411c81",
        "cursor": {
          "ref": "002a3341-25a0-4dd7-a1f1-7bada49859e9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c49fbbb5-4fea-44fe-9026-26925d186ef1"
        },
        "item": {
          "id": "be26a1c3-ed19-4c23-b16f-db6907411c81",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "87a9bdd0-2a84-425e-b4eb-b927ee7ef4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0441fa77-40bf-4831-a5eb-327bda3168b9",
        "cursor": {
          "ref": "23e6e02f-3cd3-43e9-a783-84c395ab36e3",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c4a5bbf1-a4bd-4ba3-b4a9-7d3f320e1c98"
        },
        "item": {
          "id": "0441fa77-40bf-4831-a5eb-327bda3168b9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "194bd5d9-cf5b-4968-88ef-49f03461037f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d29040-c659-4c26-b2b3-e17a1adf05a0",
        "cursor": {
          "ref": "fb7d25f2-a379-425c-959b-52b6362b2a22",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "03061ea5-7396-493d-8df3-3a446a375fc8"
        },
        "item": {
          "id": "22d29040-c659-4c26-b2b3-e17a1adf05a0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "304ceff8-c2b0-47a4-a4b7-2a79edeb4331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f41ab8d-465f-4842-ad4b-5369be7231a5",
        "cursor": {
          "ref": "1c2c7976-27d6-4a0d-9e57-97fef9327141",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "123f71db-caea-4baa-9dd8-5e20f6b81f51"
        },
        "item": {
          "id": "0f41ab8d-465f-4842-ad4b-5369be7231a5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fd4753c6-d5ea-41cf-bd5e-4409cabfa89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f13a3c-c6f3-40af-a151-9aa4458f8e64",
        "cursor": {
          "ref": "6c13eb9f-6311-46f7-8f8d-e8caa5794528",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6b413411-ed3f-4b9f-9569-41c514f6b0e5"
        },
        "item": {
          "id": "41f13a3c-c6f3-40af-a151-9aa4458f8e64",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8dbc265f-6197-4464-883f-bc734a7e301f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e320d51a-6fff-4aa7-9ee4-97980b3551ff",
        "cursor": {
          "ref": "2461fb76-9fae-4363-bb57-543a3ec576ff",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "447b4359-a0ee-4b86-afe5-fb7d1489de52"
        },
        "item": {
          "id": "e320d51a-6fff-4aa7-9ee4-97980b3551ff",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "69a0ae98-8c79-4669-a7dd-7e7026a059ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39490aff-abac-42a2-babb-5294922f7465",
        "cursor": {
          "ref": "5a79eb09-e03b-494d-98dd-8afca17d179c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "14725ef7-be9e-44e2-8531-9185d3a8e760"
        },
        "item": {
          "id": "39490aff-abac-42a2-babb-5294922f7465",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3271e26e-ce70-4803-90da-aed4edd78771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1395c74e-f7da-4f3f-887c-73d9198696a4",
        "cursor": {
          "ref": "bc8a8970-b201-4f81-be66-38221714f7eb",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "30026272-7b8f-4179-bd6e-9c338444f25b"
        },
        "item": {
          "id": "1395c74e-f7da-4f3f-887c-73d9198696a4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "53be6fca-257a-432f-a3fd-334ef5b58064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42821de8-9802-49e2-8afb-9ec0e9789ee7",
        "cursor": {
          "ref": "58667ec9-0603-4823-bc44-74a32e072241",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6fc61d2d-e9c0-4e94-845f-8e03925d5cbc"
        },
        "item": {
          "id": "42821de8-9802-49e2-8afb-9ec0e9789ee7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "59d6fe9a-7705-462a-88a0-4b1732fca656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf3ceac-103c-401b-9757-96220c05c259",
        "cursor": {
          "ref": "a56b4717-7eeb-42cd-b258-b5ae41c166a1",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1d309226-3112-4e7c-b3a8-e44e9baa3b9f"
        },
        "item": {
          "id": "ebf3ceac-103c-401b-9757-96220c05c259",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bca5452b-5132-46b2-a0dd-8be3a9bd2c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710755b5-9c4c-426e-aff9-ddfbbfff855e",
        "cursor": {
          "ref": "897b81bb-b5c7-4ee3-b2db-00c6479129f9",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "fbb705ff-e481-4000-8fe1-3a93c1993ceb"
        },
        "item": {
          "id": "710755b5-9c4c-426e-aff9-ddfbbfff855e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "efda5f1e-3434-473e-9169-d0565288c49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cab8452-d0cd-4de7-8648-518aae74b6f4",
        "cursor": {
          "ref": "62cc4423-e155-4b8e-8283-98638642fcd5",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c0e1f34b-ef61-45f9-8948-1bc01cb7f02d"
        },
        "item": {
          "id": "6cab8452-d0cd-4de7-8648-518aae74b6f4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8df2d3c3-5bdb-4093-8474-57ef9d8f97df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5982a79a-1fd8-4a2a-a424-2bcf920fd672",
        "cursor": {
          "ref": "7c5d22c7-3a23-436c-9b8f-3c6e4aedfca6",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "db4db62d-6b0b-475a-bba1-35db2b3f035d"
        },
        "item": {
          "id": "5982a79a-1fd8-4a2a-a424-2bcf920fd672",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0f238839-ffd4-421d-b12d-adea5efdf847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa81003-ef4e-48dd-97ac-1958199ec04d",
        "cursor": {
          "ref": "c125ce99-7d21-4193-a249-58f66ab3c4f9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7dc488e5-b523-4de6-93c2-178a27ff075b"
        },
        "item": {
          "id": "bfa81003-ef4e-48dd-97ac-1958199ec04d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8d0bb3fd-bc84-440f-aaa7-be89ad177a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b21c519-0f95-4658-a95c-781e6be79be7",
        "cursor": {
          "ref": "39ba3a57-e60e-4e4f-84c9-30819ae9eaca",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c8047e74-32c3-41c3-8088-7b6536d645b6"
        },
        "item": {
          "id": "8b21c519-0f95-4658-a95c-781e6be79be7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bb995ed7-e107-4735-81e6-12b3a4e6bd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75ea2d4-6bbf-4487-8c93-8c80e5d1817b",
        "cursor": {
          "ref": "8b2bc1a6-bee1-4092-9739-454d8a414053",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2209589a-c91d-481b-8887-deeaec0fadf5"
        },
        "item": {
          "id": "c75ea2d4-6bbf-4487-8c93-8c80e5d1817b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f358a041-0fb9-457c-86d5-41398cc628f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5b2c8a-d9af-4c9f-a939-61f45586f066",
        "cursor": {
          "ref": "fb29d3ab-015e-4661-a3cd-94b67b291619",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "123438b4-099e-45ca-8266-4b563eac5ef0"
        },
        "item": {
          "id": "1d5b2c8a-d9af-4c9f-a939-61f45586f066",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1a79674f-ae56-46d3-b0a4-a24fb4433d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07faaa8-7a96-4641-9202-fc4ad796841c",
        "cursor": {
          "ref": "e088db9c-7134-4069-9338-f065952fed53",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "934e6c0e-f8bc-47a1-9d79-9733848d3180"
        },
        "item": {
          "id": "c07faaa8-7a96-4641-9202-fc4ad796841c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fd383c1d-cca7-47d5-a569-74b0b3cc8cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0447035c-7fb1-4c1e-b03a-c409a2ee0dc9",
        "cursor": {
          "ref": "503c7d62-6d84-475f-8470-8d923b14f658",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "91dd2ca8-40f4-401b-9e35-c25a45e0180d"
        },
        "item": {
          "id": "0447035c-7fb1-4c1e-b03a-c409a2ee0dc9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "46bf3816-114b-439b-b4c5-e525bdad0eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f3fc66-f21c-40ff-b293-c2a7672cb24f",
        "cursor": {
          "ref": "91ee8788-f63f-403f-b389-c0b94a140f4f",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2cfbac54-9e0b-45cc-95da-0e1cd2d70ef8"
        },
        "item": {
          "id": "72f3fc66-f21c-40ff-b293-c2a7672cb24f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a555ec9b-feb5-4894-8e86-e1799137dc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f2d397-ccd0-47e0-b28a-1ec108937e2d",
        "cursor": {
          "ref": "310be517-7793-42c4-a6ff-6354d87d73a9",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5abde82a-aa86-498e-b36e-beb15c84e427"
        },
        "item": {
          "id": "06f2d397-ccd0-47e0-b28a-1ec108937e2d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ece35e57-4b53-48cb-876a-f0ca6bb2e52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec5bcd8-301c-4bd0-9f42-87fc28ec685e",
        "cursor": {
          "ref": "45bfa9bf-4620-42fe-bcb8-449e816e8003",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a420474e-f32a-4118-8e07-d7ad512836b2"
        },
        "item": {
          "id": "8ec5bcd8-301c-4bd0-9f42-87fc28ec685e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "53d50cc7-22d6-4c7b-86ed-53d683560ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856dbf92-ac36-46ac-958b-414e0e279b94",
        "cursor": {
          "ref": "53446b84-3fd7-4041-bb8e-9df655c4f1ff",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a08124f5-c953-44a1-9d3a-0d32f6aca880"
        },
        "item": {
          "id": "856dbf92-ac36-46ac-958b-414e0e279b94",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e3186de1-773f-4b8d-b35f-01ebfa938756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f22cf0-dace-4d5c-9450-46807191c543",
        "cursor": {
          "ref": "5ec76697-081e-48bc-a6f4-3064f83173ce",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e973f766-e49c-4401-8728-c26e609e7b2c"
        },
        "item": {
          "id": "57f22cf0-dace-4d5c-9450-46807191c543",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f8f177ad-b0f0-4bd4-a00c-c6ef28f995dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aaf7250-e25f-4e4a-aeb4-e6d2583f87ca",
        "cursor": {
          "ref": "f2139395-5d02-44d8-8fea-5b33f778aa10",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "752d8aec-af31-4c4a-97ec-f2faae4380bc"
        },
        "item": {
          "id": "6aaf7250-e25f-4e4a-aeb4-e6d2583f87ca",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0466302f-ffd3-495e-861d-52fc1ced6b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef9c7b0-12b9-47e8-88ea-880a11886524",
        "cursor": {
          "ref": "6c3129f6-b344-4a69-ad2d-d0475147e7bd",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f40b1874-f55d-45ae-befa-b71fc7238627"
        },
        "item": {
          "id": "eef9c7b0-12b9-47e8-88ea-880a11886524",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "61b89ee2-56c5-461c-a9ca-a952558f9f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b617b0ff-e13c-4bad-8905-23abaa6ee7e0",
        "cursor": {
          "ref": "744cb41a-6f1f-4f53-a63d-ee2dbfa53569",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b8c08fdb-4387-42a5-9d14-07f12b83cb9f"
        },
        "item": {
          "id": "b617b0ff-e13c-4bad-8905-23abaa6ee7e0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0afb0da8-136e-4c97-b72e-2f2b2514ad05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddb5506-5676-4abb-8118-cb1470d13dc5",
        "cursor": {
          "ref": "f2eefabf-a7bb-4e1c-bb93-f6e8459c6261",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "822d21bd-c9ba-4e3c-9594-5a150b660bc0"
        },
        "item": {
          "id": "2ddb5506-5676-4abb-8118-cb1470d13dc5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7f2c6604-5150-4bb9-ade9-3dd9ba611204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9078f68-0525-492e-8e0c-c47b7d61a722",
        "cursor": {
          "ref": "d2325489-b348-47a1-b606-c33142b30fa5",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3d3cf04e-6b1f-4c44-b697-cc60869e7119"
        },
        "item": {
          "id": "e9078f68-0525-492e-8e0c-c47b7d61a722",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1d29d6ea-ad44-4506-877d-d542eac7c0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73a9cda-0478-4903-b00a-7c5e52d73f80",
        "cursor": {
          "ref": "c9b2007a-f797-42b3-b8cc-44e4d0c552f0",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f8d55089-5656-48ae-bc84-982fc26effd4"
        },
        "item": {
          "id": "d73a9cda-0478-4903-b00a-7c5e52d73f80",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2645f968-df9f-4f4d-a5ed-9ca6be2b8a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7924dbb4-bbc6-47d5-8d79-30bb37537391",
        "cursor": {
          "ref": "ee4a7613-4882-4bfe-9fc1-766c3384f983",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5585890e-dfb0-486c-8911-8340c10c6d0c"
        },
        "item": {
          "id": "7924dbb4-bbc6-47d5-8d79-30bb37537391",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "62fed9be-12b8-490c-b07e-8ae2975bf692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22253334-aa4b-4671-b235-cbde283949dd",
        "cursor": {
          "ref": "2e4b7cb7-936e-40b7-811c-a9149f05c2fa",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e5e9d1fb-08dd-4e43-a692-4af0202a3639"
        },
        "item": {
          "id": "22253334-aa4b-4671-b235-cbde283949dd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6514967b-7458-47a6-9661-99070e6da0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6a74fc-b6d2-4b91-a69f-56498dc88be9",
        "cursor": {
          "ref": "835d48ad-e2bd-4379-b779-26f2e6306bee",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5404ff3e-9e58-4c7c-a495-e7889180af4c"
        },
        "item": {
          "id": "3d6a74fc-b6d2-4b91-a69f-56498dc88be9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c432a831-a2f5-411b-9705-8425fcacdfda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a044c31e-fd13-4235-9234-5d7f81a0b957",
        "cursor": {
          "ref": "1e39b911-5791-45d4-947c-5d3e57907b14",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "13af8728-7cf7-43ba-a448-bbc096d27861"
        },
        "item": {
          "id": "a044c31e-fd13-4235-9234-5d7f81a0b957",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "94ecbded-fbb3-4137-b554-1fe822cfdb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72e9279-42a3-40d4-a880-06268faa99fd",
        "cursor": {
          "ref": "b7674a94-7a68-4cfb-b77e-75426eee4792",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8f335708-fce3-4499-9d07-52b384d88745"
        },
        "item": {
          "id": "d72e9279-42a3-40d4-a880-06268faa99fd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2d5134a6-7fad-428c-b211-581e0c8837cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780be41b-80a7-4d82-952e-e9e447352565",
        "cursor": {
          "ref": "87f05a79-46cb-4cff-bd9d-6c82a9f82af5",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9d2e0758-8693-4d5c-ad7e-cc85ffc3c96e"
        },
        "item": {
          "id": "780be41b-80a7-4d82-952e-e9e447352565",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a84b362a-92c1-40f0-b81e-bc613a054dfb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 93,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15aac302-0775-47e5-9b9a-1026189c8ccb",
        "cursor": {
          "ref": "794edfc2-85cf-41e5-ab33-8414ff78f2e5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b5dabf23-5b26-46ae-9a01-298e559a7b02"
        },
        "item": {
          "id": "15aac302-0775-47e5-9b9a-1026189c8ccb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "530a97c6-4ce8-4ff4-8fa9-52b6d3c83a21",
          "status": "OK",
          "code": 200,
          "responseTime": 125,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac63e43a-a445-40de-9017-193acd140266",
        "cursor": {
          "ref": "9203f33a-53a5-4373-9b9c-56eb2612e864",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b0805768-3c43-4b35-8849-ba72e131d132"
        },
        "item": {
          "id": "ac63e43a-a445-40de-9017-193acd140266",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2b09a59a-64c3-434d-807c-344f1d1a3dcd",
          "status": "OK",
          "code": 200,
          "responseTime": 1591,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9928e1-b18f-406b-ae65-efea24ef0cf7",
        "cursor": {
          "ref": "2a8e5526-f707-472e-b344-f2016a0eacce",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5f937fca-1e38-48e2-b6a4-d6ddc3d868c2"
        },
        "item": {
          "id": "bf9928e1-b18f-406b-ae65-efea24ef0cf7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bcf89954-da02-4c43-b548-555a7f162ed3",
          "status": "OK",
          "code": 200,
          "responseTime": 1294,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "df61772e-6055-4ace-aeee-792335c24960",
        "cursor": {
          "ref": "58637ad9-b046-42e1-8561-4f8b75dfddce",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a5abb58b-d86b-4310-ae01-2c2e603de51b"
        },
        "item": {
          "id": "df61772e-6055-4ace-aeee-792335c24960",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c86bd995-2cca-49cf-a514-aa93063454a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 136,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df61772e-6055-4ace-aeee-792335c24960",
        "cursor": {
          "ref": "58637ad9-b046-42e1-8561-4f8b75dfddce",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a5abb58b-d86b-4310-ae01-2c2e603de51b"
        },
        "item": {
          "id": "df61772e-6055-4ace-aeee-792335c24960",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c86bd995-2cca-49cf-a514-aa93063454a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 136,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4f91d7-6dc6-42e5-adcf-1a68c132b0b2",
        "cursor": {
          "ref": "52d700f8-9e59-4ea2-a780-7c3634e6d37a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b2292f00-a84c-44d3-9ab5-c45bdddf1f8b"
        },
        "item": {
          "id": "dc4f91d7-6dc6-42e5-adcf-1a68c132b0b2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f05a77ba-8673-48bb-8e5e-aed662d4a983",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764d0008-9283-437f-81ca-b03eabd3d28e",
        "cursor": {
          "ref": "816d45dd-3ef3-49e5-80fd-550114ba7053",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "de96d458-39ef-4dd3-a7fc-40ec6cb603da"
        },
        "item": {
          "id": "764d0008-9283-437f-81ca-b03eabd3d28e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "275ae757-6fd5-4182-a755-d85125ea1f59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}