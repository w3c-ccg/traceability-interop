{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ba804132-823c-4808-9a77-1bac9df8c845",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a53958fd-70f6-45a6-ba29-1cf9e43173bb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3014251-bf96-47a0-a634-b48ad7cfea29",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c762e196-9dc8-4edd-a863-2329c447f29b"
                }
              }
            ]
          },
          {
            "id": "fe567c1b-4df6-4243-aeac-cf38507626eb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f2158ef-1ee2-4bf2-884f-23548e0f4a2e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c6792693-0d52-474e-af1d-b131c89fe993"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1a285ca9-6f82-457d-8c62-4334d9866f9e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cd725bdb-d77c-4ddf-bd92-48c8b06cf430",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8474e3c-3cc9-4ab1-b71e-ee859f5a7e17",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dea52d68-0d07-4f40-9bd2-d95b7e4f42a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1409b0d-7dc7-4eca-8f2f-88a579e0e307"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59cc7684-a255-46b7-a34f-7e57dbb8143f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd2367e4-3f84-4fac-9048-4d40446056f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5c4bd132-4a42-4197-9b36-e4992fcd1335",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b56a223a-2ca4-4ffa-bca8-723253f5ea4d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "883d9367-be79-4ac1-b0ab-99e056a0e104",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6d33210f-39a2-4063-9bad-d14f1b8957ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "feb38f81-5826-468a-b480-62c12438929e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c11c596-c410-469d-9ed8-a205d9964530"
            }
          }
        ]
      },
      {
        "id": "1c95d40f-01b9-485d-89ec-11dbe76e3abf",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6a91feb3-ec26-43be-910e-f39dcc974a88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "517d8e56-5382-42c7-b4c5-04a3c40f29ba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7413e345-cd22-4d96-bcf0-f957b3805f3e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3103d144-b328-4a96-81e2-a1b88565c594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e0fbefb-f3ae-4dd6-a268-f43e4055b06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaf04e9-1004-4fb7-af04-e2ab306fbb8c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5fe588-c764-4eb4-8f25-fe1b9b4329ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82e6e3c3-1edc-423f-a7ac-e19d820df108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbef8db-d627-4412-b819-137e311515f6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5449cb0-537d-471a-bca1-d9a2401ce629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad5cbadb-a7f8-47b2-913e-6e632592973e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b670f135-a10c-4e48-a075-4c9b24f29311",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ab67aef-91df-415b-8404-01d651c3fdbe",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01be7260-1686-429c-8664-a75d56426039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42b0dd9f-6c8a-47a6-a3be-13f7dde5a202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4673978b-337b-42dd-bcc3-4e2894e3bf8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195e8c42-d376-4ce2-8d98-0b17c95dbf03"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "48016533-3798-4b1f-a3c5-b8e808c54d98",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e0e3280-2432-4555-8dc9-8275d3b52ce6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "accfe9d4-9fc5-497d-99a3-dba94c1df968",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2c380195-9674-4cf1-8ec2-8a017e208eef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c68b8cc-f658-445a-a29f-dcb78f5962ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "268e6934-7752-449f-a1c2-1666427d8021"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "466aaca3-6bbb-4af5-aa79-a2a3352fd8c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ccefa76-1efe-4d4b-a22e-d6c8e4961af0"
            }
          }
        ]
      },
      {
        "id": "28a58d8e-20d9-49cf-aa0f-b0ced45422ff",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fa8fbb21-4418-4dc9-a120-4d2db27bd262",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc1f00cc-3972-42e9-b4c9-b40fbb3017ed",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0f53d0bd-5f99-4d9a-8ce9-a12451de3b46",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671ad6c3-45cd-4061-920a-69798f32c291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee36f8ba-1932-486a-9a84-8243b37cf970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe913595-096c-4641-9660-120363e9f442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "671711ac-b608-4667-b5a9-98b47ce4bad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5eccd3-8ac2-4bbb-96b9-a61f5018085d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfe9b28-1506-48e1-b462-f3be4101e2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc93fe7-b30b-440d-9cc6-6fa9828c34a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9e6d48-9cf6-4a87-9bdb-525383b31cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc2f120a-d0fa-4007-8217-3fb53f82bd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63d4972-6e22-4588-8099-4fa061edb9f0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d29138-2375-479f-ac30-081491d431d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b847c10f-1b09-4181-b619-ee3022280c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dafe4cc-81c9-46eb-9855-51b4cc30bcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae5b4418-4717-440a-92e3-f2c3823c456d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a38beb5-9d15-400b-a20c-f748815d6845",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e843fb-8194-4cf7-9534-fc2225c43a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b64a3c-36e3-40ec-9042-527d80c4ff19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7e5ffc-1882-4426-96cc-81f31d7cf609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "923ae01f-8e75-41a8-9dd5-7663d4d3a84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61b7098-3e3a-4970-93de-cc82e1839fc3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f11850-2fb8-46ac-808e-25d02ab9896c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814d8441-0e13-4245-9275-bfb0eded7aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee798f59-fb3c-4b8e-bbe8-d6a2bdac064e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d2bb93d-f664-404e-9714-d7cbfb867094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b369fe-156e-46a2-9789-4b06c9026214",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3c0f26-5607-47a8-bb25-760eb0aabb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93119401-c8eb-4eea-94d1-c02a4d051f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08316d01-8ef7-4198-a9b8-5d8fdc5cf2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d85c664-16e5-4d47-8eda-a0819b370f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee2a7ee-cbef-4fc0-abb1-0cf8ab3b0013",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac5b5a9-7212-42f9-b5f6-e3578f17d48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff133ee-2fcd-4fc6-98e8-f5315b6c3c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48106c67-7a0d-4551-a169-81a2110fc789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d8ce290-bf23-4467-8846-343823a0aa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedc96c3-5d39-46c7-983a-5e55f4c4b2b9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a7986a-2b02-4f6d-9c82-fe2e0bbeee92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fb8327-7ca7-4c83-91ae-2541c8c0328a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfdef2a-c741-41ed-b462-c5b2423fa263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52a56cd3-0451-4d3f-bae3-4371662ab9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24481269-27a7-4cc5-91ba-ae7f33c29e8e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782104c2-92de-4caa-89e6-99474a610fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159e30ab-64f7-4071-b2b6-a37a72429633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d799cd4e-f225-42ec-938e-e5bcb4f09ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0baa09c8-1268-469e-8f7c-bab8d8c78371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a099fcc-42eb-4b57-89c5-2e09416f29b5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e56b6a-f163-4bee-b53d-6281b54ee8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f86a6b-9ec2-41aa-9606-30c332e19d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df97eed6-01ee-4dce-9d24-e0c543acca92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5f38672-6f8d-47dd-8607-51873cc806b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b35542-7607-4c45-b452-09a4c0947eff",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b5bb6e-f231-4870-a882-019cbfd42a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221cb518-7956-4186-be2c-6e7ee469a107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474addbd-d56f-4834-a147-0d494291cc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47a04fa8-29ee-4f41-bf50-37108c9b0c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78dfca8-2eb9-4df8-a627-3b677d651b94",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd501f68-5d8a-439c-ba50-8ee84406449a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4f24f2-41cd-4e4a-9b59-b321c02bf9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ec18e5-d858-4cd7-9038-3b9a30791678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdf90ed9-ccb4-4339-8150-26545a2ce7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a338a5-ba5b-4307-8b6f-3abf64382427",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b63495-cf5f-47e2-9c25-e616cf6345e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c15aa4-7d82-4909-a26b-0f99b06b933a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2022281-69f0-40f8-86f3-a236ed851506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3289438-5034-48d8-9f1c-fb2b87a0bbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86592e3c-9157-490f-ab58-95f71c754c6c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf37849-2d2e-47e8-98d0-479d90ee1a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79bcafb-5bc9-4a03-b7f3-0e8d934775c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008079ed-0c3c-47e2-b1fc-540aacd089d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b730bae3-6c0e-40e7-9817-0a16ae380b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c943c9a7-bf78-4035-a7df-8763984c637b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edf46fa-f05a-4158-84db-e2e99921fbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a627484-f1e0-4b83-bc16-e69cee16267b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82daed6e-8804-4e95-bbb3-c715bff28a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c305ce18-f193-47f4-a97b-e057726bbbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9675b17c-67b2-4de7-bee9-c9e3635d8f91",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc184f1-1b76-4d64-b07e-6fcb37580e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352036d2-acc5-408f-9841-cf4e213250cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff14b66-37d5-49d2-962e-b4ea049d1e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e29932a-d9c3-4677-adc5-2b3f470a5e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b550f72f-ec3b-478b-99d9-6312804d2d15",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0261ca90-8b39-473d-85c2-542883733e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56015d3f-b9de-412e-a3ad-0aeca2cdc8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c6e7ac-53c1-4e6e-b8fd-eb8cf76ed335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dfb78b3-3798-40ee-9128-885ed5af8978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a895e7ce-5b86-4963-8ede-fa9d589b8dae",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba0a055-9405-4045-90b7-5b476fa89744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fd33a3-c90b-421d-b05f-5c3a35f03209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb0769a-738c-4cf6-b1d7-53c9cfae5331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c90c45a-dbf2-4743-a9cf-d89b2c0abee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad1b4b6-fca4-4ec6-9759-1afe19e1d4a0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538dbe92-3cad-48ac-98cc-370253d694d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff08377-2fd1-4cd3-b7e8-6400473b66c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90df1d10-5c06-40d6-bb19-2d63ea2ea369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18b6f3c7-0a6e-4482-8947-f51c070088c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d844ca63-23ae-447a-907d-f5cd5a58b67c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36b4c70-260c-46f6-82a0-b58b21335564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5251ec5-4370-453d-9b38-1762f89d82a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2249f06f-abbc-4344-8ca4-3dc73eecc2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b57021-a636-4982-9d49-d9fb4e7a0ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c89111-e9cc-4f6f-9aa4-5ac4c6922c08",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854918f0-9226-437d-8a45-7462ca5aff7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a00930-4772-49a8-b4e7-07ff5f01f2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3294828e-e378-4f97-8fa0-76db039a2806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91cd733f-83c2-4f6d-96b5-4edbc6450664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b27cd0-7603-4472-a669-eff8777a0947",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1bf50e-aa92-4c4d-af45-e41ef8072a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb47117-0e86-418e-ad97-f7a89d1e46ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bca067-16a4-4d94-b7ba-29a2ec6206cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb0c951-0c55-4235-a234-c72f6934e6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00634504-c338-4e0e-bfb2-8c9a1892f17c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee88e5f-c45c-40b7-a1a5-ef36b21251f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14973eb9-4b2a-432c-b094-aabb33b832e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4719f12-8e9e-4404-8860-44fa4290fc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec92aab-765b-4031-bd4b-d3940935dc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ae3d34-f87a-40e2-bdc6-7e9e52d9cc66",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1658b881-b75a-43b4-a48a-3bef6c0f91d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1abff2-47a3-40e7-9d16-34b51a1dd46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3da7c21-54d5-4ea4-aad8-d155475f51b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0251878-2874-4dd1-81ad-953ed45019aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae20976f-7b2c-4636-9c78-faa12f23c2d0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8195c1b2-4099-40a9-b375-7f68f4f544c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f44331c-8ac8-420b-aa62-5aa4fabc9230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d86057-9c47-4bda-858b-de22ae697211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a630e6a-d18c-44ea-889e-3d7cd5ecd268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b5d5cb-f700-41ac-a1c9-73d790bbcf2e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a6e324-deea-41d8-b1fe-4b316cea5dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c39543-d505-43f4-b5e3-8f70c5dda128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8eb92b3-9f66-4554-8946-9812aa55e0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e080aa-7df9-4b74-ae20-e461873d53f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3e7f62-ae75-4685-9ffa-7de5d6080110",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8465e1-4dfb-4dfd-933f-681108f42692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a47c2b60-2ea6-4484-8be9-dbc6b6bf5dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bfb6ad-6193-45b5-9bdf-1b712126396d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8860ea8d-db17-4a8a-b15f-6625cb52ded8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c33d7d-f8a5-4bcb-a8ba-a9f58093b394",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dab912-30db-4acf-ab9d-25f6d9f9a555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf286475-49c7-4090-9319-3139e9433865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f5e02b-122d-4a45-b42b-18568eb4e002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb33d061-1500-4b96-ba99-053faa658c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b0c5e8-085f-4e1b-8c65-7b5b654b1da2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40df1e3-78b3-43b7-afb4-446ed3a5cf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e4d3ae-e4d7-42e8-a47f-e44d0e286399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf457622-c475-4c12-8b43-d23d5ef5c699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f04cbf7-8f35-4b7b-9ad3-878e17ee91e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1de98b0-194e-4c70-8f4e-3f5bd86d4d71",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a48bc2-4a32-40b7-9bbc-a4aae6e743ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ab645f-ec10-4d13-b5ef-4c9c3ee2b2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2099e60c-54c9-4f4e-8457-d996f8b5faf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d822032-386a-404d-8975-1a0289b02554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b0da39-ea28-4b97-9875-429713667e67",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f17335-056d-4cb8-a99b-0c7be84d1fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248c7582-ab84-418c-be36-a051a5656724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711094b5-e56b-4fff-a5e5-0e7326d6bb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2226680a-5d66-4a07-93f8-52ad6e6f491e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465e25cc-e091-409d-ad3b-21bb610bc904",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a840dee-ab50-4996-bb5c-2f682ec58d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef459f5-9d8d-41dd-9a4b-ba3c481be80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6049473-e887-4ffa-bbcb-1ad24e079db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb359a3-5814-4b7d-a41f-2b276a8f2ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359a3ee7-647d-4f35-afab-eb46d7289f54",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6a66a1-f9fc-441d-89c2-bdac68aac324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a96ddc3-b8ec-4673-b3c3-7949d5bc07ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa3b6a7-8079-4d2c-8718-45c8af5fdcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "636c267f-e8ad-4436-8eed-d97fc7d25cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6f70b9-43bd-49f9-895a-cbb6e8bdf7cd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cb1c56-f459-4dab-a2d4-b504920ee682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b3e4d8-90df-4efa-bcbf-e1616e8fbbd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b808690-cdd3-47ef-a20b-2f6bbb89b153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dac48810-ad7c-48e7-aca1-e7d24519cfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe1958b-9c9f-4213-b26a-7f5235066672",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a99106-149f-415c-a2ef-d917788f083f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a7fa7a-1714-42e7-82aa-cba1a6f2a25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3015ab0-a455-48c9-aea4-d15cf1ab2af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e8537ed2-bdad-4d5b-9ec2-82c47a3477d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b466b8a-40e5-4f94-90d8-059dcb9805db",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d111d459-5700-4410-9690-c8918654d88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "016edafa-390b-46dc-9068-869e2e2a0c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c67dc19-817f-4ea0-990d-586d14acab9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abe66232-7f39-453b-9b08-fe3273086fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10e0d49-e0f3-43aa-9b45-66ed327dfa36",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381e2541-bd79-4797-97e3-d60c057ed07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34ca252-d1a0-40cd-a71b-c082a2e73c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368e2731-c4ee-4ff5-badf-b0972b30dc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26cfa079-3c5a-41f5-994e-f4959fcb4b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76ca0db-7cfd-4f67-b136-024d205eed06",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c3e81a-26d5-48ef-89ea-3effdaf8c22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b877937-3ce9-4bbc-ab44-27de92a87f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14020737-d1e3-4bb5-a885-3346a96e81bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "911915ee-1375-4751-869c-b9709c3705c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3ed15f-286b-4178-923d-88963f40c804",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bcffa7-5eaf-41e4-9fcb-88dc1f754641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e1245b-0ef1-4c7d-92f0-5178e91b2386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c94cd8d-4ced-434d-a3d3-8b9c40da6e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b04f3599-cb15-4010-9b2a-78e5439c5325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d224e73b-f26a-4e5b-a8d8-dfa8979b6ccb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cd8351-2be9-4f8f-a2d5-c85df11117f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5298c5d1-f4cd-4413-8e2f-ff25010f0f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f95be5-c8e7-45ac-8779-494adad67e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "05dd4d76-e757-4864-ab87-1c68b03c73a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a007068-7f2a-4d61-9676-eaf738bb5fc4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a26e649-1f48-4538-bc76-c3046e4297d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d45487-177c-4c3c-94d4-53d1bfa6b3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9572ff6-762a-4d65-9f8a-178df645df86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "695daa3b-540c-4586-94c7-b9b57eafdaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ce6397-bcc2-436a-bfaa-ec36391e556a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375d4685-4e42-49d0-8f0f-410724b53a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db63c27-f24b-4d3c-869e-de284a7874ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c47722-a433-45d5-9579-04743414eec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a1325b73-6c7a-476c-8c4a-ac4b4aa8e7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97a90a8-6bf0-490d-9079-8e7cdd79c4be",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b1dbf4-fd1f-44fc-9b3a-a99e64ef9c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b115cc-2eee-460e-8184-b656fb5c9279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedbd6ea-6c82-4e7b-a458-9fb0a6bbeafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d980a0a2-65d8-498e-bd46-55a370b40ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cc43fb-cc10-4fbd-b138-53e387f96832",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d97848-c76d-47d1-a6ca-b9b56953a837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0883f7e6-4686-40bb-9169-9ea967ef5674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97702f14-7d56-4690-a663-04f4fc24fcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb053a7-e193-417c-ab03-0e6eeaf9d930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74333a8-a92c-4b6e-bf4e-e90a9373132b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2362c89-49f2-49ae-858c-dcc25808ac88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a2f501-179d-41d0-b790-d8ca6c6080a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c32a408-b262-4e82-bde9-b21e25a8017b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "171e8cbf-2a62-412c-ae99-5eb39bf08a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a55b7d-0d2f-4ae4-8567-b4b88c258ca7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09eb847c-288e-4081-8b8b-674bd74dafc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aee12ce-f435-4a27-9c11-ab7fdd4a517a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105adfd0-db69-4440-9d0a-0071499306d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "857457de-f1d8-4637-8990-7c79cf6ea3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb84c2a2-14c6-4b68-9b64-b17fd8b9bb9f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c2296b-ddcd-497c-b4f6-ca1bf64db566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaaf882c-3d77-40af-9d26-cf43061d2257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903c2d22-116c-4e69-bb13-65f89ded100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e33dba-003a-4571-9ecb-7e65ad2f33ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5caf3ccb-ad5f-491b-84f8-cee2f6a09788",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b369215-a0eb-4aec-adc8-ca7df1ed6e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f963b4d4-0682-4735-8004-461ff480a724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af13a1a-cf87-46b0-b1a5-76f55043ee0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6121de2c-86f0-4146-a014-c6da43616ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9bab0e-6fb8-4cbb-863a-665b5a5154b0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794f8b6a-eddb-4a49-bbd5-0ac1783bb422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374328a4-6a5d-4d0e-b0df-fb2f4e2b7614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e99ede-791d-47d5-ac8a-78a3edfe621e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "332cec86-d217-422f-95f0-f0973b3ddf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0349f510-829e-47c6-ac37-b781393d386e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9fe76a-cd11-4cad-b426-4342a18fb16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d152e934-6577-4f33-9d2b-4d03d451a43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6acab6-faf1-4874-b97d-45ef414723a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36f881c1-68fc-4a4d-923b-36838746533e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1a5a65-c867-4d4f-8232-68a7282856ba",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ece3ab-4ff8-44f8-ba11-3db2df40ca73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96dff7c0-9f60-41b3-a10b-c07ee4c8cd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05794cdc-bc1a-46be-b24c-0dff736335b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb54b46-85ad-46b1-ba84-3fb5c7379f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93189c7-4d7e-4406-b3dc-b44ee480a89b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa29cbd-7e0a-4622-9f5d-0f6fd780d811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846bf93f-96e9-4489-83cb-048a224a1dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c37a5f-ccf3-4f83-8ac9-77ab649b5701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9827d8f9-ae58-4474-a7ce-04167613c450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc94f57-1a05-4420-aacd-8df3f3d8d507",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdd84d9-c45b-47b5-8cf9-9b1db1e6f291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c81f21-b423-4b5c-ad01-4aab9b5788c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65908fb4-b39b-49ff-95cd-81ab18b0f48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a75d4767-8451-49a7-bed1-fddd34f3b1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12635b1-06e7-4a09-a6ef-d543c22a33e4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c73a3d6-938e-4a7f-ad63-cba67bc42f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780d6929-a602-48fc-a2b1-162f972c86f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4880b07d-f8b9-45f4-bacb-8b52ff4e0148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a8f8ad-f61a-4cdc-809f-393d6f27b5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de3e902-e038-469a-a985-d6668bfaeaf7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e286c572-e2f8-49e1-8e52-7026a6c1ae19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c32bfe8-598c-4a26-83bf-ed73b0f5e3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4447da26-ee8f-4d24-b7dd-b0184bb5d118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec93b715-a4e9-411a-bf65-94e756d4e087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da66ff3-8219-4373-b2a8-ff5117f3cfa3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fef0658-dcc7-4834-a945-147399118d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b22f08f-05a4-4e8c-9e2a-8cbbfb569ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32edaaac-81f3-40ba-b832-bff73284672e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2cc09a-ae78-44b5-adfd-2e9632066474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a3dc86-55d4-4d51-9591-50ecec60e90a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf6e2eb-1c24-487f-bbfb-d01e7d649628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84eb8dd5-7f34-477a-9769-064233b0ef3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac18a18-5318-4b4e-bb35-866a965bb156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9202fadd-f510-43da-81c8-b83afed22ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36270161-d667-4661-b897-b7dc8ea0d64e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72406505-f32c-4b00-bb04-ad4b8bfccd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e461c4-d361-4d0b-a212-838c0f9e6f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7689b334-8d30-4a24-8264-d74e0d239507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7608c804-cd8e-4201-b18b-3caa071bb7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cb2e40-a13c-4505-991a-0a877ffc7a82",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78283da0-6625-4a08-b7fa-3265a98c5519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9637693-9273-4e41-b941-afa874b100c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224aaf72-5539-46f4-a99d-908259092374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "32c21a6e-79e1-4e53-ba79-2eaf1c7023fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68850ae9-ebff-4dd6-8354-3953126556ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff442fab-c62f-4250-b99b-66fce6964204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8238883d-033b-446e-8bcf-6325311af689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49ff2e7-4003-48a7-b880-7f808fca664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "849a432b-2418-4098-8823-e40973a43892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b71ff2-02e1-4c4c-b9ef-fcf0ecfb3bd8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0efdc36-f74a-4c3f-8f86-ccba870df479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff13159a-6e69-4a0e-bbef-48c942638c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516c9dbf-6ce5-410b-93f7-22f7a64299c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a222afc0-11f9-4793-8dac-5fac9e62d899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e990c5-5cef-45c4-bfbd-9ab8b3ec2a6b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960990af-b5e2-4469-8c91-dd64a19510e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60216d5-daa5-4eee-bb98-2725371f4b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb3c099-a615-4be1-bff4-ae0e1898e48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb15e27-28aa-4b24-a88f-4ebfc06d5946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463a8309-0495-4be2-93ab-7cf4e96bdafe",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31023db5-ffd1-4664-b003-fcc7b28ab7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aaccd35-96b6-40b0-8411-279f7b89f64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0645630-b39d-43e0-b86e-2b724f1aefce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "272f3214-485a-4842-b967-f197b50daf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c39f579-fbf9-49d0-a1a6-1a8ed2bcbef0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c1070e-204e-415a-9112-e6e79b18dd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe32735-fee8-4501-85c5-bc29c08b01d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bc00b2-f82b-4814-a444-163ee0fa595e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "edb5e6b0-38e8-4faf-a1a9-e3ac01c6d9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9534caf-d4f3-4a31-9f61-186b260d41a4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73169f5-6e04-44e7-828f-24da97802756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b88d7c-d84d-414e-805c-8e47b8ace921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9ba5bb-f802-4649-98de-6e59a265eadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a3d51f-95cc-4d36-a4e9-9cec6dbf8f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ffb451-9a17-4621-840b-d1e4a166b961",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f570d39-419e-41ab-88d4-715a48bcd524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9c1ee3-6750-4b89-b5c3-950122b32d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e4d0b1-b677-46ed-a59c-2ebe2ff84e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66c866ec-ab66-4227-a846-89a59cac197d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c5fc19-68ef-4f15-81e6-adec216b42eb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c166c616-e87e-441f-a9dc-d5a08304faf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fbb4bf-0c4f-4129-8a32-196b7b32e2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3862b6-a6b0-451b-800d-69ea8f1415ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e03f337b-da7d-433c-812f-b31ef7acd355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9477d6-c637-449a-ba42-de1403fcf8a7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef7912d-eb02-4e1f-b944-d3190cd4279c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40558a93-bc26-4a3c-bdeb-5fcb7b066e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c27522-d489-416e-b173-956450f59605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "87768740-4e24-41e6-a675-6a11889cc26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f6aa27-d4d1-48c8-b3b8-d1a1439f68d2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084fa835-3452-4a91-8f0a-600a10e5d5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e31a71c-d2c8-4c12-81ae-d1fdaa3ba076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00dbc8c-3743-45f8-9a04-8d7054a36cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff42843-29d1-4095-a579-7df931d2a0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6229f5-70e5-456d-8220-ef15ddf1bd7e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a87b9cd-02aa-46a5-8f27-926a28c01e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621c0def-1e22-49cd-87fe-ebba28d61d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef22e09-762e-467d-afc1-84505ac61313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eeaea4c-e308-4df2-a09b-760a310dee80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1db1bad-adc2-4dfb-9228-09fb8005d62e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa490adc-ff6f-484b-b7b9-e1aa04bcaa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e04394a-d82d-483a-ac4a-3af6d3a952ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110b28f4-c084-4c42-87f2-782a66112632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c338f49-cc27-43be-bac4-72e763a818be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d04c4d-d91d-4838-92e4-3a78a48f0e5d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521ada97-a480-4275-be63-a6e3e38cac56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6fec1b-9c1b-449a-8ef9-76e7966d93f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81099375-8341-46d9-9a99-d19bdc74243e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4bfc56-3481-4dd4-af8d-becdd6d8bfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58f63f6-1f7a-4824-a1f6-e46bddfefcee",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd3e901-6413-481f-b683-e7a2ec52c936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eab922c-3ce6-4899-a30d-2bb3ce1bce4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80dd134-3858-4ed4-807a-db00df8644e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "716d89e6-80c1-4e65-8c1f-3216cd967696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd89b83c-955f-45f6-b035-0151c86209cf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410edad6-3b13-4e8e-853f-ff8bef77ee0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34dfd696-59d1-4820-be21-283bd3435e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8597913a-30f8-4482-a9da-bd5b675cca39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90eaafd7-99ef-42d8-a71a-4b16a5e127ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d348f453-ecad-4f20-9064-b040d477557d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5234a89a-bc25-4f38-b9ff-71f21630bb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91772e90-a042-46cf-b54a-bc373f9a8edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705836a3-8454-4e60-b4fb-a78727f82afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aee9afe-aeb9-4b7e-b2b7-ed02a6e1b6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac59a17-fc43-4903-8ba6-0e502e62b264",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d06bf14-9826-4c57-88be-699a0be15095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7605f58f-6546-48c5-805b-c1c8edf6e55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d377c06-6461-4567-a572-9516e49f758f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "146b1bfd-0b54-431c-ace8-43dd40b8285f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533e3736-36bf-4381-bcd9-fcec2ef17a57",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb952ac-8f73-459d-afbd-7a5be969d8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f202ea2a-24ab-43ee-85c2-12c38ad28825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448f6e49-a5a7-4e8e-a480-2adc4b0d02cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0740309c-8727-4bfe-a71d-70e602921755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abd7dda-5784-4145-ba7b-8a3488fc9329",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657b59a7-c447-4c6d-9728-e416770a121a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2724f3cf-33a5-4c1c-aef7-ae81ca0de764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b9b9c8-ad72-4329-8a7e-f8004df5d24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1487927b-b86d-494e-8ae0-48f31dec80b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61179502-03a1-4cfe-a4b6-09fe7c85c169",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b470bc-2f8c-4da1-b548-57c21dfa66dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be381cb-73e8-4b0c-be6d-cea1a3498143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc157145-17d2-4e95-8652-59ab8342b66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcda64e-3de6-4da2-a46f-3b788a977eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892ea523-b148-450f-9cf5-e812b6dd89c8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f738e32-0d55-4d83-94f5-7b1af112414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30959e21-6509-45cb-acb2-b76407aeae1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f8d0e5-e768-42f9-9da4-a4634a98f808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f602290c-922b-4ec2-b98e-e836bec042a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c1691c-c5d8-4c22-a7a0-65ae9a9327f3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d04416a-eb2f-477b-acf6-70b32c54c1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7447ef15-e09d-43dc-a1e9-edba8b7d3689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02c8854-6059-4a19-a385-e11fd1d98c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a67f55c2-9402-4115-bfa3-e8d76614b683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b86054d-a5d0-4bbe-948c-31caf7dbb58a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93a9465-d58e-41b3-8824-6ad4040afb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89958c09-b855-4ce0-8587-3cdf507755f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a5c109-431c-452a-922d-9b577a0203cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce69e0e3-df64-4174-9037-5a51c0f79bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749f59ab-2b2d-4690-a16b-98a4529b5d0c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94bf29b-a12b-4e3d-a522-e40b41585d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7421ccf3-2c27-4d7c-b96a-f0c057c9144d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861f30fa-688a-4d0e-b71c-def536f3ad07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27c392f1-de81-4008-909e-b6c0ce042530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e704d18e-aa6c-4e1d-a994-21642d9df89d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080bb129-44a1-401e-97c1-30093a42edf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc8b8b5-6723-48cd-bd3b-b5243af00042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287ff0d0-4457-4af9-9d43-87ea705ab5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a9d7c9-2fea-41b8-844c-0cff3f24f98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccd4b83-f33b-479a-a86e-2f3ebcd93ba5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8269ef39-9552-4ad3-9319-013e3b815e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6786655-f39a-4b88-abfa-2068a3abef83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e011c526-2fc7-45a7-b303-759d114eff19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04c2cec2-86b1-4310-9c27-44a94491c952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abbdf7f-d0aa-4579-8eb0-06f9757190b1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd6ebfb-fe24-4450-9552-2a8fc156ef3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bff4c8-074a-47fa-b3c1-64d0448b3219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7897a5-d7d9-4e84-9507-0d706f3ad0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88758cc3-6396-40e3-b4d1-28f3d5b86afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95311d68-be7c-49ff-8cbd-a61bbd8edf64",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b7b4a7-d25c-4d30-86c0-9169fbaae456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3d8991-59cb-429c-b9af-e53fd631dbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a490ceae-aad3-49c5-95f9-3d9122586f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d64c7159-666b-45e2-9433-bfc5163c1e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6878bd7-357b-4444-aed2-878acfc44325",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb20054-7551-4ae0-8c20-aa07fe2f643e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d1fc10-2828-495e-ad07-8f7d8279aee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95339773-0a53-4081-9e32-c88ab64235b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a265f279-cb30-4664-9a50-adbb279d1db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65be9f44-c999-4a54-a4d5-fc183886d035",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542c32cc-477e-4b54-95b8-3d188348022a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8ad130-7f66-484e-b6a7-ad4496fc120b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4793c5-fc3e-4414-a407-b047837533bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4bf01ef-3cc6-45e3-903f-f735f073197e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19678c3d-85aa-4d1b-a3e6-bc2a7acc6c05",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb245f6-6147-4f5b-b99b-27558d510fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6047776c-49d3-4b32-89d7-2515b5da3835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9dce4a-4f20-4ae5-b295-b56cddf65b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b925e9f8-b7a8-4ce7-9f27-9b8efabddf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f332542-de01-4502-99ae-2d6ed0498928",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e8aad1-e9fa-4b49-8660-e57fba3c75fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea139b0b-ac99-418e-b029-400f3552b65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47e3a78-97ef-4227-ad8f-908bb36bad6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d574631d-d683-4273-a292-5949166c6650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78edcbb4-e215-4b06-82df-6535eedfe2f7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c2dcf7-6379-4e08-89bf-97c4c206ea4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fd7b3f47-cd4b-4d08-8f83-c6d487f4e252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9b61f7-c11e-4ec9-b8f7-7d00f67150ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec220b64-6f00-45c6-a56a-776f9b43cb1b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b900a496-7437-4d7c-bfee-cfe7fc286159",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdb095e2-8f93-4487-b02f-df7192cfd019",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4653c686-6ee8-4e9a-aebd-ed3ace908262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1647d870-5e43-41fa-b455-158b3cbcd759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b27f72-693b-4fee-946f-3e5e2e2ffd6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c58f4079-896b-4c9f-8dd2-e5056989b83c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29d5da72-250b-4e66-8f2a-876b2d2a062b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "821fad50-8acb-4df6-b982-560450a248b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59d9ab16-9add-424c-9099-79bb21217c1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b96c0b6-8e66-4083-b6c3-6dfad2b60d3f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dbf1cb07-f306-417f-9c61-4ad80deeb058",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3f15b708-58d1-41fb-a45b-b063f1adf7ee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f72c9ca4-7aec-4eee-a043-24e630e106fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a22fa949-b89d-4e42-af43-1ae16c459dae"
                }
              }
            ]
          },
          {
            "id": "bdabd0ef-2bd2-4c09-9ce8-a7bd5e3584bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd3f1cd5-341d-447c-a6fd-078a2d89cf91",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fcbac963-deb5-4aa4-8fb7-73f72df841a0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909bd84d-4601-4e1c-87ce-6d4d3e184beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "75867d90-cb29-4773-80bd-726597e2dc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d71f54-21a2-4852-b742-131bd45026fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866571f2-958b-4087-9e59-f3050b132406"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5dc67fc-9114-432a-a0fe-35d591ccdff3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b3bffb5-4309-4464-85e6-0a61aa1bd242",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43715090-dfce-410c-946d-db46dafffd8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83ea282a-9636-421a-a635-4e39650cda0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c219aaf0-cc8d-4a35-920b-72ca1f77626f"
                    }
                  }
                ]
              },
              {
                "id": "91c7210b-1fc6-4b09-a439-72a01a095104",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90213b7e-3dc4-44b7-bc39-9cf61ce14849",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d376f218-9b13-43c4-8f25-c3410099e9ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27d87a73-586f-4929-b68b-58111f608924",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "37307c44-dcc0-49a4-bece-c6208cf6208c"
                    }
                  }
                ]
              },
              {
                "id": "adf7256d-d002-4fa2-89c1-9ce0194aa5df",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5c4499e-25d3-4954-980f-f4c2999e7b1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "783f70a1-8062-4657-9ed3-8a9b3bf15498"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61581e2f-dca3-4d05-a9f9-ef9a7e985ce9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a1c933e4-a6fc-44d7-8286-d27d136f8d55"
                    }
                  }
                ]
              },
              {
                "id": "fc0f0980-0fdf-45d3-9adc-b453dd6849d3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e24b0e87-4709-4a32-96f8-7af4a68d1616",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e60cec01-4fbf-4a2b-8275-f1a3224265be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70dad538-7def-4c19-8b61-e53868001fa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bbbe7868-3d71-4ff5-9f9d-8c2e8db73d8f"
                    }
                  }
                ]
              },
              {
                "id": "7f2bd66d-9afb-44d2-8aab-3708ca2a88c2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32225f9e-5fb9-4fc2-8cd3-8dc2e59cce44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "edb64331-4808-4292-a577-a7b1ea3447eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08b4e460-a8d8-4f9b-9898-55ab46000fa7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c2d145c3-3756-4b59-95ed-42d6a899873b"
                    }
                  }
                ]
              },
              {
                "id": "ced99347-4118-4f6b-9311-67c29affd386",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "041b3531-52ca-48f1-a16c-543c663ff17f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b75e85a-e5a7-4ae1-b84e-149684530bcd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "719ed96c-cc5e-48c2-8737-a03672fcd649",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "628970fd-25fa-4e3a-a4a9-bb9ff9502420"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca2d3380-1f70-4089-9e10-564fcc1f9ce7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c84c99c5-8302-4aa5-83ed-e114d88aa55b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eeba6168-4225-4944-a3c2-d8f5c4d37af4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7e4ab8e-9cfa-47f1-9266-efdc0e7bb7e0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80b983c0-8abd-4a73-9ad6-3c0a1858ee40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f86f6d65-2c8d-4e76-87a4-e47047eac825"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44c98e11-f064-4d1a-b7a8-dbd8cc114bf1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e8267ab-9942-46e9-8787-ceb63776d4ed"
            }
          }
        ]
      },
      {
        "id": "b9f747a1-2f54-46a6-8917-9e9cf615e9bc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e4603568-23ab-44db-aeb3-568dd3fffcd4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab8f174e-8387-4940-9e03-45e57f916efb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81fd9fe7-a0a5-4b8b-868d-7ed49e4c2c5d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0477c6-7728-4beb-b89d-7e91d5ce1a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78679cf5-6ca8-471a-9e8c-e21f09386e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01c2dc9-1127-4b8e-a37a-dea5c0ccfae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c785e8f5-a082-4884-a7e9-84d1b95e3b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b4a7f8-4a8f-477f-b729-da60883b803e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4172ab53-3a29-47f4-8c2b-5a3cd8dace1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c89d5c-fb50-466b-ad53-c5429ea22131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e579c3c6-514a-4ee6-a877-e889618e6ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e32803bd-388f-45b6-b43f-404effc74b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924b8ec9-b4c2-4e47-b7f5-b7eb486e8bfa",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b087fb9-4d8c-4ee2-a24b-856c04865e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c43b6f-a363-40b4-914e-2db272b8e233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734f4145-5de7-4975-a854-1c9dc45dfdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f366da-da10-4d1f-bc49-f3e4b7c1be41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1307e1e-3c5f-4fe8-a1e6-aa7cce08bca6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598c2044-909a-49c8-b341-9326cdd11fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb68027-fcad-4d03-9a69-9eb7d7504ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf241513-5c07-4672-b27f-34037dc4b213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7368a5-63ec-49da-bac4-67966298ba06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a645bda6-8f4e-417e-87e8-6c10a84e7ab8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c31f17-932a-4585-94f8-9d1d4e329828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5261ec-03a5-421a-a874-873a84bd9a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819e121b-7016-40e2-a453-b77edd5f1ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "388811db-92d3-4ef9-b3dd-0485e051ca43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4258f48-a36a-4412-b706-eb7aea2edcb7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca7b2f8-7513-46c0-a7b3-ad7aff6364dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad44144-a978-4a0f-9667-2d9620bf5a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3277c5e-477f-4ed6-8b97-35b3dbd20fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6889e9ea-7fd9-49c6-a3c3-9ccceb8dc9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d24446-f973-46b1-ab41-873c05416af3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6dc917-ba6b-4389-86e4-9be3b91d30b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db71f909-2892-48b7-a7fc-4c578b84593c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39c7f82-43f1-4c65-b2b5-ede319bfca06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6f4a94-1651-4f0a-9eac-f6474b4afc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabd1bab-59d4-4f27-a824-5c1f8abb499f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd48c6b4-2582-4e30-93f6-56462fa4f251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b551925-f593-4b5d-87bd-efb7c003882d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff405a5-485e-4824-9599-835863057cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae11d8c-ccbf-469e-bec3-a9db5f8381eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b09f2ad-ca6c-457a-877d-9c8bc816dc8e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd4460e-44cb-4a71-b4c6-4423f9ed4eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26144ccc-a9d1-4da4-9b41-5ca00edc36a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa4ca27-98be-4000-80d3-ce3d9e63ad7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afd78b0b-9d4d-407f-befb-c93c31791b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df951d1d-1751-42c1-bf54-4d9c4cbd4dd8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc19060-c526-432f-8876-351dd61b5ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa468526-4568-4945-8fbe-d1730357df9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3349ea3a-bf47-4e86-9045-83079b5f1672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b477a82c-3860-478b-8e2c-289b461fb365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c9c626-cc65-4282-a219-b82f9a27758a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3931977-69a1-4fb8-94b2-4ec3f409139e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d90ff3c-39fd-4d10-a8de-8947a97d161a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53989c9e-4f5c-4696-ac49-c9aae5bed481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cf389f8a-9c7c-4f58-8f54-147fb15f440d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486bb6e3-d1ef-42f8-b827-37e73cbbc0c1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be791dd-5a66-4fb4-bf16-81a39d026526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18586ad9-3504-4548-a4e8-ebdc1d52ee55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d902578-92f5-4ded-b9c7-239335e9fb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8783c6bb-5a06-44ae-8d15-32bba31b4682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be6234d-a453-49fa-915f-104cc2a52ee9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07592c3d-ca65-4d09-9b29-920510a3580f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce41d61-a999-4e9f-a5c1-abfe458f6f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3ab358-b1f3-46e5-957b-3c270e2b8a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2038ef34-6bff-4651-a271-f3c2cce92d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d2d94d-6b17-47fb-b527-b447d45dc499",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634037a1-3b5c-4c76-9081-6844ea513f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997eb4a7-01ff-4a69-8714-bc3936125974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b148fd01-f8de-4fcf-93ee-d9872ba94730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "22889461-ba96-48a8-b8e1-5940fae65ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5d3cc5-4a8e-48ba-8527-406d64977554",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299a0e89-1103-4a67-830d-5a307d7088dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9621d6-b8f9-4cd5-9f71-30235cc4c5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69938332-6446-4e3a-ac8b-7d53924196b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "57718ae0-7dcc-48a9-afb8-4715faa9e0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6487ce-c7a9-4c5d-bc65-bd554779a917",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba536922-ab29-49da-986c-bf4584c3787f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe5c42d-d86f-4777-9428-eb15c1a13ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8683c9-2fd6-4830-a0e2-f788d849ccbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a674eeb-de48-4cfc-93d1-2e4fc890a143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bf447d-1b2d-4f90-92b9-21b272c0d224",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d257e7-8b2a-4160-b3af-f947c446edf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304e4990-9c90-47e0-8283-8377877e43d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b6bffa-f36e-4aaa-b583-a9290ce98de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb1def6-8426-417f-a4c9-916226b38e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c966c0a1-5233-4616-979d-fa1e57f5efe7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7304554b-fc4c-48ca-b3bd-f529bbd49b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88d9314-3e73-4ff9-a8d0-76ae55dde62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a56313-8e1f-49e6-acb9-821126b440af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01a53318-5d84-4f6e-b194-10adba01fafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e94338-6613-4c57-925d-7ec8a1acb47a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4653f1d5-84cc-426a-ba36-7ebeab7dc937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5f7f8c-f962-4c68-bdf6-a629f5621ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d0b5cc-6db1-445e-907a-523881a6bc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79c0aa69-df9e-4f68-82cf-067572f741da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448353a4-3948-46a0-a3d7-bf12ff9f5bef",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e4b4c2-f830-4f77-b6c3-5a8a7a44b96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8799c205-66cb-44fa-9b19-29aed142b159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fb01df-8ad2-4363-b33e-4c79c09a1fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f62d9173-f520-4838-a53b-e2d7a4e509b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd1a1ce-db20-488f-964a-f4780b076dea",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a565f573-fab3-4b5d-b597-b829ec9bef45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7d1106-8994-4244-85ce-a3f86533ea68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1738b7a4-38de-408e-8c8c-d91020ae8f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d57e1bd-2243-4348-a49a-11fce5bbe001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b0fac9-953d-4cef-9c76-cab886665312",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c546041-7494-47c5-9869-8a5c61c05b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a0bcbf-ab0e-4ccf-a9be-8742c98a5a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87a927e-74ba-44e7-8a32-35caa70328d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f2b615-e292-4c34-99e4-7153b4c8d05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6554d70d-8027-4902-bb72-78de4315c1b4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad81361-aef4-4442-8b00-e3ff0d284f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b303110-009f-4163-a8ed-8d5753760514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2345cb-32d1-4fe1-9725-8b9bc22ad034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8504f671-e3a0-4916-a06e-a96abeac4f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150c7226-576d-4628-9bb8-e2f7780fe373",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ff392f-4403-427e-b272-7b4a13d16e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5212b5-37a3-4838-8eb3-e63889cfe361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011cd041-c62b-40e0-9b24-f1dced97752c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81069f00-dd9f-4f65-971a-526333bc86d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bf42b7-b765-4dc1-a86d-09a14cbc4ad0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c520125b-d786-4b01-ac9e-88f6e67a550b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bea0dc7-292e-45df-a5d2-db43bbcda4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47681103-666c-4253-94bd-c42c1ec7a3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "446da721-b6c5-4a2c-b943-3a5a9a93e8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f04c9c2-cf1b-4120-8938-6fa99b1c8abe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79eb02ea-ce9a-4293-b9b8-b5ff1c4553d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e9c2d8-88fb-478d-98ef-f6cfcd616858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67dd698-3007-425f-b90c-904660a82460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afa766ec-f47e-43f6-83a0-fe5b495cc22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6638289-0315-4a9e-beb6-4fa48dd92720",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1cf18b-9fc7-4d31-b40d-34db3c19ea29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65b97dd-4f09-4c97-89d7-08e5fa7a5b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d960fc27-62c5-4442-989e-5f14782e78a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95954485-cf0f-4a85-b4ca-1a3feb6b3252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962420fd-e6c3-4d3d-8e7e-4a1273c05825",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030655da-15ac-49ea-9e4b-c401d9d7151a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d54b68-849e-483a-ab39-9f3ab8356b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30afa13-9655-4316-a3ef-19c433277b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "787c7f0f-95c6-45c0-8177-1570c83bd46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5201bc-f5f7-4ef1-874b-5ea5e32f6b1d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910e4ae5-20a9-4667-902a-eed19c599795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206f4826-13e5-463d-9518-8d27edb938a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2cadd3-88e8-437a-83f4-e915b2aaedad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c93726-1523-4cd3-b02d-2bb94f696858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db3c79f-b36d-48d5-ac71-4285e9c5d5f5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfad44e-0f01-4162-bd94-68e709970963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1a1be0-52ff-44fd-8112-a71826bd25bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65dfefd-4a3d-4077-9389-cc57ce878a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9466b7-4b5b-4aa1-b58b-17301156a89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c7fdb4-66ba-4294-b981-b87e902b150f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f02e1df-453d-407a-ae56-de2e6d92cf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cd6b5c-706f-46c1-acf7-6e21c0c81e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56992064-1976-4bb0-9c10-2e568eb0c54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9afaa314-3a0d-4d4e-915e-e10726693fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4954e162-b2ab-4937-9ccf-ad3bc53b4b18",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73cbb59-a71a-4f48-b567-86ae745dc001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085e748c-87a8-4a98-ab16-c43b9e91b02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f0f6ff-fea0-47bd-9043-1807bc52cebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d38f84e-389e-4e4f-a842-1edf1ad467c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5a19759-f88d-4cd3-bc24-db154e6d8a6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4346f3b2-a3c8-4a89-bc3f-191f0a8f8e76",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b70c47-feb4-4337-93a5-9777efc0c4c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5794b2f1-87c1-42ab-be22-df3fb7648619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7beb9a7-9d5e-4e0e-af83-f50f820ab07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c2b9c33-a4f3-4956-be3d-ff6060fcce10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc205acc-da43-44b5-9f4b-68bf5c9e7fba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b1e3746-2282-489f-aef5-76968e33907d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2fb2977-9015-4469-a0de-e3a80f08c96b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "517285b6-ba81-4b2b-a22c-11b3f17b99d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fdc1dcb-d12c-4bfc-bedf-31b1ae305b2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c2f9db43-2881-45ec-856d-43a6eb4da933"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49deb759-93cf-4846-9ff0-a32b8e6683da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52df38aa-776c-4daf-ad5c-80c877464c3a"
            }
          }
        ]
      },
      {
        "id": "1b8522cc-efe8-44de-a199-d6983cc6382c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a466e607-980c-4b0c-a884-176c9272b89b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4416a20-4e2f-479a-8af0-90272a7ff179",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90d7fee6-c843-4327-857c-a00f54bedbef",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e74cf28-515c-4bcd-8a12-8c66ead560ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a2e34c-d82f-43c1-b1b4-77668c0303e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dce886-1655-46eb-abdc-875e11597d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2944dab2-2c10-4bab-9538-5c020af93893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19b041b-c964-4727-a5c1-e0b456dacf10",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ecad23-8e81-41e6-93cd-b2a2c367cbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226da5c8-079d-43ac-95c6-1a412474a16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb93387-9ac8-481d-8db9-2196dd002169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "130201af-434e-453f-84fd-1e3902717634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5af33f-b64c-4325-96df-f70569165a4d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef1ae59-570e-49fa-a7be-06f602e89dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa3f0f2-3b27-465e-8c68-cb24bf6ba968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd84007f-9112-4f36-8791-7dfb240d0d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9abfba3-072a-449a-826e-f40477d19ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36ad873-046f-4235-859a-7764e2c27ee9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e264cb02-4168-409a-a672-60193429400e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4173756-fb11-43f9-bddd-ac6a88dbab93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0babf783-07da-4093-aa46-0b6525d4fb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a651127-4082-43d9-aeb2-a3cdbc7893e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77eaf351-0f14-4e19-812d-07b662b0f71f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e12e994-7b96-4b19-8d01-34a5acf061e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66911f7a-a920-431e-85f5-6025658f3002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3584032-e7ce-424a-907e-34ca60972ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "304c98c1-a27a-466e-82dc-8ac94bcf86cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6340a957-5afb-4e71-bb4b-b922de898dad",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3d66bc-6d8d-4abd-aadd-5466ed6e9170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be99f06-517d-4e88-8ef8-0058251ab374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eefdd49-12b4-49cc-985a-20bcffbdc9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdeef62-e566-432a-86dc-7a6748849691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f358a3-79d8-42b8-8932-825137febf6b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ed038e-9c0c-4da6-9abf-73cba83397e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cab5f2b-04fd-4015-b402-9b8ff5a0a19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdca2093-3327-4263-985b-a7f4503d52d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2588fb-855b-41d6-9063-20155b59adbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a6c220-a159-430e-a05b-b91b5b757a94",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b658064e-90cf-411f-9c2e-b39d2c17721b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940a7871-82ad-45b2-a5b6-27575bf032b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2205bf8e-4c3e-4596-8cb7-425fc6a182bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1de8a5ae-75d9-4628-8adc-39fb61677e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d230e46-6af5-4f0e-a956-d51c5cfaf83c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b75c9f0-8cf1-4def-8787-7ec9f17d1a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e9d57b-a8ca-4cc5-bebf-4b8d8c51644a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562d5ebe-716d-46f2-83f7-f32dc155dfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb6db30-270d-4d2e-bf34-ea66f64ca1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795724af-f5ba-49f3-b48b-7d173deaa277",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c886c93d-54e2-450b-850e-d7149965185c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8527b985-5bf9-4364-a5b5-92059f13ee72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a63fbe3-ff46-43a8-8305-a7aee7397fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cd0bb6-ad79-4ae0-aa59-439d853c1eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb404cc-9d33-4900-a7c4-ee19761646b1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6289c8-d9e4-46f2-997e-070e306d8588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376f89ed-c282-4a00-8186-8cef2a90b11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef9f2a2-7722-4546-aa3c-4af27da25867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "30faf0ba-fbbb-4c74-94ed-187583cff048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d311875-0cc6-4a93-b12c-8b9d91b21584",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ed32de-7d54-4deb-af1d-6c914200737d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d81d95-f483-4e41-a512-abf35c0ff23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366d16de-875c-4838-ba29-51d0c2d73e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77adbf84-3379-4785-afce-c304dbe52f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a545ee20-cd17-4701-8e54-0f2d70a01259",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7b28ac-1142-41b2-bd99-cb4f975422c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784e8d64-5bc6-44ec-9747-da85ad9c0827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbefe52c-412d-4f2e-a641-72d21c7da731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2496cab-8528-464e-aa1f-007e30a4fe31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbdb3fd-2337-4c5a-a9c4-ddcaf600a033",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482474d8-4595-4e9c-8dde-771f465f0b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dad3d79-5f84-4aae-b601-9c70e8d4e4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04d6fd6-c9c0-4e4c-8f3e-3b7a0aa6175f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1260d552-f9eb-43de-b1d3-ea78cd7f93ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f7503d-7e29-4c1e-9823-5ac900aa10cf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67e3536-a95d-4e8c-8ee9-5e0e089927b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e51c0d-73e4-4970-8454-e7dae149996b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c65b1e-0a86-4a6d-b61a-859df151da44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4704d4b0-d6f9-4715-a8cd-8ef624503b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04202d7-722c-49dd-a210-52ce9a776c45",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b40f754-134d-4754-9a62-23930459708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ebe2e5-b5e2-445c-8fb6-93f2fc8d114e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052a66e9-215e-43c7-906b-17c9f9d5016a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8abe211d-aabf-49b3-b325-78cd25d6e2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb63d7f-0551-4c9a-9104-16c763ec8563",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09733a5a-2cdf-4b22-b4bf-6c9e318c4fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57daa1c0-7c4d-49da-9005-7ac16b1fac4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de38271-bc0d-4d93-bcdb-09db1570553e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8dbaf0-9828-42e1-9aa6-37bdb8f1b1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bd427e-558d-487b-bd0a-41cb50d66fa6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f5f302-07a3-408e-9511-876272b4db82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23517f45-67f7-43dd-ba46-f9bcd61fe44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fc5dc4-a168-41f5-b117-73a8423e8ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44790652-c1a1-4ea6-a89a-4393d597ba5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49eff0d-6a98-4bc2-b135-1daf8ed110ca",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ab1f79-6ece-44cc-afc7-4092f25bd371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5006a633-a327-4640-b780-d25133cd7f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91201170-ea57-41be-95fb-193480ba4964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8557b9-bdc4-4ba4-b071-2c8646cc1a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41df5c8c-ecda-4463-baf0-ef793d1b66ac",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c90c46-54ff-4c7d-8584-180e4506174f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56391a4e-6439-48a3-8b37-a4ff6a102121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbce20a-02b2-48f0-b5a1-d914415487fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bac3eacb-2a0c-4ceb-8aa2-673b7b2bfcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfce443c-1971-4852-8543-8399b27e7562",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2332222-475a-47e0-b492-dcf4a857915c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f54cf20-629c-4e67-82f2-3bb08da0a3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75485198-a430-4f72-9a34-5e9f2774302a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8cac91-841b-44c2-916f-bc51b0514b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b225106-9293-4f4f-a3fd-b2c819ad5b0d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959d8b55-9c7d-4b6c-a389-78dd18fd4c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cadb408-b20a-4343-9241-82c3b7c46d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f836f1-1d77-4216-b8c5-9ef0d38523a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c611c9e-e288-424c-9709-a8243f31aa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46495d0-6dee-4f4b-914a-55ea7ec9de4e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d21376f-32a1-4c2e-9a03-d72e7cb2a3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a511a3-8098-4cdc-853a-4b932c0bcfc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b686a42a-31b7-4360-901a-5cf6b4fee5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8abfe410-6fc9-4544-a0f5-e08d45343663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2659f8-b305-49c7-9f43-8c0221aa0458",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e411cb-4511-4432-bbb2-ec78e0fd3496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db5f287-5a6e-4585-aa22-3319566f51bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e71a82-2f7c-43da-97d6-046cc2463484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f49bd0-976e-451e-b8af-ba3ca64c8da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b56abab-83ac-4b18-a83d-909eb64cbdb6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4330ce8-da22-4ae6-bcc1-2568cc955240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a57fe61-04e9-4f1c-bc1a-1e40e0782ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c638ed9c-e820-4399-bc39-a0b9260c0af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "528d187e-010d-40d0-af66-7e1676a3c175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104a5d75-da00-44cc-8ed9-460419575295",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba23951-c57c-4095-8614-66b26e0ea9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adca1a6a-0f7e-4bb8-8995-ef1cc52f11de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5413b03-08dd-46a5-ba21-762f8e6a8787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f89b90ab-5d1d-48fa-86a0-eaa55fdca80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3221a0a6-2d4a-4204-a8ac-a1ecf9a9d93b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cc9ea3-e25b-40ed-9184-c8441039d3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41ee6dc-9de4-4a59-b38b-30bd51339634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff80d1c0-5a18-4d56-99d5-f32d96d37fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec1b6af-c9fb-42de-9049-71c2da59577f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f1ecbb-33c5-4326-b129-b186e5c88ef1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86835d3-e724-4f67-a15c-29cb5f427385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593333d4-a88d-49ff-9542-305a336a528d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c41d6af-b577-4d23-8dcd-e11ef365bd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c575ecc-86f0-4653-8455-cce59d776063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134dd2ef-be5c-48e8-b1bd-8ac0548ed6b2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de51ae99-2da2-4b42-ad6f-d57de8f26007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4105df1e-23a2-40e8-8363-8502b16b0c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5e6c0f-2e4d-402e-8bcf-6bb78d22ff58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0477fa9f-d08e-44da-a1d7-61812ee5ecf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0ce91c-a67f-42c8-9242-3a85823dc89e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e004fb0-3469-435e-b7f0-8bd2b1fd6c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0956887f-82c1-4405-b88c-0e9304f059ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f6b45d-63c5-4183-8ee7-6d8f981a1979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "401c41ef-c4a9-4d6c-8e31-cb98f8263796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e968f7-0d32-4de3-8214-b915355ed504",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6bccb2-6833-4416-86db-c86a9fda4194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8502e005-e436-405b-9acf-1107ea072393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b4869d-34cf-456c-b4a6-032b1f2afffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "764d542b-6097-4b72-8993-a70d68ce6a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73741f39-0c9c-4d8f-85c4-e1e38f9e26da",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fadf74-097b-48ee-809e-50567cfb2ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddaa289-3f88-46e5-9816-e503fe1f7f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16577f2b-98b2-4e60-83de-ea635b9ebaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b224a7-d729-4c85-9a04-4be367c67d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0a3a38-be29-4e9f-a7ae-fd32c06d1d13",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b53002-c95a-40f6-ae9d-cef3929a248d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bef620-f064-4e33-8d5b-cdb80f400da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce778ba-1382-483f-b1b0-a0853afb254b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f155c76-0572-4511-9ca3-4a9dc582d679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ff6fd3-f743-49bd-892c-fd7022d1d0ac",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71c2ca6-257b-4ebb-ab85-ce6d3f14e7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d7bd65-5dc8-4840-96f0-1577b073e38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb557db-adcc-4d1f-ab6e-b0d833793d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75939be-fb1a-4fac-a7a6-151430b8699b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cef354-29ff-4fed-9c20-255fffe05caa",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a34c49-021b-47c1-b0a4-ac42cc674c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1128fd47-fcd3-45d5-bc70-5186a10d77c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8bcb78-ec83-4409-89e0-cc673add1293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d0c5fc-bb23-4f65-9b32-bd2b003517ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df632ae-4068-42a5-8fde-25c513052291",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d78fb77-c03e-4507-a235-918c331f1f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f9e9a1-f604-40d5-9464-e9904edb2555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb640a2-781c-4301-8449-f107d0253e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2fa316-6389-4b2a-ae24-eca69de98bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ba713d-cee5-4359-8c55-2595888970f8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57abdc13-e899-4522-a492-5149120a8e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5c9540-43cc-45d5-8173-2e4a66aa0889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370bca65-5f5f-436a-93c6-63f1bf6878ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5794d6-3e27-4f97-b9e2-a181eda9a9be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9200bcfa-4999-4df4-a5c0-a0410fa4ef4e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7f9f147-0314-4a2e-bf4b-c5acaadfb6da",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2741ae23-7302-4e24-82ce-1b63bcead033",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6f52b2-e353-4fee-8c12-b8e1f60e7d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a14dac6-1ee0-43fd-963f-9d7b65c245ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c19dfc0-9979-4a64-a0f6-7c7988ad80d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a273a724-b9d6-4c22-a97c-91fa30ac788f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be19a392-6293-41cc-a7c2-de58da320e27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7230574-d748-4365-91b8-bd77feca1ae0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5fcd881-139b-4987-a508-191179cd49c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33115f94-fe47-46d0-96be-980da213f40d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cf15815e-77f7-4d86-849d-71e782f4727c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "423064c8-c421-4ec1-87ae-f76d4bd6ed9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53d79dcb-3029-48eb-a4c8-aef35ff53746"
            }
          }
        ]
      },
      {
        "id": "104166ad-4959-4005-87c8-46b253f22813",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "188e4347-d5d3-47fb-8fd3-b8ba83712d83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6d4d8c2-f9e2-4f6e-96e4-0c3466756aa5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07c536c3-364c-43e4-b3a5-9df890d85545",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f2d1ed-be1c-4d96-99f2-3e6135ae406c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2438c6cb-dae9-4838-ad27-541eb82edbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322ca7fb-615f-4bc6-8427-bc18c4d895b9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da328ed8-ed2f-430e-b86d-dd7beb6256c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a1eef3-8af2-44ec-b3ce-8af086c26291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d697351-cd1d-4165-b44a-c9fa98b5da31",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc42dee-f3c8-4ab2-a57f-5a4751e1ba16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb8f921-7b6a-4d7c-91a1-7f06a0c12b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafb6552-6fcc-4ef3-b09d-bf9f9cfbd10b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05301d76-9bef-42df-923e-48513bcf4a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d3b7df-2c22-49b7-8821-0ffaf6a984d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e504de2-327c-4682-ae07-fa34dcda4035",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b731bb41-024a-44d5-9645-626b25718dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44617258-0acc-47fc-a9c4-04ebaa7aa7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b522586a-1264-4169-821d-5aa69a0edb1f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a775c73-aecc-4cde-a9cc-9026f08353b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ce635b-a2dd-40dd-ae9a-861dc95c350d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18215e76-f14e-42f5-a9e7-12d4b9b595ad",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69afdfc0-667e-4e47-b5ac-2b44ba0f3069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2345cbd0-6be0-4618-80e6-7105a0794dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5126c39-98c7-42cc-9d97-c6ef6e0fae91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672b3eb1-d6e0-4f96-8dd1-9f1f630f9c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8998b3-38e6-4a09-b46b-96efb10f8981",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1389b4-8c6e-4dfd-b5c1-a0a081ad09a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de7e4cd8-15b1-4437-8613-2b5951a84d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c864104-f2b1-4d8e-bc96-1e3317322bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "debdf4f7-4a18-4a72-ac72-5af1c887682c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a571ce85-5bd9-4053-be8a-341a7621faec",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0097b9f1-4823-4ef4-bfcc-38e202db940c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8629aa7a-8d5a-4f0b-a26f-45285c9efa19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "538b2254-fef1-4559-bc12-bda1fa1220be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f5a1e1-46a5-459a-ba3f-166cad14b7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40420e17-f534-42aa-b3ce-adae580aa8ea",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfa8e94-7b4c-4d87-9965-fa4bd5db286c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "486afcf5-c5b2-48c9-b038-d2841cac72ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafe4910-1909-49fb-a164-48a4072564a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88777dbc-8421-4e69-bb93-b38f75bd8ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57151bb8-5580-4f24-af1c-b25b6ed92a68",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4acba3-3a34-466a-9963-e503303c02c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5603697-046d-4cc4-a536-c89d44501555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8583245-6d9f-47a5-9227-36db234ff372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fead7b-fa0b-48da-b9b4-833b50f1b6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ef520f-214e-484a-906b-4a4399402257",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec96adb-8464-4f89-8ba9-23e80de0c6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f893f6bc-cdfe-4dad-8a7d-68f1b5d8ac2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0fce4b-2a99-46b6-8ce1-b55d5191f4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3eda75f-b812-4799-9e79-57ac858ea792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848d89c2-7bb8-43d8-a2c3-a0b56a313ec0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6380d6ae-1aeb-4620-874c-2c91a1bef4e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75159856-6ecc-4fde-afea-fc188b715d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5023805a-29ca-4e1e-a674-465ea8415b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d987691-b4aa-420d-a8c3-b8bc4a32e76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653e6291-1947-491e-8113-003945f785a2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736f2adf-8157-497d-a7c2-9e8b6af08608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0aafd02-6ef2-44f8-b819-1e348206e2c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7131c8-ef3a-424d-859e-18549a24f68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6855588b-ff12-44c7-a71b-73bf797669ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec3e949-73e6-4ce4-b28b-2d745c451145",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c162f9d-0242-410b-89a7-1053d8493616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab6c095-66bb-4b76-aeae-6903b6bc83e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a745bb0b-53cc-41d9-9419-1a191ec054d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c422e5-5af0-45be-b5f0-0af9b608a9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805c5985-803f-48d3-ad2a-b0b404ccc6a3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0274a4-d326-480c-92d3-4935c3cd2308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f3afaa-c2f4-485b-92c0-9612b0465051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adf18aa-bb1f-425d-b84d-b708c139282b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85969d84-23fd-4187-bf1e-f69b6fa7915c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a733f9-7a1c-4433-b5d2-178a550414b3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c07068-4b01-48d5-b89b-066179b2c095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9e46ae-315b-4669-9c4d-23b9e385d26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0dcba2-db46-47c5-9e89-290c43abd783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51783a9d-71d4-4173-bb0c-f263d920998d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27aea56a-6c5c-42ae-a9b0-1f42cce4e7eb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4410e379-0b78-4c5c-a8c7-9e6a0f57eaca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff97c11-7874-4afa-a60f-65fc749d9233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484590f4-3639-4026-b5fd-a42ec8879fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dba5a40-6285-4b16-a10d-3d6ce457eaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3f95d8-1235-451b-a25b-22725db00f61",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683df341-d406-4e44-add1-0bf3a85b4d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480ea0b9-ba1b-4dd6-89b5-5d2cdf268614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5218f3a8-61a6-4e10-b9e8-b072a9360aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a7bdad-fdd0-494e-8f33-e45d9824a456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698cb52f-6eae-4d90-be28-8a37496ca969",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c6eb8f-999e-4495-b66e-4f2b2b877f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff334b5-618c-4ea7-becd-d9e1ee71de98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59244b3d-cca4-41d7-8fbd-0cbea6891f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cad36c-ce54-4015-9aa5-8b1b8de94ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4f385d-d56b-4760-9701-2f4d9186369f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ffa308-c60b-40f4-9a7c-3d4de7369fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b72462-dda3-4eb5-b7bb-5c9deedfe6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d422915-ff1a-4d84-91a3-5d98329d9839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72758e1f-bf21-483a-acec-e0ad68729927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5b8de2-d448-4f51-b2e0-49da64ccc52c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5ea9a6-5414-49e1-b23e-e90dbebac7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341ad99a-0026-4a15-8078-b1e98a6d450c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda67216-17b1-4687-8009-c8d60cba6b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f58f65-d209-4113-803d-266be27aac46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd9059f-4d4b-41ea-8fd7-3396906c12c9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3514b8b7-a124-4e33-a5b9-5ab09fb6100b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fdf8d8-5faa-4767-8c97-5488652d07b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57aa71d9-3cd6-4986-be17-742e2e395cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa8d7d6-cee3-4ab9-a602-96571d160f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2a4400-7e14-45a6-a918-ac4f862a7645",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d852c5-6ad9-405b-8757-12ea42b9c3f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e86e6e9-d53a-4e51-a98f-3aaa39d4de53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfc5e2f-d20b-4698-aead-7e5c508106cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d1675f-f1cd-4328-8b04-679f8adb9622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b54856-b6ce-44a5-a158-ed7cfe5193bd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0a6e78-88e2-4d16-9503-ff16834a9c50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4db0c78b-9046-48e7-9932-90c32841db4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bed7824-6540-49d5-a31e-402fb3445fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae266c90-f460-4d45-876c-9db6a724a89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f7435a-4085-42e8-9169-6cf2cfa7e1c5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5eae2f-ebe0-4a13-a85e-2cf9bc56118f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b940803-676c-4100-b6d7-c062d24f8700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee9157f-c5fd-4a03-995b-b46554132f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9185370-0f68-451f-aac1-4275b93721ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c237e5-0899-4046-b0f3-74d4f7aefb55",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67219e66-3dfa-4aae-9ae5-4240253aae5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b4610e4-4f17-4c7f-832d-18613e14edc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a556eb04-0c98-4ab3-a867-a921eff010eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6b14d6-a472-4292-a878-51079944f184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17c1bcd-fc88-4825-8f8d-e3c216053f8e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f975bb-3339-4345-9af6-8bcb75126c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178ad7b2-148a-4549-8313-319a24ddd0a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6213c536-4e5a-4902-905d-8b0910ead77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da6668e-7ed6-4475-a0b0-9737dfc6d67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fa30a1-38cf-4745-9fcd-01ee83befa91",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361223d1-a47e-480f-a693-3363aea33eae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd23fe8-3ce7-4972-bf56-155b5f75176c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5ff93f-01a1-4d4f-a0f7-9e1d64af67e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fcef92-e073-4366-82da-ddba86be6584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fafe363-bad7-4fa5-8af3-65d4517ac5da",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6e543f-cbcd-4002-970d-628ca3c13fed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40618535-678c-4b4d-bda4-1b836482b5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0427b4ce-1802-451c-bfa9-ab8da81090b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37d4fbf-7397-429d-afa9-66168a52b03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadb9d77-1366-44be-8c05-34d47321f2c7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90d9f8c-8369-4819-b201-fd1b183ee95e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfd99ea5-1a22-400d-90ed-ff79c3719930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c62738-d76b-4e36-acd9-6336ae645cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01dd1ef-ff3a-49aa-8d7a-5413265443e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5423177-02da-4073-b498-7c3d1cf734e9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5737ae-a69f-495d-be65-e96705a57553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8475a77-bddf-4744-a8f4-4e792e33809b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75ee657-898a-4477-bccf-f14f4076ab64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8fd4be-f4ef-4877-b0bd-636a3e8c9ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10353a0-b1c6-4e49-9de8-f0ee82bdca80",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0849fefa-9293-4f7e-a5e5-5db453666e70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b91cccd-bfec-48c3-b72d-126a3223e7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205b5137-042c-4b5d-a1ca-9fa8adaae994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322b649c-f403-452a-a005-0ffffda3e29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36f3978-8a48-4d61-8453-6379145a3d64",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cc6adb-fe72-4e53-ad31-9cece9165687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e35821f-5801-4e8f-9c0d-1292022397ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a931b47-75f8-46bc-9625-c05bb9d969b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff75cadf-894c-419e-861d-53c3fda75dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3573ce24-6db7-459f-bd40-5ccc4db4a45e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ebcef2-da16-49f0-b5fe-58d2b0744d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3bac5b-4b87-448e-865c-2d1e0e689522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057260ea-9148-4d3b-9f88-657a7630d323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac194b99-f639-4f79-94cc-b8f78ccf27cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5fa85e-1f42-4e8f-9853-cf68a00c316f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab8f333-b7b6-4914-999f-1c552b1e56e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87b7cb9-b8f2-4bbd-a106-9975295acbe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e98162-e74b-4384-a310-c460240bfd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3cf41a8-7c2b-467e-b177-b568c124dc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9fbb75-9a7a-4dec-bf4f-cc750405644d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33441703-626e-43c4-8ad3-cb80c970a87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93485b0a-6524-4d7b-970f-67853c44e1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6754da5-1360-474b-ad9e-6d37d29deb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d5f35a-8ac7-4eb7-9870-3040d6022cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d756a54d-4070-41b3-b93c-e2a96c78bead",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a4e208-99cd-4ddf-b71c-7aed38e3aaa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69724530-ec52-4697-bd17-944f0e224397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8117f3-32ff-4f42-af9a-57ab4bd83d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453d205f-f606-4669-bb0c-1f46196d0bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3269fec6-4f07-41d0-be79-459c3197498c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a777144a-6745-438b-bd16-a316304db239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7b6f90-88b6-4ad7-8765-f5cdcde3599e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d111f706-bb2d-4b3e-a873-0cc8f1cc2598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbfe437c-4c4e-44fc-aaac-c3f5b0d3f571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f316ef-36cc-4723-a203-3a55e3d1390f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b577147a-cc84-4c49-b09c-162cc5687697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0d2c6f-32a9-452f-a688-e8e881e441cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51b027a-1f1e-46de-b0f4-b5eb1f72589e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514f6bf6-eef3-4702-98e8-5e3e62d2269d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d14531d-64aa-4e1e-9ef0-77fa001cb26d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6857c7a8-80d7-4009-adac-43986f0471f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5b64f0-9cec-4791-a247-ce865f5f1f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e67eca1-a0c7-462c-b707-4d4a372626ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d9064b-6b1e-4521-ac9a-e765af4e8051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7235777d-5711-421f-808c-9fd811e5c2ff",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5ee251-da22-49a9-affc-69aabe098cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea7410e-a6fa-44fe-a1f6-ca8723c517f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff665fe-c5aa-4d0b-8d1b-36bfc66ffc53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62174982-3253-4fd6-9662-52e2318ccaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d591fb09-0d1c-40b1-b9cf-fa363326bd00",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f3f757-15d0-4bd7-a724-2c39ef59a555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5d58f1-2107-4e9c-af47-d817e6de5300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0236ddc-247a-48e7-aad5-5fc365aee30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6da6ef-d1a2-4be1-bdf8-9a6931171246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07907bc-b98f-4559-b5e2-db36dfd4cdf0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574588f6-0221-4692-a438-1fd88eb8d79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b595cb-b99b-4443-b1ba-3dc1d006d25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c59f38b-77a3-4b6f-813b-202d442976d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016f4250-669f-45b9-ba9d-dccf1fc545b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe141cd-7538-477e-8b39-97f68a66539b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bc5539-f786-4742-86fe-ba5f779c49a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2b3d90-84eb-4a1c-903d-513f94a4e63f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a403ef-92b9-4ec0-a8fc-ccbd878303b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12792487-7043-445a-8c23-8b6f3bbf7a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbfc0ce-686b-4c92-a08b-b447c7439e4d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95808e6e-56c5-4695-8027-410c2f16cefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a542df-5b79-43a2-b575-4f186713d415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73599c89-a517-442c-8892-8b0ce884d110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bfa1c6-bf2b-4fbd-a243-fbe70973f534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d932cedd-0910-494f-9003-d4c773adea30",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a73b1c9-a0bd-4a3d-a590-fc25f957ded5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c3ba35-4bba-4910-a719-c52817142a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0dbf693-eb42-4e3e-a089-980280de64bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3543eb-1f99-4596-9ff0-9b7c843fc213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e91bc08-95cd-4a3d-b7de-3e988f86502c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd66bc1f-c50e-4271-804c-b5d7c69ca1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4948cf-0239-4037-8ae6-1a5fdfa73f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b13549-2690-455c-9225-9739da36e056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f123eedf-a2b1-4ace-b63b-a85768c228bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2f02d2-cb18-4776-8184-92ee26d73162",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c70fd93-4ddc-465f-80ca-deab93d1415f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ad2b45-8567-409a-b7d0-19c4d8b5a47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d2aebe-dc6b-4554-96bb-f29355f70ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e86f69-8a70-4b4b-ba29-cdc180484f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d689ea-ad67-4e1d-954c-8aa73a984768",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3784952c-f993-4988-9810-d7b52007c8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c7bfec-3ab7-421a-bdf5-53bb7fc12d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d4cb10-8e15-457d-b505-625760b3f849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c160f7b5-b6ee-4b74-a3ec-e8afc9d5994d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13357248-5edd-4dfb-bd00-35639d0fc698",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4ca8f3-b6b4-4683-b879-8f3a47641523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9782cfd8-fac0-4c37-9b38-c28b1646c4da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fc7b77-82b2-44b2-aa9f-0efdc36c0e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7aeb9ce-fab8-4416-9152-abddab8d4438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d037f6e2-7824-4553-8151-133a7cbf137f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ec6306-6ba6-4e2d-b336-9d761931e3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e665b9-12f7-423e-b1c8-9007b108e230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f994da85-f857-4d62-b797-486d20cde8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49fab13-7ecb-4d03-92b9-18b4fdfc86dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efcc127-cf6a-494b-8218-fb8978d7371c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6797b4b1-d697-4359-9e7f-f03206f9a488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f052fd5-ef80-401e-859b-5a95c2a5f23c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b44619-9dcc-4ed6-91b4-3ceb1de3bd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829bc1fa-4a65-4d9b-9762-f698369d72a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e19843-beca-49a0-98a0-7e3d71810bf9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec950ce-ce44-4606-8599-2108d4cae7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a32c322-47ef-4941-92a7-f82e03456a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a8574e-b1bc-4c7f-b67f-7979f1101dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be59bc8-939f-4290-ac3c-45a2cb3e58d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b816930-7615-4fb2-b6b2-052388577580",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3704cda3-0e9a-4a29-bf4d-b22b0abf683a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f494233b-910e-49e5-a0cd-b104116d2e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7d40c9-f3dd-4992-b5d0-b94949a42c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e02f384-5dcc-4d35-b647-55b1b97d79da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ac7502-fdae-4a8b-8998-782cbed31a0c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63c268e-4731-4379-b603-a38f02fbc1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b91951-2e6b-4704-b1fd-54fb79d6b4de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6184ff-1155-4e78-8166-631bea85e36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f93fe1b-d582-4fe3-a8cc-f60b6389a350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c13922d-b974-4304-9f84-6c2be137e8ed",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb379db-d375-4180-a3b7-96555ed89d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b8fed1-995b-4154-964b-eb1f1c1ff351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb76ace-d78a-4b9a-adf8-a6267124575a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126577d4-4238-458c-8d50-86daf499c007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83547427-3e0e-4594-8016-28f45a606c0d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28db3825-9925-4f5d-a597-a634c59c24cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59856932-ac7e-4902-af7b-ed42a13634c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5f2618-8cdf-4356-a86c-c38fe1104139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f11411-5630-47db-b219-4ca453a4e9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e438d03-240b-4c9c-9a83-9c97dc579712",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4b5c51-ca49-4076-81d4-2cb46473ee14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1fc338-da81-4b07-b855-c47b2edf9460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b38777f-b293-4b88-8553-36ea4096c9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfcb1a9-b4a9-4404-8f9c-050eaf6fe3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2846d41-30b5-4950-a23d-549c9a8a1c3b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd638273-fc85-4cc6-9354-8c6607467e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9dc58e-1e0a-4c9e-a13f-847c43559908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0597aec5-d6b8-4a10-94ad-95540bd034db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fb6134-2d83-417e-a769-55127af68a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fa4c03-ffde-4a99-a6d9-d55247a11c20",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4265757a-330b-4645-a468-c92c432fca39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95668003-c6ce-4cc8-b222-18db81413c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25485d75-dd3e-43f6-96bc-263c565b3633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a68eb2-e094-47fd-85b7-bbafbc5edc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb18ed94-4bf6-4858-b31a-7f41fc46fa1d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff4cd43-5c5f-47d0-8162-4f931382eebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0503e0e-3a08-4ee5-ba88-ff8335beb9f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14c4f02-02c0-49c3-ae46-23d6bc12f0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79245d42-b071-487a-b157-c7da3c0fa291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f88859-b64a-473c-96f4-b320037d5d34",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8564eae-a703-41ea-a51a-51039a196e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c656bfc2-bb13-420b-9962-dccc4ed19bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7dd68a-ea59-4bf5-aa73-8f9d77e81cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b8cb50-ef54-486b-8951-5b28759cae4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ef9643-4795-44bb-9086-f69b036cb5bf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67a7a5c-51fd-4666-a47f-fc7b41bb6360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d08e847d-e580-4a31-8e37-56eeeae34b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db64f75-ef6d-4f26-9886-81ac01ef0453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55433dc9-8fae-4799-9e30-fdd196e99dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe18673f-c3d4-40fd-bb5d-e1a7b01de4fb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ff4df0-602e-4614-996b-cea86dea1206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2257422f-3659-4df0-8388-bbf73d59d93b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da7afee-16b1-44c8-a2cf-019fe5d06dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b329b7-c68d-4dd6-bea0-9a668d9852b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb08a2d5-c1f4-4e0b-a69d-274b013bbbce",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31657feb-1215-4b72-8482-a1d5ee3e28bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232213b0-4673-4815-b234-26347e07ea16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af80c30-e6cc-45e2-843b-34cd1b98d930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da57b4f-e714-4d8c-bad2-d97b066c4fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca82d18-8ac3-465d-9e0b-9aaf06c3f819",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cde83e5-16e2-47eb-adc9-01d032012de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c359e04-6381-4cf3-ad86-8e3399043d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8dfeab-7dd0-4c32-b2b6-8820b9f8c1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629391bd-c4fe-4ec9-a217-57456f726417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1c9444-9fa7-4f69-9f68-8728dd9a8714",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afdb222-cb43-46da-9dd6-807b1d7eb304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a757002b-a1f4-4c0b-85b7-b40c387fea9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f4a557-beb2-43c4-a2b4-04248bce14d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb50341a-3970-4ae9-98d4-6d695ca88f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8810de1f-bf7e-4aa0-b74d-4ad313bc4fa8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c399510-cd30-4adb-8546-95e3bab7db26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed7e143-62dc-4235-98ec-79f97095f726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea77c2c9-4371-4bc8-a273-a855d1d1b41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca3df73-a592-4cbc-b7fe-9a8e2984795d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d916af18-59d6-47c3-9537-dec911923fef",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6dbf83-8f21-41ef-87ba-869f1eb21df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd68ae2-badf-427a-a12c-ab7846ce2884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b941a37-db60-430c-b432-32dce1bc87ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be94e9a-bf0a-4303-a43f-1da22a4081a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc07028-794c-4507-a7e7-d5f9cbef3a5e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb955ad7-6d19-40cc-8cd1-927bb6f012c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e06b3796-7857-4d09-b47d-c7347af09b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a782b827-1f5e-4d96-b7a9-1cbfb19170dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec404258-4f5a-43d9-abeb-0a3856405860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae07fe0-3465-4699-bd5f-aee90c1f6cac",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ae39f9-170e-4337-a5bc-caa1ff12dce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7363d192-d4a9-4ede-a055-cb902b68e133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ad263a-d105-4dbd-adbc-c4817c48dcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35dec15-6c4b-4025-999c-a0e8ccc7e65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53841bca-e5bb-4057-8c94-de6c52f975f2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0be9df-55c4-4733-87fd-84f98fa64fd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef624653-5bc4-4b1c-bea0-576a8d93bc90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e01c71-bf3b-47ef-92a6-88eea4dd271d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7673e3-9069-46b5-9a8a-8720d1e9f675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5441cb80-5b20-4f56-9e54-ad3fe3c486ec",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967e563f-dbac-453f-871f-faef44c23508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46c08711-4b27-48b1-b46c-1fc3ebf3ecb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1c01ed-f3f2-4eb1-8347-d26e94ed4aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0045817-7585-44c8-84e2-97c4a50ee1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb4b6c0-9f9d-429c-88e4-48e6f062230b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e765d43-6e9e-4f2c-9bcd-0d69550d5ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "556cdcf9-65ee-4f6a-9364-02d25fe94ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3d280a-bb83-4ac6-838e-ae2c28daeb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c763be9-5295-4249-b188-7b7ce8a060a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db95e21a-3558-4fcd-9163-519abf04568b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78462c34-655c-43bd-a9b1-0d9678ff0f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad582e84-0dd6-4288-8e56-8521b1550765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60485723-6af6-421b-be8b-589526726ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c237bea9-9a0a-4f64-a0da-73babcd4e061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ac2a62-badf-4803-9fc1-04b144de57f3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d6f065-15ae-48b1-adbf-decaa8e40483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e96462f2-03ec-4300-9485-59b7c5fd419f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2881ac71-4e92-46fd-87c4-f853c5137ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc4483f-c4ad-41f1-bee3-b9b51736fcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3ae807-9ee3-44c9-a7c8-4e4526535a84",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25f8fe2-bab3-41b3-8f60-8cd97c88a672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e5c500-6728-45a4-b8d9-a587870dd736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90c9fe1-1669-41c1-a790-ee968b11e319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3a436b-858c-4306-829c-dda5c734b2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c64588-14dc-4867-b6c5-da53fdeac563",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcff5847-184b-44d8-8fb5-205305c245e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eadd8c67-6b1a-4efd-a2bb-ab512a03eef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d201af0-81b2-4754-8fed-4942caad31e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83896648-9a5f-4fe9-8425-159f2fefbe91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6bdb35-de24-4bdf-bde2-012e83a56228",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c37fc4-9d6b-4363-999f-0d89983e760d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5125c3cf-e39f-469a-b965-fd671c79a48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371f2f47-e309-47ab-89c6-0d38b51c5399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e8de62-6c10-4d93-b1b6-89d3d0f5e6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b40277-566f-4d99-a403-6713a96a9d0c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ae2664-6ac9-4da3-9b40-2b8398811c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c8191d-a7a9-42a2-9ba4-60aca96fb939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cce4420-cf58-4cc0-8a21-bcf101d16ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fc8e21-3ea2-4c45-b592-b891f1b10928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0f2f54-308d-44e4-b0d8-d055ba675f1e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0e0e67-9ac8-4a82-8e19-b6bef602c2f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7895697-684b-4ae3-8d3c-bafc7c884e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad47d47c-c4e6-47db-bad2-dc09f053ebfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9420c338-a1e5-4fa6-810e-d48982049909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea183bd-4392-4f25-9ce7-ab1a2a6bab4d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634f09a4-6641-40fa-92de-455914feb88a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f36c7888-164a-4778-8901-cdd8e2cf76ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b21d868-8218-4fc2-b59c-45d746fc0bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe5e246-c508-4ca4-bf39-f41117722518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe675b8d-d670-4bdc-b20f-84864e1f7fce",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40958c58-0550-4e74-beb8-7fc24e4e619d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd748cc8-7e04-48cb-a3e9-ca34ed800648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c33c45-980a-4b4c-87d9-ff8744122a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebfd1c3-0477-4292-919e-75f9b213020d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0925ac42-7e5d-4de5-8f6a-0ad8796b5d3c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab9d324-1a92-4655-9ecf-1777ed5fd243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a920eeaf-0cb4-4559-8d1b-8a02e6eea089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8029a797-3706-4c39-96e1-873e43cce90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27bb626-1d84-47ae-9feb-c21e6e0f6a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47883d4-1871-4c8c-96c7-251cf744a086",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6cbed1-f9e9-4f56-894a-307378fd1fff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7413d120-12cb-4841-99bc-47934a506918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae801d6b-e38d-4dd7-9040-ce8b527891e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c6beac-01c0-4086-af51-235a9b9b40db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930ce6b9-0a14-4c6b-ab38-da486358b706",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558d5b1a-2c05-4aa8-965a-18922323f04a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4f5229d-575f-4999-8126-6da5570c0288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e833405f-62df-4098-8e2e-801a81853206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e2826d-eace-4c1f-96a7-f95ff2e66b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67529e90-a782-4fed-885a-a750fc069132",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b257caa-006a-44e4-9c78-8b05f506143f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0a79995-e867-4bd5-a3b0-d019f764093e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2829f0-e21e-4c60-bdc1-aaab09da6e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18835368-58f1-4423-9597-0216b55a2103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2b33ea-cf45-48cc-a789-39ed7245bc6c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffa98ad-6cc2-44cf-8a50-3c68b72ce751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e6c6f7-eb12-466f-8ff6-282a64714ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bb7330-df1b-4f08-a425-e4b9ce533700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55a0488-1c9d-4f01-b777-cb2cb566e73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1450a10-cd64-4561-a4df-0e85b92fb7e6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f0bd27-4c51-4bf2-9bcc-e19dd2178e6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "317c122a-e59a-4bfa-bc8e-e36daad05e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df2f2c0-988c-481f-9229-2116a360ea07",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c086acc-b391-4073-9bb3-9e31f220f20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8501dadd-f93b-4265-8d77-5d8fe8c90a0b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66812c53-d4d7-46c3-a328-df8294994cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af562ed5-a943-473e-b3b0-c3a0af6c984d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129fa4e9-83c8-4647-b10b-4c712b0d138b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64945795-384d-4e28-9a71-f766f3f0c613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3038ef29-a3c4-49f7-b8da-dbf3c63df919",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01ff99d-b952-44ce-80bc-b5b4142635b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e246671-4b20-45cb-b766-f2dce084ec13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50e5de8-0ed5-4c12-9ab7-999c930923e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de49ff4e-0362-4927-a4b9-41ce3e5f3745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adecf813-83b9-4d46-af1d-fa51cf63bfad",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f917cf-e90f-425d-9050-768e6624a818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbe487eb-58e2-4e20-81d0-f99aa5112636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d41bc9b-1b87-453e-b050-d5685852f338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e3c70c-5e2f-48d0-96a9-288643b86f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d53d588-9f60-4b63-a69e-7019073766ca",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cdb645-7b03-417a-bc58-73375596cdfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c09294bd-16ca-486b-b704-fdca66b75f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b711e8-0516-4c34-ae77-bd0c29ed8e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c9b929-c4f1-44c9-aecf-6b5532d7b134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3749ab-3753-4e02-bef7-68f9e01e930c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9d6223-9c5a-4cf3-b8ff-d3f42072c373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb40c9a7-64d8-4e0d-93dd-53eac1d55797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5ee02a-3510-492f-bbb4-34de77ba112a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced3123c-76c2-4846-93ec-2241cdec6a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9b282c-3d9c-4da3-8806-34a1657272c4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72afabae-decc-4b1a-9a5e-babb54e44027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26fec691-f330-4f37-bd81-508bf6387bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85d61fa-4aaf-4b9b-bd34-ab4f54a08658",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f04cd4-0b35-4328-ae36-dd07078d874d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79176d8-3d5d-46a8-a82e-67a022cff472",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74d2ee0-112b-47d5-9d59-dae04c79dd18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c669d4-b9dd-4973-8e38-f0d6b9d6995d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d71974-358a-4924-b10a-a3b0500f41fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d363c15-187c-436c-a1fa-e5acc5e0c728"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee064b09-6e54-42f7-ba8d-28e3e6e03ff4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7619f678-b23e-4ee6-82db-786d52fe98c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24e59f70-7ddd-4fb4-9587-5ba3492e9f6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e937b769-0761-434e-b859-287f9fe9b9fb"
                    }
                  }
                ]
              },
              {
                "id": "3390b041-27da-4db5-b07a-3bd396e482d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "583b8adb-b85c-454a-a0ee-055062a758ac",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98188f0c-d15f-4b5f-bce9-68494f3387eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "84eab546-2281-4a1c-9912-f1607bbb7c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d0f347-392e-4052-a6b4-6e810fda3c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfa140e5-48ee-4936-ba6a-84563d9d8e00"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf3dd603-d7e2-4c94-a73c-7031aab5753c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49c4368e-a031-48d6-99b1-30525d2ceef4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ec04e06-2cc0-47ce-a0ad-e076276684b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73d0d2e4-e9d1-4e58-a9db-015a06b51c01"
                    }
                  }
                ]
              },
              {
                "id": "903c44f4-f23e-4fb6-adba-cd80d05631d5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "93af5d79-e210-4770-a790-0f7992d504cb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badc7580-8591-4a78-8fbe-d900e343188e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0aeca9ba-08b9-4aa2-b3bb-415a46fd8765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0b26c6-218a-4aa2-b77d-7130b42599fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5285b71-c137-4ee6-b3a9-83777956d54b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fe86f22b-ba15-4a81-9c4b-9f5d05566712",
            "name": "Positive Testing",
            "item": [
              {
                "id": "57bdf06a-91e8-47e0-9dea-6f355e39e193",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ffa0039-ed0f-434a-a391-132479396bf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4508be67-5ea1-4ada-b4a6-5374f640eb54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b69a2082-10ab-4f2f-975f-c1ca761c37ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "038eabb2-a488-4135-82dc-a2f2425d677b"
                    }
                  }
                ]
              },
              {
                "id": "81b3cf11-4cef-4275-ad42-e06d7b3abbcd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42799346-2adb-468c-b8ea-a7827eaf94db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3ab04dff-8069-41d1-b383-2b3044ebda57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b17da966-d90d-42dc-b530-9b29b8bc401f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfaf69df-d49e-4fa5-8f89-c8bb361813c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a5babd7-f447-4c3b-ba53-9f3db828138e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bcdd7fd2-24ad-4d61-974b-a4df7563e9be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "309cad3e-fd0f-4a73-bc28-2e5571776c48",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "922b1d05-b813-4f94-9682-76c4d29d7999"
            }
          }
        ]
      },
      {
        "id": "239cbe58-2db5-4c0c-ba38-c69cc188d318",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cc5752ba-f723-48d1-96cb-1f5c411f3672",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef11763f-0a5f-40e1-b061-51fa06b4e077",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04cb61b2-5ccd-4455-b73f-363ce299eeb8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cf35c5-f48b-4b6d-8d94-fe44984a75d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "90035b82-8587-4844-86ec-08014ce574d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555151f7-4ec4-4756-a9a9-be3eeaecda32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "347dc294-10f4-4617-811a-2b33d4a7f1d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42d7fe17-8b62-4758-99a9-7c35bf8e5887",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53263ed1-cdfd-4f21-b15f-17910fb775b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78f0757f-1a5c-4e56-ac2d-2ad6fe0cda59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88440631-d389-45cd-8425-839aa3510e0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2bf1521-5d0d-46f3-a176-c13cd8a62086",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7f1f7619-200f-485a-a433-1666a76e77c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea9c78a9-4bd3-411e-8266-e48a535e5a97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30db9978-c266-4bd4-9e74-67df418b5513"
            }
          }
        ]
      },
      {
        "id": "8cb0fb38-7506-4d14-ba8e-6892341a5f81",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0796d09b-7922-4221-b93a-c7254a00e108",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68e785e2-ae88-4d03-8d61-7abe163f4029",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54e6acf7-b27e-4975-9bbd-f4c854cd7bef",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016b1cfd-0c0b-4009-bc77-cbf8a45b2da1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02249f97-cff2-47dc-b947-9a91e3dd49bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1e2a95-9658-4204-a0f1-a34957a760f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "827703a1-49a3-47e5-9bfb-811ccbe2c94d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6d8197c-2b44-4a46-913f-c647600387a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2a5a9ae-4c12-4314-be11-17c44e258fbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e21de8f-6885-4a35-af31-63c7964a35f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03b0e187-3373-45b2-8bd9-ca0d73812fe7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91173797-8723-486d-bca2-f8f643244192",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fb18c572-9371-46a2-aa1d-6e9ed50c4ec5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65af3925-79d8-4aac-95b2-1a481f0a19cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12032f03-bb37-4b0d-983c-30a7fbb46131"
            }
          }
        ]
      },
      {
        "id": "0db4ffe9-321c-466c-a81f-ebafb3591007",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "df2cd7f8-a587-460b-9366-06ef267539b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57532540-6796-49c9-a561-b13876203805",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8025b4ad-2c56-4c0d-8bef-aec507f5eb3d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ff5b75-4014-48ca-9052-e87f1a2ca31f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c99c9b2-098f-4baa-964f-7944c5df6b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c36d3eb-a157-4877-a5dc-63e1bfa7bc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b77e36ef-6f0d-420e-9cc6-0c3822cb364d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "649ac91a-4c52-41ac-9c98-22abbe087793",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecc91b83-8eb2-4104-932b-faa511526a0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bd9154c-139b-440f-8f6b-6156c81d2e26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8369d070-76c5-4a1e-a13d-1ca14238e9e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da9b408c-d143-4481-ad8d-df66a7229849",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6c4b529c-06d5-497e-8923-0b99e1d255ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f9a5a0a-62dc-4d8a-98be-8be240be0742",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3908705-161b-4449-b677-607572b1ca8f"
            }
          }
        ]
      },
      {
        "id": "c58acc02-d7b5-46d5-81b3-d06660bae5e7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7870141e-a27c-4dc9-9df0-c408bfc32e5b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5bf8896-6883-41c0-bbc8-d0fd47914398",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c2ea5d80-8754-4595-95f2-d17d32183e1d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7705c90d-34f4-4103-b2de-227246244e69",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d14fd48-f101-46dc-a4f5-c31c8a6310ef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.47017543859651,
      "responseMin": 5,
      "responseMax": 597,
      "responseSd": 35.078608290785226,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699835735618,
      "completed": 1699835764384
    },
    "executions": [
      {
        "id": "a53958fd-70f6-45a6-ba29-1cf9e43173bb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ee1016cb-6714-4d5b-98e6-ad8af36b7e4d",
          "httpRequestId": "601d9b18-6742-40c4-be2e-4ac5f54082fa"
        },
        "item": {
          "id": "a53958fd-70f6-45a6-ba29-1cf9e43173bb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e2beb761-a0a0-41c1-99f0-fd9e8834565b",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "fe567c1b-4df6-4243-aeac-cf38507626eb",
        "cursor": {
          "ref": "c458ca6b-d9b5-41fe-bad2-ea721820c7be",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1a3adb58-55fe-432c-b931-9c1503b00bd9"
        },
        "item": {
          "id": "fe567c1b-4df6-4243-aeac-cf38507626eb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "69c450f5-2392-42ea-8225-fbb2b8a0d1b7",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "c8474e3c-3cc9-4ab1-b71e-ee859f5a7e17",
        "cursor": {
          "ref": "f94a0688-261e-4d3f-a8d7-91a32c4c073c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2fe09156-9fd1-4f6e-98a3-817b9f6c528e"
        },
        "item": {
          "id": "c8474e3c-3cc9-4ab1-b71e-ee859f5a7e17",
          "name": "did_json"
        },
        "response": {
          "id": "3d2c358e-2818-4f91-9354-ec588bee328e",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7413e345-cd22-4d96-bcf0-f957b3805f3e",
        "cursor": {
          "ref": "4da60217-b900-4bf2-9a12-60c10163ba0e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cbb7aa4c-0509-40cd-b72a-e65a6cefa15f"
        },
        "item": {
          "id": "7413e345-cd22-4d96-bcf0-f957b3805f3e",
          "name": "did:invalid"
        },
        "response": {
          "id": "d6f731b4-1535-4009-9813-2647afb2c2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7413e345-cd22-4d96-bcf0-f957b3805f3e",
        "cursor": {
          "ref": "4da60217-b900-4bf2-9a12-60c10163ba0e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cbb7aa4c-0509-40cd-b72a-e65a6cefa15f"
        },
        "item": {
          "id": "7413e345-cd22-4d96-bcf0-f957b3805f3e",
          "name": "did:invalid"
        },
        "response": {
          "id": "d6f731b4-1535-4009-9813-2647afb2c2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaf04e9-1004-4fb7-af04-e2ab306fbb8c",
        "cursor": {
          "ref": "e8954d93-d859-4142-8312-60947c2292ec",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b5ea3b86-0ddd-4110-aca5-79fb38945994"
        },
        "item": {
          "id": "eaaf04e9-1004-4fb7-af04-e2ab306fbb8c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1ca8a208-5ebd-4ecf-9dbc-e3776962c948",
          "status": "Not Found",
          "code": 404,
          "responseTime": 108,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbef8db-d627-4412-b819-137e311515f6",
        "cursor": {
          "ref": "00976db5-3a71-4bfe-b0d9-5cb1e55cadf8",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "49007a30-f740-409f-b8ef-ccc975d780f3"
        },
        "item": {
          "id": "ddbef8db-d627-4412-b819-137e311515f6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "70484236-d8ec-4e41-b2e7-7c97fc352ad4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab67aef-91df-415b-8404-01d651c3fdbe",
        "cursor": {
          "ref": "e496bd04-1545-42c5-a011-1ca75018bd55",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1d3cb091-af45-4342-ac06-ca52200e54ea"
        },
        "item": {
          "id": "7ab67aef-91df-415b-8404-01d651c3fdbe",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1153a230-cf1a-4d03-b806-62f668895680",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0e3280-2432-4555-8dc9-8275d3b52ce6",
        "cursor": {
          "ref": "23d08300-62a9-4ad2-9629-f3e2104f3bad",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "75aea3e5-de3f-43d0-92ce-dec629bd93d4"
        },
        "item": {
          "id": "8e0e3280-2432-4555-8dc9-8275d3b52ce6",
          "name": "identifiers"
        },
        "response": {
          "id": "bef0d079-30f1-4d17-add3-ecac3194a6f7",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f53d0bd-5f99-4d9a-8ce9-a12451de3b46",
        "cursor": {
          "ref": "c3528e03-499e-4afd-b3dd-e00f81f1b05a",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2ef04b1b-7f66-4e6e-b9fc-064ab644f6c1"
        },
        "item": {
          "id": "0f53d0bd-5f99-4d9a-8ce9-a12451de3b46",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2827da8d-5c47-489b-ad18-6021bd5fd201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5eccd3-8ac2-4bbb-96b9-a61f5018085d",
        "cursor": {
          "ref": "5b3b5d01-a201-4b92-ab8d-614c614ae7de",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a33cb266-3457-451a-bb23-3c776a3647e6"
        },
        "item": {
          "id": "2c5eccd3-8ac2-4bbb-96b9-a61f5018085d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d3b379fc-10e3-4713-a04f-4cfaa702f819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63d4972-6e22-4588-8099-4fa061edb9f0",
        "cursor": {
          "ref": "e2138b07-3aae-4517-aa08-e1d7fe15e930",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8049bfda-5844-450e-8a0f-4cd7dfa477c5"
        },
        "item": {
          "id": "b63d4972-6e22-4588-8099-4fa061edb9f0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "faf22cdb-7e37-41d3-bcc7-59edd0915db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a38beb5-9d15-400b-a20c-f748815d6845",
        "cursor": {
          "ref": "c8afceeb-0247-4282-8856-ac83bd648cdb",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7f5af05e-da6a-49dd-8ea5-e4dd83591d31"
        },
        "item": {
          "id": "5a38beb5-9d15-400b-a20c-f748815d6845",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7585901d-97a8-4ef2-aa79-eec79dcee896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61b7098-3e3a-4970-93de-cc82e1839fc3",
        "cursor": {
          "ref": "9ff07d74-4c27-46c2-ba70-a638dd613f89",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9661320b-1df4-4248-bace-d8b201234266"
        },
        "item": {
          "id": "d61b7098-3e3a-4970-93de-cc82e1839fc3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "60594d6c-1f29-4344-8141-cee85b984077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b369fe-156e-46a2-9789-4b06c9026214",
        "cursor": {
          "ref": "79fa5485-c822-4dbe-926f-cb74ab239c2c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8b0b37d0-f633-4c03-8c45-c675b7ab670a"
        },
        "item": {
          "id": "01b369fe-156e-46a2-9789-4b06c9026214",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "333ef719-cf8f-43f9-9ee0-896bd72d509e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee2a7ee-cbef-4fc0-abb1-0cf8ab3b0013",
        "cursor": {
          "ref": "e3ad14ac-5323-4798-b8a2-94e6dfcb91e6",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e4103ae8-b861-4359-ae5a-38775830af95"
        },
        "item": {
          "id": "aee2a7ee-cbef-4fc0-abb1-0cf8ab3b0013",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "33ecf2dd-4b46-4523-9d19-e6e10ca15b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedc96c3-5d39-46c7-983a-5e55f4c4b2b9",
        "cursor": {
          "ref": "39d7be99-c213-44d5-a4ec-d585fd3404ae",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6284929a-cdb9-4164-8b19-65d9ff48addd"
        },
        "item": {
          "id": "cedc96c3-5d39-46c7-983a-5e55f4c4b2b9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9a31fec8-86db-4bd7-9b6d-c62243de55d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24481269-27a7-4cc5-91ba-ae7f33c29e8e",
        "cursor": {
          "ref": "ea16ced2-811d-48c2-85d7-7c94c7b43383",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2ae1ab93-b836-442b-8b95-9659aabef820"
        },
        "item": {
          "id": "24481269-27a7-4cc5-91ba-ae7f33c29e8e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "50d54918-027c-4e7f-be38-7b56f21a883d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a099fcc-42eb-4b57-89c5-2e09416f29b5",
        "cursor": {
          "ref": "55df90e5-7adb-4caf-8b8a-aea69aeb73dd",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1359234f-8be7-412a-a21e-1a8330522eac"
        },
        "item": {
          "id": "5a099fcc-42eb-4b57-89c5-2e09416f29b5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3f3c4d2e-0063-4494-99d5-e4a87338936c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b35542-7607-4c45-b452-09a4c0947eff",
        "cursor": {
          "ref": "20dcface-74e7-44f2-8a60-fda807ff7961",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "588b543e-7a9c-4b38-85dc-da1d7daf3634"
        },
        "item": {
          "id": "59b35542-7607-4c45-b452-09a4c0947eff",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "32882372-13cb-4dbb-8f58-9313b458d890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78dfca8-2eb9-4df8-a627-3b677d651b94",
        "cursor": {
          "ref": "5895894c-ff71-43f7-ae22-7c0a29142e33",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0fb28fea-edec-4661-9046-6b0ca99e2baf"
        },
        "item": {
          "id": "a78dfca8-2eb9-4df8-a627-3b677d651b94",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0041b8a5-9d49-45ca-ac50-8012ea4e5d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a338a5-ba5b-4307-8b6f-3abf64382427",
        "cursor": {
          "ref": "2e9a6e9b-303e-4a19-a43f-c0359fadf195",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c7d07d43-8f4c-4c16-9861-9d3c7d867697"
        },
        "item": {
          "id": "37a338a5-ba5b-4307-8b6f-3abf64382427",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "18d5da90-cbb6-4d65-856b-d6ed238d8443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86592e3c-9157-490f-ab58-95f71c754c6c",
        "cursor": {
          "ref": "60bc7894-d082-44cd-8a0d-bbfb9c12f046",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "60d7e55e-08f5-4bc5-9ede-9d7a263a3709"
        },
        "item": {
          "id": "86592e3c-9157-490f-ab58-95f71c754c6c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "978bfa4d-4a61-4b19-8914-a3e53886c930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c943c9a7-bf78-4035-a7df-8763984c637b",
        "cursor": {
          "ref": "1667bad8-ae4f-41af-8c2c-ed93e021c3ac",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b3685788-5917-4566-888f-e89fe3a1e2ac"
        },
        "item": {
          "id": "c943c9a7-bf78-4035-a7df-8763984c637b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d16b11a6-996b-4837-83a7-b919ecff2bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9675b17c-67b2-4de7-bee9-c9e3635d8f91",
        "cursor": {
          "ref": "68a1c339-731b-4eab-9dd4-0e7e3538b98c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e819d2ec-9452-4ae0-bfd9-185ec1c66c15"
        },
        "item": {
          "id": "9675b17c-67b2-4de7-bee9-c9e3635d8f91",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0c660bb9-c0cd-423a-95a1-25276fa6610b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b550f72f-ec3b-478b-99d9-6312804d2d15",
        "cursor": {
          "ref": "e3d55cfe-634c-43f9-91bf-e7fe8fdb79d3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "25b6614e-1266-4e93-9cd9-bbbb12ed390a"
        },
        "item": {
          "id": "b550f72f-ec3b-478b-99d9-6312804d2d15",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "89773126-618a-4003-a58c-da4e6766c4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a895e7ce-5b86-4963-8ede-fa9d589b8dae",
        "cursor": {
          "ref": "f6d90540-23eb-4b29-90e9-3dc30ba2523f",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "eec0508a-6eca-466f-aecb-48f317813cb5"
        },
        "item": {
          "id": "a895e7ce-5b86-4963-8ede-fa9d589b8dae",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "021e7d7f-1986-486c-9ad5-cea267abb18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad1b4b6-fca4-4ec6-9759-1afe19e1d4a0",
        "cursor": {
          "ref": "eacb44c0-94e4-4e53-a14e-2b9ddf0611c8",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "822cf1db-e8e4-41ab-9cb9-4c7490ffbcdf"
        },
        "item": {
          "id": "3ad1b4b6-fca4-4ec6-9759-1afe19e1d4a0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "963bc98b-76ae-4ec1-8614-408c105627c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d844ca63-23ae-447a-907d-f5cd5a58b67c",
        "cursor": {
          "ref": "274e7dc4-ab31-4786-878e-95fc52933466",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9bb9b07b-729f-4833-bc44-230b7ca4da01"
        },
        "item": {
          "id": "d844ca63-23ae-447a-907d-f5cd5a58b67c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "86edb50a-8d12-426d-8559-1018f1cf838d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c89111-e9cc-4f6f-9aa4-5ac4c6922c08",
        "cursor": {
          "ref": "a2e96e22-a148-4915-814b-c06ae76c70b4",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "85574762-e2be-4878-b5b5-90f93554de83"
        },
        "item": {
          "id": "e5c89111-e9cc-4f6f-9aa4-5ac4c6922c08",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "56421af3-dd8f-461d-a5fb-fc92e2feda89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b27cd0-7603-4472-a669-eff8777a0947",
        "cursor": {
          "ref": "5c3470f4-582c-49e3-9aa2-aeb430c25584",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "59cacfa3-f6f1-494a-9369-a61948638808"
        },
        "item": {
          "id": "e8b27cd0-7603-4472-a669-eff8777a0947",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "970da2e8-e26b-4fbd-a682-aa7871ae420c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00634504-c338-4e0e-bfb2-8c9a1892f17c",
        "cursor": {
          "ref": "5a9d63fb-08a5-4b26-b486-63a5796c5015",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9c9f5c34-ffb8-4788-9be5-7f2cae164131"
        },
        "item": {
          "id": "00634504-c338-4e0e-bfb2-8c9a1892f17c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0dbf19b6-4fc9-42fb-a7f2-afd1ef0be1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ae3d34-f87a-40e2-bdc6-7e9e52d9cc66",
        "cursor": {
          "ref": "e4633183-66e8-4020-90f7-a3e118cda8fd",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4358bd5e-ba00-4adf-be87-5b4d767d60ad"
        },
        "item": {
          "id": "e8ae3d34-f87a-40e2-bdc6-7e9e52d9cc66",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3e8c5f72-6a2c-4e2d-9c2c-4536530bc892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae20976f-7b2c-4636-9c78-faa12f23c2d0",
        "cursor": {
          "ref": "c5300577-dccd-4510-8b5f-2537292b0ac3",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "52af29ef-70c2-4a46-928f-1a9f61f79cb2"
        },
        "item": {
          "id": "ae20976f-7b2c-4636-9c78-faa12f23c2d0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f52a65d0-8fce-4333-8907-43f329e7c6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b5d5cb-f700-41ac-a1c9-73d790bbcf2e",
        "cursor": {
          "ref": "6ce3a24a-e370-4829-84b2-2e05233c63f3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1e0e8de8-4cf2-406d-ad8f-0685205e6c9f"
        },
        "item": {
          "id": "c2b5d5cb-f700-41ac-a1c9-73d790bbcf2e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "27050e9f-b0de-4d30-b06f-3d8c3c2c4b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3e7f62-ae75-4685-9ffa-7de5d6080110",
        "cursor": {
          "ref": "6d6a26e4-5b8d-407b-86e2-ac91a6b5979c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cb048bc4-a211-41f5-96ea-9917e80e3111"
        },
        "item": {
          "id": "5a3e7f62-ae75-4685-9ffa-7de5d6080110",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c5923f6b-08f8-4382-9794-e1b4f09f8fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c33d7d-f8a5-4bcb-a8ba-a9f58093b394",
        "cursor": {
          "ref": "64ebc755-f191-4066-a64b-00b9647e9820",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7170ecb6-4050-4f71-8b36-d05b34ef5945"
        },
        "item": {
          "id": "09c33d7d-f8a5-4bcb-a8ba-a9f58093b394",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5e5a49c1-0d01-4965-85b1-542d39fb85f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b0c5e8-085f-4e1b-8c65-7b5b654b1da2",
        "cursor": {
          "ref": "25e5f93c-bbe4-478e-bc5e-94232a658320",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6519850c-ddde-499c-963c-d235661ddc5f"
        },
        "item": {
          "id": "89b0c5e8-085f-4e1b-8c65-7b5b654b1da2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "793fde7a-5bc4-4f1f-a02b-3cbc8ba0b4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1de98b0-194e-4c70-8f4e-3f5bd86d4d71",
        "cursor": {
          "ref": "82f91a98-7f06-4bed-976e-36ea4df75016",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5b98e7e4-7ef8-40a2-957b-23362cab23cf"
        },
        "item": {
          "id": "b1de98b0-194e-4c70-8f4e-3f5bd86d4d71",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1c5be11a-72d1-4227-9f1b-c7b28d97e3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b0da39-ea28-4b97-9875-429713667e67",
        "cursor": {
          "ref": "74d468c5-8675-4d26-abc4-e1251625f626",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "341e1b70-9486-435b-bfcb-48ca15327864"
        },
        "item": {
          "id": "72b0da39-ea28-4b97-9875-429713667e67",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "132982aa-7bc5-4cbf-86be-024ffc226441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465e25cc-e091-409d-ad3b-21bb610bc904",
        "cursor": {
          "ref": "d92bbaa6-4ecf-4e81-b9ee-2c24e6c7ce2e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "db53f603-0941-4c12-8a3f-69d07b33be16"
        },
        "item": {
          "id": "465e25cc-e091-409d-ad3b-21bb610bc904",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cd5a20a6-8131-47c8-bcf4-3f44503bc971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359a3ee7-647d-4f35-afab-eb46d7289f54",
        "cursor": {
          "ref": "c751ca70-3e7d-40a1-8b47-9465a9edc2d7",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "85cef79b-53bd-4935-af99-421203d892a8"
        },
        "item": {
          "id": "359a3ee7-647d-4f35-afab-eb46d7289f54",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b9db29ea-7410-4554-8014-dc0e19243ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6f70b9-43bd-49f9-895a-cbb6e8bdf7cd",
        "cursor": {
          "ref": "658d0bee-70fd-4183-9413-4124182147bb",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "05ce56b1-4ee5-4da0-9404-9d4c68ad4fa5"
        },
        "item": {
          "id": "ab6f70b9-43bd-49f9-895a-cbb6e8bdf7cd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "64e90265-c1e0-456f-8c09-6acf9d5bc74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe1958b-9c9f-4213-b26a-7f5235066672",
        "cursor": {
          "ref": "030d6039-d7ec-4f44-9212-34129e395684",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "03d79b18-f817-41b9-a773-80100342f99b"
        },
        "item": {
          "id": "1fe1958b-9c9f-4213-b26a-7f5235066672",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "de1232c7-db73-46ab-bb47-5293a708039e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b466b8a-40e5-4f94-90d8-059dcb9805db",
        "cursor": {
          "ref": "02c09ffc-ac76-4f47-b44d-32582a9f1e76",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2726bdaa-cec3-435b-a1dc-c3df3fb31b73"
        },
        "item": {
          "id": "6b466b8a-40e5-4f94-90d8-059dcb9805db",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "93b2d73b-8a76-4704-bc7d-6f985c2ed565",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 97,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10e0d49-e0f3-43aa-9b45-66ed327dfa36",
        "cursor": {
          "ref": "2dad26e2-6477-4571-8265-f1866adadea4",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cf216f5d-3dc7-4d48-83eb-56c2ab544201"
        },
        "item": {
          "id": "f10e0d49-e0f3-43aa-9b45-66ed327dfa36",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a32deec2-26c1-4753-a7cc-4dbeb254831a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76ca0db-7cfd-4f67-b136-024d205eed06",
        "cursor": {
          "ref": "d17ed0c2-1ca2-4d8a-a43b-96c4a8e30f19",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1c51bab4-154c-45ea-a022-b9e4c76f96e9"
        },
        "item": {
          "id": "a76ca0db-7cfd-4f67-b136-024d205eed06",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "53ddc629-4609-41fb-a749-cef4d4bc7ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3ed15f-286b-4178-923d-88963f40c804",
        "cursor": {
          "ref": "39510bad-ef95-4ce9-bfa0-7936dba82174",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "48828b91-d5e7-406e-ac86-da60518be1bd"
        },
        "item": {
          "id": "1f3ed15f-286b-4178-923d-88963f40c804",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "771d5bc9-eaa4-4920-9e19-affb3e141ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d224e73b-f26a-4e5b-a8d8-dfa8979b6ccb",
        "cursor": {
          "ref": "f04ac8ec-8bdc-4eb9-9245-c79b6753a3d4",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3fb6e984-b283-458e-81cd-f0948aed67f8"
        },
        "item": {
          "id": "d224e73b-f26a-4e5b-a8d8-dfa8979b6ccb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d6ceed63-65b5-4e98-8dd8-abfb25ab1c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a007068-7f2a-4d61-9676-eaf738bb5fc4",
        "cursor": {
          "ref": "609efe3a-a5c0-4ad1-9908-bf076e1a720c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a36ea789-12c5-47e8-9a23-0dd847f80124"
        },
        "item": {
          "id": "3a007068-7f2a-4d61-9676-eaf738bb5fc4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6675353a-dfdb-49a9-b2ea-4dba2138a0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ce6397-bcc2-436a-bfaa-ec36391e556a",
        "cursor": {
          "ref": "4dbec2eb-89dc-4dfe-b0f6-df75b0c95e6f",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d43dc421-3a4b-476b-beff-dd46a2634e8d"
        },
        "item": {
          "id": "71ce6397-bcc2-436a-bfaa-ec36391e556a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fd54ac08-6f89-4d39-8061-16a183a6e852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97a90a8-6bf0-490d-9079-8e7cdd79c4be",
        "cursor": {
          "ref": "1a803075-7368-488e-9801-9a5478421e70",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c3377899-3363-4aa8-ab6e-8ea2861ac494"
        },
        "item": {
          "id": "f97a90a8-6bf0-490d-9079-8e7cdd79c4be",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "353a53b2-02af-4a1a-9921-1226d3eb5c44",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cc43fb-cc10-4fbd-b138-53e387f96832",
        "cursor": {
          "ref": "b3e3f3d4-3cf1-4bd8-8b7d-1a61d63eb873",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "416c5c02-c198-4917-a2a7-3ede10eb4876"
        },
        "item": {
          "id": "45cc43fb-cc10-4fbd-b138-53e387f96832",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "05860fba-c333-41e0-8bc9-33a249ad652b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74333a8-a92c-4b6e-bf4e-e90a9373132b",
        "cursor": {
          "ref": "ef04da37-a361-43f8-a9ee-bd981c508167",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8d1f8e2e-ef15-40f2-a73f-615d10f6802f"
        },
        "item": {
          "id": "c74333a8-a92c-4b6e-bf4e-e90a9373132b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7c421dfd-6c35-4120-a85d-abd5820abe47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a55b7d-0d2f-4ae4-8567-b4b88c258ca7",
        "cursor": {
          "ref": "841b7787-c76b-4624-b256-afa1b627300c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "26cff462-25f0-4320-9bf3-a6629a3f13ba"
        },
        "item": {
          "id": "65a55b7d-0d2f-4ae4-8567-b4b88c258ca7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8fe2b3fc-abd6-47a5-82c8-f330606ae863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb84c2a2-14c6-4b68-9b64-b17fd8b9bb9f",
        "cursor": {
          "ref": "4a1d4d1d-e0b2-49b0-90e0-d080cb2e6240",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0c245698-5b3d-40e1-af1e-cad1fc80efb3"
        },
        "item": {
          "id": "fb84c2a2-14c6-4b68-9b64-b17fd8b9bb9f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "932b275d-2af6-4714-b692-498cddfea18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5caf3ccb-ad5f-491b-84f8-cee2f6a09788",
        "cursor": {
          "ref": "68df6e33-5364-49f6-9cd1-0f949343c875",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b74555aa-4602-41b1-aff0-11513dc2ee76"
        },
        "item": {
          "id": "5caf3ccb-ad5f-491b-84f8-cee2f6a09788",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ebc17d71-3a1e-4a7f-a1bf-d59da5dc59da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9bab0e-6fb8-4cbb-863a-665b5a5154b0",
        "cursor": {
          "ref": "2a536829-c781-48cb-b46f-d152fadd748a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b67e2897-38e7-460c-a906-c8d10089104a"
        },
        "item": {
          "id": "3e9bab0e-6fb8-4cbb-863a-665b5a5154b0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fcabafed-afc1-4da3-b407-7dc72bbceefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0349f510-829e-47c6-ac37-b781393d386e",
        "cursor": {
          "ref": "0bd61247-43c3-4593-95df-37f56904c398",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cfbccd9a-92f6-4d55-80b5-04c2a40a8858"
        },
        "item": {
          "id": "0349f510-829e-47c6-ac37-b781393d386e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "256cca09-16ef-495c-875a-fb355a93b1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1a5a65-c867-4d4f-8232-68a7282856ba",
        "cursor": {
          "ref": "150a44b9-7f79-4b3d-b12f-552a513bdded",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cac2a4c6-0ae1-4349-8abf-3e1515962ebd"
        },
        "item": {
          "id": "5c1a5a65-c867-4d4f-8232-68a7282856ba",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "08233750-7a9d-4c4a-8c16-fe81eeb3a691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93189c7-4d7e-4406-b3dc-b44ee480a89b",
        "cursor": {
          "ref": "db6bac28-b5c8-4e0a-9fe6-5ad62ff7973d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f45f85ee-9af6-48ad-8878-d43c5b0359f2"
        },
        "item": {
          "id": "b93189c7-4d7e-4406-b3dc-b44ee480a89b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a101b3f4-ff75-40ca-951f-8c97022b59fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc94f57-1a05-4420-aacd-8df3f3d8d507",
        "cursor": {
          "ref": "4e3a8d30-cc47-409b-930c-8426e3fa9d79",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "39fef1d2-8d20-430c-a522-4e1efe46527a"
        },
        "item": {
          "id": "ddc94f57-1a05-4420-aacd-8df3f3d8d507",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "35f60b34-3dca-4f42-b81b-59b81b8b40c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12635b1-06e7-4a09-a6ef-d543c22a33e4",
        "cursor": {
          "ref": "60e6acc6-953f-44d0-a6fc-abe1775bc430",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8e24f4c8-816b-42b3-ba69-8403a74e8626"
        },
        "item": {
          "id": "d12635b1-06e7-4a09-a6ef-d543c22a33e4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c9e6b0ed-ae52-4b7a-a1d6-aa5c5ed9fb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de3e902-e038-469a-a985-d6668bfaeaf7",
        "cursor": {
          "ref": "46f3636f-de1f-4d96-9fe6-c465d0bdda73",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c234c449-72ae-4d6d-8177-cba2cd5d4d34"
        },
        "item": {
          "id": "8de3e902-e038-469a-a985-d6668bfaeaf7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "edfcc188-fdac-47ef-adeb-757ba2faf7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da66ff3-8219-4373-b2a8-ff5117f3cfa3",
        "cursor": {
          "ref": "6b792a3a-3e63-4008-b5d8-0641a0c40b33",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "66538604-98cb-4714-9569-29c76b94ec09"
        },
        "item": {
          "id": "8da66ff3-8219-4373-b2a8-ff5117f3cfa3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "81adc59f-9231-4a6a-833c-85efe68b36ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a3dc86-55d4-4d51-9591-50ecec60e90a",
        "cursor": {
          "ref": "4ab08902-c70a-409a-b14c-26c696c51e40",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7c8d970a-1781-4215-ab95-3fe1109cdcac"
        },
        "item": {
          "id": "99a3dc86-55d4-4d51-9591-50ecec60e90a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "942738d5-ee1b-4143-a56c-2a777a425242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36270161-d667-4661-b897-b7dc8ea0d64e",
        "cursor": {
          "ref": "9049a840-2a6c-4abf-8a04-665f333f42b7",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "77a6af0b-e656-4e0a-8bda-aa06c212e84f"
        },
        "item": {
          "id": "36270161-d667-4661-b897-b7dc8ea0d64e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6330d4a1-1ce5-4c3e-a864-678bc40fa649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cb2e40-a13c-4505-991a-0a877ffc7a82",
        "cursor": {
          "ref": "021c3072-8e5a-415d-bdff-39adb551644e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4dc87d45-d992-4261-86a0-1ab05ae0c4bc"
        },
        "item": {
          "id": "99cb2e40-a13c-4505-991a-0a877ffc7a82",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4d1ff01f-b824-48b3-8e73-497253f427fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68850ae9-ebff-4dd6-8354-3953126556ac",
        "cursor": {
          "ref": "88a072f2-28bd-46bc-9c4d-502e9264576b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b300e6de-c784-4af8-b1fa-2282f3eed39b"
        },
        "item": {
          "id": "68850ae9-ebff-4dd6-8354-3953126556ac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2baa3984-5405-49ad-a5bd-191d019ec69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b71ff2-02e1-4c4c-b9ef-fcf0ecfb3bd8",
        "cursor": {
          "ref": "ebc2fbc0-e3b3-49d7-a1fe-a910415cee0f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1b08cdf0-c4d8-48e2-88e5-0c406bb06948"
        },
        "item": {
          "id": "c6b71ff2-02e1-4c4c-b9ef-fcf0ecfb3bd8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a1782e32-1cf6-4299-bb42-ace15a38efa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e990c5-5cef-45c4-bfbd-9ab8b3ec2a6b",
        "cursor": {
          "ref": "7d4d1f8f-a8fc-4980-8c27-2e3c7960ce21",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a2125c74-5547-459a-ab63-74fcda5bbd51"
        },
        "item": {
          "id": "d4e990c5-5cef-45c4-bfbd-9ab8b3ec2a6b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "57cd23c9-d7ec-48a7-9c5c-e89ff5a862dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463a8309-0495-4be2-93ab-7cf4e96bdafe",
        "cursor": {
          "ref": "37fe6ee9-0076-475b-b422-02ebfa7b981e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9deec02a-7dbc-4b6a-aaed-de536c8a82fe"
        },
        "item": {
          "id": "463a8309-0495-4be2-93ab-7cf4e96bdafe",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "db6bf61f-ed8b-4fb0-9574-1de9d9c2c575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c39f579-fbf9-49d0-a1a6-1a8ed2bcbef0",
        "cursor": {
          "ref": "dbba2629-184a-4ac4-97a3-949941703cbf",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "858048e9-1fb0-40ff-b29d-0a649aea5407"
        },
        "item": {
          "id": "9c39f579-fbf9-49d0-a1a6-1a8ed2bcbef0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "440da877-f19d-4669-b27c-0e4d861f767c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9534caf-d4f3-4a31-9f61-186b260d41a4",
        "cursor": {
          "ref": "50904ce8-9d72-4059-9d59-d0ca8eb2afe1",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a0d04e93-99b1-40dc-9cd4-79a9a9120c80"
        },
        "item": {
          "id": "c9534caf-d4f3-4a31-9f61-186b260d41a4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "38c0d1ed-65e2-429a-a49d-bd1d6b34d58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ffb451-9a17-4621-840b-d1e4a166b961",
        "cursor": {
          "ref": "c16a35ef-020a-426c-bcc6-1ac6104d6603",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3d173e9f-935f-4580-954f-2e598c0f9222"
        },
        "item": {
          "id": "65ffb451-9a17-4621-840b-d1e4a166b961",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6894db5d-9b72-4ab6-863e-5634bfb14809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c5fc19-68ef-4f15-81e6-adec216b42eb",
        "cursor": {
          "ref": "c8a5683c-d4b8-4e58-8705-9c66d32f13f2",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "96898cd4-680e-4fc6-a024-40c17d61672d"
        },
        "item": {
          "id": "d3c5fc19-68ef-4f15-81e6-adec216b42eb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2121e46e-0a3c-444e-9907-8bce3abab3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9477d6-c637-449a-ba42-de1403fcf8a7",
        "cursor": {
          "ref": "14422f11-e594-42d6-a1bd-84b044b071f5",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5b4e8b5a-909d-42c9-8412-4e9c9df3433a"
        },
        "item": {
          "id": "3f9477d6-c637-449a-ba42-de1403fcf8a7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5605afad-bc64-4d84-8781-0fecbad173ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f6aa27-d4d1-48c8-b3b8-d1a1439f68d2",
        "cursor": {
          "ref": "3e4915f8-db24-4b8a-a484-f892d612b6d8",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e991b519-0575-4737-aa3c-bd559b065a11"
        },
        "item": {
          "id": "e0f6aa27-d4d1-48c8-b3b8-d1a1439f68d2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "de4cd7f4-d04a-4ca7-9662-e16c53d41e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6229f5-70e5-456d-8220-ef15ddf1bd7e",
        "cursor": {
          "ref": "0fe17448-4de3-4b1a-afd6-5816b6d84acb",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0d57c00e-9248-4d26-aede-db09e762c8af"
        },
        "item": {
          "id": "9e6229f5-70e5-456d-8220-ef15ddf1bd7e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "83f66be8-c890-41ed-acf3-5d980a581f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1db1bad-adc2-4dfb-9228-09fb8005d62e",
        "cursor": {
          "ref": "6e42fc54-6218-40d8-abd3-146615930fc0",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c928e696-6133-4aa8-8f67-8d5c85a6486f"
        },
        "item": {
          "id": "d1db1bad-adc2-4dfb-9228-09fb8005d62e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "583ba728-36db-4233-9c32-c1421918dbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d04c4d-d91d-4838-92e4-3a78a48f0e5d",
        "cursor": {
          "ref": "b211aa0e-a02a-417e-a564-32d17d2f31dc",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bc13079c-b0f3-4210-bfe4-bbc3654314b1"
        },
        "item": {
          "id": "77d04c4d-d91d-4838-92e4-3a78a48f0e5d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f6b89b54-7c16-44df-b7df-6e102740cfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58f63f6-1f7a-4824-a1f6-e46bddfefcee",
        "cursor": {
          "ref": "569519b1-86b8-4a0d-a5d9-ba45c915db06",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "40f6191d-0d71-43a2-8ca9-1a2e5d7d3787"
        },
        "item": {
          "id": "b58f63f6-1f7a-4824-a1f6-e46bddfefcee",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6532b5f1-977a-42fe-817a-86a42ba277fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd89b83c-955f-45f6-b035-0151c86209cf",
        "cursor": {
          "ref": "8dccc611-cde4-40ef-9b45-b7cf4be0a2aa",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a9112f39-4cdc-4b04-a679-78a71bb38548"
        },
        "item": {
          "id": "cd89b83c-955f-45f6-b035-0151c86209cf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "38323172-1a0b-4d9e-8631-c92d4a37b519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d348f453-ecad-4f20-9064-b040d477557d",
        "cursor": {
          "ref": "673063d8-bfde-4cd3-8e21-a087e805d6ce",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b25a5cb2-252f-4eb8-ba7c-c8b2d62d3162"
        },
        "item": {
          "id": "d348f453-ecad-4f20-9064-b040d477557d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f151f730-082b-495f-a425-8a8e98795cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac59a17-fc43-4903-8ba6-0e502e62b264",
        "cursor": {
          "ref": "c82b1a95-41e1-400c-baeb-714aad555d95",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8369f0be-63a8-4249-a008-65ae7e0c2bab"
        },
        "item": {
          "id": "1ac59a17-fc43-4903-8ba6-0e502e62b264",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0d977fbe-1ad9-43fe-a816-6daf43d58677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533e3736-36bf-4381-bcd9-fcec2ef17a57",
        "cursor": {
          "ref": "b77b9d92-016f-4c56-a7a4-587caaea1886",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d28ec530-59b9-4728-9d54-7b49ee5c6faf"
        },
        "item": {
          "id": "533e3736-36bf-4381-bcd9-fcec2ef17a57",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ede988e6-3af6-48aa-9f48-7c6b895a11c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abd7dda-5784-4145-ba7b-8a3488fc9329",
        "cursor": {
          "ref": "be0d1974-66f9-40b0-96a2-7e05cb383acd",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "201e3284-4403-41b7-be0f-7e899db478d6"
        },
        "item": {
          "id": "9abd7dda-5784-4145-ba7b-8a3488fc9329",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0d849e1a-5653-4644-b9b1-1cf9aa8b2b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61179502-03a1-4cfe-a4b6-09fe7c85c169",
        "cursor": {
          "ref": "179bc559-1818-4aa0-aa54-55e5c1c9e84f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fe51ecc9-f9f6-4bfb-9629-fff4c556a1a0"
        },
        "item": {
          "id": "61179502-03a1-4cfe-a4b6-09fe7c85c169",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8223d9f6-170f-44c5-861f-7fbf116f61dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892ea523-b148-450f-9cf5-e812b6dd89c8",
        "cursor": {
          "ref": "784a9af8-ed59-4008-942e-4a7aa4473bfb",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4d4228e6-9a59-44dc-b177-7a2bbf36cea1"
        },
        "item": {
          "id": "892ea523-b148-450f-9cf5-e812b6dd89c8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ec510a91-0613-41fc-893b-67df6f90d3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c1691c-c5d8-4c22-a7a0-65ae9a9327f3",
        "cursor": {
          "ref": "858f9fcd-7542-48ba-9b84-27c00d201a06",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f1ba8bb5-fc1e-484d-9b62-12de9672ce5b"
        },
        "item": {
          "id": "e1c1691c-c5d8-4c22-a7a0-65ae9a9327f3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "61c5411d-729c-40a3-857a-176ed28d1519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b86054d-a5d0-4bbe-948c-31caf7dbb58a",
        "cursor": {
          "ref": "fdbee784-54b5-4d5a-8c89-7aaf3714508d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "882caa58-8f15-4a61-9f26-b09d197949d9"
        },
        "item": {
          "id": "1b86054d-a5d0-4bbe-948c-31caf7dbb58a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6ba9641e-8a4a-44e0-a7f0-4054d64ffc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749f59ab-2b2d-4690-a16b-98a4529b5d0c",
        "cursor": {
          "ref": "c5e660f3-8250-457a-8b6e-4661856a7073",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "def9fa19-eeb9-47c6-a78c-cfb3eda59daf"
        },
        "item": {
          "id": "749f59ab-2b2d-4690-a16b-98a4529b5d0c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8e102bfa-6317-4536-b4a8-919e1d7ae043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e704d18e-aa6c-4e1d-a994-21642d9df89d",
        "cursor": {
          "ref": "3ed0494f-1f83-4837-8901-c749b9600715",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0c0c505b-2542-42c7-965f-43f43461967c"
        },
        "item": {
          "id": "e704d18e-aa6c-4e1d-a994-21642d9df89d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3534e923-0c39-4b7e-b800-17e2172398bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccd4b83-f33b-479a-a86e-2f3ebcd93ba5",
        "cursor": {
          "ref": "bc4d856e-22d0-485e-beee-e669df6f411d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "471f8090-f476-4716-93c1-85e02fb43511"
        },
        "item": {
          "id": "fccd4b83-f33b-479a-a86e-2f3ebcd93ba5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a0a6d6fa-fb2c-4a5f-bd78-5cfe4d70f073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abbdf7f-d0aa-4579-8eb0-06f9757190b1",
        "cursor": {
          "ref": "1ff52240-8215-4867-80ce-9db157d66640",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c4eaeb5c-b5a7-4d9f-93ca-373583b18989"
        },
        "item": {
          "id": "6abbdf7f-d0aa-4579-8eb0-06f9757190b1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "35932fc4-10e7-48c6-a362-491c00bf402e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95311d68-be7c-49ff-8cbd-a61bbd8edf64",
        "cursor": {
          "ref": "d4b7c211-974a-4d17-a1eb-73341167ec3b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cbaddbaa-a7a8-4e71-b230-0e962228fb7f"
        },
        "item": {
          "id": "95311d68-be7c-49ff-8cbd-a61bbd8edf64",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b4bea0de-d3ee-4895-9295-5991ae704837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6878bd7-357b-4444-aed2-878acfc44325",
        "cursor": {
          "ref": "a87f9db4-d113-491a-be2e-05d129a07644",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1574250d-6faf-4560-a667-671ac9ee469c"
        },
        "item": {
          "id": "f6878bd7-357b-4444-aed2-878acfc44325",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2427547c-eb22-453b-a2a9-ebc1d75d1ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65be9f44-c999-4a54-a4d5-fc183886d035",
        "cursor": {
          "ref": "00d0a9e7-0603-41ed-95cb-b4da8e60d04f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3d196a8f-9970-4cc3-a194-daf771bd32a5"
        },
        "item": {
          "id": "65be9f44-c999-4a54-a4d5-fc183886d035",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "471fea0b-ff01-430e-bb50-0b5f8732f428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19678c3d-85aa-4d1b-a3e6-bc2a7acc6c05",
        "cursor": {
          "ref": "cf97bed4-65f6-46bf-ae37-d588f1c05110",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "225d1028-3576-4aca-9d38-10fd332b8b7d"
        },
        "item": {
          "id": "19678c3d-85aa-4d1b-a3e6-bc2a7acc6c05",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f5fab664-67b6-439c-b4ef-6ffe90c50695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f332542-de01-4502-99ae-2d6ed0498928",
        "cursor": {
          "ref": "039e75e4-b841-47d8-9ec7-0e4d540ea6f7",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "16b5a50e-4d61-461e-8cb2-92c127409683"
        },
        "item": {
          "id": "6f332542-de01-4502-99ae-2d6ed0498928",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fb2b166a-c5e0-45be-a73d-0ddb62ac7faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78edcbb4-e215-4b06-82df-6535eedfe2f7",
        "cursor": {
          "ref": "c583fa83-2adc-4e6d-bf17-121cc6a87c03",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "46c2085a-b43f-4a6b-b2b2-fe08cda2c4d7"
        },
        "item": {
          "id": "78edcbb4-e215-4b06-82df-6535eedfe2f7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9a186d00-c220-44c2-929b-94cd407c37f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb095e2-8f93-4487-b02f-df7192cfd019",
        "cursor": {
          "ref": "99eaaaff-70f5-4e03-8c17-4ce40dab2194",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2cee298a-b7e0-4d09-91e3-061f55526ab9"
        },
        "item": {
          "id": "fdb095e2-8f93-4487-b02f-df7192cfd019",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cd9d2427-39ad-4a5a-8656-e2d6105da25e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbac963-deb5-4aa4-8fb7-73f72df841a0",
        "cursor": {
          "ref": "9f3aaeec-12a1-43b3-b6e8-5efe15c8c4c6",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "42509a65-9d70-4c3f-a6a5-e845ad5d4973"
        },
        "item": {
          "id": "fcbac963-deb5-4aa4-8fb7-73f72df841a0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "fa583a56-896b-4dbc-a48c-4a2d4c4a8e9f",
          "status": "Created",
          "code": 201,
          "responseTime": 106,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dc67fc-9114-432a-a0fe-35d591ccdff3",
        "cursor": {
          "ref": "8493c04e-e325-4f7f-9be2-22560e46ca3e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9b68de73-6569-4300-943a-5e1416634b92"
        },
        "item": {
          "id": "b5dc67fc-9114-432a-a0fe-35d591ccdff3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "afaefdce-5795-4cef-afd7-a67338c35664",
          "status": "Created",
          "code": 201,
          "responseTime": 597,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c7210b-1fc6-4b09-a439-72a01a095104",
        "cursor": {
          "ref": "0b1c12d8-110b-4d85-bf9c-2ca601b951c6",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ffd8345c-e511-4b88-bde2-a7bee1c08d6b"
        },
        "item": {
          "id": "91c7210b-1fc6-4b09-a439-72a01a095104",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ab144f6a-f1ac-42db-b012-d0c532129852",
          "status": "Created",
          "code": 201,
          "responseTime": 110,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf7256d-d002-4fa2-89c1-9ce0194aa5df",
        "cursor": {
          "ref": "1a49c610-8269-4a45-a058-2002c2c4d938",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "844e63c8-f385-4a58-9e0a-7a0ca821cb87"
        },
        "item": {
          "id": "adf7256d-d002-4fa2-89c1-9ce0194aa5df",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f9af5c0b-4ed7-459e-b490-90a57ae624d2",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0f0980-0fdf-45d3-9adc-b453dd6849d3",
        "cursor": {
          "ref": "7fc01d05-bafa-4751-98ed-344aa61bc8d7",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cf907c0e-cdae-4033-9d40-588229f5537b"
        },
        "item": {
          "id": "fc0f0980-0fdf-45d3-9adc-b453dd6849d3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "184daa70-f84a-4466-a92f-cb8788ef93fd",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2bd66d-9afb-44d2-8aab-3708ca2a88c2",
        "cursor": {
          "ref": "684c1322-a862-4ba2-9c53-a84ff92f0be1",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d1052142-4d83-4e64-b19c-45a09c215cd6"
        },
        "item": {
          "id": "7f2bd66d-9afb-44d2-8aab-3708ca2a88c2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3bffe081-6896-411e-bc89-8d85d166ec96",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced99347-4118-4f6b-9311-67c29affd386",
        "cursor": {
          "ref": "04de2c5b-1642-4b31-9a03-5788255feab8",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8d429bec-5af6-46aa-98f1-8e5903f230de"
        },
        "item": {
          "id": "ced99347-4118-4f6b-9311-67c29affd386",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0fd46d3b-75ad-458b-95f3-5c07a510402a",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fd9fe7-a0a5-4b8b-868d-7ed49e4c2c5d",
        "cursor": {
          "ref": "3e58c43f-b41d-470e-97dd-c10303fcb784",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a8569c1c-20a6-4aef-a9f7-5e06b1f7317d"
        },
        "item": {
          "id": "81fd9fe7-a0a5-4b8b-868d-7ed49e4c2c5d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a4245583-6fb1-434f-88c9-199743a603eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b4a7f8-4a8f-477f-b729-da60883b803e",
        "cursor": {
          "ref": "4e25eb87-3eca-49ed-9ab8-96614a73adb0",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7ca5f684-20fe-4546-ade2-4e4636376be7"
        },
        "item": {
          "id": "51b4a7f8-4a8f-477f-b729-da60883b803e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e3504198-9f37-4528-8c3d-889e60178563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924b8ec9-b4c2-4e47-b7f5-b7eb486e8bfa",
        "cursor": {
          "ref": "9b29e27d-9cc5-47a9-861a-517ccd84162c",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cca21e2f-1213-405e-8533-f8ddb90b46f3"
        },
        "item": {
          "id": "924b8ec9-b4c2-4e47-b7f5-b7eb486e8bfa",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "807d7d14-a9f4-4743-8cd2-794d7bbeca62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1307e1e-3c5f-4fe8-a1e6-aa7cce08bca6",
        "cursor": {
          "ref": "a6348eca-98cf-4bea-b73b-eba0e72165a1",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7245b510-8d01-464f-9463-0d9d3fe0ddaa"
        },
        "item": {
          "id": "c1307e1e-3c5f-4fe8-a1e6-aa7cce08bca6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b6a9dbde-c42a-4980-bd7a-5fb6458b969c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a645bda6-8f4e-417e-87e8-6c10a84e7ab8",
        "cursor": {
          "ref": "3b0c92cb-51ef-4c65-997f-0903684d0dbc",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b67bb42b-a6a2-46cb-9d02-03d2dcc49c15"
        },
        "item": {
          "id": "a645bda6-8f4e-417e-87e8-6c10a84e7ab8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "785e25a6-acb2-4a5e-89de-eb9516873033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4258f48-a36a-4412-b706-eb7aea2edcb7",
        "cursor": {
          "ref": "b4d21779-4f4f-4450-a699-49e3bfb6687f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "79327b3e-845b-45a3-b694-ea9d2aacefcf"
        },
        "item": {
          "id": "c4258f48-a36a-4412-b706-eb7aea2edcb7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5838aab7-2606-4735-9912-2d5906c89a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d24446-f973-46b1-ab41-873c05416af3",
        "cursor": {
          "ref": "8787e7bc-94f4-48b7-b515-e48ae582817b",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2061f76a-d21c-4f37-bdb3-f840495fd501"
        },
        "item": {
          "id": "e9d24446-f973-46b1-ab41-873c05416af3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b096d6f9-9f97-43ee-8f25-2f0186b550b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabd1bab-59d4-4f27-a824-5c1f8abb499f",
        "cursor": {
          "ref": "ea38cf32-34cb-4917-a076-cd9a7d7922e8",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e0320631-566c-43b2-b436-f3d692349345"
        },
        "item": {
          "id": "fabd1bab-59d4-4f27-a824-5c1f8abb499f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e2e16a9e-5e80-46e6-b8d2-031c12345ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b09f2ad-ca6c-457a-877d-9c8bc816dc8e",
        "cursor": {
          "ref": "4ed6a7cd-dcc0-412a-8bd3-4f722982796f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bb9279ab-22b7-4be4-ad3a-b0771e77c44a"
        },
        "item": {
          "id": "9b09f2ad-ca6c-457a-877d-9c8bc816dc8e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ca6ccba0-6643-4ef5-b92d-aa2cde82aa4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df951d1d-1751-42c1-bf54-4d9c4cbd4dd8",
        "cursor": {
          "ref": "4c753f53-fba3-415a-9909-049e93013abe",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "da2fa241-575b-4697-951c-d58fac76cbf6"
        },
        "item": {
          "id": "df951d1d-1751-42c1-bf54-4d9c4cbd4dd8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4eaee39b-3ef9-4a37-830a-9dd2830814ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c9c626-cc65-4282-a219-b82f9a27758a",
        "cursor": {
          "ref": "914dd7f6-5e31-4054-a22e-7d313d9cbf73",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a810ea08-2e3a-41ed-b2eb-84add3683f6d"
        },
        "item": {
          "id": "f7c9c626-cc65-4282-a219-b82f9a27758a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4b36ba9f-24d1-4e66-a941-b8f533354a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486bb6e3-d1ef-42f8-b827-37e73cbbc0c1",
        "cursor": {
          "ref": "3204a5e0-de29-4419-acd0-b09c9ba813b2",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d087c9a7-897d-46b6-b979-794056be6cc3"
        },
        "item": {
          "id": "486bb6e3-d1ef-42f8-b827-37e73cbbc0c1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7f80113e-50f8-488a-ba46-8fbe23aece04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be6234d-a453-49fa-915f-104cc2a52ee9",
        "cursor": {
          "ref": "3f7cf4bd-bf71-4684-bccd-f214011a1358",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1cdc9ea2-a6b1-424b-9760-dcc9de4c379e"
        },
        "item": {
          "id": "6be6234d-a453-49fa-915f-104cc2a52ee9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "46050214-79fa-45ea-9cfd-bf8bab24fcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d2d94d-6b17-47fb-b527-b447d45dc499",
        "cursor": {
          "ref": "1197fcac-413f-4489-8299-5a947505f801",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4070e0b8-4da3-43c4-a6ed-0bb369a79046"
        },
        "item": {
          "id": "36d2d94d-6b17-47fb-b527-b447d45dc499",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "469ffe31-adf8-4ed9-ba8a-6cd78fa78fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5d3cc5-4a8e-48ba-8527-406d64977554",
        "cursor": {
          "ref": "6723a50c-b289-48b7-8219-4a8b25e16d9c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "47fbf757-7060-4c84-9bed-c8990723550c"
        },
        "item": {
          "id": "dc5d3cc5-4a8e-48ba-8527-406d64977554",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f130dad1-bcb9-43af-aea3-c8ac1f6e2459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6487ce-c7a9-4c5d-bc65-bd554779a917",
        "cursor": {
          "ref": "585435a1-8bea-43ac-b3ea-4556b8ac30a0",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d5656bdb-52a4-4aed-a6d5-c0c418461cdc"
        },
        "item": {
          "id": "6b6487ce-c7a9-4c5d-bc65-bd554779a917",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9bb23d68-db2a-40c0-b207-e8f55712d98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bf447d-1b2d-4f90-92b9-21b272c0d224",
        "cursor": {
          "ref": "489e1ccf-8f34-4bc2-be3f-3ac74c91ef62",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bf2b0f25-e88c-4f26-87e8-2a1144ffef1d"
        },
        "item": {
          "id": "20bf447d-1b2d-4f90-92b9-21b272c0d224",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "74c1a810-0b72-4263-9b56-9a5d3883594f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c966c0a1-5233-4616-979d-fa1e57f5efe7",
        "cursor": {
          "ref": "85567eba-a32a-466a-971d-379db1cbba19",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "744aa667-c3b6-46c6-9691-c810237114a6"
        },
        "item": {
          "id": "c966c0a1-5233-4616-979d-fa1e57f5efe7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8ab8f677-b529-437d-b564-0eb9f4d88733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e94338-6613-4c57-925d-7ec8a1acb47a",
        "cursor": {
          "ref": "42b4dba1-f736-477a-adeb-92ce51487bd3",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "558744e8-9f3d-44f1-9884-184777ff4875"
        },
        "item": {
          "id": "f6e94338-6613-4c57-925d-7ec8a1acb47a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "65d3acc9-342e-496e-b341-ecf62b1fc12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448353a4-3948-46a0-a3d7-bf12ff9f5bef",
        "cursor": {
          "ref": "400bb261-7953-4d2f-8209-91512acdc22b",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1f212866-0753-4618-a111-8924a9ad4a97"
        },
        "item": {
          "id": "448353a4-3948-46a0-a3d7-bf12ff9f5bef",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "79d22ead-4c17-410a-accd-29ca4c65dbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd1a1ce-db20-488f-964a-f4780b076dea",
        "cursor": {
          "ref": "42acd8b0-0c3c-4890-9824-d78fa9bf49da",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "810602d4-3c9e-4dfd-9b68-1fb0b38b4cc4"
        },
        "item": {
          "id": "dfd1a1ce-db20-488f-964a-f4780b076dea",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c29d2827-7703-4ece-b98e-9b363cd98162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b0fac9-953d-4cef-9c76-cab886665312",
        "cursor": {
          "ref": "fff892f7-5a71-41eb-a4d1-0d1eb9b3c4bf",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ed9607c3-e89a-4e1e-a58a-d5aa277374e8"
        },
        "item": {
          "id": "d1b0fac9-953d-4cef-9c76-cab886665312",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "96e8e1ab-5ac2-4fe5-ae07-ca7c713ef0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6554d70d-8027-4902-bb72-78de4315c1b4",
        "cursor": {
          "ref": "dd2bffbd-25d3-4849-a2a1-a63e67f96da8",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4eb1a13e-d58a-435b-a6ee-63698df06553"
        },
        "item": {
          "id": "6554d70d-8027-4902-bb72-78de4315c1b4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7c03f8db-b9ec-457b-a21a-b1a9a36cbdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150c7226-576d-4628-9bb8-e2f7780fe373",
        "cursor": {
          "ref": "389ac4d9-2705-4058-b931-b6f6426e07f3",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "14b7da58-dd15-43a6-8d2e-56365e737135"
        },
        "item": {
          "id": "150c7226-576d-4628-9bb8-e2f7780fe373",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c8bd86cc-0100-4871-b625-53ad10d869c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bf42b7-b765-4dc1-a86d-09a14cbc4ad0",
        "cursor": {
          "ref": "c9fcc421-e62a-407a-b0c2-e163b07364be",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "dfb253f6-d867-43ee-bc36-4e2fd3b28879"
        },
        "item": {
          "id": "66bf42b7-b765-4dc1-a86d-09a14cbc4ad0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "444c7575-9df5-481d-9e9a-666f7c0fc89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f04c9c2-cf1b-4120-8938-6fa99b1c8abe",
        "cursor": {
          "ref": "a7740fce-4f59-44e2-9d24-27caf2d9acfd",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "67aba19b-a775-4bdf-aa53-367045d92d2e"
        },
        "item": {
          "id": "6f04c9c2-cf1b-4120-8938-6fa99b1c8abe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "df944eeb-b5a5-4ee9-bc37-69372c79cd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6638289-0315-4a9e-beb6-4fa48dd92720",
        "cursor": {
          "ref": "e9aec391-0f38-4999-aa48-ada7a3a6ab61",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "276aa497-ee4b-4401-98b5-27b3de43539b"
        },
        "item": {
          "id": "e6638289-0315-4a9e-beb6-4fa48dd92720",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8693c65c-e729-4b88-8a97-b4a1fb73d91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962420fd-e6c3-4d3d-8e7e-4a1273c05825",
        "cursor": {
          "ref": "80d8dfac-324e-443c-8769-75beba13c5c4",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "173587bf-c2f3-443f-89f0-e56e126a51b2"
        },
        "item": {
          "id": "962420fd-e6c3-4d3d-8e7e-4a1273c05825",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ddb47f00-72fb-4396-9a93-738b1f3c151a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5201bc-f5f7-4ef1-874b-5ea5e32f6b1d",
        "cursor": {
          "ref": "1f8de983-6faf-4ae8-b15e-6ec6763244fc",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9430b4d8-efe4-4ae9-9302-497174f8180e"
        },
        "item": {
          "id": "8b5201bc-f5f7-4ef1-874b-5ea5e32f6b1d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ec6d0188-bf74-43d4-a748-24a8014aaa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db3c79f-b36d-48d5-ac71-4285e9c5d5f5",
        "cursor": {
          "ref": "b8a01902-3699-45b3-a535-59264ce5ecdf",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4279cf75-0b2e-4d61-a205-3436494c00de"
        },
        "item": {
          "id": "9db3c79f-b36d-48d5-ac71-4285e9c5d5f5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7e7fe76e-f56d-40df-9364-2c53aa395e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c7fdb4-66ba-4294-b981-b87e902b150f",
        "cursor": {
          "ref": "9f039445-4d23-49fe-beaa-824a5daee943",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fde1a82d-c3f3-433b-a2f1-7218cb8815b1"
        },
        "item": {
          "id": "e0c7fdb4-66ba-4294-b981-b87e902b150f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e4ff8d3f-635f-4615-9cf0-cd27d343ed5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4954e162-b2ab-4937-9ccf-ad3bc53b4b18",
        "cursor": {
          "ref": "098e793d-6ba7-4e30-9fcd-d6f80af95a5a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9e55b5e4-d292-4ad2-ae03-3d2360e68dfd"
        },
        "item": {
          "id": "4954e162-b2ab-4937-9ccf-ad3bc53b4b18",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "67b5a1e4-fcc9-453f-b9ea-855935354b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4346f3b2-a3c8-4a89-bc3f-191f0a8f8e76",
        "cursor": {
          "ref": "1014bdc6-f2b7-437f-8c08-3f43695ff88d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "72229122-30d6-4520-b796-809f5bc4b3ce"
        },
        "item": {
          "id": "4346f3b2-a3c8-4a89-bc3f-191f0a8f8e76",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c885ec70-e6f1-4c88-a12b-5a585bf0041f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d7fee6-c843-4327-857c-a00f54bedbef",
        "cursor": {
          "ref": "fc3fb333-dde1-4361-ad5c-3c0d6b133f40",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b9df6a4e-3360-445f-8c69-b66883252c9b"
        },
        "item": {
          "id": "90d7fee6-c843-4327-857c-a00f54bedbef",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fcb5ddf0-c85c-4eb3-b6f2-66d7a6307749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19b041b-c964-4727-a5c1-e0b456dacf10",
        "cursor": {
          "ref": "585d8f3f-8465-48b5-8797-1656e8c0343e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8cef28f6-1c32-44f8-aa46-505a40bfd7ce"
        },
        "item": {
          "id": "b19b041b-c964-4727-a5c1-e0b456dacf10",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "025a997d-c112-41eb-a3a3-bfa6e6a549d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5af33f-b64c-4325-96df-f70569165a4d",
        "cursor": {
          "ref": "0096ade3-1bc1-40ef-b907-b0ff259bcbb0",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "25c9645b-468d-4199-82bc-8447713c8e58"
        },
        "item": {
          "id": "2e5af33f-b64c-4325-96df-f70569165a4d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2a71e7dd-e663-44a1-86ef-ba297970f145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36ad873-046f-4235-859a-7764e2c27ee9",
        "cursor": {
          "ref": "9a76e8d8-2c43-4587-8cce-5cd566f21a50",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bfa34d34-6e01-4a4e-820d-96af87786b63"
        },
        "item": {
          "id": "b36ad873-046f-4235-859a-7764e2c27ee9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e5d5c603-4393-4a64-b42f-42067113ca7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77eaf351-0f14-4e19-812d-07b662b0f71f",
        "cursor": {
          "ref": "e661a8d6-3c39-493d-87b8-a5bd8fe07096",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "69e92b83-bb2f-4c3a-b0a0-f1f07def2b17"
        },
        "item": {
          "id": "77eaf351-0f14-4e19-812d-07b662b0f71f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "85f04a79-9d68-4953-8b00-2ce7bf345da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6340a957-5afb-4e71-bb4b-b922de898dad",
        "cursor": {
          "ref": "790fba31-b2b9-428b-8672-a9807d9d526e",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6904f418-af07-4833-8401-f5bb5f788daa"
        },
        "item": {
          "id": "6340a957-5afb-4e71-bb4b-b922de898dad",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5731919c-ea55-4a12-84cc-4fdb835cac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f358a3-79d8-42b8-8932-825137febf6b",
        "cursor": {
          "ref": "8a0e10c2-1b40-493c-bcae-ac90003ce42a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "aec9357e-0b4b-4276-b352-be7c44150595"
        },
        "item": {
          "id": "d9f358a3-79d8-42b8-8932-825137febf6b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "006b9a5f-6c78-4dcb-bbfb-fab799798a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a6c220-a159-430e-a05b-b91b5b757a94",
        "cursor": {
          "ref": "94b1302e-1a80-470d-b688-9f907f1486ce",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2baa0f0d-7048-425c-a338-cce9fb026439"
        },
        "item": {
          "id": "73a6c220-a159-430e-a05b-b91b5b757a94",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "737a02a1-f62f-4fd9-8cd2-e09340ee3957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d230e46-6af5-4f0e-a956-d51c5cfaf83c",
        "cursor": {
          "ref": "21153920-695d-4d94-8213-d46383d8bfbc",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cad3991d-9be0-4447-9cb7-3afcef828a52"
        },
        "item": {
          "id": "8d230e46-6af5-4f0e-a956-d51c5cfaf83c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "47d75461-176e-4cd4-8e37-055dc83841f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795724af-f5ba-49f3-b48b-7d173deaa277",
        "cursor": {
          "ref": "3177bf36-9a04-4ef8-bcf2-e3d13749a7c1",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fc016217-381d-405b-b589-5ab3f96bb15f"
        },
        "item": {
          "id": "795724af-f5ba-49f3-b48b-7d173deaa277",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f9829af3-9d1e-45d6-96f7-db17515fc59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb404cc-9d33-4900-a7c4-ee19761646b1",
        "cursor": {
          "ref": "3142cbed-f81a-4335-83f3-8a118017b603",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0be0b894-c460-408b-8115-1b93022158fb"
        },
        "item": {
          "id": "fbb404cc-9d33-4900-a7c4-ee19761646b1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "337b63db-36b8-417a-bf9c-a20eb7d1ef43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d311875-0cc6-4a93-b12c-8b9d91b21584",
        "cursor": {
          "ref": "26dcf37e-579b-43a1-abdd-3deb5bb6b18c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6598057f-9636-43cd-a4d8-d99a9ebdf206"
        },
        "item": {
          "id": "5d311875-0cc6-4a93-b12c-8b9d91b21584",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4d49f76d-0853-40f8-8e30-975f0fe353a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a545ee20-cd17-4701-8e54-0f2d70a01259",
        "cursor": {
          "ref": "81005d72-88d1-4504-89b7-05e54aa56c12",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bbd4fab7-57a4-4ece-aee3-add9baeea8e6"
        },
        "item": {
          "id": "a545ee20-cd17-4701-8e54-0f2d70a01259",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ec427699-5baf-46c6-9d84-426a6e5e397e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbdb3fd-2337-4c5a-a9c4-ddcaf600a033",
        "cursor": {
          "ref": "02a5c3d2-8fed-4f60-a2b9-ecc2ccbb2b56",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e2e1df77-5856-4301-9998-e2c8f4d64521"
        },
        "item": {
          "id": "2dbdb3fd-2337-4c5a-a9c4-ddcaf600a033",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ca502b5e-7e43-4b7a-be43-ef372baa4122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f7503d-7e29-4c1e-9823-5ac900aa10cf",
        "cursor": {
          "ref": "3ca64b32-d895-4f49-9ff8-eba07902185e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "57f94440-8e70-4f45-bba9-d07e608aded1"
        },
        "item": {
          "id": "f8f7503d-7e29-4c1e-9823-5ac900aa10cf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6e330b2e-8cd9-4295-bc52-d8d8e0e1e8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04202d7-722c-49dd-a210-52ce9a776c45",
        "cursor": {
          "ref": "67c4fc2d-a873-4985-8f8d-bdd3c1929b56",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1c4a5932-5187-47fe-9164-3c9292f5f7d5"
        },
        "item": {
          "id": "c04202d7-722c-49dd-a210-52ce9a776c45",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c66a06fb-829f-43e6-a59f-55cfc5d353dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb63d7f-0551-4c9a-9104-16c763ec8563",
        "cursor": {
          "ref": "6b8d6ee2-9c86-4041-a4c2-49cf564882a0",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8f2979b3-ce0f-466c-a844-f4fa2b2c17c5"
        },
        "item": {
          "id": "ccb63d7f-0551-4c9a-9104-16c763ec8563",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0b84631e-6f67-49f9-9db6-0bf0ba0d8d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bd427e-558d-487b-bd0a-41cb50d66fa6",
        "cursor": {
          "ref": "5768b3b0-9301-4b6a-9b6e-899ea02169ba",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a77b377a-158a-4924-8d0a-cceebe066dc6"
        },
        "item": {
          "id": "09bd427e-558d-487b-bd0a-41cb50d66fa6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7e0a3315-a2d6-42b6-86db-a63f50cc8047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49eff0d-6a98-4bc2-b135-1daf8ed110ca",
        "cursor": {
          "ref": "bae98991-c449-4f38-a03d-b069f90bd4d1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cd3af9c7-a7f7-4c46-a3d7-fbbbc51ee776"
        },
        "item": {
          "id": "f49eff0d-6a98-4bc2-b135-1daf8ed110ca",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7212004a-13f8-409d-8aa4-3ce3d7e21a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41df5c8c-ecda-4463-baf0-ef793d1b66ac",
        "cursor": {
          "ref": "bf603307-f207-4dfe-ad59-93d0ce906659",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "21849555-ab41-49d1-80f9-17d0a3ddf9e4"
        },
        "item": {
          "id": "41df5c8c-ecda-4463-baf0-ef793d1b66ac",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f19427e1-ab22-4abe-a45a-b1960cf5cb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfce443c-1971-4852-8543-8399b27e7562",
        "cursor": {
          "ref": "034e282f-2851-4cf3-8f77-1fbb276599f6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ba7b8b6d-2361-4225-a5d8-4cbb275ba46c"
        },
        "item": {
          "id": "dfce443c-1971-4852-8543-8399b27e7562",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c7ef4730-226b-493d-82aa-7534111269a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b225106-9293-4f4f-a3fd-b2c819ad5b0d",
        "cursor": {
          "ref": "6925b3ca-133d-4dda-9c3e-3b1036d0186a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6f41c1e1-71d6-4515-ab38-3e6b1be0c41d"
        },
        "item": {
          "id": "1b225106-9293-4f4f-a3fd-b2c819ad5b0d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b5fd4451-1c19-45a1-a11d-029b68956305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46495d0-6dee-4f4b-914a-55ea7ec9de4e",
        "cursor": {
          "ref": "b62130d9-399e-421e-8def-0b2b313e6b1d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b7600465-0db2-4ca9-8d72-56a8fd248f40"
        },
        "item": {
          "id": "a46495d0-6dee-4f4b-914a-55ea7ec9de4e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "043eef34-6821-476e-9246-4f694ea2d787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2659f8-b305-49c7-9f43-8c0221aa0458",
        "cursor": {
          "ref": "a6d5e114-8656-44c8-8cdc-7870701f7bcc",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "793dc784-d3fc-4e10-ac7c-0f0a992b413a"
        },
        "item": {
          "id": "7f2659f8-b305-49c7-9f43-8c0221aa0458",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "62308eb1-99d6-4d0e-98c4-d452a40f6538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b56abab-83ac-4b18-a83d-909eb64cbdb6",
        "cursor": {
          "ref": "44fb815a-8abf-4b45-978f-6869f8768ea9",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ed8669d8-efee-4d1c-9fe2-7c2e6dd80f76"
        },
        "item": {
          "id": "7b56abab-83ac-4b18-a83d-909eb64cbdb6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "11bf9655-cdae-4903-88ab-513b11069b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104a5d75-da00-44cc-8ed9-460419575295",
        "cursor": {
          "ref": "73c5b636-d0a7-4c24-b116-02618e3d9318",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "acfe5a9c-75d4-42a6-a661-abb3c0561972"
        },
        "item": {
          "id": "104a5d75-da00-44cc-8ed9-460419575295",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e2e40e48-4104-4f38-a3c2-c18b33fad460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3221a0a6-2d4a-4204-a8ac-a1ecf9a9d93b",
        "cursor": {
          "ref": "add8642a-e21d-4048-81bb-7c609f9a530b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7a92aec0-b256-473e-bdd4-b6a4151cbfd8"
        },
        "item": {
          "id": "3221a0a6-2d4a-4204-a8ac-a1ecf9a9d93b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9c7bce6b-c0dd-40fd-ade5-cf2265721f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f1ecbb-33c5-4326-b129-b186e5c88ef1",
        "cursor": {
          "ref": "fdcbc214-2039-49f1-9120-6dbe0e7edd35",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "240e972c-010c-4829-94d4-fe49abdfdc91"
        },
        "item": {
          "id": "89f1ecbb-33c5-4326-b129-b186e5c88ef1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4e1c2dac-05fb-48fa-87ec-7e36d2d13cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134dd2ef-be5c-48e8-b1bd-8ac0548ed6b2",
        "cursor": {
          "ref": "71b9c632-7226-4c62-908c-3bf46a778da3",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "10f4b360-0e09-447a-a45b-bdff4fb2db3a"
        },
        "item": {
          "id": "134dd2ef-be5c-48e8-b1bd-8ac0548ed6b2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "15d51356-8f22-4857-aa4d-bf5156028546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0ce91c-a67f-42c8-9242-3a85823dc89e",
        "cursor": {
          "ref": "d482746c-d727-40a8-b116-3ca9b133fa31",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "40728326-d52a-424e-96e9-cf477deba9ee"
        },
        "item": {
          "id": "2c0ce91c-a67f-42c8-9242-3a85823dc89e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9a1c4152-7a8c-4df8-a8bf-3723f78cf9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e968f7-0d32-4de3-8214-b915355ed504",
        "cursor": {
          "ref": "3a4de363-f4b7-4a49-a2db-ea7374ad121b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ba143048-47f4-4e97-ae4f-b8f9bfee7fca"
        },
        "item": {
          "id": "72e968f7-0d32-4de3-8214-b915355ed504",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0809c895-b807-465a-9f62-cf5057a61431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73741f39-0c9c-4d8f-85c4-e1e38f9e26da",
        "cursor": {
          "ref": "fd091a14-6681-45f4-9dcd-baeb1a65253d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6c01044e-2b2e-4477-9c3e-0fe6aba75118"
        },
        "item": {
          "id": "73741f39-0c9c-4d8f-85c4-e1e38f9e26da",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "34adc48e-f8c6-4e68-aedd-20c4e4eb5bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0a3a38-be29-4e9f-a7ae-fd32c06d1d13",
        "cursor": {
          "ref": "13820d15-d61c-4dbf-842f-d8ed556fc89e",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "60c3d7fa-d160-4207-adf9-ea2c3cecb902"
        },
        "item": {
          "id": "eb0a3a38-be29-4e9f-a7ae-fd32c06d1d13",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "530e5c2c-3e2d-4614-87c8-7fea6d4d55ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ff6fd3-f743-49bd-892c-fd7022d1d0ac",
        "cursor": {
          "ref": "aec87a84-684e-4fc8-9482-a2ef62c61b40",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5aa5d7dc-073f-41c2-a252-00466416c861"
        },
        "item": {
          "id": "20ff6fd3-f743-49bd-892c-fd7022d1d0ac",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b337d657-4bdf-400e-b7c3-3953c929327e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cef354-29ff-4fed-9c20-255fffe05caa",
        "cursor": {
          "ref": "bf2b2f4f-ca8d-472e-8ce3-95819af9fff6",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "eb1a374b-db7f-4205-931a-f16f387579f5"
        },
        "item": {
          "id": "00cef354-29ff-4fed-9c20-255fffe05caa",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2ffa9271-e8c4-4e81-a839-fab8d75b5058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df632ae-4068-42a5-8fde-25c513052291",
        "cursor": {
          "ref": "b93e2c76-ba43-42c5-8e8c-11d3660dbb6c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9fcbc9ce-e6f1-4e57-baff-92581325a344"
        },
        "item": {
          "id": "9df632ae-4068-42a5-8fde-25c513052291",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bed83f1b-bad9-4adb-a7e4-8fb357ef3612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ba713d-cee5-4359-8c55-2595888970f8",
        "cursor": {
          "ref": "419d0f04-4152-4eb1-9bb6-0d429d789b93",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b917c32f-abf1-4480-93b4-362e85351516"
        },
        "item": {
          "id": "86ba713d-cee5-4359-8c55-2595888970f8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bc980a1e-ff5a-4bb0-a3e8-0373312a603c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f9f147-0314-4a2e-bf4b-c5acaadfb6da",
        "cursor": {
          "ref": "2db32ae1-c601-4ad3-8a84-02d4e9a53efe",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2b54b4c0-0ab1-464f-9315-b117f7598783"
        },
        "item": {
          "id": "f7f9f147-0314-4a2e-bf4b-c5acaadfb6da",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "04ab32d5-a66f-4deb-9fd4-1f92cd57b4d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c536c3-364c-43e4-b3a5-9df890d85545",
        "cursor": {
          "ref": "c69db547-556e-468a-9c0d-601d0492aa59",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "95ef6cca-0c8e-40b5-b304-3806caf51ae1"
        },
        "item": {
          "id": "07c536c3-364c-43e4-b3a5-9df890d85545",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0455b679-8a1c-4646-907a-d97d2c9a8bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322ca7fb-615f-4bc6-8427-bc18c4d895b9",
        "cursor": {
          "ref": "31b18f41-64d9-415e-a67d-0b070291c216",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7e3d8d0b-fb7d-4120-88ab-385da042ec58"
        },
        "item": {
          "id": "322ca7fb-615f-4bc6-8427-bc18c4d895b9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "287685b7-eeb1-4c24-89c5-1cb0cc145848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d697351-cd1d-4165-b44a-c9fa98b5da31",
        "cursor": {
          "ref": "bb26fbb1-5467-4c47-b153-43872325b9df",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "362344b6-d01c-488f-87f5-d4ebff957f4b"
        },
        "item": {
          "id": "1d697351-cd1d-4165-b44a-c9fa98b5da31",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5b398675-eb7f-4e79-95d2-8657648c648d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafb6552-6fcc-4ef3-b09d-bf9f9cfbd10b",
        "cursor": {
          "ref": "71f184e2-0a03-40c0-9f33-1a19b7f263c0",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "22ded4a3-97f2-4fef-b856-d02979d13928"
        },
        "item": {
          "id": "dafb6552-6fcc-4ef3-b09d-bf9f9cfbd10b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "603a4f96-3c8a-4e5c-af52-00ae060cf8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e504de2-327c-4682-ae07-fa34dcda4035",
        "cursor": {
          "ref": "f87f8285-3879-41f3-ba25-2791f93b0043",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1c0c6c78-40f5-4dc7-934c-51598fe9e3be"
        },
        "item": {
          "id": "5e504de2-327c-4682-ae07-fa34dcda4035",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a25eaf21-2622-4c8d-be8e-83a7061393fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b522586a-1264-4169-821d-5aa69a0edb1f",
        "cursor": {
          "ref": "a65354ab-93a1-47cd-8c24-26226ec4f467",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d407724f-00a6-4f52-b023-9c4fd8359387"
        },
        "item": {
          "id": "b522586a-1264-4169-821d-5aa69a0edb1f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e86c8d44-2973-46fa-a86d-14d3809eb53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18215e76-f14e-42f5-a9e7-12d4b9b595ad",
        "cursor": {
          "ref": "da8cb325-57c8-42a6-86b2-e3829f67d462",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cfea39ab-33f5-4f03-8e6c-e95b980fb22b"
        },
        "item": {
          "id": "18215e76-f14e-42f5-a9e7-12d4b9b595ad",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a30b6a67-1f18-4036-b1a3-2f7fdf9d5022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8998b3-38e6-4a09-b46b-96efb10f8981",
        "cursor": {
          "ref": "11e807d8-65ff-4afb-9c00-1124a79ce4db",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b433b533-713b-4b7e-a066-69a708da50b7"
        },
        "item": {
          "id": "6d8998b3-38e6-4a09-b46b-96efb10f8981",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4ffbc178-a176-4649-b179-a43fca679a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a571ce85-5bd9-4053-be8a-341a7621faec",
        "cursor": {
          "ref": "1e39550d-ee2a-4a87-995f-6033a78706ea",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fadfe2df-872e-489a-85da-9973f868d9ca"
        },
        "item": {
          "id": "a571ce85-5bd9-4053-be8a-341a7621faec",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "19d76dfb-7725-48c3-b6be-f09353674872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40420e17-f534-42aa-b3ce-adae580aa8ea",
        "cursor": {
          "ref": "6ef0ee10-be3a-47c3-9a8f-4cbdebb6a949",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ecea0b51-0d5e-45ab-be02-3572ca0b024f"
        },
        "item": {
          "id": "40420e17-f534-42aa-b3ce-adae580aa8ea",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "63fbeba3-bb4b-4e24-a172-88ae2364f4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57151bb8-5580-4f24-af1c-b25b6ed92a68",
        "cursor": {
          "ref": "ecf028a0-dd78-4f39-af2e-dc35ee987531",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "735df624-ce2d-4159-9558-d3b3a8e980ae"
        },
        "item": {
          "id": "57151bb8-5580-4f24-af1c-b25b6ed92a68",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7c15ecc4-9b93-4866-b934-c6317838a86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ef520f-214e-484a-906b-4a4399402257",
        "cursor": {
          "ref": "852d68ab-8a92-490e-986b-0e10fc040f3a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c8e0cbb2-32fd-45a6-92ac-3ecd395e1e35"
        },
        "item": {
          "id": "88ef520f-214e-484a-906b-4a4399402257",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a39d860f-bd94-4660-b9c6-29202b9cb0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848d89c2-7bb8-43d8-a2c3-a0b56a313ec0",
        "cursor": {
          "ref": "d7501a9b-ba5a-48dc-93ad-80d40fb9818b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "87862de1-53fc-4379-8054-19b4bf6c09a2"
        },
        "item": {
          "id": "848d89c2-7bb8-43d8-a2c3-a0b56a313ec0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ac4bc928-ae36-453b-9fad-372efa2cf5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653e6291-1947-491e-8113-003945f785a2",
        "cursor": {
          "ref": "98034058-3c22-4ba5-b666-4cad83564f88",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "43214301-1949-4ef3-ba0b-49bc7270b07e"
        },
        "item": {
          "id": "653e6291-1947-491e-8113-003945f785a2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b0e4ddec-f48f-494c-84ab-01593e5d4635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec3e949-73e6-4ce4-b28b-2d745c451145",
        "cursor": {
          "ref": "e253a7b9-bf02-4aa6-854b-5d2e17969ad9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e80727e3-c0db-4aad-b0a1-63f008c02c51"
        },
        "item": {
          "id": "5ec3e949-73e6-4ce4-b28b-2d745c451145",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a4d06110-1e38-479c-9fce-c0d48df775ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805c5985-803f-48d3-ad2a-b0b404ccc6a3",
        "cursor": {
          "ref": "c650f53c-2186-4bed-af1f-0f5b3620a1d6",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4b5b98cb-a674-43a1-95fa-a5099e502b1a"
        },
        "item": {
          "id": "805c5985-803f-48d3-ad2a-b0b404ccc6a3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "05035462-e4f8-4981-a53a-47e5e83d8b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a733f9-7a1c-4433-b5d2-178a550414b3",
        "cursor": {
          "ref": "dd711c1e-3ec9-46eb-9247-cc511b4cd95b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d094908c-fee8-41f7-8e01-3ea8ff765fa3"
        },
        "item": {
          "id": "36a733f9-7a1c-4433-b5d2-178a550414b3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "70df05f0-a54c-4f7d-b1ee-82d6ff283ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27aea56a-6c5c-42ae-a9b0-1f42cce4e7eb",
        "cursor": {
          "ref": "b9b02bee-f959-496e-83a5-61030b81ed23",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d5324d4e-8e24-4e92-9f38-ea4b9810042a"
        },
        "item": {
          "id": "27aea56a-6c5c-42ae-a9b0-1f42cce4e7eb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ae43c625-c399-4da9-a9ce-5179e2593fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3f95d8-1235-451b-a25b-22725db00f61",
        "cursor": {
          "ref": "b1cbbde5-3278-4ae3-88f9-be664d477303",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "805264b9-0df8-45aa-b138-2c45fbd8cebb"
        },
        "item": {
          "id": "9f3f95d8-1235-451b-a25b-22725db00f61",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d9646d85-8b21-4767-a03b-f746d3582805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698cb52f-6eae-4d90-be28-8a37496ca969",
        "cursor": {
          "ref": "960eaca1-98eb-471e-bb0a-0b2bb347fbe6",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "df746b17-d2e8-4f0c-b3df-61b47df544b1"
        },
        "item": {
          "id": "698cb52f-6eae-4d90-be28-8a37496ca969",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cba6e644-f7c8-4dc6-becd-05a3994514e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4f385d-d56b-4760-9701-2f4d9186369f",
        "cursor": {
          "ref": "3207065f-fe5c-408d-8caa-da67ac1cec8a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f6df75b1-e38e-48f4-b89a-a14c98d17ae2"
        },
        "item": {
          "id": "fa4f385d-d56b-4760-9701-2f4d9186369f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7d46de34-174f-4082-9aae-30a02709a97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5b8de2-d448-4f51-b2e0-49da64ccc52c",
        "cursor": {
          "ref": "39d62631-e23a-44b4-97f7-2a010f6aa25b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f22be848-4fdd-4f32-9b71-85a056f4d51f"
        },
        "item": {
          "id": "0a5b8de2-d448-4f51-b2e0-49da64ccc52c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "adbba46e-b578-4913-91ee-6ba854efb574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd9059f-4d4b-41ea-8fd7-3396906c12c9",
        "cursor": {
          "ref": "6a7d76e3-765e-4107-8cfc-2a5d0997ca77",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "77219502-9522-4fad-a405-47daaaa153e1"
        },
        "item": {
          "id": "edd9059f-4d4b-41ea-8fd7-3396906c12c9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e3ad0e8f-7d08-403c-a5dc-5fc56f3b815f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2a4400-7e14-45a6-a918-ac4f862a7645",
        "cursor": {
          "ref": "5f587f9a-ebe5-48c8-9dbe-12cc26251c7e",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bedaaa80-e43b-41ad-b3cd-f762d4e84b7b"
        },
        "item": {
          "id": "0c2a4400-7e14-45a6-a918-ac4f862a7645",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e2dde91e-2c8d-4e52-8c3f-345aac8ad8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b54856-b6ce-44a5-a158-ed7cfe5193bd",
        "cursor": {
          "ref": "d11966e8-21fc-4376-83db-222272b9f817",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8b5f105e-5c24-4d81-998b-bafbae046a56"
        },
        "item": {
          "id": "43b54856-b6ce-44a5-a158-ed7cfe5193bd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c33fa4c4-7987-453c-ac64-840054351566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f7435a-4085-42e8-9169-6cf2cfa7e1c5",
        "cursor": {
          "ref": "ca53157c-3220-4490-a460-e296b31c6e6e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c4920288-737e-4bbd-bb85-acd1b5ec878e"
        },
        "item": {
          "id": "34f7435a-4085-42e8-9169-6cf2cfa7e1c5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c7b40263-c21a-40a1-b306-6d88c90e2db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c237e5-0899-4046-b0f3-74d4f7aefb55",
        "cursor": {
          "ref": "c0f1ebaa-bce4-4441-8cda-d54e7c8fcea6",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "af2ea62c-1afa-48e8-a481-08e89f99995d"
        },
        "item": {
          "id": "c3c237e5-0899-4046-b0f3-74d4f7aefb55",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7f3e56fb-9951-478f-988a-eafd503f8eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17c1bcd-fc88-4825-8f8d-e3c216053f8e",
        "cursor": {
          "ref": "29c6b35d-736a-4bf7-9fc3-c7c6915a29b9",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8ed6b6c8-33ee-4c2c-86f3-5a018c63592b"
        },
        "item": {
          "id": "e17c1bcd-fc88-4825-8f8d-e3c216053f8e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b089259b-0267-411c-81e5-7989303f9cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fa30a1-38cf-4745-9fcd-01ee83befa91",
        "cursor": {
          "ref": "289a1d76-4007-4d56-8703-05538665f82a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8dcbd94f-db97-4678-8bff-d7ac38662152"
        },
        "item": {
          "id": "67fa30a1-38cf-4745-9fcd-01ee83befa91",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2d83e20d-e17b-4f37-a0dd-33abea1852b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fafe363-bad7-4fa5-8af3-65d4517ac5da",
        "cursor": {
          "ref": "db0224c2-a956-4f5e-a536-0f1070da520a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c6104241-a3b0-43b8-b366-117e1f16548b"
        },
        "item": {
          "id": "5fafe363-bad7-4fa5-8af3-65d4517ac5da",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "43aa17bc-71c0-4320-9680-4c9ffcd1109f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadb9d77-1366-44be-8c05-34d47321f2c7",
        "cursor": {
          "ref": "c304b116-7576-4238-99f7-31448a9512f7",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b3350997-3131-4a22-b590-b5d7507af00f"
        },
        "item": {
          "id": "cadb9d77-1366-44be-8c05-34d47321f2c7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c1030caf-8456-4485-b3fe-20e8571bd3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5423177-02da-4073-b498-7c3d1cf734e9",
        "cursor": {
          "ref": "0630640d-b349-4425-84c3-7176edeef433",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ce140ea9-9b6b-477b-b88a-160fe978c9de"
        },
        "item": {
          "id": "b5423177-02da-4073-b498-7c3d1cf734e9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a4363860-174b-45eb-bedc-51ef911a65a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10353a0-b1c6-4e49-9de8-f0ee82bdca80",
        "cursor": {
          "ref": "f909d98a-f28d-4fe1-b9f9-c45cf90cd225",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a0b762d1-e4ec-4971-9906-557ab1cf6c9b"
        },
        "item": {
          "id": "c10353a0-b1c6-4e49-9de8-f0ee82bdca80",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "34edc501-93eb-412e-9311-ce2bf8a88608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36f3978-8a48-4d61-8453-6379145a3d64",
        "cursor": {
          "ref": "e007c8ab-a04f-40e6-828d-c4227089c9d6",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "960287ed-adf2-4911-b094-d620c153305f"
        },
        "item": {
          "id": "d36f3978-8a48-4d61-8453-6379145a3d64",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "697da3c5-02b5-425e-82ea-b2a227064fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3573ce24-6db7-459f-bd40-5ccc4db4a45e",
        "cursor": {
          "ref": "1495bc37-e810-42c4-9108-982220c81104",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a10355b0-2b70-4743-8d65-82add5d03534"
        },
        "item": {
          "id": "3573ce24-6db7-459f-bd40-5ccc4db4a45e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9483ce43-9c89-4914-8360-4941fa7d7a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5fa85e-1f42-4e8f-9853-cf68a00c316f",
        "cursor": {
          "ref": "bb7bd666-2213-42b6-b585-d16f649dbd4f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b263cce9-847e-4814-bb20-dbff921e6d0e"
        },
        "item": {
          "id": "3c5fa85e-1f42-4e8f-9853-cf68a00c316f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "80c9d1f1-37f3-46d7-b71f-b0186b7e5d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9fbb75-9a7a-4dec-bf4f-cc750405644d",
        "cursor": {
          "ref": "01fa3e61-d9f1-4c09-8b68-41e05e74460f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1bf1d85c-9ee3-46aa-adc6-bfb3a713f313"
        },
        "item": {
          "id": "df9fbb75-9a7a-4dec-bf4f-cc750405644d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ed6f1103-1bff-4634-bcb4-016e0a65fee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d756a54d-4070-41b3-b93c-e2a96c78bead",
        "cursor": {
          "ref": "45f5a6a4-2220-4939-a666-78733fa6d456",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "dd3a2377-f676-4b4d-973e-f8f5e675c35d"
        },
        "item": {
          "id": "d756a54d-4070-41b3-b93c-e2a96c78bead",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "09473c4c-dc11-47ca-9663-458263d93692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3269fec6-4f07-41d0-be79-459c3197498c",
        "cursor": {
          "ref": "0cf4fa8b-6b77-4a63-8edf-e5f30f7d8521",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "37e26a91-e3bf-43c2-8c15-d434773a29b2"
        },
        "item": {
          "id": "3269fec6-4f07-41d0-be79-459c3197498c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e86d0c9d-d8b7-48eb-99da-037015dacbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f316ef-36cc-4723-a203-3a55e3d1390f",
        "cursor": {
          "ref": "7f9c58bc-4a0f-470a-b4e3-08c43517aabd",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fa5514bb-d19b-4e79-aaf1-74bb51c9a5f3"
        },
        "item": {
          "id": "49f316ef-36cc-4723-a203-3a55e3d1390f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "801d6675-9d86-4021-af3c-49ad9a3bc4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d14531d-64aa-4e1e-9ef0-77fa001cb26d",
        "cursor": {
          "ref": "d458ade8-154d-4508-95c5-f07ea23b971f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9323c8aa-e5af-4f4d-b987-ad69f103021b"
        },
        "item": {
          "id": "0d14531d-64aa-4e1e-9ef0-77fa001cb26d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a11bca35-3838-4bb5-ba3f-2340cb431ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7235777d-5711-421f-808c-9fd811e5c2ff",
        "cursor": {
          "ref": "b4829370-f85f-40d5-abfa-0f2ca80de85a",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "af5a88a3-74f5-4c56-af2a-d856ad083f7d"
        },
        "item": {
          "id": "7235777d-5711-421f-808c-9fd811e5c2ff",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2eaf979e-f909-4682-96de-b841719ef6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d591fb09-0d1c-40b1-b9cf-fa363326bd00",
        "cursor": {
          "ref": "08debcdf-8863-4c6d-920b-4435bbc7bf57",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "61586bec-6e52-4684-8fd8-9964b63809b3"
        },
        "item": {
          "id": "d591fb09-0d1c-40b1-b9cf-fa363326bd00",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1f767b00-eea7-471b-a141-28f85679f44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07907bc-b98f-4559-b5e2-db36dfd4cdf0",
        "cursor": {
          "ref": "e15ea279-9c67-4490-8318-3d8148829f85",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "242aacc9-7090-41d8-9d60-665b9a820632"
        },
        "item": {
          "id": "e07907bc-b98f-4559-b5e2-db36dfd4cdf0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b37e6985-8fa5-4fb2-957e-e01eeeb5fd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe141cd-7538-477e-8b39-97f68a66539b",
        "cursor": {
          "ref": "3f3132b4-4ee1-4403-9f0b-89c2ac442dbd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cad5afd9-6dd1-4492-b9a9-cd643346854f"
        },
        "item": {
          "id": "0fe141cd-7538-477e-8b39-97f68a66539b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f5562b89-d968-41ce-af13-a564151e44ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbfc0ce-686b-4c92-a08b-b447c7439e4d",
        "cursor": {
          "ref": "4546c59e-96d2-4154-ae89-791802d0e57c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7b9f2c34-7e39-4969-9eb9-551c081babf7"
        },
        "item": {
          "id": "8cbfc0ce-686b-4c92-a08b-b447c7439e4d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "71965126-a95a-4edb-9541-d993a73cc044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d932cedd-0910-494f-9003-d4c773adea30",
        "cursor": {
          "ref": "7b981783-a03a-4857-8ebe-050d86377d45",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d3670d24-c379-4aed-ba52-4c1a4887b60e"
        },
        "item": {
          "id": "d932cedd-0910-494f-9003-d4c773adea30",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "71bea98c-5998-4234-b46e-5e572d3a5be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e91bc08-95cd-4a3d-b7de-3e988f86502c",
        "cursor": {
          "ref": "17c78075-11cb-4ace-86e8-f07d3d2517a6",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fafcc926-7ca3-4116-9f5c-4a19ba23394a"
        },
        "item": {
          "id": "0e91bc08-95cd-4a3d-b7de-3e988f86502c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "58f2cb7d-081f-4e13-847d-7d12fbc38d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2f02d2-cb18-4776-8184-92ee26d73162",
        "cursor": {
          "ref": "74f6f79a-5f5d-40d0-9255-2ae3c83e46b6",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e8e7102f-f192-4476-a35b-0b9f275be1c5"
        },
        "item": {
          "id": "6f2f02d2-cb18-4776-8184-92ee26d73162",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4880fde7-f377-4fb7-a84c-27a0acfce9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d689ea-ad67-4e1d-954c-8aa73a984768",
        "cursor": {
          "ref": "f05ae8b8-e3fc-4078-ad34-bfc81e14a66d",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "81f7edb4-d6e1-4542-95a8-146bb7c9bbcd"
        },
        "item": {
          "id": "a8d689ea-ad67-4e1d-954c-8aa73a984768",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5f23ee00-d612-45e3-90c0-f5829adbef78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13357248-5edd-4dfb-bd00-35639d0fc698",
        "cursor": {
          "ref": "0abb3c10-0140-48e3-b471-cab55da79728",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c1f0b6a6-7dcd-46da-8bd9-f10f614dc4cd"
        },
        "item": {
          "id": "13357248-5edd-4dfb-bd00-35639d0fc698",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c95dc774-97cd-4cf9-b9c5-584c7185120f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d037f6e2-7824-4553-8151-133a7cbf137f",
        "cursor": {
          "ref": "c0603525-9ecf-49a7-888c-4c37a9f3c33f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9d700eaf-d503-4434-9c80-e712963b357c"
        },
        "item": {
          "id": "d037f6e2-7824-4553-8151-133a7cbf137f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fd180840-a3cc-413c-b2e6-752d83ebb051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efcc127-cf6a-494b-8218-fb8978d7371c",
        "cursor": {
          "ref": "6609730d-c74c-4814-9ff1-199eaf016ac1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d1547b46-8819-4023-b4b1-4a12e9243e99"
        },
        "item": {
          "id": "8efcc127-cf6a-494b-8218-fb8978d7371c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "70b8ba81-2826-48ee-8ea5-323748f481f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e19843-beca-49a0-98a0-7e3d71810bf9",
        "cursor": {
          "ref": "6d98ce7c-33dc-42a9-97d0-5a78e9bdea09",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c5c983e7-c644-4199-9b62-6d6c6dd27ecd"
        },
        "item": {
          "id": "c2e19843-beca-49a0-98a0-7e3d71810bf9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2f8230d8-0319-4c8f-9e5b-0d676d57baa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b816930-7615-4fb2-b6b2-052388577580",
        "cursor": {
          "ref": "55b119da-be26-4327-a9fd-f78dbb263678",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "544c54a4-c0d7-497e-a1af-ec1d7f409ce0"
        },
        "item": {
          "id": "6b816930-7615-4fb2-b6b2-052388577580",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "79004405-91d0-4962-8f48-ffa553aefdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ac7502-fdae-4a8b-8998-782cbed31a0c",
        "cursor": {
          "ref": "44bc0c67-de7f-4f7c-9094-502cbf5a485a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e5956065-15e3-4e80-aeb4-a0e05953c7dc"
        },
        "item": {
          "id": "57ac7502-fdae-4a8b-8998-782cbed31a0c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1fc369b0-6fbd-4e3e-add4-cf5cae656dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c13922d-b974-4304-9f84-6c2be137e8ed",
        "cursor": {
          "ref": "03be10d1-76b9-4205-87ee-8e3b9763d619",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4bb7f252-26da-4cd2-a8a5-b333b8a5a5f6"
        },
        "item": {
          "id": "2c13922d-b974-4304-9f84-6c2be137e8ed",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "382f2efa-65f0-43dd-a9af-4bddd634500d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83547427-3e0e-4594-8016-28f45a606c0d",
        "cursor": {
          "ref": "4575ea08-14c7-46f9-9f55-e57120d6bfc4",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f25bf459-cf34-4647-a58b-c66fb4734c1b"
        },
        "item": {
          "id": "83547427-3e0e-4594-8016-28f45a606c0d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "453c609e-dd80-4074-85d9-447c060b979a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e438d03-240b-4c9c-9a83-9c97dc579712",
        "cursor": {
          "ref": "1c4004b9-4990-456c-8b23-6218eda305ca",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "34f0c205-d911-486a-8bdb-5a7be378dc5e"
        },
        "item": {
          "id": "3e438d03-240b-4c9c-9a83-9c97dc579712",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a836e525-87dd-46b0-a1c9-39c97bf72ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2846d41-30b5-4950-a23d-549c9a8a1c3b",
        "cursor": {
          "ref": "d27240dc-3f8d-474b-912e-8af061f5802a",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "565d97f9-3a87-42a5-b9a0-ca2264656b03"
        },
        "item": {
          "id": "a2846d41-30b5-4950-a23d-549c9a8a1c3b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7fad6821-1bf7-4887-aa17-77396be2f2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fa4c03-ffde-4a99-a6d9-d55247a11c20",
        "cursor": {
          "ref": "a7f74853-cd70-47c8-b57e-8f00a1ea08f8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d3b50909-ccc0-4677-8abe-720dc9d82807"
        },
        "item": {
          "id": "12fa4c03-ffde-4a99-a6d9-d55247a11c20",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "51d403cd-2570-440c-b34c-29eb6db3ca5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb18ed94-4bf6-4858-b31a-7f41fc46fa1d",
        "cursor": {
          "ref": "72c3e593-2856-428c-9dc0-42a54b009105",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3073353c-4216-46d0-bb76-f9f0a55f72eb"
        },
        "item": {
          "id": "bb18ed94-4bf6-4858-b31a-7f41fc46fa1d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ee8dc274-48f9-4c24-942a-f11ec567f874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f88859-b64a-473c-96f4-b320037d5d34",
        "cursor": {
          "ref": "89d87364-cc71-4f0c-bc55-f209c259f76a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6eabd4a5-e2ad-40d6-a762-23fe29161c14"
        },
        "item": {
          "id": "78f88859-b64a-473c-96f4-b320037d5d34",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f030cf48-e208-4c9f-a7b9-fe3dbb60c120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ef9643-4795-44bb-9086-f69b036cb5bf",
        "cursor": {
          "ref": "a897c19c-b763-4939-aba4-ec2d6fff6640",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fecfa82c-7b03-49e5-a5f5-94d70505f4a1"
        },
        "item": {
          "id": "86ef9643-4795-44bb-9086-f69b036cb5bf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0de65f58-eb48-487f-b879-e61872eed3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe18673f-c3d4-40fd-bb5d-e1a7b01de4fb",
        "cursor": {
          "ref": "e82aec0c-bf92-4f2f-9a75-acf57bccd405",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "62e83756-18cf-4941-815a-e25e4dc8f9da"
        },
        "item": {
          "id": "fe18673f-c3d4-40fd-bb5d-e1a7b01de4fb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d8fb174f-7f2f-4dd4-9be5-95bd29e5eccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb08a2d5-c1f4-4e0b-a69d-274b013bbbce",
        "cursor": {
          "ref": "12c5833f-7779-42e1-bd2c-273411aaa72c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "53ee42bb-62f4-40aa-9c6d-05ce739cefe6"
        },
        "item": {
          "id": "cb08a2d5-c1f4-4e0b-a69d-274b013bbbce",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6a2e0de7-3c3a-48f3-ac30-1fe913b735e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca82d18-8ac3-465d-9e0b-9aaf06c3f819",
        "cursor": {
          "ref": "5f1871f8-1f70-4d80-beb3-a6af68cfee6d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6e4aaab0-e90a-46ff-a78f-32df5adfc55c"
        },
        "item": {
          "id": "aca82d18-8ac3-465d-9e0b-9aaf06c3f819",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bc44a04f-8c65-4044-85f6-e66d1178e649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1c9444-9fa7-4f69-9f68-8728dd9a8714",
        "cursor": {
          "ref": "e076a4fa-fc2c-48a1-8340-ec271b874392",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c2261f72-337d-43e0-9dc8-36a7edf0f787"
        },
        "item": {
          "id": "bf1c9444-9fa7-4f69-9f68-8728dd9a8714",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "08fc21f5-aadb-4dd2-ad95-e583483fdd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8810de1f-bf7e-4aa0-b74d-4ad313bc4fa8",
        "cursor": {
          "ref": "bbd32f03-83a4-4f30-aa7d-47cfc5e7ffae",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c6314c25-5bc3-4270-9b2a-f43dc0e37e87"
        },
        "item": {
          "id": "8810de1f-bf7e-4aa0-b74d-4ad313bc4fa8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f11bfd09-9ebb-4279-a2f1-d2c267e766fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d916af18-59d6-47c3-9537-dec911923fef",
        "cursor": {
          "ref": "cd4200b2-829f-4014-8b72-9d36bdc3f044",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b919fc2a-d780-4021-8626-60e7c67975da"
        },
        "item": {
          "id": "d916af18-59d6-47c3-9537-dec911923fef",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "da7287df-65d4-478a-9029-7a99076ba84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc07028-794c-4507-a7e7-d5f9cbef3a5e",
        "cursor": {
          "ref": "2746e79d-cf83-4463-8d6b-af942fe2cbbf",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e3d4652e-e4df-439a-97e7-af731e5f87b1"
        },
        "item": {
          "id": "2cc07028-794c-4507-a7e7-d5f9cbef3a5e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4cd3bdd3-6eae-429a-a075-7827b9dbb658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae07fe0-3465-4699-bd5f-aee90c1f6cac",
        "cursor": {
          "ref": "ea26a4d2-6d52-400e-87ef-09ca8a811fe5",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e3d4055c-416b-42cc-b506-74fce2bae1eb"
        },
        "item": {
          "id": "bae07fe0-3465-4699-bd5f-aee90c1f6cac",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "890d8edc-a3c2-4458-9bd4-1372e3b192e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53841bca-e5bb-4057-8c94-de6c52f975f2",
        "cursor": {
          "ref": "21e72870-d1bd-46a5-84a4-a4fb81d9a01c",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "af3a310d-8aee-49f4-80f1-fdcf1a84f8b1"
        },
        "item": {
          "id": "53841bca-e5bb-4057-8c94-de6c52f975f2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4467f495-a050-40ee-b35d-9d2cf2eaed1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5441cb80-5b20-4f56-9e54-ad3fe3c486ec",
        "cursor": {
          "ref": "e7deff7c-7884-49e2-a268-170b599fa7c3",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "66e01454-8b64-4de0-9b70-f5eaeb2ebc21"
        },
        "item": {
          "id": "5441cb80-5b20-4f56-9e54-ad3fe3c486ec",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6fd2e4f7-d600-4a2a-b038-8597fd9a63cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb4b6c0-9f9d-429c-88e4-48e6f062230b",
        "cursor": {
          "ref": "001ce880-d84b-44b0-9894-a7552e93a432",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f8960092-e7b2-4aa4-b74b-a2feb675e27a"
        },
        "item": {
          "id": "beb4b6c0-9f9d-429c-88e4-48e6f062230b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f1683ee8-e57f-43c1-b024-7cfe9f39125d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db95e21a-3558-4fcd-9163-519abf04568b",
        "cursor": {
          "ref": "75e9ffcb-3b62-4a36-a587-9e5a26b420fa",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "251613eb-13f2-4575-8c87-e9c33119fd20"
        },
        "item": {
          "id": "db95e21a-3558-4fcd-9163-519abf04568b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "397c3fe1-31e2-448f-aa3e-9f77b173a929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ac2a62-badf-4803-9fc1-04b144de57f3",
        "cursor": {
          "ref": "d032b815-60c8-474f-8a62-475a8edde3d8",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e8c0a89e-9456-4fce-b13e-aeab85b71a28"
        },
        "item": {
          "id": "62ac2a62-badf-4803-9fc1-04b144de57f3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "57058a9c-ef87-4dff-8636-e51f26ae772e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3ae807-9ee3-44c9-a7c8-4e4526535a84",
        "cursor": {
          "ref": "80ecc4e9-b9a1-400b-930f-034699ee07fc",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8df5e777-3dd8-491f-9307-22f622392e89"
        },
        "item": {
          "id": "aa3ae807-9ee3-44c9-a7c8-4e4526535a84",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e9175046-98cb-4187-84ec-d0dbd84226b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c64588-14dc-4867-b6c5-da53fdeac563",
        "cursor": {
          "ref": "8b3d60d8-f4cd-46af-9e80-84f75d83b11f",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d4157bed-7b13-4df5-8925-30038a320d98"
        },
        "item": {
          "id": "14c64588-14dc-4867-b6c5-da53fdeac563",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7f6f97a2-a8fd-4281-9051-9007fc1bad68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6bdb35-de24-4bdf-bde2-012e83a56228",
        "cursor": {
          "ref": "ed26727e-7c33-479a-9763-b22f124967dc",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "25e3ad4b-4d6b-44ca-92bc-8e0292e57207"
        },
        "item": {
          "id": "ee6bdb35-de24-4bdf-bde2-012e83a56228",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f1482776-16cc-44e3-b28b-64c807e0cac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b40277-566f-4d99-a403-6713a96a9d0c",
        "cursor": {
          "ref": "67538c35-4a0a-47d6-916c-b750c5b73df7",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b75f9775-4b9c-4870-975b-f351fc32c1bb"
        },
        "item": {
          "id": "41b40277-566f-4d99-a403-6713a96a9d0c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dff78d19-806b-4323-8d96-a27305cf5618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0f2f54-308d-44e4-b0d8-d055ba675f1e",
        "cursor": {
          "ref": "e23639d2-7c7e-4a60-8b3a-da5ad059f310",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5b7c1145-e2f3-4cea-a971-99011a049ee5"
        },
        "item": {
          "id": "bc0f2f54-308d-44e4-b0d8-d055ba675f1e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3f9c9f1d-a081-467e-b0df-1de5464c94aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea183bd-4392-4f25-9ce7-ab1a2a6bab4d",
        "cursor": {
          "ref": "04439080-8179-4803-8b17-5f9c02c02576",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0c67271c-a2b2-43f4-b869-b2e6f4baec32"
        },
        "item": {
          "id": "9ea183bd-4392-4f25-9ce7-ab1a2a6bab4d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "339f0fde-5602-4c09-ad6d-956146589ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe675b8d-d670-4bdc-b20f-84864e1f7fce",
        "cursor": {
          "ref": "bb6570c7-d503-4145-ac76-5ff928416780",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3f0c8f1e-a40c-4162-aabd-c8141b22d6a4"
        },
        "item": {
          "id": "fe675b8d-d670-4bdc-b20f-84864e1f7fce",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5990340e-f923-4259-bddc-cf86ee15b462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0925ac42-7e5d-4de5-8f6a-0ad8796b5d3c",
        "cursor": {
          "ref": "0f0bc516-f67b-4d75-84e7-ab2c879463b2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fdd6391c-5f4a-47f6-a4ae-637feab613fb"
        },
        "item": {
          "id": "0925ac42-7e5d-4de5-8f6a-0ad8796b5d3c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "34640f1f-42fd-4f5e-9dee-b5e9d071b1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47883d4-1871-4c8c-96c7-251cf744a086",
        "cursor": {
          "ref": "0bab196a-2c25-46c7-a636-033870a66248",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "40899d8c-ea54-4fbf-8a8d-4de24d5a9a61"
        },
        "item": {
          "id": "e47883d4-1871-4c8c-96c7-251cf744a086",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d866c187-b3bb-4240-853d-c9d35fb94bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930ce6b9-0a14-4c6b-ab38-da486358b706",
        "cursor": {
          "ref": "df9feef9-a81d-447a-81e1-dc69076b512d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "858f5f5a-eb26-4aa4-9c84-f23f4f088abd"
        },
        "item": {
          "id": "930ce6b9-0a14-4c6b-ab38-da486358b706",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6bcfed94-041e-4099-86e6-4b541c7cfac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67529e90-a782-4fed-885a-a750fc069132",
        "cursor": {
          "ref": "5ea209a1-4bbf-438d-9b6a-b7286cbbd839",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f4726b75-3392-4f6b-bb58-6dd681887646"
        },
        "item": {
          "id": "67529e90-a782-4fed-885a-a750fc069132",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "35f53342-fbed-4d5b-bc0a-3c1978d18ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2b33ea-cf45-48cc-a789-39ed7245bc6c",
        "cursor": {
          "ref": "02da0565-43c3-4b52-ad60-c8b8eee5fe52",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9fc80a67-d9f2-4bec-82b8-7a17182cba2c"
        },
        "item": {
          "id": "6b2b33ea-cf45-48cc-a789-39ed7245bc6c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "65f407f7-042b-41d8-b0be-2531b03a5743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1450a10-cd64-4561-a4df-0e85b92fb7e6",
        "cursor": {
          "ref": "7627588f-6608-4ff5-9471-b2a5871bd34f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5f6f9feb-2854-44f4-ae6e-fc5b3c1c6186"
        },
        "item": {
          "id": "f1450a10-cd64-4561-a4df-0e85b92fb7e6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "36e8bb79-3bae-4e75-a7d8-dc972310b11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8501dadd-f93b-4265-8d77-5d8fe8c90a0b",
        "cursor": {
          "ref": "0ed06e33-d438-482e-b23b-eb151dd25f10",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9992f7f4-4e03-4000-8cd9-6196fa38071e"
        },
        "item": {
          "id": "8501dadd-f93b-4265-8d77-5d8fe8c90a0b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "89e823f2-5cb6-49eb-ae9d-a1fe5694e3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3038ef29-a3c4-49f7-b8da-dbf3c63df919",
        "cursor": {
          "ref": "d8226c94-9ac8-44b0-981d-06f67516d6f9",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "75f99a24-51ae-499c-bc15-664b9ef63535"
        },
        "item": {
          "id": "3038ef29-a3c4-49f7-b8da-dbf3c63df919",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "602d893f-4064-4c8a-a80a-9d8a8c5f8662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adecf813-83b9-4d46-af1d-fa51cf63bfad",
        "cursor": {
          "ref": "4bec58a3-b8ec-40d9-bbf6-4067645448ee",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "dcdfdfdd-ceee-497d-9e59-0b7956159a7a"
        },
        "item": {
          "id": "adecf813-83b9-4d46-af1d-fa51cf63bfad",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "facb88df-4069-4abe-8cf7-c265ff02427b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d53d588-9f60-4b63-a69e-7019073766ca",
        "cursor": {
          "ref": "33f85f03-528c-4ab8-a78d-1f7efc570a42",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a881e3fe-3db9-4e21-bed8-dc789146dfe3"
        },
        "item": {
          "id": "6d53d588-9f60-4b63-a69e-7019073766ca",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b7e22ce4-7faa-4816-9966-968beefaf629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3749ab-3753-4e02-bef7-68f9e01e930c",
        "cursor": {
          "ref": "a3d34779-ebd0-46b6-89c6-de161ac9fc36",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7c23c3b0-ad71-4d62-9a27-27473dfb6542"
        },
        "item": {
          "id": "3b3749ab-3753-4e02-bef7-68f9e01e930c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8223636d-ef74-435b-8298-187b39e809ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9b282c-3d9c-4da3-8806-34a1657272c4",
        "cursor": {
          "ref": "f03ac5fd-9077-4d4c-8b11-9b6e38241afc",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d18782ac-e7aa-47b3-925a-98fe29dbc682"
        },
        "item": {
          "id": "6f9b282c-3d9c-4da3-8806-34a1657272c4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b2bd5523-1242-4a13-8bc8-3cb221c2f115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79176d8-3d5d-46a8-a82e-67a022cff472",
        "cursor": {
          "ref": "1fcdaa65-bfe6-4b74-8e48-57ab5b4f1f6d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2455c772-6a1f-480e-af45-5ed3845c1599"
        },
        "item": {
          "id": "d79176d8-3d5d-46a8-a82e-67a022cff472",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "667fc2ab-fb29-4a68-b568-5f291c935bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583b8adb-b85c-454a-a0ee-055062a758ac",
        "cursor": {
          "ref": "e344859c-addf-40fa-9bab-2db7346c6e30",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "31bf970a-2f8e-4298-8e8d-00bbb5763647"
        },
        "item": {
          "id": "583b8adb-b85c-454a-a0ee-055062a758ac",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "082121f8-7f4b-4c50-9e01-068528c8059a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93af5d79-e210-4770-a790-0f7992d504cb",
        "cursor": {
          "ref": "0a5c86f9-cd49-4d0e-a543-05704586d4c7",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b9eef1e1-49c5-40dc-9d0f-b5285dcb138b"
        },
        "item": {
          "id": "93af5d79-e210-4770-a790-0f7992d504cb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7d9e1edc-f475-4360-aa5d-a234b08d8716",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bdf06a-91e8-47e0-9dea-6f355e39e193",
        "cursor": {
          "ref": "800f3346-a5dc-42f6-a873-435e1765f539",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8320dc12-17cf-4d77-bcf2-6d93255b313c"
        },
        "item": {
          "id": "57bdf06a-91e8-47e0-9dea-6f355e39e193",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2ec879b6-e66c-41a6-89d5-8434a36a3548",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b3cf11-4cef-4275-ad42-e06d7b3abbcd",
        "cursor": {
          "ref": "08548a24-bf40-4fa9-bc73-16f16a628cd2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8c5fa698-9e92-4352-be03-cef91cbafd33"
        },
        "item": {
          "id": "81b3cf11-4cef-4275-ad42-e06d7b3abbcd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "25e45f9f-244e-4d15-a105-04430cfaca49",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cb61b2-5ccd-4455-b73f-363ce299eeb8",
        "cursor": {
          "ref": "d5081d90-e8f5-497f-bbfc-730c5bd5494a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "380488ee-c981-49b1-ab2b-df1f76cfc7f7"
        },
        "item": {
          "id": "04cb61b2-5ccd-4455-b73f-363ce299eeb8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1d95037c-2a2d-44d6-9d7a-9578d99deb4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cb61b2-5ccd-4455-b73f-363ce299eeb8",
        "cursor": {
          "ref": "d5081d90-e8f5-497f-bbfc-730c5bd5494a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "380488ee-c981-49b1-ab2b-df1f76cfc7f7"
        },
        "item": {
          "id": "04cb61b2-5ccd-4455-b73f-363ce299eeb8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1d95037c-2a2d-44d6-9d7a-9578d99deb4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e6acf7-b27e-4975-9bbd-f4c854cd7bef",
        "cursor": {
          "ref": "7aa4c16f-c08b-4221-af8f-a14f5462a68b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "be317fca-e5a2-4800-931f-5198fb40b8a6"
        },
        "item": {
          "id": "54e6acf7-b27e-4975-9bbd-f4c854cd7bef",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c15dd357-32fd-45ab-aa65-c7a62a7f11b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8025b4ad-2c56-4c0d-8bef-aec507f5eb3d",
        "cursor": {
          "ref": "365c5b78-3355-4fa6-bf0f-5c031f5fdbd7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "28368aaa-8b15-4c94-ba88-ac6e3cf49ed6"
        },
        "item": {
          "id": "8025b4ad-2c56-4c0d-8bef-aec507f5eb3d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ce9392e0-63fa-4ea2-8729-e9ec5dc19360",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}