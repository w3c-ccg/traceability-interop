{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1f926b09-7d3d-4b5e-836c-3dc6ab5c168b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "459a2ca1-a289-4379-a03d-ef20f03048a7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f774cabe-dc4d-496e-81eb-b89a4e4def1d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "99e9ff7a-a943-40f8-b697-162b8524e042"
                }
              }
            ]
          },
          {
            "id": "c70dff3d-43b1-4a19-adfc-ac57cfb1e156",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "996ed851-56ab-481a-87ae-0715cfe2147b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "947329ff-6189-425d-bac7-54bf14cf4e1d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e5dda2d2-ac55-46c6-9f44-c1b91a413392",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2319c32a-439d-488c-8a5c-20d40d7237bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f2527574-5ce1-4a31-be36-9420c431e95e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cff489e-99a7-4651-909d-235193e4cc9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16585ec9-0c57-4d5f-b5d1-96cc9a929a03"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9023729a-9569-4677-9c78-f5bf5d9b45bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19d6fb0c-a68e-4ba1-82b3-23e52cf8524a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "17e24e96-72c5-400b-87ae-432cd73a5ba0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c7c3f26-3d1e-4798-b2e0-799f91d96f5c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbb5bb53-72b4-4ee7-a86a-2c9bce4685da",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "048a9aaf-7b27-4f7b-b20c-0c5e170fd6df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "caa12fcb-febe-4ed0-8daa-676e577f1680",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35b2be72-4efe-4edc-8b24-cc7ffab3abe7"
            }
          }
        ]
      },
      {
        "id": "352e0d83-2db2-4c77-9efb-6b8969992532",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f8db4261-7efd-4f28-be5e-8c408d342651",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdd84644-e6d8-44da-85c0-81c2fc1ecb4a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c9dcf2c7-0b7d-4aad-a7e5-a55941357981",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c760e909-3856-4b39-833b-72d1bb904c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e86c4a9-7a6c-4268-9017-c2d030302baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25daabd-9617-4e08-bcbd-dc8849043f61",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58275c9-b3c1-4930-bedc-d29645dccbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "866a5a01-e39e-44d9-bcd8-059a9e893cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ec0673-8bb5-4af6-abf3-46fb3ce28032",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0763e2-cf92-4b43-9808-fc6e60f4c049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "404fcad3-6f3b-4a82-a9bd-95757e54bc40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4a381c6-28fa-4c6b-b86c-28a504f0e1f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ecfc1a0-69c7-452e-a236-04992700cccc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83a65f7-12c3-43bb-9591-5c6df8b47f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77502854-a2d6-4f79-a462-bdac0733d1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4591b8c-4c5d-4a2a-9d37-0b37ff4b116f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb607b3-0544-4048-91f5-f9d18dd3b4eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "503e063c-1bda-42f5-bde0-d07f9e77a882",
            "name": "Positive Testing",
            "item": [
              {
                "id": "adbde7c0-2e90-43fb-9f70-709c09c8f67d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdb2f22a-3ee3-4d71-84d2-d26e2a16cfa0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "33bc379e-ea14-4877-a726-cd8dec1eacbd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ff9270e-ace0-440c-83ff-0bf8cc3ba8af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "aca1de84-1354-4c38-b6b6-c2aad858e2b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af540349-a1a9-46cf-a527-2e677310d107",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a746c94-678c-4943-bd18-d3d100a326b1"
            }
          }
        ]
      },
      {
        "id": "f940c16b-1ff0-42da-a6f9-ef6712e31328",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2d007399-84b3-4c09-82bb-c1a2b8f4ce31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7d8586b-da8b-4beb-8e08-6f1fbb25c65c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "eef59546-4774-4ae7-b651-7f51b99d8c00",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cca1041-916f-4d0b-9f88-b34d08bd997c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0722a4-2058-48a2-8668-71c3a0e7bb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658dbe16-c2f3-4c9a-a3b1-7a134ba6a51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bf0b45b-fd6e-4143-abc7-ea3e274a1632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb2772f-4799-41b8-8e43-8eab2356d040",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc33bf9-e0b6-4e21-9a9a-65811e6f35ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c71e096-43b4-488d-82c3-6d7acb67b410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61a3235-32df-4bca-b38a-337b28c459e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95dc58b8-6b24-4818-b972-7b67391bb3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5e143b-6fa5-4b64-835d-a61622c24856",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd91090-0e62-42c6-9aeb-a860c5cf3da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbd6964-85da-424e-b96c-f9b29fb8ddc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872dd9da-7d31-45fe-aae0-12d4f56afbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a619fac-14be-4b24-a845-8c2b268b088f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359b63d3-c0fd-4c5a-8526-8b3350405b79",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3373f853-876e-4177-acdd-845f793b6b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9c0a42-2ca6-4579-ba63-50927658cb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680de45a-8e8c-4cd3-b452-0be2042a7ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c964cf49-eaf2-4e56-b259-1b2d9fafb877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d942ddfc-fafd-48ea-b392-85830df7ab3c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357d3b72-8a41-4fb0-bf95-81064007dd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90512bfb-bc1d-49fe-a7f2-6536cf94c9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f2a7ea-6574-421c-93b5-965e938ae94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "046a60ac-054f-4f0b-bd59-efe1dbbbae98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2effa7be-4ee8-4a07-b6c5-42bce3c86e92",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dab2240-f7f4-4e17-9135-41c3fd1ee708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17cb7c2-a866-4037-a346-cfd0fde364ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c8d844-fae9-4154-ac97-86cbf3ce367a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9c1ab84-06ed-4a00-801f-903d31209007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59aab649-7c20-4622-b98d-7fd2344022e8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0313e9-49d8-4e15-b776-4798ad5b5e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac06103d-5fd2-403b-a890-fef63dbf4be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fb7c90-6d8b-427a-bb58-3fd8f1aab3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86d6028a-7ac4-4159-907a-e7a224d6d285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17255182-5f0d-44fa-892a-3052724076e9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff77baa-804d-4637-9ca3-d83c6ff44798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9bd083-9b92-43d9-b79c-fe8a372efc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c497d0-0084-4613-ad86-073de9ef691f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afb88923-f47a-4943-acf2-b65417b9ef25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91dd637-84a6-4e9a-bccb-9e70429c99d0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dfd91b-1f0c-49fa-9a8a-395aae6840b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a654db-46ed-4b6a-a6fe-610eb294c092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5146af0f-cab6-4083-98fd-11e7da090aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03e61c89-dcbe-486b-8d73-f42fa85311ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e5926f-0301-462e-a539-60b5bcecb454",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aa9321-7353-48ab-af77-773011a6ac9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff61402-00c9-447d-a2f4-d7ddfebf4a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d252f15-fea3-48bb-ac03-2d283f5b1c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51236e81-e98e-4980-aa04-33628a8d7df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6e7b33-ee75-41b6-a9a4-e0843c2b6878",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b00762c-93f1-415d-bacf-c76ec48e8a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6362c94d-514c-4eeb-9dd4-17a051f51718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434f8767-3507-4ffc-8b43-b5ecbb31cd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "828ddade-86b5-425c-a94a-414bf638a15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad6303b-ea26-4495-a870-20f7b32ed0d4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4a5cad-af13-4f5a-ae3b-7ae1066d961d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4764326-aa75-4689-8031-f35bfae4cfdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941134df-9674-4fd5-bbe1-c3b6d008878c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24e59e26-bbec-440b-8e69-fd4c8e183361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62230ed2-0c8a-4c27-9c02-14aa623972e9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9705bc-12cb-4a99-a339-092b0617fc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d99fa2e-4e3e-4be0-a466-ba63f14c3c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a94d34-aceb-44f1-9958-4ff2f58b8523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2d66f7c-176a-4eac-bd4d-cb9bb5fd3101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096f961b-be02-42cb-b422-70850d2c4601",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab191ae-aa53-4b8a-993e-206944fb9a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfe4eca-98ec-4189-8231-203009032acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5474bf4-44f6-4a15-a561-7c87f6e1b830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "167578bb-8e6c-4548-977c-248edc9c4380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd33b47-e73a-40e1-8011-281cb61942c2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41b6100-953b-4c8d-b520-3a4742217d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6fd217-e972-4364-97ec-58406ccfd400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59eb37d0-197c-4c15-8a42-7c99b5273141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60053636-c01b-45ef-bda5-3eab989e22a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb64a6fa-55bb-427a-be6e-2cc24fd0f566",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f9adc0-25ee-43b8-bed2-110464a50e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b27657-9e44-498f-95d4-9447143552ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8dc9aaa-91aa-46da-9150-f145d03abb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d725aeef-d719-4ebe-96bd-187f8bcb47db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8531bb-6390-4d87-a95a-18c2e8b7bc70",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc6db10-86a1-4094-893f-34361307e38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3337bea0-b17c-4ce2-8b0c-ef075e01912c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfd188b-ce4f-40ae-af3d-093d8bdeac1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99ad6575-6bcd-4e16-b7ce-bdaee41b525e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c462b46-2b77-4dab-b2b4-754b0d853fec",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a30ba5-2a78-4304-a5b4-e133c41f75c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44b6703-6b18-4529-a545-e8bc0ddf9039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efa358a-3669-4831-adfc-342204ba6edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d10538-6098-4bc9-b3e1-df03ac66b739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dfa183-ad4a-44fc-9ec2-f482d34ebb8d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cac2971-a746-40fb-b0df-5819807d6b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01cb1b6-1db6-418f-b7ef-51c083a0d8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf09bbe-f930-4135-980d-f93022f86a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e116ca6-2151-40c8-b79b-fbb5d2f225d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e3d520-623e-4321-a6e1-4bc19e2ba318",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73bbd52-612d-4a43-ac1f-2fab3cf7e778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6056254e-ee1e-429a-8d1f-0d789be9d999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935bb9bb-ae78-4974-8030-72fadadf79bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37b0b868-50ca-45bc-811b-a9f66c6e0883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a9ba16-4d58-4826-8c28-456015c9c501",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8887992c-4e50-4e4d-af64-8570d0e069eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236c932f-1274-45e3-a1b2-2ac3dd9d0be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9f776f-7510-4169-8b71-2dcffa84a2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85886b16-e396-432f-a91a-5af850704538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891ec7a0-d885-4085-80ff-a8285c937b30",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbe0c3d-95f2-4a05-9877-2d7fb38a5b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c52dcf5-012d-4da2-b8b9-9ee786559337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae212879-8a35-481a-a28f-08b19ae31cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fc1b9f-7fb5-4975-a82b-58c7707d61e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd1e3ff-d848-41ed-8e46-2dce07f75e70",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558b2f81-081a-4172-9c5f-3fd611f1c2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661bfa23-7410-4d0f-85b7-19570fa97bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30604aa7-6101-434e-9f58-46b924e7c8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92a2dbdd-d87d-470c-a887-d5df5d41d48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a267896-2a7e-49a9-8149-3cc2c95ed0d3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b3b33f-1326-4541-878c-10ebe331b0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "462f5011-0491-4553-a829-52c84b9cca2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70feab02-09a5-4530-902b-0071ff40b198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "afea8854-4dfe-466a-8704-a4468eb44db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592d63e4-1697-4387-800f-18b4e2dd6de6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38866851-6793-485b-be82-338ae5e62f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbcf53b-8951-4830-b48f-d73895b0591e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffd57ff-7360-40ce-b238-df974cb9c4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11634508-05b4-45da-b655-78ae893c27ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ed2ccc-9c77-4477-83da-27db1057104c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71174131-5950-4ec3-884b-98dc26984d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe9e0f6-564a-4e82-be94-39c5ad9a0c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab6fbc5-c6f2-4335-a195-9a2ee89f04f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48628f28-9b84-4afb-a8a6-c4184e9bc905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21acdd22-c9dc-49c8-af8b-15d5c142b46f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6365b742-638b-4a34-bde1-e18bb04ec45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79dc8e39-6471-4f35-a5a7-9965996d7a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5725c60-5d68-4fb4-92f8-87ee755f5826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f37799-f74e-4438-ac7e-e5cca9c308d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4eeb2e-3879-4fc6-b43b-dfe4c65f227e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18320dd7-1bf8-443b-b4cb-3ae976aa424f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d01941-98b8-4393-a49f-b798eb52d561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92767b0a-b1c3-4378-9af6-76430e1b62c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7163a67f-35a0-4a70-be31-5c11187893a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4671c81-df39-4617-9f15-83744cf1ec3c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea56937d-e1ee-40de-b61f-d1d7652bc48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50617afe-3cce-41f1-9049-aaa914abfb4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17a8329-a44b-41db-b497-888756618424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b8903a-4270-4be5-8d1d-1d4564c8cfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51376678-0f30-4db7-9550-eadbabd27b83",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f5dfc1-2216-4129-ae26-5941d21e1591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0905db2-838d-43b0-ac66-28cb2399e26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8e188c-95dd-4c15-a5f3-8c82bdd7fbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c91baa2-2af8-43c8-a50f-97ffb37794ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f00c16-fc84-49be-a8c9-8f55c4cc6d17",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6f6f66-fa5b-4651-9d74-e3324633015e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c098f2da-d7a4-4b77-ad10-ec553230b7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0affbb22-f305-4f96-9636-5e39ac958184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5ad1cf-8a98-4c06-a770-fa86ff3246c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4b9a1e-dc60-4e92-8b5c-1e2cdceea53e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582aa98e-283e-4e4f-abf9-4a9a3ab0ed08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7050f17b-c60b-4a77-83f5-90d0324a231f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f977ffe0-1084-498f-b9ea-6649bc6bb061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa4a3b2-7a5b-49e1-a8f0-3a6ea4cf97e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bf6845-f55e-449a-b730-2b082beb44ea",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24adbaa-acc0-43c3-b353-53797cd338d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b9ac6d-6b90-4a98-a3af-ee0cc749e7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e6db91-6885-4f8c-ba4a-1b3c6aab1b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f80f06f-693a-4dc8-9bab-18cc39b43512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6d37fe-befd-4a54-be0d-4f08befffc49",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0553dbe-a89d-4744-b04d-b4c71d4c26d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117624e8-97ab-4716-a23a-cfa4091c25ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac833b1-920f-4e5d-9df8-e0ab327bf414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c468112-7212-4c4f-8b35-a8e4285c6d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b357b2-9505-4041-a763-1f505a6503ba",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d378962a-844a-4d37-9032-2e7bfd3f0c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3426d8dd-f542-44c1-97d2-6f72ac9fc839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dedcd1-7fa6-4d87-9a8c-ccfbe63764dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "280f9469-dd1e-4866-84c9-ac9eaec15e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f02a26-739a-42f1-9748-b70a26fdc5a5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d44158d-4698-44c8-a607-80e2f0664ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ca1f911-40d4-4cd7-b195-af1b479c0888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c45349-c79a-40d8-b883-bb87667d0e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d00f3244-9763-457c-a657-bd8ad4b97611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30322fe-766a-4c95-abf4-f5eac5989bfd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908f04dc-0ebe-4a62-bbf0-a27a26444049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e50a149-6c2c-44c5-b7be-352f11932cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8704b9-cda3-43e8-8951-379757b15d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21d48f57-810f-4378-8b8d-15eb0fdad696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc56306-3c8e-47fa-8e94-02f2c9928a92",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00677bb9-08b5-423f-996f-634130a06564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cb404b-6b3a-435b-8cbb-44973ec0f898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97345ce-0283-4419-8d51-765e5b8ead0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5005c0-78ed-4bba-8007-0449e7ce7361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62087695-9f12-429e-94e4-bb416228da3c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b079047-2a26-4915-9323-56e2556dfb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3ab7d9-2523-4dc9-89aa-4eba50e3ae7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c50c27a-f009-4e0d-b4e7-c3c1b03b1fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a11769ed-7f3d-4719-9321-c108411dbbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15e33da-ce92-4f56-910f-c5bdba09320b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bad761-1653-4655-be96-8e72d0e6e42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97daad88-b563-4249-8315-5e6339652ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e18110-9b00-4f32-b793-7331f5c2ebf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e99de7b-93df-47e7-84a1-d24dd9b37986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2245d5-38ab-402a-888e-3fdbd40149c8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3d74e5-cec0-46c1-9cbe-b0aaa1d5cfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa99794-86bd-46d9-b7da-06648a718aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ff8d1e-bccd-4e2e-8626-7180e373e49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4281eb62-bc09-475c-8e4f-62f81f0c4c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ef78cb-53df-4a20-a618-2457e3a28e47",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df26a8d6-8c76-4726-bc88-fa2e28039b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa73173-4c44-438a-b228-b3137939f260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377e1c5d-dc60-4d7d-8010-5549aee778f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc767e8-b510-49e3-b341-0221010f05a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84941d72-6c86-4de5-be05-b8bee8202201",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a148caaf-aa6a-4c95-bdd4-0a75e336ad61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12c1b59-469d-478a-add1-26712d69fb47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b025476e-55df-420c-9ed8-b2afabba8d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1bb611a-ab2d-4036-924b-2f908871f606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659d9950-2609-422b-8139-4d2f2c966c77",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8341f778-846d-491f-a10e-647c435f071e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e37879-253d-43bd-ac6a-1f9fe434fa2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c8f335-caa9-40fa-9483-c0c96e6becc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "096f2acd-1dd6-4cb1-8f8f-e648a079c54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec68b59-5b73-4e5d-a422-ab286049fac1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c400775-afb1-4681-afe7-50c1ab408b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2ceabe-ba4a-42d8-87ab-2b918c764d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e270ac4b-5392-4512-a897-907531760f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c43e34f8-9ad0-486b-98a0-6cf023624fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f502ed9c-36a1-40b7-a45d-ef1117cd8b52",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3235d691-a2a1-4992-af22-add6d8b6b4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c70ac3-645a-424b-968e-6159b0b67e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c915d5-7284-4f4c-94fa-7e6435ddba23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd1a909-b443-44d9-b8a7-78817717d45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f3f89d-0965-4686-a7c6-76d34b241b09",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8245eaf1-9d5e-4ceb-b1f1-95f0ec0b5119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b1cde4-04d8-4dda-b56c-89b9198a24b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17324961-247a-4e9c-9655-75524db3da8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1995bd-cd20-4af2-b09c-cabfd0e24915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa74b0f-1ae1-47fe-99fb-74dfb0648225",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88406ed-9937-4daf-90ed-a70c9b8afaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ab5e8a-2bb7-4364-b9a7-89c9091d4369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ca629a-e58b-4ba3-9f9d-10fee0cb137f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01f2fa5f-a3c5-477d-ba53-b545dfc4824c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e37aec1-ad91-4ad6-aa78-6af7d01e57da",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5fb62f-41b6-43d4-849c-ade1c4b03a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63975c57-15d6-4eb9-9227-5e171981d729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78998d55-86be-4609-910e-6623b3f99f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e004e995-5e63-4054-b9b1-9ec23fa6d42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5c27d1-c176-4ed3-a89b-c986a3507d07",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49428fb7-fabb-4ddb-bd05-9d2bb54a3179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01265ae1-5c1e-49ab-9c48-8203b793d9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f68c8da-a492-4bad-b5da-08532776e9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f857acfe-9585-4495-a4b6-595083b8b69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f87417-b1e4-4630-98a3-1dab6ce17ca7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa824c5-542a-4efc-aecc-d263a6fb6214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d52145-51e8-4825-a24c-1b46922eedb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82ff718-db47-40e2-9aca-5ba79e1bdd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b72a4b76-5857-4e2a-892f-ef2d42eb6acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c29dba3-9b72-4942-9735-b305632bc7d9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91fed8e-2e13-402e-9d8f-bedf6bacb788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3868c2c0-dee0-4919-9549-170d69ad48ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63359ac-e38c-4a4a-bcf1-f426d1fe9e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06c837e3-3726-4ea7-b8bd-cbaced781258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c61141c-b477-49cd-a6c4-29b70212d7e9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcb6757-df99-42d9-b45b-1cbc95b9f01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f41b83-7488-4844-81ed-706c237db536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf3de4e-f532-46de-819e-f193e1b12453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a022da22-542a-41ac-85c7-1cad9f736d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e468c30-dfab-4530-8a96-d695ef900d8e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f50ebe-f77e-4886-baa6-225d2ec0d7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f38c31b-e12f-44f0-a05c-1b794d04b764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dde8c5-e449-4522-a838-3793213bb4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53133966-6b74-49a7-81af-e9f8c780ce41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d2fe2e-338a-43cb-a737-3e03f02951f5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4118722-751d-472a-8ac6-aac48eb32e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0f9eca-7ceb-4111-9e7b-6f46385a3b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75ff621-2815-4d7a-b19e-eef9637ed7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d88b10c-6b83-42c4-ad85-b4c7442159b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f5719d-ec7c-4062-86b5-36383aff1d67",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc822fb-624e-4062-abe3-654b04ecbc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96186d1-129c-48da-acfc-6e6cd1d40bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b012be-8296-49bf-b8c9-490b623836a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2f273d-8de8-41ff-85d9-c53dc52152ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990d7f4d-3f12-4347-a412-40572b96fe38",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4ad9eb-0eb0-4dcf-a851-686437c02a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35d6b0d-ac12-4605-90c6-10540580f12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ade62a-f16c-4f8b-a006-2a969c2d9291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a470796-23b9-4cd1-aef4-b5c9b343a087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f3d343-5008-4c41-97d9-7d540de068b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f2f657-39fc-4427-be0a-fd419da01c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82c0ee0-6793-46bf-82e6-5185565e957b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c318b3-7ec5-4d41-b5ac-2acb72a53b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2be06547-71f7-4229-8174-0f54c5b4d5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cc48b6-b9c0-4aab-9633-5655dd6712c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307b7de3-8542-4568-9af4-02704be2ef7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f6f84b-703e-4dd0-b769-a6a2cc377a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62f5bfa-daa3-425b-9395-f90c97afd891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb68b896-61c5-4699-ab6b-6aa06557d17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456a5808-8577-42d8-b7ed-2f02b2e6351e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add2f0b1-1e6c-43d2-af3b-f5030f8948dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac43ff13-437b-4248-94fb-079b62905931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94e54db-aee5-48e4-8548-86e05e70706d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2eda1e57-5bd5-44a8-8596-8772565741e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abae7f8-3020-4137-b479-4d47c4de80b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2d98bb-f0d4-4f2d-9195-5c0d5163bc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8befc1-5dda-41b3-8e31-d3d2e3502555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08242c5a-4fff-4f1d-a7ab-1844487849e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "62fe05b6-c958-4398-bed7-ed7c4c2b62e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c439708-2ea7-4d74-bbdb-021178841e28",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdae2ae-b4bd-4e5a-bc5e-24be3e204033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1927145d-4588-4019-b2fb-132ee150c316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded6d6ad-fdb1-42fe-bfd8-16c38b0c2091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6376331-a330-4137-84eb-e11ed3a8af24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602cc232-1322-4637-8f4e-7a136f8042ea",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c02958-ba0d-4efc-a2b6-d6c9d933fd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93f87e2-1083-4a49-b135-2c35ba5b4639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bce922c-f18e-4fdd-86e8-30d06218b637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9788ed4a-0e63-41ff-834f-b7b4c400f0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4a0a4e-5f53-4141-b5a0-1367761fb3d3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33464d88-900c-4cec-a11d-17854ab53319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8baad5d8-d5cf-42a5-9f88-ef9dce1631f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6af5e5-7766-4a7c-85fa-792aa3ce17f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0533d4a-a1d4-48e6-9af9-da6f64fc26e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477d9972-6a63-4163-81da-4e48b65201c9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb959bd-9225-4123-ba9e-a7fa6448c5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f37bd54-4b83-4c38-af11-595448843dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7651c0b5-73eb-4cd3-9d06-0837ae2db60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7db2509d-afbd-4439-b3ce-134709972b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e404ac-a333-4fe3-b9c4-2f4b7d117fe7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9275dc-454e-4ed3-98d6-adaf54d8cfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f35e3b-7f0e-44c0-8912-ad41d32a76b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7c495e-53cb-4057-a2e9-866e01109621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "482038b6-b9c4-4318-b644-1c31177052c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53781ca5-5dbc-4775-a301-9e7fd3b01922",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63589a4-8bbc-4816-b5fc-2b52426c289e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf1b281-13bb-4d81-bb04-eaec1c6d3ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fe10d3-c68d-4d66-9edd-9b1db10feeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef736a87-8eef-4694-a088-eeb060db1134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401b0659-32a3-4f75-9295-2f8dbdeb2ad4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec675865-5a8f-4f7b-b92a-2c00535102e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c83fa7-b077-4ee6-94cf-9d2d8ef3b483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22afb8d-6f7f-4898-a1c9-488a2c18a1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "acbb7db9-786f-4ea2-ad7a-46a2292b7717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99866937-b83b-443a-8e7c-12ca8c162542",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be21c0d-ae88-44ad-80c9-55d0b44bf6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228fdd20-13b2-4230-9276-94691283e75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f29e5b-8c90-4332-a6bc-1f30ea49cb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0006e10-68b2-40e8-bf92-ddfd0446aec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5bc211-746d-44a7-a22f-ca1b757c6520",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ec2ad8-cf19-429d-b60b-58c267bc74b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167f6ffe-8838-4943-b053-03b7e597e2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef96a95-913d-4321-a7a4-70875eeae6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd45ecad-b347-40ae-a89f-b194583de643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87c1825-147d-4c19-8033-6731d57b7fe9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ac6aeb-383c-4ec7-9069-d4c7d6845749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9294f083-183e-40ef-b86d-c9f3fb7ef496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be334da6-d889-4cb5-b351-d7843d225bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16823299-7747-429d-b576-d0039d05b84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1011410e-f52f-42b2-a89f-39c27afdde00",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957af21e-ed3d-47a0-985d-a3b48de7e972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153ea8e0-caa7-4708-b331-2a61f33bb880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677eb110-d713-4c1e-a99a-8ddda112d03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "335cd1d3-0254-46f6-85ef-a08a16b70379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0e74fd-cc4d-4f3d-b3a6-549e5a7a30b9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d5b086-affc-4027-b862-ea9e08e9d6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205c005e-8811-41c4-a2ca-ff7b8779d32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bdcdd6-a7f5-474c-87e2-10b51b0115ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6596cb-7708-42f1-83a7-f8fbea24b437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b4ddd8-2ae7-44d9-945b-a33366b169c0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c7ad8e-562a-4752-a327-c0250fd21ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2991e202-b083-44ee-9ac4-5cd396fc280b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb7f3e3-9f62-48e8-9a8b-cb11fe1e0b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1da5d879-e55a-4ae1-aed0-5d408eeee9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d018e56-0c24-4cff-8f8a-2bf0d2833978",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e043b1a0-5fae-4d87-b02a-dc9a537833bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793bb806-e2ed-49b8-aa3c-0b8bd27c790e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a7ab23-42b3-493e-8277-76019de742e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe9014e-55bc-4edd-9f3c-457246c2cee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cac7470-7866-4c44-9dc1-c227feb4f551",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d3aca3-aedd-4373-b09a-984395c3ff09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d809d2-0ed1-411d-a6dd-816c59f47bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd7225a-054f-4885-9539-b5e81562a1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9736928-581c-4b5d-b808-3e04596e040e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8aa5eff-08da-495d-bc96-a18db7ce6037",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1164b6ce-6c19-40cb-80bb-d28383822081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bb4b57-e7aa-4980-928d-b478a7478fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72841606-f888-4c7f-94fc-fe084f5f24a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a472500-c312-4f65-a8d7-1dcc6089e3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6814d123-ee78-4ed4-a538-8fed25cdf192",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9837b40-d446-4cb9-a319-ba3257074c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e088566-8023-4a5e-868d-b9e524584024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9147ee02-68db-4181-9308-6858e49827e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb0a3f3-e441-4715-a27b-9303c0f1ae25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aea7771-6da8-4873-ac23-001a173ee402",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba365f3c-6ab2-4caf-b16d-bb5612da65f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2548a1-1d0c-4bfb-809e-d247e0d4650c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1218e602-321a-4a04-8a8a-29a81e4bd139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeaa5daa-0e81-40e7-a7f2-ac5face783ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecb5cb0-6c93-4506-aaf6-6a1ab35fd402",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2e347a-f1ee-456a-b533-f361c5cdcc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9847bc74-265d-4c9c-9277-ee98f0894758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be4e3c1-33c0-47bf-9330-102a8fcc9e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ade649b-da2d-465a-96f0-1e450974d94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d9be17-d8f6-4cb3-b4f0-6e6d5b61b270",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5b025e-42db-4f49-857e-98b090247f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3382e569-1308-48a2-a5fa-15a9b4602bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3267e27d-da12-47d1-9deb-0ecaccbfc3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "99f83b93-c769-4ccf-849b-d08c59e1e9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7f9511-4648-4956-a405-d39256d0d2c2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86697c0-8011-4e35-9b91-5e0728e54253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0bd68c-073d-467f-9da7-321e64dc9aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7057ffc-c79e-443b-a88b-066d06a08679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15cc8850-00fa-403e-9395-413f64d0f378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fa9ace-652a-4064-bbba-d56c0bbc20ca",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685c2ed0-bf06-4580-99f2-f119843762e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42657716-c42e-4b68-912e-a1b4c75953ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dda085-6775-411d-9f3e-ef0dd6938f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b9577d-8e1e-4741-ac61-dafea25d8a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905c3a58-8518-44bb-b5fb-9f6b7fa19905",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28883711-e48b-4834-8d1f-52406793c17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3154fcd-0b9c-4edb-b011-421d84699019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b1e266-39fa-478f-bca8-f1d910971c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "290a87c7-45ea-40ec-a506-76002b8055e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a017000b-7cfb-4c47-a40d-b055cc3f9775",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a863a9b-409a-4350-af9c-bf3a38057623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe65e5b-af8c-48bc-8cf4-b745a259f248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8d4dbd-3ef3-4b73-9284-e8f5a32c241e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6911403-2c26-43fa-856c-c2a9b5bd9efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a9e022-3ce7-403e-8e67-73230925f8ec",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595c281f-1459-48c3-9895-dabd75841ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dcb02c9-6de9-4dfe-8de2-dd2724e039b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1229ea-f5a8-4363-961e-ccf30c923f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f95ceb2d-3732-45b2-97c3-a8b30cafd0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00146d02-3f0a-4b6f-80cb-1c524d4f1b28",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a938d45-8289-4430-85a2-1993b70e7ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6263e5c4-839c-4116-bd9f-7e42c97e8b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c03725-cdc1-4920-9877-8fa3075345b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "335f3e12-718a-42a4-854d-014075419c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67bc4b0-f18d-46ee-beb0-30fbf0f10f31",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e30d749-6a6f-47ed-8efa-c25aa47d4f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc86221d-6d81-45b6-bb5b-f99fc873e1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdfddbd-3a1f-4e35-b130-7c987158b425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "399ae6fa-4eec-43e2-9881-687f0aef656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd9cf07-7a87-4d66-8dc6-fa8b3e1f4e9d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6036f3ae-666f-4236-9068-9bfd48e8ae5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d687b1d-fc8b-4e61-8682-6e679ad3f77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb5a360-47c1-4bea-92e3-aa19b75455eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1324781-2db3-46da-a93b-d98a3cb6fc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b7558d-66ca-40e0-9d87-9269b45a981c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2fc4d0-09da-4ae7-8ed9-f0e05dd9b041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb274a4-d087-475e-880d-1f20dc5877ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a813a130-7d4b-45c7-b178-afeb137008b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "536e2db4-63bc-4562-93f4-b857504e6ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30743006-2177-40aa-a21d-909a0bab86ee",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8abcf9-7b56-49ab-a265-f806297972d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4c190d-658a-407e-9928-fdf9f0ddcd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb4a94c-0298-48ca-b46a-77b9309e1fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc8b93c-35d2-4708-932a-93bff6bc82ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fda170-d480-4839-b44b-507ebd5269c5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f858827-ba0b-4fc3-90b8-4e9434146cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ce1a6254-3964-422f-8f22-dcbe13819010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39234d5e-0c30-46c8-a5b8-b9f2b006d08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "632c1a4c-a7bf-40e7-9b2c-f416b61ef22c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1eed9ede-7789-45fb-8bff-068e2edf23e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab4385dc-63db-414b-b627-ea3470f885dc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7f23aa-073e-4d98-9ce2-5f50474648da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cdb6266-38dc-4b18-9841-0532b9960b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac699ea5-8d60-49ba-8e05-47463968ec60",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b0c1d0b-316f-491c-91fe-a9bfb4664ab2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f920e80e-bbf1-43cb-ac48-51738a0d87d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb4343b7-adb9-4ea7-bd81-d758e5e68395"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39521b81-90a3-44cb-bb9c-454c801bf6e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5401b9b1-bf23-45bf-aa10-51aa9537c67a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13748209-b0d7-44e1-ac9c-d92ad48af3a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb634319-9a2e-4aa3-b319-49cb387677ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "086b5a43-a5a1-4a66-aa66-4c2334e880e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "47fc7723-bdc2-4376-855e-6d455f4db154"
                }
              }
            ]
          },
          {
            "id": "77bce5df-f17f-4052-b43d-8c2f7c5d9fc8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "954cd39a-cbac-450c-b30c-a295fc6defd6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8d7ac03e-2381-46d1-a967-1618710455a2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fb21ca-0392-45a1-9df0-48e47d4e3a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "45bce1c0-b8f4-422c-80aa-044b62e35e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbf8cb4-8e8b-4f28-909f-cf163de568d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c33afc-739f-498b-b649-b8ec35a52228"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b79404b6-0fe5-4f03-a0d6-973a27291ad6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c7891b9-291c-4919-927e-e1c790acea92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "339fc482-84b1-4a6e-beea-3727846b6953"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "845d686c-434b-4dc8-a898-a4d4bf8ec5b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d206947-174a-456e-82ad-400b85eff6ce"
                    }
                  }
                ]
              },
              {
                "id": "d89af41a-93b1-415a-a70d-d9a43cdc4892",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71f8479f-8b76-4552-ad8a-8096f2cf21dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ea9adfb-aae9-4933-8e21-0643764faa39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31b57835-f358-49ed-bc71-0c50f31d958c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "acae6f1c-d3eb-4c9b-b14d-84857cba0c4b"
                    }
                  }
                ]
              },
              {
                "id": "5adc0205-e553-461d-85a9-52938919a5a1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ba585dc-68b3-4177-a086-8a0f1bbf30ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a181a0e-1546-4f3f-a855-277754466eb9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a41b8ef-f067-4f01-a180-d5aa51cf59d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7392a37a-0f9a-4d08-be5a-bbd2a2441f27"
                    }
                  }
                ]
              },
              {
                "id": "6ae31620-0624-4b63-a01b-1c4001f1f11f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3931550e-2e34-469b-974c-c3c11c9361d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22ecca96-04d9-433d-8eed-fb3caceb273e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "667b9b88-6b4a-4e48-a271-2795285f56ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "927c10fc-d745-4225-9071-b22e24c8fa0b"
                    }
                  }
                ]
              },
              {
                "id": "0a54be4e-b954-4f1b-a8a9-09d866fd1598",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a181537-288e-40c7-96e6-f20985d9dde5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7f49b0b-5d83-4deb-9f2a-e8258654bb3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9991fb47-9436-49e6-a1ff-3736bd9d1189",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "43ba019f-1fe4-4f5a-8490-a8b9bd368b8f"
                    }
                  }
                ]
              },
              {
                "id": "022ddb3f-d3fc-406d-b987-a99becc62148",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e8e02f7-eee4-46b4-8cf9-9046ec3b4f01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6c2fc9a-354e-4d9a-9e4d-4ef5e8223257"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4634ff1c-6daf-46c5-b08e-ac6b84113cef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4fb3d3f8-21c2-4062-a786-8af044893a20"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5382eb9a-28aa-4160-846e-5f87d4c838a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2ff6d46-5cca-4af0-ab95-37abd6c79df7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "42172140-0843-4f6a-b280-8aa38560dd89",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de7c49c6-9015-46ad-8423-af436ea1d901"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a80af1ad-d414-4d53-ad6a-3cdefd9d47d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "09fdf3e0-f9f3-403a-b5af-a3fa9826a604"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2384a038-65ca-4835-8653-2a32370b580c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eeda681e-9951-4aa3-b4de-b10b862600b2"
            }
          }
        ]
      },
      {
        "id": "b5003124-b65a-4dad-a326-7e90ebeab06d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f2572495-bceb-4738-83a3-0406b146ef40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0976aad3-9c50-4255-bc4c-06ab1e7b09a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "42b397eb-22b3-43fa-9a35-9996dc8f6307",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f2490b-ecd1-4150-9df9-345c8df1bfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3b4451-d395-4ba4-9f9d-da2383d11292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9701d75d-dcad-4582-890c-fcd277fa80be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9585a8-6a11-47dd-871a-7652f3744a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4580b18a-0436-4820-8e26-72b2a6eb4855",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a0ef74-4239-4d4e-91fd-d6cdcd77b7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7abd841-085a-4d25-8ed9-fe8fad627baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dcbcd0-27ff-4b64-af0d-2ae1b6139924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "affecb46-8748-467e-a2e3-243e179ceb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae548b6e-0e41-4358-9096-787a7821e248",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0b0409-0ef4-41b2-bcee-6f76b850ee25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfa7566-8c5d-4853-a966-32cc2720df71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a39804-372c-4019-9423-35799e1be516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6b6fc5-d7eb-4bb7-ab1b-ab4419b0a03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b87165-e876-4590-a8af-a79abc080f34",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcef707f-f89a-4978-b857-a9d3865bbf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e20cec3-2a9f-4849-ad08-529acfe14773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c3eacd-cfd3-403f-b74a-2a5a1f97a499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93ac300c-20b4-4db8-9955-fc6751f14e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a69488-88b7-493f-9a0c-c6c2e9f86861",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1ea489-49b3-41f2-8b97-45d002d838c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a377e0de-bbfa-4904-bf9b-50b6368468b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c08c42-0954-44de-8e4c-d4d9121c8b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c0221a-7d89-4389-82cc-b917c8d73e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d976b599-ec27-426a-876a-8e3e3282389d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e93795-43a6-4774-8004-d3810dfc35ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4a69ed-d723-4d43-a284-b01ad752ecd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e500433-1fbf-4ab5-9e0a-15a2d88e69c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "805f291d-af68-41e2-ae15-b46861e286e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ea0bcc-5d54-457f-a5e8-44e8e04ea8ec",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8e94a6-f0b0-4dcf-abe4-e180ecc2602d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9b39b3-e6ff-4247-a526-116c8c2795bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089e5497-e957-4e96-bbdb-7341cc4e604f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c23f6fea-7ca8-4e58-ba6c-5f52200d5970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5f5906-b1a2-433e-8976-fbaafe056030",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2967e600-8f82-4d0a-afed-2a03e67c9636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c812bf-b67f-41cf-b889-050a9fa8cbab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c877ec89-4e32-45f0-beac-83a7e0980c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2bc901-b101-4302-b9f8-f91dbafdc56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da261c59-4eb7-4148-bf9b-4607e48efd32",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193aac48-a768-44d1-8fe4-45f70d4a2819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0b0073-0d43-46c4-a1fe-84b70fca1300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd3974a-a597-4345-9fb9-9a804a95d5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f3bd74-b2f8-4bdd-9e61-7049704ca9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed94811-b466-46bd-a312-e52811a98f12",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72491173-1497-401c-ac2d-8a916865a917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67fd037a-fac9-40a7-b2c9-d1512a5718f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21dcc0e-0d98-40a0-af5a-eb7c8c7a151e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4660042-afbe-49fb-a1f6-fa993eeaf093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d309f07-e9bd-489e-867e-00140f19f01a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9976f56e-069d-4c70-8b1e-4258d6cf3f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb431adc-453f-4eeb-ae72-c3306a95491f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af04592-ac20-43eb-ba73-09f18bde20e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b3efd63a-904e-46ba-a448-8f1397bc79d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c515e42-1615-4906-afde-965694ddf8e4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dff903-48c5-48a2-a6f3-ab09bc580a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2b03db-64d9-4b36-ab43-fced1bf92249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da08aca-22bc-46fd-aa9c-f2f88d841036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92ce72d2-924c-4e23-a4c3-e58a28f8a623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda79084-348b-435f-93e5-98ee89f6a3f0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6494048e-052d-492f-8d5d-5351e50113ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b672ae-d376-4b06-bc1d-a9f474b91444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a679ca-eeed-433f-8223-81b314f1434f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d37ea23-b270-40ea-8129-1d4387e28515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c04972-a753-4d46-b18d-7bff79b4cad0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93676869-7113-4e6f-bca1-8e21c98dca99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0807510e-38b0-432a-b99a-bee93c02d654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32914cf7-6c30-4124-8518-dce030c0a985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c456a5a-5c42-430b-80e9-1346cc37f6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8a83cf-35ce-4caa-b0f2-d64ffdb9e898",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e6c469-dc1a-400b-8d75-266bb10de51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b13fd0a-895a-49bd-b509-9fc7b4ac80e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b63d1c9-fda7-4010-90cd-e4cd50b39ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e81cd0-26ff-4c7c-8a5e-9119866f8404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca7fce8-f9ea-4a95-b2cf-ead358a24cb9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2abfc37-d806-41cd-9882-6c53c428924e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5325796-780e-4fc1-baf5-a469a0bea904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1f2ceb-bb1b-47d3-986e-7c42e29882df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b333d130-74c9-47c9-8fc2-0ef1c6df5e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f246dd-b3ce-48b1-aefc-f0910a4a05bf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473a6b9f-d43f-4f57-addd-f8db72a90d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa1198b-8737-4dcf-b0ef-f0139356cd89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f7a2d5-f485-4b15-a458-2d48edb916a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7260ed5f-434e-44ba-a169-091f65d2bb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d98e1c9-c628-4995-ab47-7b6a7e396dc8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdba9dc4-6e43-4e0b-8839-edd461409f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f379fbbf-36b8-4932-b775-5ea96f4fbeb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6b9a22-dc24-4dba-89c7-b732ae13d087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb32690-96fb-4f79-8918-9ce3148211a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e8441c-3157-4174-8d15-8df184db7ad7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b986f5-dd6a-4e47-8d38-10b0e80ef7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c391ffd4-da04-42a4-907b-ebe4005de851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb45631d-28f4-4c93-b229-d77266103ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6d4a95-92f0-4bcd-9d04-92d56f107090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd79c12-b6c3-4e34-b3e2-5c155f4a94e8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8048452-ab51-4501-b4b5-4b5d28467430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28265b26-8b11-48bf-bd82-aeff7a0e0474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a276d9-76c7-473c-831d-efa2f1926d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e44f2b7-414d-42d3-b346-c2f903b678d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f4ef78-03aa-4ced-8efb-aaaa915700b8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85d5150-5ff0-4065-8e53-55edaa721aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930a2f19-bc2f-4050-a54d-87fa837b6141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51fccc9-d8e4-4c4b-a8e2-5df51c453a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "010632ed-fca0-4adc-a540-1716436699a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cc1a28-7f4e-483c-95ea-4035b76a760e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3b9740-36dc-4bcf-b157-91e2cdb58e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09d4c8f-e071-444d-b4d4-a1e658aee41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e774ec-2ce0-4905-915b-6c3f99eebc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3ffe00-c17e-4477-abbf-70701e1b5a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63cd655-a1b6-4861-8a5e-bee9dd136e9d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c17bcb-e846-432b-b626-7468828fc4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36f9c86-12d5-4f62-9628-cb09b8e92899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31440acf-5883-4fe2-9d90-d7aa1ab4ec22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8dee761-8aee-48a9-aaae-5c15ccbe0885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e235b9a-7bfe-4c8f-bab7-6248e8e21414",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f221f94d-321c-41c4-8b97-769728903036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41fed6d-7396-450e-925c-4801b639f25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96e6b38-6850-41d6-a481-38316b62587e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d4015c-86b6-4169-8f03-23aefeaa8524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7700f88-1fb8-4385-90d5-1853837331f1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcb4170-7c9a-42b6-a9df-c9d37ecb2d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698a1046-1b1b-42bd-864e-967a215aea7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04b4567-021c-40ec-9053-fe1bbe3c0a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51acbafa-d319-40c0-b215-be973f08f5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc4efb9-b273-4e44-8c1a-32e199f7677d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def130ad-6ff3-4e0a-8fa6-3a940eeb4c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc5397e-91c2-46f2-bf83-d04469373bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dafd8e-dd68-4cd9-a6a7-cead1103e7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3dd22e1-dc5e-44d1-b437-58b5c5a7f9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca1f7d0-6a1e-405d-8a3c-2c7a526089ae",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8f7fa0-827e-425c-8931-a517c63dc544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6ecec6-1900-47a4-ae01-36207dd4a08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb14c0d-c4ca-4618-a95a-e0789cece5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7568b3ed-bd2b-48ee-9fab-d9ced8d15306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19449e79-defa-4f31-a187-84fcee579d72",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebe6797-3c16-4646-bb01-70c25b733bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fcd7623-f663-43e5-9417-0cc513ef5a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd62144-cf69-498a-bf7c-4e9e08891e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c15671-a924-450e-b1fd-dd69241fc6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4778f39-81e5-422c-adea-5fa0dd2477f4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5d78e6-6442-46d0-8f0d-fbc74df29fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0995ab98-1689-4011-8b46-d2cfc1862829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0f5d36-de35-4847-9457-759c1850a093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e05bea-868a-4ba6-ba59-ec0a78e85684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f27f3d-c2df-4283-ab9a-bb0ef57d45ce",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ab7484-5f94-4062-9da6-837cf0d4e2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14a6bf4-615a-41b9-84b4-ae99277dc813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a825a3d-02f8-40a1-a9ae-be0c29f5730a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fd2c9d-c868-4a26-bb4d-be77d4bfcbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763d64e3-ddf8-4340-a175-f8ef1f6e2535",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6032ff5a-4962-422e-89ca-4b8ac1274987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d38e46-0c4a-4292-a6c9-9bf5239fe3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984d8a9f-5eb5-428c-98d4-4a4b3d8479f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb4ecb6-f908-4913-8f57-a576084fec9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc45e69e-87c1-4224-9ae4-e68efb6249cc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23e404c-29cc-4782-ae00-07d1ddd24683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24450725-6a55-4fcf-b6b2-ac8ce45616bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1a4fa5-b7ca-48e4-8f79-f5f1082f6613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa86cbe-d0d8-40f0-96b6-209b27155ac4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "40887285-b0fe-47c9-88c9-7838c2b6c272",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db4a3a42-cb5e-44c4-bc26-7a83c73cdc64",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a4c89b-0753-4ec8-813b-f88ff1913d00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "700a1cc8-557e-483c-9633-abaedbf115df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1b0bcb-7ad5-4075-9983-9f36565a588e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59c2ac33-8175-4c63-8580-e73adfe78d2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cf4e9d8-f5bb-4d79-91d3-e19953ba4f99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4024c3ac-5c0b-4088-9c12-0c76e68119e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddcbc505-e6dc-49e1-ab28-5db1d24396fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a292216a-4f3e-41f9-b99c-575b13e60dee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3ee5cae-3ed0-44df-9db0-d232c5f8d246",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc33dcd0-71cc-4e32-8e34-37f5c221424c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84eac4b2-b877-4f77-aca6-9fbd7400853c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d59d379-989c-4d77-8651-8174e0e04a44"
            }
          }
        ]
      },
      {
        "id": "676d0c63-23a0-40f9-a7d6-d9e90e3b58eb",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b593f4e7-151b-4102-96f7-08a3f1ee54c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "732a055b-8899-4bd5-960a-00f289361978",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4df82b33-b3b1-46ac-95c4-afcf25d5d25e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393fdd36-c94c-4a1b-b97f-1a71771c868e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6439a6-28cf-48b2-9896-ada05c51e534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad413a4-7a99-46ac-9c6e-70bdd6869036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e706fc-29e1-40ce-bf66-ad1dfa2e99d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2d2d6a-5571-4b30-9886-f886d1c8cfd4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e9e572-793f-48b5-916c-71898266260a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd7c3f6-afc3-4813-85c1-d11061b4fe04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa634032-5df1-4189-92c3-8402e53ff314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec215d6-53eb-4ab9-9d04-c5fb1abf1931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c204922-87bc-4891-86bc-4f6120f5a755",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbe40c0-5175-4932-b3d9-db875e29698a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d3572c-9306-45c5-8059-45e9f2d41218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296b07b8-4038-451d-936e-77c94b5c208e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d24b88c-ddb5-40ae-bdbb-d698e9ade2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af97985-364c-4226-bb02-8a32b4318ea5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef6a68f-7151-4bf6-b92b-c392d00a8b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6eeb1a9-58e0-40fd-8739-ed411e2dbbf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298ca544-cca4-4149-a1b9-87f53a00a74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a0b049-c190-475b-9ee9-2b9448420768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a7c544-3702-4db1-a2e4-3825f96d2f04",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12151ad3-8886-4513-9d6d-c10d18c77a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e171c8d6-b140-4da3-9931-cccec5fcc14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c676b3-3b5d-44d7-9994-d92cbd821fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0f1a32-b562-49d3-8c7a-0c425e53d5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4d819c-4bf2-4fa9-ba05-e58723e3c435",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64241169-c43c-4db6-8c11-50940e4085e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf74b4c9-b2ac-4f08-8962-ebcd432d4999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bdfaed-0078-4493-97d5-53970fc4010a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8d618b-3de3-493e-abb3-d4da2bb62741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf115b08-47a5-4443-b689-a2a4edb1ef45",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f249fa-e1ed-47c5-9b94-6374bc6ea764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f89af9e-f28c-4e6e-8a98-e90617180c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075b7542-1c72-4bd3-9136-44e7c6b81ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d41bc07c-dd25-45ae-82d4-502827ab62dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e411c6a-f9b5-43aa-9fb6-c5eff00c8558",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47756b45-89ae-4bcb-84a5-2972279553aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2138115-0f2e-44a1-a683-44faf3055df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17748475-f539-4cad-ad0e-87139568629e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5350d59e-9f07-4bb2-8ed6-6049bd5a34ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b573f41c-1bf5-4ab5-bc16-89a6df2b9c9c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bb6832-6131-4b5b-aa20-725e38b18ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe133c7-2436-4759-ba1c-9251bc83ae7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9967d07b-44fb-4c8d-a601-82d153bad270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b63ac0-2296-46be-9b2a-d92ab35b3bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a28b70b-6f04-48a0-968c-eb7913a002d6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4a6e39-1888-4d80-a585-8c4b36e2300c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19cf49c-9ca6-4b3e-883a-c345781d25c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a618b502-fa17-4d46-9086-142e207eb515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12560799-63a9-4f41-ae50-ec11e8a23dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a1fa7f-1676-4a6a-bd7c-6bfa1e60cd87",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1053fd-ee80-4db1-a52f-29c1c78ae540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e2db87-c85a-49e6-aea0-c419e545df5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9945662a-26ec-46c9-96c1-3069c71ecaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "67cb71d0-2f67-447e-95b8-f62f3630dc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8307e4a-b9fe-4635-b6f3-87a9ba2abaec",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ec3f6d-1878-4d4a-8861-ddb36d535569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b4688b-55a2-4d8d-ab7e-290e565a260f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c622014-6ce7-4222-8ac5-11fd37aa8141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85d75dfb-2743-4916-a189-20febeada8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f070779b-a593-4a78-8cd3-cc9e70efaf5d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a5ab1d-bf61-47d2-95ef-026d8a3dfc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be50cc8d-bdd8-4b91-8bbe-54f24eae2985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d584257-d3e3-41b3-b5d9-3ff50562d703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51269b85-f3b1-4a4e-a678-b0303e5e6752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c7bd93-57c5-4807-906d-1364c5c2d8a8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a30e8e5-2a9e-412f-a484-bd4d32345bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a47228-6be7-4f32-890e-6564dcc3213b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72671677-db46-4fe5-a8f9-576f5aa9512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd8c439-5728-411f-a23b-1e8bdc35bbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bae111-fc88-4567-87bf-fe78cabb8e5a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b1e456-4fb9-4dd5-90ac-62d004db1f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43f1cb9-5748-4231-81e4-2d7266abab4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e487e69-12cf-40d4-b4d4-134c026bcbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "76695ffb-f931-480a-a342-33cf3e075859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640f0df8-1027-4ebb-9601-1af4027f62e0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd1bb2a-b97d-46cd-aabc-bda3159a9806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d41fc2-2a03-401f-a3c7-d5db71bef51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81352eb0-0501-48b9-a1c3-9c22f1a96cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "81bb5947-beac-4404-89c3-3166e5757db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8557c6-cd8a-4b6c-bd55-75eff3973a00",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99444abd-d19d-4c43-87f7-52ff700dfc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539f4cc8-2498-4bdf-b2c1-146ba06ebe26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd801a6-9522-45f9-8837-3647eca3652d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "db69eee2-2b83-4e93-a055-0ccdb05f726b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36ceca2-9665-429a-a8d3-72357a567d82",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed9ef34-3680-4b01-93ae-6da536b8dcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5b3711-0e92-450f-ac0c-13b60a7acaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76923213-945c-4c04-933c-5e1a67c1da14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b39cfd9-d3f3-47d8-a64b-6f25d55a48b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa654707-27ee-4e82-8d43-6e56468acd9e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3941e8d9-80c4-4973-b549-47075675c73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7309f54-caee-49ef-8fef-203be258d27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b19248-ae64-4992-9567-8895efcf1e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e978efb-4e17-44df-88ed-5499e4fba899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442f1f6c-6600-4727-b8f7-f4092c556928",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dd1ecc-08e9-4db6-9da9-aaa2a86bd894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002bf545-38b2-4e89-87a2-5a3679927e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804832a8-5cf4-42a9-a025-c4abf8513a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f98f5590-30aa-4da8-91f8-a8ed33b90fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e18c63-a868-451c-b922-1c7a00b59b13",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744b438d-7c18-4051-b666-7c0e136c5aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c4716c-25e3-4b35-b4ce-8320ea7896b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5adf392-697b-4faf-a202-4de14eac86f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c192bc-b427-4188-bd70-88e98e344e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76da996f-d6d0-4768-8535-8d6c1285cfe7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8656aa-731c-4ed6-a547-b23a711cdb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99ae03f-cf5a-45c4-adaf-8ab70dd597ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198e441c-37be-4b7e-b86e-62833231896d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "478933a5-e70a-4b23-b3a7-17f086e8574c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2e2dcc-8ff6-4664-8deb-905ef3e461bb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632e42b0-5e50-4aef-b5c6-d6c558ae9738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eaa9ba7-e7cb-47e5-9438-09f49a6b0977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980f0f60-2178-494a-a529-b2d26e3d1260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd4adaa-552d-4595-883a-1526f0ab98bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df42ce21-66d9-40b2-b7d0-c2d8229ee4be",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe1f73f-ae1a-408a-80a3-4d55d1549d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2336030d-e674-4a17-95f8-5211a8e39547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e64815d-4ef3-4cf8-a0cc-9c52b4776933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "594e7704-2463-4f77-bc1e-7e7ab9289699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee430f24-6cc2-475d-89be-d1280cacd50a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e222d5c-f507-4fd3-b216-15ea2d2620fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cd4bc2-2050-47da-95b2-348340f6704b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9edbdb-d8b8-4c7b-80c6-d559b8885c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f539837-2058-4b70-928a-0b3841d4e1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689a323f-10fc-4afe-b7d9-c3e692210e36",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e930f240-065e-49b2-a0e8-ce20c4cd282d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1821635e-0a2b-4ec2-a6fe-35825db87688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95ef139-b64c-4cd1-9db7-fdc3d717759c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0df7aa6d-b573-45bf-82a0-afa2c301d6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997cd149-89b2-4fb9-bfc6-9640726c0c9e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7590185b-cc1c-4919-8412-4579f202b015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3cf233-5127-4c98-b857-a98d571f666c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ef498f-a931-47da-9514-37f4366ee664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6a93f7-1268-4f0d-9b93-2c8668965591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c76d875-7197-4b36-8dae-2bf0e2e72368",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287e7700-102e-4208-9863-c27fb0468cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0df79c-5ecc-46b6-a32f-0b2d8f93ffcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc081d5a-dfaf-4d36-ac04-6cefe0a0f7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "181d1cd4-5d08-4225-9a82-cd0440b7ea9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23ae806-e8de-43ee-9d91-ecbaa4c423c4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e5ddd4-a085-4d44-ba73-1df5f87219ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95601c9d-3ba1-4897-805f-5a6f79a451e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8558f2-9b9a-4146-b708-ce07a2f00f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d73f992-90f9-44c6-872e-366fbc30b355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6379108c-d589-400e-a77b-0f6d5206e9ee",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a430e782-79ea-40db-8ed2-b54176638b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4727a93-11ea-4474-b46a-4b4f73fc42ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef43c65-d253-4d44-8c1f-d6ba53d05b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41b8585e-f7de-4d64-8509-60525c36df19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599bd212-4c4f-42bf-acc9-0ff6884cead0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f038e5b-55c7-482b-8b68-194fba5d8a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae91006-e5b7-4e07-8c42-084f40e6c732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f437001d-11b4-4728-ad9d-ca48712dab77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9f0cc6-4285-439f-a373-225f5cd375cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018026a1-9f22-4e0b-94b4-ced5797cda80",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5260600e-7e86-473c-9581-f345731837eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb3b0c7-ae80-41dd-8b90-92f94eb5e72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0aaf6c-2ca1-458f-a4e1-31460abd13da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87c7b93e-8da3-4fd9-be0c-8e68351edd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6cc0bc-a027-4ae6-8e8e-1da59493eb8a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9468507e-22e8-494b-bdaa-1cdcf88974e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cbfbd6-34a1-4563-8433-21f6d3acba64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a774cbb-c06c-41e7-bb24-e809483aab5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6069c6-9b9a-4a2d-a393-e02cdb1bf1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd37e5ec-6037-4843-b80b-0c8fe982a88d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cbf0cb-3afd-4a42-b266-7ec0d7710395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1564e6-01a9-4acf-b1fb-a6a144fa6eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a21c4e-9c7e-43bc-b5fb-cfeba8779b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09c8fc32-feea-4e99-bc97-587448e00ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc4c564-eaa0-48c0-b9be-437e5f07a3c5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44a54b5-8b05-4c21-a960-01a1f22231cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab56a4a-c630-4c49-b7b1-874226fe63d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ec1809-c2ef-45a2-b34d-12219ad3da1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5f84ba-4597-42f2-8745-3f7227ba8b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f78d61-1b7e-4bda-b567-60c849b87b7a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be3b184-3360-4fcd-9e7d-0449a85064ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6670720-19dc-4d67-8859-5348580e83c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff3b6ec-3463-42e5-8f4e-bbc05a37b917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abd16e1e-eff2-40f4-a9bf-d679bed19315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c888a9-7ad3-48f7-9bb0-90d35a583394",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05abd5f2-b06f-4a7d-b4a2-9cac32883fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20282aa8-8232-437b-b5ff-9011829ae484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9c82ab-ec5c-47d9-9dab-1bb46d1ef46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1b3bdf-8003-4217-8ce4-fd99372671c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a815d6e2-6f17-4550-8d9a-16cbb5d77b3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45d43082-c019-4494-b087-3aa437d0bd7b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a069076-c90e-4e81-adc3-9425e171408f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab09b04-0fc8-4f81-ae54-da9897bd9e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5f6054-b814-4060-bc89-d4e75f83348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4194b63f-12c8-4db9-a9d4-f98acce7ba6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca65ac4a-73cb-4dd0-8c21-2d37578df85f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3dab27b-5267-4adc-ac64-66c4b0c0ab16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7dbd923-3096-4747-beac-2ebcd99b5186",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5233009-caac-4a04-a631-41b391106ee7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0ec01f2-7a82-4ba5-bfa7-505adbe0c463",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f295f0e5-2db0-4e88-ae3a-27a30d4ca70f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b035ae8-221d-41bf-ace0-b631ad3eec00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4473987e-b49c-45ce-a294-67d7838e3393"
            }
          }
        ]
      },
      {
        "id": "5a7594ee-7ce5-4d2b-b837-dd3da1e501e2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0a6ab9e1-e4ba-41d4-953c-76f8b18aac81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7d0b7ef-3b80-475f-a6c5-a47ad909d8d7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16b51082-9932-4683-ab64-16d04fd06156",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662b4822-5f7f-40ad-9074-e7b251e5bd9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bdfcb9-62b9-42a0-ae25-e8074f62b6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f53eea5-9b61-46d5-a95e-65a9fa40dd86",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c68d7b-8236-4a08-98de-db5aff52753b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3d5c0d-1430-4266-82eb-736acc1583f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9717dd6c-dc99-494b-9b13-f3f40a8e1cdb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d8e35a-6b76-4842-af86-25a76a0be039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e8df7b-cd0b-4916-84e6-af92f08085b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b9b0bb-e27f-45f5-b162-ecc54b73f093",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e3d562-335f-4dc5-957d-a669d2b2d9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e1037b-8d82-454f-9994-2e4f074b7da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1874c681-8a54-447f-898c-7dedb4b64224",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d692eba-8108-43fa-8e0b-5574c7985d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa1065f-92fa-4953-8a5f-605c87d3db5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe69aba-119f-4fe2-baf0-afcfbc031990",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ce445f-9b1b-469d-9ae2-ed66c3fb31c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518a58c9-1cc7-4f3d-88c0-8298cdbd3d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2226b0b9-8c77-4c23-8a20-e8bc0feda8a4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab395dd4-2fc2-4467-a170-119317baa5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a11b19-80df-4fed-aaca-df1e3d9fda52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a0cc5c-e7a3-420a-b79f-8f1ffbbccd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc92c79d-2e86-435b-aa06-42da878f7631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef01e2c5-8b9d-4e1b-b66f-073a3e4423b6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027770d8-ce61-4376-ba28-449c1bb57f57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c83d080-67c9-4fa2-8eb2-db62eefb9e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f1a152-634a-49fe-b7dd-5f5b8212b7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523ca7d1-d01f-4a60-abb8-9b2bd429df3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa690326-49c9-4bab-ba24-86bbbd38552e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0515a57d-586f-4d78-90bd-dc403e1d4967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6083f007-66b7-4fc1-b4c7-da6720d76bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e2abc6-9ddd-4c78-aace-57fd17d0b308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6888725a-2996-4449-9d19-054db1e46406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4692fc7b-12d0-48bc-90e6-85e5cd5d72e8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d255e0-ba44-4026-b4b2-56cc162514d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e67cc02-6f5e-43d9-b80c-a5987c481cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d543ac-d6d7-4736-ba11-e2ca5ef62572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d05fd4-5e21-44ae-ae95-3c2f33dfe0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e353ac2-e019-4704-aa96-0d21473fc05a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ef0678-1933-4a35-992f-4dbe7127089f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410efc84-26be-4174-ad39-c5c4341fac48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5d6130-4d4f-4b79-9479-9bcb8306776f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa5bc15-6cc2-488a-8687-1d00373ac9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053217da-8467-4727-9fa1-41c97f810ba9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b38202f-3ca3-47ab-9d5d-1bb54ffe6a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34baa4e-f597-4d3f-867b-fdf879bfc973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799ff926-6d11-4ade-98a5-337f61a05ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9420d2c6-5099-46e9-bea0-6c14a68d3965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3be5531-a4b4-42d6-ac3f-f682561cfe8a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70472c8f-02ce-4a2e-9f5f-a0fe094196a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eacdf66d-c983-4281-85f6-ef737898c572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ece0b1-fb35-4180-8b35-c01c6c572771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031a798f-0de3-4d99-b45e-a51dd6a53715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3d1b2a-1b49-461d-846c-890fbc5002f4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaccddef-1b1b-4058-aa6f-178a36d0d02c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d027d72-13cb-46ee-988d-f935e37fad56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e07166-1f74-4922-8b91-dfa3313fa0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa98f8a-0325-4d6a-9834-a97104fd61d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb14f4ab-332e-485c-8fc1-613ad640aa15",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fd445e-d032-4a10-a752-8f9e564bc3f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26544db0-3c74-4510-9111-42dcf6869313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e9be43-5a93-4e11-8efb-5ddc802fd5c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071fdbab-568a-4933-898f-c7dc5e8451d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17b1cf9-ff06-441f-99c5-31ae4d959410",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d0ceaa-3b38-4e46-96ea-0267c867585d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9234c034-982f-44d5-84b0-0de9fb1a4554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3926dfd7-278e-45a0-956d-b0b717dd4e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8faeb6d-28e1-43cd-8d72-4c84095681e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594b68d8-ba31-412e-8df3-3175b274f7de",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20587cb-5038-4b37-bad5-184d6ede7816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59e0d23-2bd4-485e-8908-252e136475a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad5b74e-e6ff-4740-b73b-4cbadfe62765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fad33e-7d78-4a1c-b4c5-6577dc4f221e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669fb2f8-3bb3-438a-8928-eb8b5667d3a6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7840355f-41b9-4390-bad9-51b50b401113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7720bb3f-78cc-42c2-920d-31aa0a2ae141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32c5c7a-b23e-4318-a1db-5944e727ef11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd3e1a6-2582-4067-a675-e751b5581530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e639b9-c734-4e9a-ac6b-4ed7255f8669",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b14659-fdb7-4c0e-9c06-7ba902358081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5486d49-b872-47f5-be28-8a96f3e8003e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a00d23-4171-4027-b110-aa20cb750414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5180f16b-5f8c-4beb-9dff-dfb30a09ce8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881904f9-111b-444f-8705-f8818162f511",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6420f275-c981-4d7e-b9fd-d8b020bc020a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2570aa43-86cc-4725-b815-c0c1d5f7e277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769668d9-383c-4b13-9ab9-6304d97ae11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33199b5d-5ddb-4c9f-8a4b-67f323327a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589d391b-6c74-4bd1-9d62-b23e3b36e8d6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfefde7c-9e78-4e30-8598-4352bf877558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8664a53c-467d-49ef-9aba-cd7886058148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73f451b-af6c-4f69-aee8-efbc57959d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d964e0-e50a-4996-827f-40fc26f41eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bde6104-ca73-4698-9665-42e3551d8029",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e020c2f-3dac-4778-a843-984dd2eb828e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367f4103-f3f8-4782-bfee-21bc698113e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e49b5aa-d81b-4ca0-934b-68c02bbefe12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8515d6c-336c-4abf-86c6-0ddf1b0ad70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e604b8d-0baa-42bc-bdcd-cfe99ea12202",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c4b5bc-67a9-447e-807c-e6808d6cca74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4536de-effc-4bef-b1a5-c66ca9cc4b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6850ec79-eed0-4fd9-bdd4-b75976c2f733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb08e61-5689-4cba-b402-ea7d6b6f59dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0ac53d-af88-4348-9592-257cd6255c93",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364fd353-2ce1-477c-a367-6bea07ac9e27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d94eefa6-76f4-4ff3-b67b-6a6ce0f2c353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee69b8e7-01a3-4f51-9a92-2d1e3529a473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e39812d-2475-4ef2-97e5-e1719d7ffbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4f8322-3cc0-4900-9256-075a10c775ad",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02adf1f8-711a-4b5c-a492-b04179138ecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66fbd513-2f6a-4664-aa91-0b41dec8124c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73c7363-ddd0-432d-8f42-c16df529f275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9343f0a9-9ea2-461b-8edc-47a566e3476c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb20a9c-cb10-4caa-98bc-adbd78b65ecb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f7765b-38bf-406b-a65d-6a0743125bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f656846-f777-4813-87f1-cb6d3c0089bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765afcea-3767-4cf2-8f3e-58731be0b68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3425007-b9aa-4602-80bc-aaddc21bfd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7a9aef-62d8-4de0-8166-dca112882da9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d9b26f-6b37-4fcb-8fb1-650d47161080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97660c7f-525e-4013-b111-3982445bc44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee5ff5d-4e33-40d0-adc8-75cd3dcfe67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d13b52-3422-44c1-8fdb-0e881e2c7074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0632e61-b361-44ad-be3c-d965241c1fcf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfe15e4-c243-41df-9be2-4a1cc114ea5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb894f3-5166-42b3-9dc4-016081b79ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab6efce-2718-4b23-8f37-cd9e2679325e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd796aa7-aad5-4e07-9215-8fa378e62b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee26d01-dcd5-4895-855a-52ab88b843c8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d43a5b-0c4c-4345-b099-d82136d1023c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca8ae10-fd15-44ab-a742-c5f7c1ee039c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed25e96-84a6-4c6a-ada0-1e3d8a8ab6b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d7d9dc-cf1d-4a75-953f-e9048499661c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef13660f-e929-4487-b9f1-b69bdf91c36b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1883ed4-1151-49d0-b08c-33e4ba26595f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51926d26-a22c-44f1-9014-28432d3497cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f02ad0-c969-4d6a-80fe-7f46816c27c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07916d20-26db-4098-b164-bf6934b15dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdf67e1-7612-4908-86c1-f84cc3fcacd9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e53ec6c-d9e2-434d-a8aa-72d66aacaa93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a436685-bde6-4cc7-9ea3-2ed035310724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415893ac-4912-410b-a10e-4f63b9df301a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86f1a15-8c0e-4dbb-a4e2-4afa5a033a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505ff911-3712-4875-a70f-212fc30252b8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd869faa-d298-417f-b554-081f1818f2e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f59d215a-4c7e-4409-8268-bd7daa54c810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a43f03-dc07-4fc8-87f6-30195ce3b42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9fdcff-7e99-479c-83b4-bf819bcd3855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541b8fb6-dc24-4110-b52a-94596e78ea7d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac2fcb7-a326-4b53-a9f7-bcb1f7346f6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19df793-d2f8-4f82-bd80-808bb412bf26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a8182c-5f96-4481-b715-2e0e11d0b354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e671bbb-6c41-420f-8c7d-09f93b0c0c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d013717-5b86-4c5c-a57e-11e6a3664d1e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19d05e0-e61d-47a5-84a4-7a0a79833c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f126353f-75c7-4fe9-9691-eadd62233050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ea2e3b-a1b2-47c8-9819-dff8c17e470c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75aba5c0-acb6-4217-8fbb-b98e4ec3139c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0730c54a-aab8-44db-ac63-9940155e5e0a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c1438b-e53c-4343-959d-d837972a54e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59cc8705-0185-430e-a6a8-052fd423e10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b803b41c-cb82-4552-b3b8-a2d24a3f6326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc002572-a756-431b-9d92-75a9e96c9398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7425ecf6-67da-4f06-9767-7383275b6064",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2478440e-6c10-4dd9-827b-9d094ddff5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1814887c-d387-473e-92aa-bcec98241788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5814fe71-a838-4173-a2f2-b1c58d069e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede0cde7-222d-408b-ba2b-4a6539bbfb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023e2fb9-d7a0-497d-ab6a-bfb104fb7acd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48807cef-69f9-4f5c-a146-ac1b03050d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2ba1b1-f056-4c04-b1bb-e4e2a2c76949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329207ce-b42f-4d80-8ee2-8b476e1a888a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16853fbc-1fb5-463e-85b5-8bdab1dc62ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f06c384-fa83-4b7d-a36a-f9a3e23a85ff",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb6b082-b0dd-4238-9777-9a65ee2f8f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903260da-49cc-4efa-b031-0ca7dc1f9d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4108c7e-9eef-4b70-84f0-0f87caf1e5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed2137a-f120-4cce-bd4f-466ffea84c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7e7fbf-c30a-49b4-af55-0a922da390e5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2980434-b49b-4d95-befb-c8c85d955f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7bc7357-95de-423f-a218-dc052eb600c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf055d79-bb16-4688-8e49-208eca188559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e57037-0d03-4c96-a95d-815e5a196c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3093ab8c-7090-4c9c-8261-acac7de82492",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee71ef32-cd43-47fc-9f69-784396c4fa85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3bc8978-56d3-4748-b436-5512c44bae7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea29dd61-f430-4ca8-9130-d0af77180826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f0f2fb-98fb-4b0f-bca2-0479f10ff6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e53737-d92b-4aa1-959c-194407ba7bf4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7623ab66-cbd2-4c6c-8d91-2d123231f6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a39be89-eb40-4f31-94ec-736c5cb07540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4e2fe7-37ac-49b2-8d7a-f4fb126e37f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce345211-b2c5-4494-a270-eb92d88c1bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4587164f-4a4b-4ba6-9303-e548f5c46399",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c95db1a-a9d7-466f-ae48-15d85585d05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f5a61d-d835-4143-a93b-055820ef2e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5332554e-5da7-45a2-a098-5fb8bbb66a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f5c76f-3c2e-4bc1-81a6-73020c9718a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6bc135-16e9-406d-a7a1-e14442eae09d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc39189d-b31d-4c24-8a59-cb7a86c02817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a72049a-8b47-4061-ba48-06d0e02b7ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8b1357-b8fb-4b4b-8dfe-8ce22b34ccea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865bde98-64a9-44d4-82ba-de988fff1f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e78de62-b386-4a54-a3c2-3089d1380195",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745ff4df-2d04-4f83-8c23-c79f985bd4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e422760-3e71-41e9-a7f0-5edd269af8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5cfbe9-7e60-4c92-b0ba-720910b1d18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4094db1c-58e7-4f76-b142-3046ab769972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2394a75-da42-4012-9c29-78708cd96f98",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449d72fb-a8a3-4a7d-87a7-5b566c6c35e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c90265f-0e9e-46b8-9d16-9691b575ccd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25763b36-9938-466f-a542-a98a50913215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb95e4f-baaa-45c0-9e1e-91f6a815761f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26533f1-d3ec-4b28-a524-e71bb299a9bb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568cbfef-2519-47f0-b256-a20c9814efbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a719927-73ad-4d6f-b18e-2e8b8f6ffb98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad7a626-0423-4e38-aa1e-0cb6a12c493d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6741db36-24f1-4099-a7ce-1e7a4c90cb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1913635-cc3b-4519-8118-a63a117874bd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a921ab8-a63a-4f57-8ea8-d7cce2bbeae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c087a6e7-47b9-4afd-a93a-03ff499a1c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f76cb1-8cc7-410b-924b-0b4dadadeeed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56789d64-35b1-4075-8944-a37082a1b1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2c80c1-2172-4dd6-8c29-6d877b97e22b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e3227b-b4b6-4e47-971e-bdb21d8c81ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7068dbe1-6b57-4646-b16d-365fb13e29a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48807157-2375-4600-a61f-bf9d02720906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd910622-df7c-4171-840e-026f2147a60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47085534-3efd-4e2a-978a-761572f84bda",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d90dd4-01c5-47b9-8cd3-c7576f9c4ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25299707-940d-4b7e-9c60-e3b61db1ff7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e082bee9-3a8f-404b-bf70-90f6ea13fcdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6a0947-376a-4f70-8b44-f7faa7390809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2f41cd-bbce-41cb-8f00-35f8f5070649",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f47c983-c982-49a0-a66f-c8a9e7b7fff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc63fd97-ab87-49d7-bf0e-e9f01d272112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c344ec8b-7d2d-4854-b863-7b505ab2fdf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e623af2-65dd-4fcd-8d9e-02bbb60e2d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830a9dda-7b60-4419-abe2-39f03ab935a0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d923e21-b402-4fe2-aaa9-fdcd264b825c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18038d35-c128-4985-ac32-e0936e9785bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd9376d-dad1-443b-8d5c-43e213064abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1f916f-f6d4-4a4a-90f7-e2032d5c9e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32fd7f6-e935-4f4a-8978-4b303c6ff756",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9196729-8338-413f-aac5-88858ab8c59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1daf722d-0249-4b74-9974-ea1860024cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8704b620-d430-4f12-b837-6318b33d7f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b8e53c-feef-4c92-a025-512795f51a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42cee59-84e5-467e-b1e6-ac947a6d1690",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f432355-8c8e-4ff5-ab71-e0e303155da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694ebab0-8429-4145-a94d-6bc238bf4968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1196107f-bc18-4249-bac5-948f37db9bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc74a47-a120-48f7-bff3-a34e0049bf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a533f119-0f8f-40e8-9709-9a2bde39e8f4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869ebe41-2171-4530-8e4e-a6e68b5f4b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff58c52f-5bcd-437a-8995-ee2ba3bf134a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41642e6-20c4-4324-9fa3-ca3616d0016b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675cde94-56f2-415d-9624-a70e3d996737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e6a50a-f9e4-4179-b9db-98632ce7654e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a8f303-8225-48ee-b205-4746934b556e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5cd1a5-0296-4712-8235-34c85a261f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f1296f-36cc-4125-aea5-561b466f4ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6849085-2045-4ac4-bf9a-6c1e2e2bc88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefa68d9-b5f6-42a2-a646-97d9e8d46287",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6456e67b-cc59-4c34-a990-48f9c053f8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d185840-ac4e-4747-b45c-995c5abfcf00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eb0fd8-eae1-450a-ab10-e036fecd7d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d18eb0d-ef34-439c-b50b-86094a903b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3290cefe-c75c-4f08-b03d-6c5e1cd6064b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8cfe56-c554-41ae-b9d7-0badf1ccaf1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330b558d-58b1-4729-a0a6-a66677382282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7160f1fa-c0be-42c5-bd2b-77ad6de8a2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2be22b-884f-4d0e-8e21-adeb3495ab28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b407cf-5170-4d19-bca3-ad1ba0aa4952",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e980af55-c25f-4a3e-a872-094e2353fd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2200f8-1a67-48af-a6da-e1f3ba2abaa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7ec784-6ec6-402e-8c26-7caa6a953b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99339679-2a45-485c-bdf6-34084117286e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75867e4f-70c6-4eb6-8f1c-606e3f3463bc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd7073e-b03a-4d07-965a-74756c7f05a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8c0f99-092a-4d31-acf1-c38b0e5dda98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23582c4c-f54e-4027-8387-2e5ce26752ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b2edcd-2bf3-49b5-8b44-d9c3cf6f465c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f9f6e3-384a-4725-b713-d5074f7b343a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255b6ee5-5ff5-468b-b954-14df8a45188f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8235387c-f411-402e-8bf6-525fca5a7671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2618e5-3b29-449a-9ceb-7acc29d9321f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8399cca5-b339-470a-8e75-245cc1bac101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8c70a2-e8d9-48e6-ab82-c109c57cf591",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3be9fd-be7a-4340-b2fd-5c3395b41826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048cf00e-20b3-4e92-828e-cf9024f04a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "348fd0fa-1557-437d-9e0e-3dbe58f62b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550132d1-fca6-4190-8e60-90ed262742a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc84d5e2-2115-456c-b269-bb00aaf8cd54",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2be1065-2de9-4293-8a3c-71ecc0479581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51cd487-1f85-4d3d-84af-6a8f6eb6256c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89283268-cf4b-4acd-b870-ecd9c92063b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0f2bef-8e13-440b-8327-e0db77702636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04aef65-769a-4172-bedd-a5b73434c672",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bae1c2-7a70-45e5-97fe-bfa172dd6c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3abab0-5fd9-4fc1-80e1-e52addb29293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b404b4-7832-4f16-81e3-5e8e09895926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71762f11-87cc-4ec0-8764-81f15d5365ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3583cbd6-122a-4126-8fa5-c6ab7693bf78",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004a4732-7147-4ae8-99ff-da5b39aecefa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4fc6160-22a3-4973-b3ca-1fe0596242e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7418e70c-0a3a-4b00-b9c5-e4f01f8533c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e58ef4-733b-4185-be84-6a2fcbb3151b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dc6f72-3c67-4d67-887a-5872169c2301",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2adfad7-b1c7-42ee-828f-f8e931567b74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ca3f0b-b386-4211-ac71-d22e4bda5be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc32537-0ea2-46e2-b526-ccc34ed2ecb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac43d50d-e95f-46b9-a052-8cc58fcfa437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c130a502-0bb8-4394-a32b-3b6234f9413f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cf90db-c0f1-4c22-b761-967ddd50c30e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c18caf4f-8c70-41ec-b9d9-41a02b033189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c25387-f836-438c-994a-e491be79f061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e3ef8b-696e-4958-b8af-c40681fa1659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bd724d-aa51-414b-9041-4e842308c3ae",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34075b36-053c-48e9-9613-25b7b64e9f26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d37d6d8-2763-4162-afde-ef0d7cb2a267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0be5e5-fcc3-4478-817f-1db3f781ddf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66704576-2bf5-4003-aa95-23d07ab7e11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbb2d24-cd80-47f2-a89d-153b9ff8fcaf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa555fa1-bb1f-4cbd-9691-3ffeaf485302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bacbac9-af58-4df7-a812-28300672dbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24af388-7747-45a2-84aa-0a43a444dc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2723feb-0ed9-40fa-bc7c-6a5aeaed65db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9dd8097-45f3-4552-a04e-1f90361074cf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b14bf99-195b-4a28-90d6-77a376ea9d52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23fda048-40f9-4ddd-af53-f389e1fe9dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417551fb-e396-4e93-bcab-106377613e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b338f0dc-6881-4372-903d-8ad0f5b5894b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2af98aa-59b5-4396-8735-3c489263010b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986f7165-fee0-4951-90b4-49de0e8c933e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fddd93f2-0279-410c-998b-2a12eb0f2d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313705bb-0b89-4489-8fd0-e98259d4e3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c7b081-84d3-4134-ae39-daddc829dbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee5ceea-29af-4f9a-8f5b-7ecf9cdc487f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee96e766-9390-4381-abc4-2b9c727a38cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c41e1ebb-36b1-48e3-88e0-989e2576ca9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4197bc9d-709c-4242-ad56-29da6d2b6918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523f2d3a-91fb-4ead-a1b4-e0a5aaa927c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14acb649-24d3-4bfa-884f-dc6890875f50",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecd4522-69c7-4e7a-875c-458d8e26617c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1cca63f-db74-4935-a25f-b422ea4516c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5325c3-57c1-4740-9ed3-ad18aaac3c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3bfb564-2473-4c39-b754-34fccb2e9720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106f89b6-d64a-4d3f-bad6-18894da41235",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6ae79d-dafc-49f0-ad29-b7efedaa063d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2608fcb5-4b12-4e54-881f-032ea8fd776f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5feb0599-3c0c-45b5-afe5-be9301650d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bbca2a-0f83-49b2-86fa-eaef42c49188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444610ac-7ced-4591-a3e0-64892901084c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8e1cd5-0b8c-4f39-8909-0565b802bf88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a0558a2-8637-4200-8da8-14f1a7b25a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e820ad-de9c-4e17-bd8f-5d5f34134f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a2b5c8-497f-470e-afbe-838ff87f85c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fabc0ad-b639-4e28-9116-3a5417be42c2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529a03df-5104-4e70-a05c-5539095a2f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d288930-166d-4e37-a804-82bb54647efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa5de16-6abf-4523-a170-450be85b4e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a1e0fe-b9aa-4ec0-bcd7-1b9b1902f652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b427b6f4-d57b-4a5a-8bf0-0d4a83402868",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0d25f6-765a-40b8-944a-e1781838e27f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac7742c-ae85-4b43-af44-01cfabd79f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1409c03f-776f-4e0b-9d63-4fdf6d5a7d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4ad78e-c998-493f-828b-5b42ab8f882a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ad70c9-72a2-4ba5-8592-5ba775a20cd4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91c88e1-7f95-42cc-81c7-4f440ca938a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "938b7ff9-ab67-4eb2-a64d-777030a258cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b12ee3-8467-4d3b-8b26-eb1b6979898a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29aea126-70c1-4d07-b4e8-83599a59a93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1e97e6-1060-429a-8414-7b3e66ecd49f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3a23b3-695a-433e-8263-8c0db65c03ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c5db288-752a-46c8-9a30-f899195dcf84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f3ed5f-42d8-4ae4-9c21-534eaf404b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d4c783-8e26-44a9-949c-5d07fe7eecf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e975e2-6e7a-4eff-912d-39c7689a3ec5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb6c628-dede-4cc9-b435-7f2310119871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3adfc7b8-af33-4202-827c-18b6841d3172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f80b4b-37b9-420f-9eb3-99f33171bda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c383dec-f9c1-41b5-bd18-0c084b14e302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343ea0e2-f353-45d8-b3bd-1806638e4078",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f31c6b2-a4bd-47cc-8e00-9dde3c2d93fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82190fa5-812b-4b35-9287-5e5658422375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecb8bf7-0dfa-4e6d-99d5-e276af9229c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fb9741-7afe-4f2a-9218-a50803b5f449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff95af04-c79d-41e4-ab8d-08672214b284",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4dedc3-c669-4ffa-87df-b4323ffa566c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93a1d56d-86c9-4442-8130-4e78ed1c792d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feffb9eb-5549-4f77-9c0d-45cb58bb6644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bdc281-26b1-4c9e-857d-5bdf897eb048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b390ba-6074-4c2a-8223-2435b7c301b2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d8a05b-8878-4c6d-a4b2-82453d84e0b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6e92e1-2223-47c3-a1b8-8264714c54c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc3bb0e-e0a4-49be-a21b-c318ca483b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ffd44d-d8f0-47d3-a884-b696892d4b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8968647-48e8-46d9-bd27-5a134112a8fa",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e466fc18-72be-4768-8c9b-c5e83c464f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e8030d-8287-4379-b7e6-e4624d5e044d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c448c6e-f875-4d84-b73d-cd54398f4eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d81981-e463-46b8-aed7-b1cde4408d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131d0e28-f740-4df4-9a13-f03bdb53f65d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1f149a-8215-48b9-ae68-08d6a6a5e0ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42938195-6d24-4771-9905-fe34990e0473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3603b6-5f6f-4f5d-96ba-447345d6518b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383a85d8-b545-4120-98c6-11521a5f9ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69979f4-1851-44a0-bd05-ef0e8ee33128",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0826f41c-0897-40ab-9867-b9ae3b0c3035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7cc8752-65da-45b4-9854-4c652ba892c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dc2670-57dd-478a-a9dd-456987f8c646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f0c240-b8f5-44a4-8831-d1c0b797462a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d20631-7666-49ed-91d1-53e9a00a953a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59b1d63-e962-4222-ac27-8d0a2cd1ceca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e037c4-1617-4d74-a75e-ac39be0e1d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4d538b-0c08-48d1-a3a1-c463d0485c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58801ce0-8826-4e47-895a-8a8a89a5566e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d412e1d-9682-4660-bfbf-665e97a5a471",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de6d43f-d77c-496e-8153-c906dbab4db7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edbf366d-bc48-490c-b50d-b00cf593c301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7251b4-a80b-44c4-b63d-6b7d01fb27eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fa050a-eb07-411d-8852-02f541581679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141a94da-6eec-4f88-a44d-8c90cc7ea33c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0069a068-61bc-42c9-89fc-79ad0a1a7ccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df01f524-756c-4e02-a566-11fe6805d14d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f431dfe-3699-4826-b4c0-c57c40ecfe34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5557ad-f58f-463d-9cac-3940bca3dab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c5dc52-68ef-417b-9254-075870c83901",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1f31eb-bd62-450c-9b5c-2f21b5a63568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a4d2421-24cd-43e3-90d3-8b07ada04d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ee58e1-9974-4c0c-8a89-47be33b57e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881ea54f-79a3-4c9f-8cdc-e8584f3b66db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b06eb77-a7fd-4418-bb77-316795f86c5e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d18a4e-f742-4600-88aa-3f4d0b46b0bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bd90009-6528-44c6-8cd6-b39c15825dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0db3a39-5107-4689-bf5d-f80a3d827375",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674d3128-f6c4-47f7-9831-25d8f5254e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5513cd-730a-4f0b-85f0-26b95620d189",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e3f052-701e-46cf-a37b-473079625c1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "754a4ee1-77ff-4bdf-b26c-cc62b03bf462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a827effb-fbb7-438c-a118-0f9f9232790c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe541e4-0a4c-40cd-887d-b7ac3f535da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929f9291-0a76-4814-8ece-caebe541a579",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a326a1d3-09c0-4b1e-820c-45883d2b94e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c06be3b9-1a7e-4f41-828d-247d458998d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff9b26a-e529-4fa9-b726-30a6a7b4a6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faacd127-d1ce-4951-b538-c6a1a8ec2c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6daa06-d848-441d-8045-78cd7e86045b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86211bf-c413-436d-b628-af11536a950a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78596d81-5a29-4329-ab2e-3568fca552ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a2d9ab-d7a4-43e0-8559-78beffcdb648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a64cb7-109e-48df-95a7-cff74c4370c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5ceba7-cfeb-4244-94d7-1b5049188504",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49422668-2b09-4595-b9ac-7c45b893b73a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c0f5fdf-2bdb-440a-9766-d94495e20e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bb088d-85e2-4f6f-b83f-9b3ed0c17629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b5c52a-d7cf-4065-aed2-63284e1c6cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6128ca6-5ae7-4dc4-8524-ddb7e82b3737",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b8874d-b476-4365-8458-9f2356308f49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38dfb642-e416-4f92-a227-e87a52499420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4dd28a-1cc5-4537-87a5-e48d8999dd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4159721f-b0ce-4d59-a826-949cbf616c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f2d574-fbd5-4740-9cd1-f3e461c3999c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2d93c8-4987-40ae-85ac-df48105d921d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "492f5471-6d86-46db-a11b-ec2d291200fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81396bf4-60be-4a4a-902c-b3d0ac465fe6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d8418a-0942-4274-ace7-69f3d4b00820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2eb7e57-0226-4eee-8570-f929cde73140",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626990b2-abfd-4e39-a2d9-fc165c7683de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d337c8db-2c09-46eb-ad71-538fdf59de78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b591a081-c843-4ea6-bb77-b146fc73803c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5d26d4-4930-4efd-a1f3-90e43c0cabbc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86deea46-b9d7-4515-abfd-006a1d24a950",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2897dc9e-5f38-4057-a49b-f59162cfb867"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1676951-37cc-4c0e-991b-d14b5cc74741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0e34412-4132-4968-bc0c-4ddae8cdee54"
                    }
                  }
                ]
              },
              {
                "id": "bea410ed-2bbe-4a51-9ace-40ed968eafb6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a41324c-1c33-4f07-a57e-1384b384410d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a4ee8a-6b41-4d75-8062-bc87bc61215b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "66275977-85c3-4f9b-801c-5e9338a51a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0aaedd-22b4-470d-8fe7-9f14e022ea5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2346dac-6327-47e6-87aa-241056de5445"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de1dece1-9aee-482b-8faa-5037a024dc6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d66b162-4faa-4d91-ad6e-30bac6a5bfd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "247dd892-3dbf-4eeb-a393-dcebec8438e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08ca973b-9a99-4b05-a03e-5476c0cad416"
                    }
                  }
                ]
              },
              {
                "id": "c9d0e868-f673-4549-abbb-5fdd0331a66e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "391edae7-e1de-4b78-9804-d2540d13543b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5f76f8-84c2-4aed-8037-db04c72559bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "75c16033-2210-4032-b823-3d66a1a4a14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e943669-3878-4baa-8691-a91ea5c74c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b630fadd-1ab2-4712-b9b9-6394dc4787ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f4f0684-3f83-4e73-a560-559bfa6951e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e900338-9c17-436e-9093-b37e8610ccdc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8d58dda-1042-4490-84b3-38aeb2c360bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "67e9c88c-6af2-44e7-91f2-6061549b7ba4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab5489be-7cea-409b-9f3a-c4b9e347c370",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06db8761-6e7d-47ae-b69c-1642808d662c"
                    }
                  }
                ]
              },
              {
                "id": "d2e15f06-d5fd-4c5b-b600-ac0a2c4d4cb5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "289acadf-2d4b-435c-a45a-16a6fd5fd524",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2e68af12-bf7f-473e-9a9b-36a7b68dc6d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfea5317-8525-42c3-baa5-0b337b2008bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4d1de43-711c-47ec-b7ba-fade2a45eeb1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbd78ce7-c5ee-492c-a8c9-6fb9036f0601",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1c2a31b4-48d3-476e-8102-b8f0a7f35620"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b341921f-6c2f-420f-a2f1-f98d18067ee9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fb05bb7-2b00-49a4-9e8c-05edf2d4a285"
            }
          }
        ]
      },
      {
        "id": "0adbe8ce-6007-4969-8de6-f45f7cafa57f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8866b485-75dd-4066-968c-b13345c9769f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7854bdae-9dab-4a54-b77f-a9977c04ed15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdf6a377-852c-4fc8-9ac2-ead42e46a89a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aae04b2-3246-4e0f-a54b-f517ed4b9483",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7f35778c-faa0-4bbb-adac-270bebc4abef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3e7e54-b464-4677-a9a0-61531b3d1e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b5da865-0bac-4b0b-943c-c67ce5cc06db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c5437a1-9875-4733-a32d-ee04432ba10d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a4aceb5-79ed-4751-a6c4-e5b8da8e1902"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec16e40f-f104-464e-8056-5fcb1c4a61d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d5ee771-6fc2-4992-b025-8efba38946d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebca231c-64df-4998-8d05-ae82da0d22ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a5bacbdc-9cd8-4014-a758-ec35f6aff4d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "146bf827-3338-4656-9ab4-e32f59ef16a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54cd920f-d0a1-4bfb-b2d3-82e0e59cd54c"
            }
          }
        ]
      },
      {
        "id": "e6eb824e-d63e-4ba8-847e-d8b92a9d4e6c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "71da4051-f0e3-4166-8072-146ceb54e5b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fee20470-54aa-4346-b42c-73563160dee1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57fa71b5-9a8b-44bc-9df3-b69bfc558aee",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe3c59c-1c00-482a-b08f-387d906f0d4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e28ee5b-a4b5-4260-aa37-ca7997490c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7535d1d4-2bbb-4329-8413-f01b9732ac62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a903e688-6296-4c6a-9f84-e1692bbcb083"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e4da3b2-f653-445e-a88f-800030bc4eb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c5efa74-8d4e-43a7-9354-f1d0d0981dbe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74265f83-0569-4b13-8d58-d22766015690",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ce6ba7c-ec1e-481e-9449-3a3f8338cec5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "987392ad-90c2-414e-8c35-096348265173",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93b9dcc6-5b3b-494b-ab25-c0a937fbcca2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "786f46d1-74f3-4708-b8c7-e6dcf6164ddd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abdd59dc-c470-4c81-a9ba-d34afeb17646"
            }
          }
        ]
      },
      {
        "id": "5eca37fa-a937-4ba2-b2e8-93a7462d40ff",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "94c374b4-3fe1-4a60-bb5f-600434c72b0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38e9823d-0bf2-49e1-897f-0f2875b42cf0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a24e95eb-bc59-467d-96e2-63088571069b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed853e9-baae-4adb-9131-939347fc42bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e34f0df3-beff-4f0d-9578-b114ecf7e174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9f5a82-2172-4dc8-be4b-8410c9a8020d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba31170b-cb8d-4cab-8058-70ca4e839032"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e278492f-1650-4fe5-a734-cd2848ba8d67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ed0d3da-8412-4ba3-bbaa-581701d661d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "baaf757b-20fa-4081-b05f-ef63119a79e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afe51872-205d-4c86-9a34-e152ecccb3d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae080d15-7a56-4766-87b0-89bebe5d9623",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d0b6788c-562b-4979-92ac-0e011c71487e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efa62fe4-8cd5-4a6d-a5dd-be77c9a00dbc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "952c4c38-0011-4756-a33a-75be45356021"
            }
          }
        ]
      },
      {
        "id": "a4eeae40-588e-42f4-a7cd-4f4e6a4a6254",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b3a9f7c-c58e-4ffb-8558-1472956a86e0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02146fb9-336e-4f3a-8420-b85db88f78a9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "362f03f9-8254-4bf3-af56-2b34af4ab825",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ba7b2e1-3856-4a23-9c15-4d04443eb099",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d7c1aa6-8fc8-4597-aef6-9da441da15d6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 116.00000000000003,
      "responseMin": 15,
      "responseMax": 9848,
      "responseSd": 655.9603914015833,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699835735988,
      "completed": 1699835780778
    },
    "executions": [
      {
        "id": "459a2ca1-a289-4379-a03d-ef20f03048a7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cbead7e2-6735-4ac4-8bb7-df296c7737be",
          "httpRequestId": "cd2fe2a6-2429-46bd-99a1-76a783a8c552"
        },
        "item": {
          "id": "459a2ca1-a289-4379-a03d-ef20f03048a7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "784d9f77-0257-4043-ae37-803c836ad278",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "c70dff3d-43b1-4a19-adfc-ac57cfb1e156",
        "cursor": {
          "ref": "a49f81c0-2b52-4110-9c6e-484da8d90d37",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d51b3782-a1d8-4022-abe7-7005c88c68f2"
        },
        "item": {
          "id": "c70dff3d-43b1-4a19-adfc-ac57cfb1e156",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ac13a3e2-773c-4602-a0b9-6d2139457258",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "f2527574-5ce1-4a31-be36-9420c431e95e",
        "cursor": {
          "ref": "4bcfdc45-775c-46c4-b4c6-12be58514914",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "34128a10-e2c0-4587-ba09-98792cf637cc"
        },
        "item": {
          "id": "f2527574-5ce1-4a31-be36-9420c431e95e",
          "name": "did_json"
        },
        "response": {
          "id": "d3afe3d3-fcd5-49d4-bcbb-da567a064b17",
          "status": "OK",
          "code": 200,
          "responseTime": 381,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dcf2c7-0b7d-4aad-a7e5-a55941357981",
        "cursor": {
          "ref": "9e6a7186-9865-4c17-9805-b3d901193952",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "794ffcfb-8096-4135-99f7-03b48c46daf6"
        },
        "item": {
          "id": "c9dcf2c7-0b7d-4aad-a7e5-a55941357981",
          "name": "did:invalid"
        },
        "response": {
          "id": "dc1162c8-a0e1-4c9b-a51d-6e4a1fc1f50d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 469,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dcf2c7-0b7d-4aad-a7e5-a55941357981",
        "cursor": {
          "ref": "9e6a7186-9865-4c17-9805-b3d901193952",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "794ffcfb-8096-4135-99f7-03b48c46daf6"
        },
        "item": {
          "id": "c9dcf2c7-0b7d-4aad-a7e5-a55941357981",
          "name": "did:invalid"
        },
        "response": {
          "id": "dc1162c8-a0e1-4c9b-a51d-6e4a1fc1f50d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 469,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25daabd-9617-4e08-bcbd-dc8849043f61",
        "cursor": {
          "ref": "ddc761b1-c6a6-481d-92df-5dd29a86fd85",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "84fff59b-f040-4c52-adb8-f9211ce2cedd"
        },
        "item": {
          "id": "d25daabd-9617-4e08-bcbd-dc8849043f61",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ea5c777b-a14a-4608-ae05-154bf23e603f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ec0673-8bb5-4af6-abf3-46fb3ce28032",
        "cursor": {
          "ref": "6cbdfbae-e519-4bcc-966c-6378b4c0be77",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5c448fc0-531b-42e0-9199-e19fcb51b524"
        },
        "item": {
          "id": "09ec0673-8bb5-4af6-abf3-46fb3ce28032",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6d182add-8621-43ac-8fe5-07c90a9aa88c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecfc1a0-69c7-452e-a236-04992700cccc",
        "cursor": {
          "ref": "0aedbc49-f690-4094-a136-3b80e03879e5",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "25218e10-a379-440d-a681-acf41bf178c8"
        },
        "item": {
          "id": "6ecfc1a0-69c7-452e-a236-04992700cccc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b095e730-6218-4045-afbf-4076117f2239",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 90,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbde7c0-2e90-43fb-9f70-709c09c8f67d",
        "cursor": {
          "ref": "28218a12-19d9-4802-bf7a-2f85369e6a9b",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ebcff544-7dbe-432b-b44d-8bb9773e1880"
        },
        "item": {
          "id": "adbde7c0-2e90-43fb-9f70-709c09c8f67d",
          "name": "identifiers"
        },
        "response": {
          "id": "82f323ff-6212-4a68-a51a-4bb8586c6a9a",
          "status": "OK",
          "code": 200,
          "responseTime": 933,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef59546-4774-4ae7-b651-7f51b99d8c00",
        "cursor": {
          "ref": "0f13cd4b-fd63-4551-83b7-942082b31c45",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c14f0387-364b-41b2-86a2-063e3a94a305"
        },
        "item": {
          "id": "eef59546-4774-4ae7-b651-7f51b99d8c00",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "55d70c4d-ce4f-479b-9828-09accb46ad90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb2772f-4799-41b8-8e43-8eab2356d040",
        "cursor": {
          "ref": "c363fd54-39b5-42fb-9712-6c497c2056c4",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "47e9b2c7-3d06-49b1-b242-e1364acac92a"
        },
        "item": {
          "id": "9fb2772f-4799-41b8-8e43-8eab2356d040",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3443027f-6376-4358-80d5-12bc590286ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5e143b-6fa5-4b64-835d-a61622c24856",
        "cursor": {
          "ref": "502e2ef3-e31a-46e8-a814-4c5c1d39b60e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "84a30a71-ff59-43f3-9ae0-fd9a54687edc"
        },
        "item": {
          "id": "8c5e143b-6fa5-4b64-835d-a61622c24856",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9bfab5df-f92b-47e3-8796-6a2710bc746a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359b63d3-c0fd-4c5a-8526-8b3350405b79",
        "cursor": {
          "ref": "3875142f-c39f-4cd3-a95a-2595e97c2bd0",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "44a0c035-ed12-4dd2-a63f-8657a6a8b624"
        },
        "item": {
          "id": "359b63d3-c0fd-4c5a-8526-8b3350405b79",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4cd87688-89be-4337-842c-a631fcb1dca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d942ddfc-fafd-48ea-b392-85830df7ab3c",
        "cursor": {
          "ref": "9295733c-5e0c-435e-b576-d1615fac9352",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "216a3664-516b-4872-8c96-45629aae2ffe"
        },
        "item": {
          "id": "d942ddfc-fafd-48ea-b392-85830df7ab3c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "49e624c3-c3f7-47b2-82d5-bf6495f9a325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2effa7be-4ee8-4a07-b6c5-42bce3c86e92",
        "cursor": {
          "ref": "328ff15b-c293-4180-972d-2cba59408c51",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4f459c2f-bac4-4fb3-aae8-0a97b668d18d"
        },
        "item": {
          "id": "2effa7be-4ee8-4a07-b6c5-42bce3c86e92",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d01424bd-d0b0-4438-95cc-62c371ad57fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aab649-7c20-4622-b98d-7fd2344022e8",
        "cursor": {
          "ref": "c6851709-2f9f-4d44-8b8a-af9d80d7f9dc",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "61e79539-4cc6-41d9-879e-bf3d682aeb11"
        },
        "item": {
          "id": "59aab649-7c20-4622-b98d-7fd2344022e8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5db22506-6ca9-4876-b8a9-c19a064b4d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17255182-5f0d-44fa-892a-3052724076e9",
        "cursor": {
          "ref": "9801db16-b502-47cb-ad8a-1a2781fd3217",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "32a46ea9-e31b-405f-8eb4-93bcaef9b18a"
        },
        "item": {
          "id": "17255182-5f0d-44fa-892a-3052724076e9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7986472e-cd6c-439f-b752-8cb01ac09f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91dd637-84a6-4e9a-bccb-9e70429c99d0",
        "cursor": {
          "ref": "05c85447-f0bd-4238-a3d3-8dc6d1f808d6",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "51ca5085-4938-4e10-8784-21d15abb1031"
        },
        "item": {
          "id": "e91dd637-84a6-4e9a-bccb-9e70429c99d0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "95488f8a-19b7-48f2-a7b9-b7d93e71556c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e5926f-0301-462e-a539-60b5bcecb454",
        "cursor": {
          "ref": "99aa8fdf-4620-4415-894e-39c5f187baf8",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "40d89508-c393-4b45-ac0b-dad1dfef5416"
        },
        "item": {
          "id": "f6e5926f-0301-462e-a539-60b5bcecb454",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4409dab4-3de5-4f44-8298-f845a9966ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6e7b33-ee75-41b6-a9a4-e0843c2b6878",
        "cursor": {
          "ref": "905ab83b-227d-4fb4-b9c0-b02a828fdcd0",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c38676cc-6f5d-4001-b9cf-b433ee0db108"
        },
        "item": {
          "id": "4c6e7b33-ee75-41b6-a9a4-e0843c2b6878",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6763658a-f95e-44a2-9cd5-c30b4d29d665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad6303b-ea26-4495-a870-20f7b32ed0d4",
        "cursor": {
          "ref": "d6609407-b4ae-4afd-881a-672706015a40",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e7f00986-3582-4add-9dfb-4eb4c665b961"
        },
        "item": {
          "id": "4ad6303b-ea26-4495-a870-20f7b32ed0d4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "84f0b7f4-8cd1-4d76-bacf-ebb513228bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62230ed2-0c8a-4c27-9c02-14aa623972e9",
        "cursor": {
          "ref": "d824a4a5-1522-4e50-be0e-2ad072a10e90",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fb749577-85db-49c0-94ac-e163588602cb"
        },
        "item": {
          "id": "62230ed2-0c8a-4c27-9c02-14aa623972e9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ee6d8d1d-2774-4dcf-ad79-d6a7c70dbc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096f961b-be02-42cb-b422-70850d2c4601",
        "cursor": {
          "ref": "bc3225ee-526b-4a61-be4a-8a653ec1ee67",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "61249a66-a96d-4b43-9249-3703469a5444"
        },
        "item": {
          "id": "096f961b-be02-42cb-b422-70850d2c4601",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2715c3f9-c5cf-4f51-b387-d6e007e3a747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd33b47-e73a-40e1-8011-281cb61942c2",
        "cursor": {
          "ref": "facf2e4a-00af-4f3f-8f9a-a8f5a41ad593",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fd8ff145-8cfa-47ef-9091-f69ff79a1cc4"
        },
        "item": {
          "id": "1fd33b47-e73a-40e1-8011-281cb61942c2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0fa945a8-2d83-4a6f-bc73-5bf7ed10bdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb64a6fa-55bb-427a-be6e-2cc24fd0f566",
        "cursor": {
          "ref": "7a30e90e-2df4-432f-bef3-d135e248cddb",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f05c7b10-27ab-4ee5-a406-571332b755f6"
        },
        "item": {
          "id": "bb64a6fa-55bb-427a-be6e-2cc24fd0f566",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "14cad578-d0dc-42b2-8e3c-e91fd440b577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8531bb-6390-4d87-a95a-18c2e8b7bc70",
        "cursor": {
          "ref": "fcd8f249-867e-43e1-9478-5aa816604e05",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fd669a66-5035-4353-80c0-8f45517ba003"
        },
        "item": {
          "id": "9b8531bb-6390-4d87-a95a-18c2e8b7bc70",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4b1373a8-69ea-4587-aa55-d0c912f94130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c462b46-2b77-4dab-b2b4-754b0d853fec",
        "cursor": {
          "ref": "be22a772-b593-497b-be44-c577d8724820",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a9a8e6c0-653d-450a-abdd-70a2b7dbe7f6"
        },
        "item": {
          "id": "9c462b46-2b77-4dab-b2b4-754b0d853fec",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5afc5254-a6da-4fd4-86a0-1c7ff58afad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dfa183-ad4a-44fc-9ec2-f482d34ebb8d",
        "cursor": {
          "ref": "f112a7dc-68da-4daa-aa10-f884f5560f3b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "844e93b7-571d-4743-a75e-b25b0cbee6e2"
        },
        "item": {
          "id": "59dfa183-ad4a-44fc-9ec2-f482d34ebb8d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "713a5df5-3c95-4eb7-b55d-8e98258211fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e3d520-623e-4321-a6e1-4bc19e2ba318",
        "cursor": {
          "ref": "f3df1936-5bd4-494f-b4e2-4ceeb8cdfa62",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "153c0e83-3e4a-432c-9ba7-537c81270944"
        },
        "item": {
          "id": "39e3d520-623e-4321-a6e1-4bc19e2ba318",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "399dbae3-5074-4264-b611-3f40ef465e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a9ba16-4d58-4826-8c28-456015c9c501",
        "cursor": {
          "ref": "5516b420-8002-4358-bbb6-8fcb2cee2c06",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2052afa2-becc-49b4-983a-e2e80e1f83ff"
        },
        "item": {
          "id": "e6a9ba16-4d58-4826-8c28-456015c9c501",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "39453157-a317-4b7a-8312-be5ef0ad624a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891ec7a0-d885-4085-80ff-a8285c937b30",
        "cursor": {
          "ref": "95fe22ac-9d37-4c32-bc25-fddd16668014",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cf56f546-3499-42e8-b36e-83b01bd6c839"
        },
        "item": {
          "id": "891ec7a0-d885-4085-80ff-a8285c937b30",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "250bbbae-72b1-4756-b333-11ccab94871a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd1e3ff-d848-41ed-8e46-2dce07f75e70",
        "cursor": {
          "ref": "c2b9ed0f-84e7-41b2-96f6-4ccc2ab3ed31",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "929b9e2d-dc1a-4aea-baa1-53f41a045156"
        },
        "item": {
          "id": "0bd1e3ff-d848-41ed-8e46-2dce07f75e70",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "39099f85-3a78-4c9a-9427-6eb3cb956c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a267896-2a7e-49a9-8149-3cc2c95ed0d3",
        "cursor": {
          "ref": "84d8285a-a581-4607-92f4-7ef5ce08852c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b3b2b8a2-ff6a-4ece-89bf-f85331075efd"
        },
        "item": {
          "id": "7a267896-2a7e-49a9-8149-3cc2c95ed0d3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "404a691d-c697-49c4-99b2-7ec6e4700cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592d63e4-1697-4387-800f-18b4e2dd6de6",
        "cursor": {
          "ref": "d7c1ca67-79f1-439b-b6dc-785c7e426dfa",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7eac799a-df88-49c5-a70f-ae7805e36945"
        },
        "item": {
          "id": "592d63e4-1697-4387-800f-18b4e2dd6de6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "96970dde-bf22-4110-aa33-bda55d888ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ed2ccc-9c77-4477-83da-27db1057104c",
        "cursor": {
          "ref": "bdd65338-d57d-4334-a81a-8b3f2a1825a9",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "44db00e6-1431-4f5a-b9a8-cd7816433f79"
        },
        "item": {
          "id": "a0ed2ccc-9c77-4477-83da-27db1057104c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b66769a4-6859-4401-9ab1-c9d6f9bfc5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21acdd22-c9dc-49c8-af8b-15d5c142b46f",
        "cursor": {
          "ref": "d3614e09-bda4-4899-949c-7c234e4157e8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c815a928-93c3-441e-a947-031708216c6b"
        },
        "item": {
          "id": "21acdd22-c9dc-49c8-af8b-15d5c142b46f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "683cc1ce-bc9b-40e1-b691-2c03f64609ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4eeb2e-3879-4fc6-b43b-dfe4c65f227e",
        "cursor": {
          "ref": "c30a8745-c1d5-4b3f-a338-cdd58c6ba631",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e03347d1-05a9-4e16-adb0-6442543395d8"
        },
        "item": {
          "id": "eb4eeb2e-3879-4fc6-b43b-dfe4c65f227e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cda31c1d-c630-47bb-a3eb-effa69512c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4671c81-df39-4617-9f15-83744cf1ec3c",
        "cursor": {
          "ref": "e8f8cd08-bfe9-4a1d-ada9-47b12db5ef19",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d88c3a89-6c2c-470b-92a7-96a290d2e89c"
        },
        "item": {
          "id": "b4671c81-df39-4617-9f15-83744cf1ec3c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3eca8a2f-8c9b-4a0c-9aab-7f63ecbb2b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51376678-0f30-4db7-9550-eadbabd27b83",
        "cursor": {
          "ref": "6bdf5490-fbde-4e81-b423-a553ed307dbd",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "79dd974d-b7c8-4590-961e-b0334d8c9bb1"
        },
        "item": {
          "id": "51376678-0f30-4db7-9550-eadbabd27b83",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f78efc3c-7835-4802-985e-089e83c33ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f00c16-fc84-49be-a8c9-8f55c4cc6d17",
        "cursor": {
          "ref": "1ee74215-75d5-4df1-a490-8b5239da0f3b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fdf2d912-685f-4470-9950-272c2af19a17"
        },
        "item": {
          "id": "07f00c16-fc84-49be-a8c9-8f55c4cc6d17",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "45b779e7-c992-45a5-b9e7-9bf384e98287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4b9a1e-dc60-4e92-8b5c-1e2cdceea53e",
        "cursor": {
          "ref": "cf9ded4f-3872-42fd-8b79-02f1b888ed00",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "df2a209e-5c51-425a-9c47-68caa3164cb4"
        },
        "item": {
          "id": "6c4b9a1e-dc60-4e92-8b5c-1e2cdceea53e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bffba23f-7459-4fd4-91ec-e42f809d6001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bf6845-f55e-449a-b730-2b082beb44ea",
        "cursor": {
          "ref": "fd07b266-cc0f-45b9-8021-3c76b572c72a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6418406a-d663-40cf-ab6e-d842e2ef9b42"
        },
        "item": {
          "id": "a4bf6845-f55e-449a-b730-2b082beb44ea",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5306c8d4-2dc5-45fe-8a95-c5a34a9351d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6d37fe-befd-4a54-be0d-4f08befffc49",
        "cursor": {
          "ref": "f4706ac4-01a7-4d6c-9df1-f67fe0fe0a37",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "190d369d-1529-4654-a506-98b68535158f"
        },
        "item": {
          "id": "8f6d37fe-befd-4a54-be0d-4f08befffc49",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3f5484e6-2a6f-4102-880b-9aa7840e8d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b357b2-9505-4041-a763-1f505a6503ba",
        "cursor": {
          "ref": "e53ce5b9-da92-4f82-b45c-1b7e88a0b44c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a16cb32f-b4ff-4730-b861-654c38dbde78"
        },
        "item": {
          "id": "45b357b2-9505-4041-a763-1f505a6503ba",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4aa170b5-34e2-43fc-a027-ea48ae96447a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f02a26-739a-42f1-9748-b70a26fdc5a5",
        "cursor": {
          "ref": "0bd7ecf7-8ff4-40fd-808f-d77548d18683",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d66ef92c-79f5-4734-94db-7a935587f80d"
        },
        "item": {
          "id": "43f02a26-739a-42f1-9748-b70a26fdc5a5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2e648c6a-2b92-49e7-adf4-aff20dff1a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30322fe-766a-4c95-abf4-f5eac5989bfd",
        "cursor": {
          "ref": "09c8f350-3090-42eb-9fce-daf3fd332337",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5e90552d-e490-4582-87a6-6c9718d3dc45"
        },
        "item": {
          "id": "e30322fe-766a-4c95-abf4-f5eac5989bfd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fab0b8a9-432d-4b7e-8a5c-1e5a1368dbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc56306-3c8e-47fa-8e94-02f2c9928a92",
        "cursor": {
          "ref": "65f68a7b-fa3a-4f7f-b9a7-35907d43f194",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3e0549d7-de5b-40a4-bd2a-1a32010d9711"
        },
        "item": {
          "id": "bfc56306-3c8e-47fa-8e94-02f2c9928a92",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "15f77a70-b915-4630-b266-80bebe53f3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62087695-9f12-429e-94e4-bb416228da3c",
        "cursor": {
          "ref": "e35f1468-33a5-4f0d-807c-575ffce28be7",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b6cfdd96-549a-44f3-b3c7-7db3c023c48d"
        },
        "item": {
          "id": "62087695-9f12-429e-94e4-bb416228da3c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "48f17a3a-f58e-4594-8f8e-e4e751660c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15e33da-ce92-4f56-910f-c5bdba09320b",
        "cursor": {
          "ref": "c78bfc38-7c37-40d0-9da8-4adc569b07cc",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d13189ab-d488-4f80-867d-e60c3df838ff"
        },
        "item": {
          "id": "a15e33da-ce92-4f56-910f-c5bdba09320b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8a1d3a7a-107d-47ef-af63-975eeb12b3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2245d5-38ab-402a-888e-3fdbd40149c8",
        "cursor": {
          "ref": "35092c7f-3cd9-423c-9df3-facfac702b4c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c87046e6-590e-4b22-ac8a-a1c921257021"
        },
        "item": {
          "id": "8a2245d5-38ab-402a-888e-3fdbd40149c8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bcf2c3df-34e2-4036-968c-7071efde3bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ef78cb-53df-4a20-a618-2457e3a28e47",
        "cursor": {
          "ref": "a0708f14-1863-45be-b6ba-d371331a1c14",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "019c830c-471e-4040-b9de-9e18b4993194"
        },
        "item": {
          "id": "98ef78cb-53df-4a20-a618-2457e3a28e47",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9b6fc1ab-fc77-4414-924b-580695c20ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84941d72-6c86-4de5-be05-b8bee8202201",
        "cursor": {
          "ref": "352063b5-1e82-4e10-8d8f-ae2f15148dfe",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2c277406-d762-4692-82b0-3b69923816b2"
        },
        "item": {
          "id": "84941d72-6c86-4de5-be05-b8bee8202201",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c43ce648-78e5-4b85-9303-0fae3d6a1520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659d9950-2609-422b-8139-4d2f2c966c77",
        "cursor": {
          "ref": "19458d92-c62f-44eb-b087-0e7729ce5404",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0f24cefc-d8cf-41be-9ec9-13f6a323b8da"
        },
        "item": {
          "id": "659d9950-2609-422b-8139-4d2f2c966c77",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "88e14a6a-c831-4b34-8272-3d0b1b84821e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec68b59-5b73-4e5d-a422-ab286049fac1",
        "cursor": {
          "ref": "0be82a43-d46d-4a88-99b4-c1cb2602d56f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f499468b-d204-463e-8d05-e783dfa93129"
        },
        "item": {
          "id": "eec68b59-5b73-4e5d-a422-ab286049fac1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c36e7a54-5fec-4c29-b134-0d4b422629ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f502ed9c-36a1-40b7-a45d-ef1117cd8b52",
        "cursor": {
          "ref": "226561e9-e6e6-412b-9b5c-70483ee5fef8",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1676d1d0-f81e-43c9-b3ce-07fc325ceadb"
        },
        "item": {
          "id": "f502ed9c-36a1-40b7-a45d-ef1117cd8b52",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "232c88d0-2688-45b7-85e7-6e1fe5d0c08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f3f89d-0965-4686-a7c6-76d34b241b09",
        "cursor": {
          "ref": "fbca6f71-9123-4472-a9ae-a72ac5ebf1a4",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "457db176-6f6e-4fd9-ad96-55eaae456714"
        },
        "item": {
          "id": "82f3f89d-0965-4686-a7c6-76d34b241b09",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "44f98ca4-1f8a-441d-849d-dd7d2be0c5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa74b0f-1ae1-47fe-99fb-74dfb0648225",
        "cursor": {
          "ref": "24dd5a1b-31a3-4078-adc5-b77dbee98fec",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "11303527-061a-46e7-8ce8-a80e8eb34d76"
        },
        "item": {
          "id": "1fa74b0f-1ae1-47fe-99fb-74dfb0648225",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7d666844-4bed-4626-a6a0-13823636d8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e37aec1-ad91-4ad6-aa78-6af7d01e57da",
        "cursor": {
          "ref": "83a10b40-c73c-482b-8d9c-26daadf21cca",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a5766469-f02d-46cd-9900-91f4f4b92d7b"
        },
        "item": {
          "id": "6e37aec1-ad91-4ad6-aa78-6af7d01e57da",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "92cca038-5b08-487b-a1ac-c832241d7a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5c27d1-c176-4ed3-a89b-c986a3507d07",
        "cursor": {
          "ref": "fb9b7d73-6839-48a2-ad06-2d18c6378a51",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d5076716-c560-4f7e-8ba1-4574c24fdf73"
        },
        "item": {
          "id": "5d5c27d1-c176-4ed3-a89b-c986a3507d07",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2f84989c-e26b-412a-b454-160611934835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f87417-b1e4-4630-98a3-1dab6ce17ca7",
        "cursor": {
          "ref": "d0f50756-cf21-4062-b08f-384c6a185cf5",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "334751d0-44ce-4962-9415-1a189ba597a5"
        },
        "item": {
          "id": "b6f87417-b1e4-4630-98a3-1dab6ce17ca7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fb0e7d8d-2d27-4d53-9aee-04dea1189f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c29dba3-9b72-4942-9735-b305632bc7d9",
        "cursor": {
          "ref": "7bb432f2-f6f3-4f80-922c-833ad8128b1f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c6a4c3d8-6bf4-427d-9e7a-3ed04022f4e1"
        },
        "item": {
          "id": "4c29dba3-9b72-4942-9735-b305632bc7d9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bc6caf41-eded-44d4-a9dc-3ccd2f7b6ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c61141c-b477-49cd-a6c4-29b70212d7e9",
        "cursor": {
          "ref": "0ed8a557-b908-46bc-b037-28326a52bf9b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6fef631d-fcf3-49f5-9ad1-20e6b70a8d3b"
        },
        "item": {
          "id": "4c61141c-b477-49cd-a6c4-29b70212d7e9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7f04f76d-c542-4b29-8dc3-d2e63cb947a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e468c30-dfab-4530-8a96-d695ef900d8e",
        "cursor": {
          "ref": "c14024a8-79da-419c-8184-e55ce9f771d5",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cb9bfb53-a525-437e-a5a5-67640283e129"
        },
        "item": {
          "id": "1e468c30-dfab-4530-8a96-d695ef900d8e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5f6c3526-939e-4493-8ba1-655511dc7c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d2fe2e-338a-43cb-a737-3e03f02951f5",
        "cursor": {
          "ref": "b872a079-5e5a-424e-b553-9ffde793c33f",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "81e5324b-0aba-4bd2-9baf-e29d3624eb19"
        },
        "item": {
          "id": "13d2fe2e-338a-43cb-a737-3e03f02951f5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8e255152-89da-4250-8ddc-ad1e04f0e174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f5719d-ec7c-4062-86b5-36383aff1d67",
        "cursor": {
          "ref": "e0a9c1b2-28e1-42af-9fe0-fa9ce95c0b26",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9e7b3d24-ed8d-44c3-be5f-e3eb5141f7e7"
        },
        "item": {
          "id": "95f5719d-ec7c-4062-86b5-36383aff1d67",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2a415235-6386-4d84-8e21-d138560f6f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990d7f4d-3f12-4347-a412-40572b96fe38",
        "cursor": {
          "ref": "a80451ef-8fac-42dd-9d68-793124e0f669",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "89a76810-be07-45e3-a8fa-123fe9faa0a2"
        },
        "item": {
          "id": "990d7f4d-3f12-4347-a412-40572b96fe38",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "56d8fb24-a09c-4340-bda6-e7dda7d9c419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f3d343-5008-4c41-97d9-7d540de068b1",
        "cursor": {
          "ref": "452c77c0-d334-4c68-9868-a177244d7483",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8e4bc024-42f6-4a5c-a71c-4ad1e06e1bd8"
        },
        "item": {
          "id": "e6f3d343-5008-4c41-97d9-7d540de068b1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "92a3367d-926b-4a2b-9e0f-2cae5a9f16fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cc48b6-b9c0-4aab-9633-5655dd6712c1",
        "cursor": {
          "ref": "54293555-1b47-4e87-afd7-27e58efae163",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d36b55d1-ab8a-4b58-b01b-1c88258a4d35"
        },
        "item": {
          "id": "56cc48b6-b9c0-4aab-9633-5655dd6712c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1ee78bee-e493-4171-9d3f-9e3c8857a159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456a5808-8577-42d8-b7ed-2f02b2e6351e",
        "cursor": {
          "ref": "2c653d60-142c-4e72-a35e-a99e8398a671",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d98a11d3-bf4d-44ca-9fe1-787244102b3d"
        },
        "item": {
          "id": "456a5808-8577-42d8-b7ed-2f02b2e6351e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a09e17a2-c078-41ec-be5b-36bf2deee712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abae7f8-3020-4137-b479-4d47c4de80b2",
        "cursor": {
          "ref": "6f95bbd1-beab-4704-af89-4adf4baca767",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "354c5a8d-d75b-4b4b-892c-bbaf244e3d3d"
        },
        "item": {
          "id": "1abae7f8-3020-4137-b479-4d47c4de80b2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d15a5d53-6feb-4a66-8b94-37cba735f264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c439708-2ea7-4d74-bbdb-021178841e28",
        "cursor": {
          "ref": "2bfab951-999a-4a22-b0b3-c839bdc3ac39",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d3c380a0-8cd4-4f62-90e4-eb2b9303099b"
        },
        "item": {
          "id": "2c439708-2ea7-4d74-bbdb-021178841e28",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "95d4be34-0290-411f-8416-d1e2fce4cdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602cc232-1322-4637-8f4e-7a136f8042ea",
        "cursor": {
          "ref": "43f7b5a2-18d7-41f4-8a6e-3fa2ad229bca",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "851c548c-b6a5-4c25-91bd-148b6cd1a9a6"
        },
        "item": {
          "id": "602cc232-1322-4637-8f4e-7a136f8042ea",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a03ad957-a3cb-4a8b-90a3-20d169aca4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4a0a4e-5f53-4141-b5a0-1367761fb3d3",
        "cursor": {
          "ref": "ff74ab20-d533-43ea-b28c-4d46792e63f8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3aa696da-7489-4c4f-9b99-70f5ba3df19d"
        },
        "item": {
          "id": "ad4a0a4e-5f53-4141-b5a0-1367761fb3d3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c81c19d0-5771-4fe2-93be-876f3ae5d62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477d9972-6a63-4163-81da-4e48b65201c9",
        "cursor": {
          "ref": "6766ccbe-ef63-4288-94f4-d34971cdd2a5",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b42ad4c4-4952-456a-861a-f8852197048a"
        },
        "item": {
          "id": "477d9972-6a63-4163-81da-4e48b65201c9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "73154c4e-1e82-427d-a528-300e6f6f7acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e404ac-a333-4fe3-b9c4-2f4b7d117fe7",
        "cursor": {
          "ref": "58495d47-42ad-4bdd-8ac3-3ac504b5dc71",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "eab5ad58-f01d-43d9-99da-29fc82657fa8"
        },
        "item": {
          "id": "31e404ac-a333-4fe3-b9c4-2f4b7d117fe7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "20af9d8a-46d7-4184-ae38-43cacefcbfd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53781ca5-5dbc-4775-a301-9e7fd3b01922",
        "cursor": {
          "ref": "f2258289-6ae7-478d-b9a7-ea120316980e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "930fa51a-daff-44c4-ab21-2c8bdf17c69f"
        },
        "item": {
          "id": "53781ca5-5dbc-4775-a301-9e7fd3b01922",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4c6dda85-6083-423c-9899-82121889e06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401b0659-32a3-4f75-9295-2f8dbdeb2ad4",
        "cursor": {
          "ref": "37bc638f-bd3c-4e0b-81b1-dc211c2c580c",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "173db23f-09f1-4814-a105-3b7b0d796496"
        },
        "item": {
          "id": "401b0659-32a3-4f75-9295-2f8dbdeb2ad4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d36e5610-2012-46ff-afd3-574f4de0be46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99866937-b83b-443a-8e7c-12ca8c162542",
        "cursor": {
          "ref": "833321f1-6c41-4cc8-9c85-b813c84ba044",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3046c62d-d7fa-47bd-8ed2-03b6e44ac346"
        },
        "item": {
          "id": "99866937-b83b-443a-8e7c-12ca8c162542",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "68746b77-f809-4ab8-9037-16c0c00d4e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5bc211-746d-44a7-a22f-ca1b757c6520",
        "cursor": {
          "ref": "6992f9bd-cbda-4682-b65c-3cee3b9b6cd6",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "10eafe02-26c2-4678-981d-48b30d97f442"
        },
        "item": {
          "id": "6c5bc211-746d-44a7-a22f-ca1b757c6520",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f136c191-36c9-4141-88d1-a4df64247a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87c1825-147d-4c19-8033-6731d57b7fe9",
        "cursor": {
          "ref": "3a3d64a7-b582-4e22-900b-d94c7c4a1a58",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4e091a72-c381-4f66-8537-3b60e7b58fdd"
        },
        "item": {
          "id": "a87c1825-147d-4c19-8033-6731d57b7fe9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d6748767-3442-43e3-ba30-159dd492784f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1011410e-f52f-42b2-a89f-39c27afdde00",
        "cursor": {
          "ref": "6b96a9ce-95cd-4deb-a223-b888b7472739",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a46300c1-0e80-47b1-a780-e9fac383bedf"
        },
        "item": {
          "id": "1011410e-f52f-42b2-a89f-39c27afdde00",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9a99be75-53f3-4988-8bf7-464e16b64028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0e74fd-cc4d-4f3d-b3a6-549e5a7a30b9",
        "cursor": {
          "ref": "5c25eb4c-1b99-45d1-b199-2c5a05779281",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0474a0db-71d5-4f3d-880c-8d80a3cf6548"
        },
        "item": {
          "id": "7b0e74fd-cc4d-4f3d-b3a6-549e5a7a30b9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0fbf7076-e4ec-4ca8-b114-8b5eb0c8b836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b4ddd8-2ae7-44d9-945b-a33366b169c0",
        "cursor": {
          "ref": "384b79ba-f855-4d0d-ae9d-4879b1654cce",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7c299782-b96f-43b6-8ec9-7374abd2f98f"
        },
        "item": {
          "id": "98b4ddd8-2ae7-44d9-945b-a33366b169c0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2efbfcd0-d0d8-414c-94c2-7500b5f704d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d018e56-0c24-4cff-8f8a-2bf0d2833978",
        "cursor": {
          "ref": "381fcc6b-b39d-409d-bad1-8345a3f41ab6",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fda4fa85-8daf-45f2-a612-44e08efba005"
        },
        "item": {
          "id": "2d018e56-0c24-4cff-8f8a-2bf0d2833978",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c6be3619-0e69-4370-88a3-c18dcf162b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cac7470-7866-4c44-9dc1-c227feb4f551",
        "cursor": {
          "ref": "f9d94690-87a9-4c2c-89cd-c276c27bfdf1",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "99c3f697-ecf7-4bff-9e07-941815ae14f5"
        },
        "item": {
          "id": "1cac7470-7866-4c44-9dc1-c227feb4f551",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3aee44a1-a59d-4ed3-92c1-2bfb78fa61d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8aa5eff-08da-495d-bc96-a18db7ce6037",
        "cursor": {
          "ref": "32b4bd1e-4565-44d1-ae08-a5a3a30a32fb",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "40f81742-feaf-49f7-8824-d74ff1bcc11e"
        },
        "item": {
          "id": "d8aa5eff-08da-495d-bc96-a18db7ce6037",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3e4797c1-b607-40fc-b8a2-659fb3031c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6814d123-ee78-4ed4-a538-8fed25cdf192",
        "cursor": {
          "ref": "55ea0843-45fa-444f-95d9-8cc33256b673",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7631162e-74c5-457e-b59a-1ae0db238bf0"
        },
        "item": {
          "id": "6814d123-ee78-4ed4-a538-8fed25cdf192",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d592e62e-9fb4-4f92-9f18-5d0b417ac690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aea7771-6da8-4873-ac23-001a173ee402",
        "cursor": {
          "ref": "8ab48fc2-b875-4b8d-b975-5def499c7c7a",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6a23d2b8-2afb-48eb-90fd-af6aa18129dc"
        },
        "item": {
          "id": "5aea7771-6da8-4873-ac23-001a173ee402",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e8998290-f884-4d8e-92d2-fb6e340f5ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecb5cb0-6c93-4506-aaf6-6a1ab35fd402",
        "cursor": {
          "ref": "f04f785a-51a2-4251-897d-8a61326edbe4",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ffed8903-3648-4645-830a-daa9d9b2b0bd"
        },
        "item": {
          "id": "0ecb5cb0-6c93-4506-aaf6-6a1ab35fd402",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4dfa63cc-4a98-4cb3-8e2c-02ff72af3272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d9be17-d8f6-4cb3-b4f0-6e6d5b61b270",
        "cursor": {
          "ref": "7c614399-297e-4202-ac51-b61388e2214c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "70735b07-4c0f-4c30-8adc-7982649f8d30"
        },
        "item": {
          "id": "e3d9be17-d8f6-4cb3-b4f0-6e6d5b61b270",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fb070df4-1b6b-41db-b6ec-8cd15e9ff4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7f9511-4648-4956-a405-d39256d0d2c2",
        "cursor": {
          "ref": "dea5c935-c846-4900-9de6-8c529e2400a0",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ea4c0ddf-f0ff-4de0-b0f2-8daf430a68ac"
        },
        "item": {
          "id": "ad7f9511-4648-4956-a405-d39256d0d2c2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f6fa5011-d2a0-4453-8518-a4b7fa5f4bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fa9ace-652a-4064-bbba-d56c0bbc20ca",
        "cursor": {
          "ref": "247a0abf-2338-463f-aa07-ac9dd34cfb6f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "442283d9-926b-41f3-aba4-bfa5d9b08671"
        },
        "item": {
          "id": "c6fa9ace-652a-4064-bbba-d56c0bbc20ca",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3df7d6e7-ea5e-47f9-8cae-ca6c44e23d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905c3a58-8518-44bb-b5fb-9f6b7fa19905",
        "cursor": {
          "ref": "4d3b466b-293b-4c75-8d6c-58f0e910f5d8",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "aff03d98-e818-4c56-82de-ad77ac585906"
        },
        "item": {
          "id": "905c3a58-8518-44bb-b5fb-9f6b7fa19905",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e856db5d-6f7c-41a2-9f27-68ca237260b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a017000b-7cfb-4c47-a40d-b055cc3f9775",
        "cursor": {
          "ref": "4e2feafa-7200-4750-a85c-5dfff1d90632",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4590b02a-4a42-470b-bf53-bae16b7694c4"
        },
        "item": {
          "id": "a017000b-7cfb-4c47-a40d-b055cc3f9775",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "99a83d54-9cc3-4a3a-a695-d9f6c4ca05aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a9e022-3ce7-403e-8e67-73230925f8ec",
        "cursor": {
          "ref": "833d4b39-2396-4f89-ae28-32973b3ad86f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "03fb0941-4a9c-4348-8007-c7a0e6e428c4"
        },
        "item": {
          "id": "63a9e022-3ce7-403e-8e67-73230925f8ec",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "77e280f0-3aad-4ff0-a7ea-6e484058ac46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00146d02-3f0a-4b6f-80cb-1c524d4f1b28",
        "cursor": {
          "ref": "ccb529c4-2abe-4c24-b055-f28acd8fda6b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "61faad7d-4788-4ffe-8763-446e14930615"
        },
        "item": {
          "id": "00146d02-3f0a-4b6f-80cb-1c524d4f1b28",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7e82e2a3-516b-48e8-80d7-877bd4d27a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67bc4b0-f18d-46ee-beb0-30fbf0f10f31",
        "cursor": {
          "ref": "6427ba4d-49aa-4b22-9d62-ad071c300f78",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "71205e94-2f2f-4e3f-9e8a-a7d8429f50d2"
        },
        "item": {
          "id": "d67bc4b0-f18d-46ee-beb0-30fbf0f10f31",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "39a2044f-1858-4073-bfbf-246c721d1f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd9cf07-7a87-4d66-8dc6-fa8b3e1f4e9d",
        "cursor": {
          "ref": "af7b35c3-e6fa-4a00-bb7f-24245862eea8",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8127aeae-0ae6-4f74-8731-554cacb1f7aa"
        },
        "item": {
          "id": "8dd9cf07-7a87-4d66-8dc6-fa8b3e1f4e9d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cec5e527-c925-45f0-8672-bb74d46e1f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b7558d-66ca-40e0-9d87-9269b45a981c",
        "cursor": {
          "ref": "716813f3-f205-43e5-a4e0-8a8a5ff43fe6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "60dceeab-54be-4c8b-9918-fa8ba2a12a1d"
        },
        "item": {
          "id": "19b7558d-66ca-40e0-9d87-9269b45a981c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0ffeca7a-6444-46bd-9a32-06e6a0a1f61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30743006-2177-40aa-a21d-909a0bab86ee",
        "cursor": {
          "ref": "60846d16-bddf-4a2e-9773-17ce02855d66",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "82da9f6a-ca7a-445d-9732-fd9467d7742e"
        },
        "item": {
          "id": "30743006-2177-40aa-a21d-909a0bab86ee",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1b334e33-4a25-4b18-802d-80643a868e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fda170-d480-4839-b44b-507ebd5269c5",
        "cursor": {
          "ref": "4ff2d39c-295c-4203-b2a7-2b29c8336dec",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c9fac4fc-6af1-4b29-9b51-dee5ddc800e5"
        },
        "item": {
          "id": "33fda170-d480-4839-b44b-507ebd5269c5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d015797b-b4a0-47ae-98c1-2f2c5245e98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4385dc-63db-414b-b627-ea3470f885dc",
        "cursor": {
          "ref": "e2df3c2b-dad0-49a0-99ef-a5e2aaac6f76",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e5ab2704-9332-4082-a1be-d6a27b113105"
        },
        "item": {
          "id": "ab4385dc-63db-414b-b627-ea3470f885dc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fbc2c51a-793a-4cbe-afc0-03c771ff0485",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7ac03e-2381-46d1-a967-1618710455a2",
        "cursor": {
          "ref": "dd36c9c4-2742-4a37-86cc-e50fd40c38c4",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f88cca2f-26f8-44fe-896c-a3d4ab887fd4"
        },
        "item": {
          "id": "8d7ac03e-2381-46d1-a967-1618710455a2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ad739ee9-4c28-482f-b0ad-78cd1d346c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b79404b6-0fe5-4f03-a0d6-973a27291ad6",
        "cursor": {
          "ref": "8c2a8cd5-faab-4376-bbf4-356f01cbf7ee",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9f1da321-ac59-4f60-bb3a-8082170fb4e8"
        },
        "item": {
          "id": "b79404b6-0fe5-4f03-a0d6-973a27291ad6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "18bd3d96-e8ca-4025-bfff-a6fa3e90c81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d89af41a-93b1-415a-a70d-d9a43cdc4892",
        "cursor": {
          "ref": "94633635-a8e2-4f67-ab01-5d4b13a678c3",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "35c27bb4-3fc1-4d62-a40b-b31cc3db5453"
        },
        "item": {
          "id": "d89af41a-93b1-415a-a70d-d9a43cdc4892",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7438f4c8-b16d-4d89-8585-20bd4fcb2dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5adc0205-e553-461d-85a9-52938919a5a1",
        "cursor": {
          "ref": "1ab57701-ed82-4434-94c2-83841f7e4261",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1bb564b0-a6fb-48d3-b5c4-0e3826c344c8"
        },
        "item": {
          "id": "5adc0205-e553-461d-85a9-52938919a5a1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "deb73b1f-15b2-4da2-9f58-a357337d7a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6ae31620-0624-4b63-a01b-1c4001f1f11f",
        "cursor": {
          "ref": "e9d4bcab-9520-4983-a1d1-4435f3590a21",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "64fb3b32-c2cf-478f-962a-efc275c9c357"
        },
        "item": {
          "id": "6ae31620-0624-4b63-a01b-1c4001f1f11f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "17efc58b-3ada-4285-b1c3-452cbf2e4605",
          "status": "Created",
          "code": 201,
          "responseTime": 9848,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a54be4e-b954-4f1b-a8a9-09d866fd1598",
        "cursor": {
          "ref": "0352efee-1c5a-436d-bd58-dbffaffa7089",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "847c8268-44cf-4d7f-a7c2-8aa866e3503e"
        },
        "item": {
          "id": "0a54be4e-b954-4f1b-a8a9-09d866fd1598",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9587caf9-4ff8-4894-9972-da166d2ad2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "022ddb3f-d3fc-406d-b987-a99becc62148",
        "cursor": {
          "ref": "f8ec459c-374c-438a-b033-446aa6fc3b2a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b18ca8e5-6bd1-4bad-95de-e544777c698d"
        },
        "item": {
          "id": "022ddb3f-d3fc-406d-b987-a99becc62148",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8eea3270-f83a-4e61-932a-fb41d28084ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "42b397eb-22b3-43fa-9a35-9996dc8f6307",
        "cursor": {
          "ref": "700c59d8-7f46-4f31-bebd-08002ff28beb",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cf8ba2b3-b1b1-433d-ad14-18f5b30d615e"
        },
        "item": {
          "id": "42b397eb-22b3-43fa-9a35-9996dc8f6307",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ab652717-8e53-43a9-beb8-33b22087ae60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4580b18a-0436-4820-8e26-72b2a6eb4855",
        "cursor": {
          "ref": "170504c5-e2fc-4353-b587-e2541a4c651c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3e372a7a-acf7-49a9-8e66-dd0fb5ce438c"
        },
        "item": {
          "id": "4580b18a-0436-4820-8e26-72b2a6eb4855",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "99faf0c8-57ab-44a1-ae13-1548bba4466d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae548b6e-0e41-4358-9096-787a7821e248",
        "cursor": {
          "ref": "03f6de3b-a63e-4c5a-98c8-b0a7bc2ac8e3",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bfb4f5ee-11cb-4ca6-9347-3c5f74ec504e"
        },
        "item": {
          "id": "ae548b6e-0e41-4358-9096-787a7821e248",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d8127d19-6360-4bd6-af62-b3feeafd48d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b87165-e876-4590-a8af-a79abc080f34",
        "cursor": {
          "ref": "38120b07-412c-4def-9c93-d24423300e63",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f6db3056-df2f-4692-90a3-e3a679d1dc71"
        },
        "item": {
          "id": "a1b87165-e876-4590-a8af-a79abc080f34",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "85982e34-2320-4811-aa52-7c6e410b9773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a69488-88b7-493f-9a0c-c6c2e9f86861",
        "cursor": {
          "ref": "87d9641a-6a22-4dbb-a4f8-404811e5b473",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f1e33981-6e93-42a3-b4d6-64378d354a66"
        },
        "item": {
          "id": "38a69488-88b7-493f-9a0c-c6c2e9f86861",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a59d7142-a195-4308-95b6-aeaa6f45163d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d976b599-ec27-426a-876a-8e3e3282389d",
        "cursor": {
          "ref": "06f6a768-e9b0-4a3b-9db8-214b81d1dc57",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "27fdaf82-2dfc-498a-9640-7e1b9b972e3f"
        },
        "item": {
          "id": "d976b599-ec27-426a-876a-8e3e3282389d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8d525eb4-5281-47b9-afd4-1ad51d2aae3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ea0bcc-5d54-457f-a5e8-44e8e04ea8ec",
        "cursor": {
          "ref": "87285dd6-3b36-44cf-a4fb-90b8a6edb882",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4ba6c48a-f892-468d-9dc7-58906fef055f"
        },
        "item": {
          "id": "13ea0bcc-5d54-457f-a5e8-44e8e04ea8ec",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b9b7925b-c4a3-44f8-9d15-0ce65dade375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5f5906-b1a2-433e-8976-fbaafe056030",
        "cursor": {
          "ref": "82cd12ee-60db-4b12-bb04-53ca74c686d2",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "298049c7-b6d9-4bba-af14-51b48fe404a6"
        },
        "item": {
          "id": "7b5f5906-b1a2-433e-8976-fbaafe056030",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f04d3b7d-e5fb-4313-aba5-621ce82ac368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da261c59-4eb7-4148-bf9b-4607e48efd32",
        "cursor": {
          "ref": "3dc6fa81-d48a-40b7-85e8-5bfd41c71ac4",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "91da4b75-ebb1-47c8-b2a9-1efd58037696"
        },
        "item": {
          "id": "da261c59-4eb7-4148-bf9b-4607e48efd32",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8858950b-7811-47eb-ab3a-6a5f0b11d401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed94811-b466-46bd-a312-e52811a98f12",
        "cursor": {
          "ref": "25d9be0e-bc35-4a86-9e3f-999433dd4865",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "def70530-eb2e-45b6-868e-29bfb27458ef"
        },
        "item": {
          "id": "bed94811-b466-46bd-a312-e52811a98f12",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c01bb9aa-3532-4ae1-b4d9-6e3caac5211a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d309f07-e9bd-489e-867e-00140f19f01a",
        "cursor": {
          "ref": "9fb84cce-d6a1-416a-ba12-c86d0f565b28",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9a12e8a8-512c-40f8-8d54-8c8b0b2a1494"
        },
        "item": {
          "id": "4d309f07-e9bd-489e-867e-00140f19f01a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9e6a5869-ee5e-4b85-b4a3-5605f25ef51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c515e42-1615-4906-afde-965694ddf8e4",
        "cursor": {
          "ref": "f967e25e-ab70-4b71-86a4-b53fb81797c9",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a8cfffdc-d4c7-4d4e-8785-c613e43252bd"
        },
        "item": {
          "id": "6c515e42-1615-4906-afde-965694ddf8e4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "003c960f-2b55-4e32-a971-2b60f0758003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda79084-348b-435f-93e5-98ee89f6a3f0",
        "cursor": {
          "ref": "b5027237-8688-4e64-a3f8-10e4f9e290c1",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d6041557-c09e-4747-aff6-38d3861a70df"
        },
        "item": {
          "id": "bda79084-348b-435f-93e5-98ee89f6a3f0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bfcae2e3-37f5-4b5d-b941-9bcde4c03799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c04972-a753-4d46-b18d-7bff79b4cad0",
        "cursor": {
          "ref": "8c2d176a-a228-4bb0-afb9-50f1d1473963",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a4907779-0dfb-4702-8883-1c072a242617"
        },
        "item": {
          "id": "b8c04972-a753-4d46-b18d-7bff79b4cad0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d1fa3677-8348-48c8-9164-80e6c9790b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8a83cf-35ce-4caa-b0f2-d64ffdb9e898",
        "cursor": {
          "ref": "19813e41-e2f4-4fdc-ad1e-32a461a6a61a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cd89146c-4d8a-4a60-b47f-5adc58287086"
        },
        "item": {
          "id": "ac8a83cf-35ce-4caa-b0f2-d64ffdb9e898",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "90308284-d036-4418-91ce-8d1867eb31e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca7fce8-f9ea-4a95-b2cf-ead358a24cb9",
        "cursor": {
          "ref": "3d0bd944-892d-4014-a63b-888ef954d649",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d6ae415a-8d26-4f8e-8cbb-3eb880b563ed"
        },
        "item": {
          "id": "cca7fce8-f9ea-4a95-b2cf-ead358a24cb9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "51ba97b8-953c-404d-a4c1-5d729acfcf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f246dd-b3ce-48b1-aefc-f0910a4a05bf",
        "cursor": {
          "ref": "c0580e9f-8ea9-4cbd-bb09-a9b43209fc9b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "163f9f7f-e35e-4af5-9d3e-eaf651c817af"
        },
        "item": {
          "id": "55f246dd-b3ce-48b1-aefc-f0910a4a05bf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3686209b-7a50-4545-9210-f9bdb1b8f704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d98e1c9-c628-4995-ab47-7b6a7e396dc8",
        "cursor": {
          "ref": "9322bfea-3e14-4838-af51-6ed1c0090616",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "17ef1e8f-5e09-4ffc-88c7-b4d9596c606d"
        },
        "item": {
          "id": "1d98e1c9-c628-4995-ab47-7b6a7e396dc8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f3b02210-1c2a-4012-a125-81113f3e12fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e8441c-3157-4174-8d15-8df184db7ad7",
        "cursor": {
          "ref": "518feaba-b2d6-438c-9cc4-95dfd4efaff9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "74de258e-bb73-4734-b8af-65497a0dda1d"
        },
        "item": {
          "id": "39e8441c-3157-4174-8d15-8df184db7ad7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "df5edb73-5bba-4bc8-a88e-3a0c30ebb4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd79c12-b6c3-4e34-b3e2-5c155f4a94e8",
        "cursor": {
          "ref": "a2cca945-fe28-4f7f-9b85-5a400062dadf",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1d6d1afb-71c0-4249-949c-868b6cb9f242"
        },
        "item": {
          "id": "dcd79c12-b6c3-4e34-b3e2-5c155f4a94e8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1b4a04d3-bd14-4969-8ce8-c90a66e71649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f4ef78-03aa-4ced-8efb-aaaa915700b8",
        "cursor": {
          "ref": "b93af48f-2992-4ea6-a7a6-34ca5558f9df",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c00f11b2-1d24-425e-8380-515865189933"
        },
        "item": {
          "id": "a2f4ef78-03aa-4ced-8efb-aaaa915700b8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f819de8c-f254-44c5-8844-17051d770990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cc1a28-7f4e-483c-95ea-4035b76a760e",
        "cursor": {
          "ref": "dfd005ff-c910-4b57-b803-bef76b1ec5e6",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5f6062ca-1d7b-4166-92a9-5d32a9ae9c18"
        },
        "item": {
          "id": "43cc1a28-7f4e-483c-95ea-4035b76a760e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e5fcbf31-acf7-4d15-8e37-1e8377d48671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63cd655-a1b6-4861-8a5e-bee9dd136e9d",
        "cursor": {
          "ref": "e00a8ad7-b48d-42a1-8a3a-c33e4bc666ff",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "07d460ce-ee74-461c-8a8d-892e4f42382d"
        },
        "item": {
          "id": "a63cd655-a1b6-4861-8a5e-bee9dd136e9d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9ece5fdb-fe29-40a1-a18c-265b3f81f435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e235b9a-7bfe-4c8f-bab7-6248e8e21414",
        "cursor": {
          "ref": "e24ac6ff-1d9a-4b03-be2b-c92ef3430126",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "388ed14d-98d0-4042-90f1-4ea17e4f5459"
        },
        "item": {
          "id": "1e235b9a-7bfe-4c8f-bab7-6248e8e21414",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4c9906ef-7e51-40a2-a38d-33bfcea4f94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7700f88-1fb8-4385-90d5-1853837331f1",
        "cursor": {
          "ref": "90681dd7-4aaa-43a7-a5ac-7b99e0455032",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d10ffba7-1fed-404a-b070-6741d68079d3"
        },
        "item": {
          "id": "b7700f88-1fb8-4385-90d5-1853837331f1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c16ff811-fdd5-4675-becd-67fedb931872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc4efb9-b273-4e44-8c1a-32e199f7677d",
        "cursor": {
          "ref": "2a1639ce-e4b0-4131-9cb1-50b2297a48c1",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "01b334fd-a148-4f49-8e45-0bb1333b8db7"
        },
        "item": {
          "id": "6fc4efb9-b273-4e44-8c1a-32e199f7677d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ae3a6be9-d504-4957-b4a4-08962c4d4862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca1f7d0-6a1e-405d-8a3c-2c7a526089ae",
        "cursor": {
          "ref": "82829058-bea1-4048-bd90-697ba6fa436c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d6e7bf60-bcd6-4d05-8fa4-9843567d2731"
        },
        "item": {
          "id": "aca1f7d0-6a1e-405d-8a3c-2c7a526089ae",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3e2da607-0b98-4c22-b9aa-40225537e329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19449e79-defa-4f31-a187-84fcee579d72",
        "cursor": {
          "ref": "a2227607-0ff6-4a76-a30f-6c2e5cd9c42d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "38467b10-91f4-4a00-a2d0-644800285289"
        },
        "item": {
          "id": "19449e79-defa-4f31-a187-84fcee579d72",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a29da69a-ba9f-47a2-837f-fac625c202e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4778f39-81e5-422c-adea-5fa0dd2477f4",
        "cursor": {
          "ref": "330163a3-deaf-410f-8056-fe8453eacb07",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "85e19a92-af30-4826-ba7f-3fceff5569f9"
        },
        "item": {
          "id": "d4778f39-81e5-422c-adea-5fa0dd2477f4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c264c74f-b05a-48f1-a1d0-7c757e39bfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f27f3d-c2df-4283-ab9a-bb0ef57d45ce",
        "cursor": {
          "ref": "cbb7b765-c182-4ec6-8354-3311e3c17996",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7158df46-530c-4d3b-83d2-599018b0b7bd"
        },
        "item": {
          "id": "e7f27f3d-c2df-4283-ab9a-bb0ef57d45ce",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "517edb63-4deb-423d-a11a-f51b54bb75f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763d64e3-ddf8-4340-a175-f8ef1f6e2535",
        "cursor": {
          "ref": "ac5e532e-4cb0-4626-8907-651731167d22",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "827df5d6-9771-4f47-a540-fa8088567bbc"
        },
        "item": {
          "id": "763d64e3-ddf8-4340-a175-f8ef1f6e2535",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "11bfbfe4-4745-40c6-b92a-79fe06b67457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc45e69e-87c1-4224-9ae4-e68efb6249cc",
        "cursor": {
          "ref": "a15ebd9a-3fa2-4c34-b29e-85cf34542c19",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "730e7179-dd65-47c3-b09e-21a9ad71beb4"
        },
        "item": {
          "id": "bc45e69e-87c1-4224-9ae4-e68efb6249cc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b5c6aef4-3909-4d8b-b244-9934c3ffafb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4a3a42-cb5e-44c4-bc26-7a83c73cdc64",
        "cursor": {
          "ref": "2660dbfc-aec8-44b5-a9aa-1e246543ffd6",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "619b678e-83fa-425c-96ac-47a1a7fb7f64"
        },
        "item": {
          "id": "db4a3a42-cb5e-44c4-bc26-7a83c73cdc64",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "29889147-0ea5-4472-a327-143d605f14c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df82b33-b3b1-46ac-95c4-afcf25d5d25e",
        "cursor": {
          "ref": "7bb2ec83-e84b-4a01-bc5a-c505b6a72e4f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e0728ffb-6e70-460d-a19e-ec71a788fd67"
        },
        "item": {
          "id": "4df82b33-b3b1-46ac-95c4-afcf25d5d25e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2a27891c-b70a-43f3-bab1-3b33b368e4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2d2d6a-5571-4b30-9886-f886d1c8cfd4",
        "cursor": {
          "ref": "7a8046ca-ad57-4747-8850-0c4cb2fe0662",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a494610c-56aa-4127-a787-0014d6950a61"
        },
        "item": {
          "id": "2c2d2d6a-5571-4b30-9886-f886d1c8cfd4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3d2accc8-fe12-430d-9174-d3ba76c51ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c204922-87bc-4891-86bc-4f6120f5a755",
        "cursor": {
          "ref": "ed99a853-3298-4db3-a63f-ee27143aeb83",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "80570593-e287-41b4-92dd-6b6667cb2e00"
        },
        "item": {
          "id": "5c204922-87bc-4891-86bc-4f6120f5a755",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "76f6481a-92a0-4cf2-8135-3e89af89a395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af97985-364c-4226-bb02-8a32b4318ea5",
        "cursor": {
          "ref": "ecf3fcb4-02d3-46e9-afb2-bc13a52be6a5",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "befd6d6a-e00e-4760-87b7-693527e224fb"
        },
        "item": {
          "id": "6af97985-364c-4226-bb02-8a32b4318ea5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7af16d4a-b16a-4836-81b2-ef4ad2aa3b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a7c544-3702-4db1-a2e4-3825f96d2f04",
        "cursor": {
          "ref": "0f3f3e80-65ff-46a9-b354-82d556f7bc40",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "94bfb34f-a593-49ae-a647-7a36ec083881"
        },
        "item": {
          "id": "06a7c544-3702-4db1-a2e4-3825f96d2f04",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "25e9b15b-ab48-4d47-841c-6abd9228200f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4d819c-4bf2-4fa9-ba05-e58723e3c435",
        "cursor": {
          "ref": "808ec8bb-e985-4844-9e05-f806f1c1f212",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "96aaa640-c566-486f-8a76-f695986b013f"
        },
        "item": {
          "id": "fd4d819c-4bf2-4fa9-ba05-e58723e3c435",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "66464ccd-05a8-40a8-b743-e5b639b731dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf115b08-47a5-4443-b689-a2a4edb1ef45",
        "cursor": {
          "ref": "ec7596b7-1221-46ca-8b41-993c62688f99",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "189082c4-b6b7-4789-bf7b-ce6c5547fcc5"
        },
        "item": {
          "id": "cf115b08-47a5-4443-b689-a2a4edb1ef45",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "db6e3bfb-47e4-4a5b-961c-964a44eae901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e411c6a-f9b5-43aa-9fb6-c5eff00c8558",
        "cursor": {
          "ref": "af170451-9820-4f20-a2f2-86070f9e8306",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2111d162-b2a1-40c3-8d37-5775939ac74b"
        },
        "item": {
          "id": "4e411c6a-f9b5-43aa-9fb6-c5eff00c8558",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7fd28ad6-02fa-4b58-81ea-583cd891613f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b573f41c-1bf5-4ab5-bc16-89a6df2b9c9c",
        "cursor": {
          "ref": "d6cedcf9-67e3-475d-aa4d-37497877a86c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6a52c4ac-573e-4547-b83a-4f195f10f21c"
        },
        "item": {
          "id": "b573f41c-1bf5-4ab5-bc16-89a6df2b9c9c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b04949f2-7ded-4033-a7d7-c6627fc7edca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a28b70b-6f04-48a0-968c-eb7913a002d6",
        "cursor": {
          "ref": "2975875f-39cd-44f3-871e-337eb4ba70e5",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "47469b17-f49f-4be0-886e-bedf1b442e6d"
        },
        "item": {
          "id": "1a28b70b-6f04-48a0-968c-eb7913a002d6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e75c6b5c-47c7-4ace-a19d-19fd2da45d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a1fa7f-1676-4a6a-bd7c-6bfa1e60cd87",
        "cursor": {
          "ref": "c4e1c7ba-a07e-4c17-89ae-2d004471b6af",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0b25bead-9a99-41f0-b150-469489e13aa7"
        },
        "item": {
          "id": "10a1fa7f-1676-4a6a-bd7c-6bfa1e60cd87",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "436e2771-79d7-4277-bd05-0c97917571fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8307e4a-b9fe-4635-b6f3-87a9ba2abaec",
        "cursor": {
          "ref": "18814ee7-4798-4b04-b86d-ffd6ec4841ad",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a276ce9c-9105-4ddf-ae5a-8802a58abf32"
        },
        "item": {
          "id": "c8307e4a-b9fe-4635-b6f3-87a9ba2abaec",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "588226f7-e699-4a40-ba7a-b7a57af64e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f070779b-a593-4a78-8cd3-cc9e70efaf5d",
        "cursor": {
          "ref": "d7cbb472-f194-4da5-8481-aa813f84fdb3",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a8e021b0-91dc-4647-91a3-3d5005c6b268"
        },
        "item": {
          "id": "f070779b-a593-4a78-8cd3-cc9e70efaf5d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "848b58cc-0796-4471-86fa-72ada502e3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c7bd93-57c5-4807-906d-1364c5c2d8a8",
        "cursor": {
          "ref": "448fa1f5-1287-4cab-a202-45969ded270f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e2f8895d-8f91-497e-bf28-d8ec6f43730f"
        },
        "item": {
          "id": "f5c7bd93-57c5-4807-906d-1364c5c2d8a8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ed6f69e7-d442-448d-a6bf-0cab6ac53d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bae111-fc88-4567-87bf-fe78cabb8e5a",
        "cursor": {
          "ref": "59f5deeb-d45a-48b1-a303-19c2c2ae9f9c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7dd0fd99-d709-481a-8eee-4d42451eca92"
        },
        "item": {
          "id": "f4bae111-fc88-4567-87bf-fe78cabb8e5a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "384a67af-a1de-4b69-95e9-9c5fdafba597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640f0df8-1027-4ebb-9601-1af4027f62e0",
        "cursor": {
          "ref": "97dc633e-68ad-4c24-a39c-0ca7d27b9393",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d8070c34-1bbe-464c-b621-0341660d47e6"
        },
        "item": {
          "id": "640f0df8-1027-4ebb-9601-1af4027f62e0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4022438f-7a84-4f5a-9e05-71ff99d9eda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8557c6-cd8a-4b6c-bd55-75eff3973a00",
        "cursor": {
          "ref": "9fbda804-a88c-406e-8002-e1d60f9fb538",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c3042bb6-e8c7-4b87-855d-22599b5a60b5"
        },
        "item": {
          "id": "3d8557c6-cd8a-4b6c-bd55-75eff3973a00",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2aaa0e91-17b1-4937-b409-dc375926daf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36ceca2-9665-429a-a8d3-72357a567d82",
        "cursor": {
          "ref": "98506e6e-7715-416a-9a87-f93cbd453b60",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bb9ec39d-4b7c-45d2-afba-9d2a1d2073e4"
        },
        "item": {
          "id": "e36ceca2-9665-429a-a8d3-72357a567d82",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9dcb3a99-424d-4825-9591-ec9c860202c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa654707-27ee-4e82-8d43-6e56468acd9e",
        "cursor": {
          "ref": "1b9c89a6-5b37-460a-ab5a-320450c2319a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "893e5f4b-352d-4f22-bb91-ee124956fd7b"
        },
        "item": {
          "id": "fa654707-27ee-4e82-8d43-6e56468acd9e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "be1b65fc-0ccf-4671-bcb1-8f5a37019cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442f1f6c-6600-4727-b8f7-f4092c556928",
        "cursor": {
          "ref": "cdb15349-d979-4256-b405-d88aa645dacf",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eec55386-76a6-4f07-9ac0-9f014bc118fe"
        },
        "item": {
          "id": "442f1f6c-6600-4727-b8f7-f4092c556928",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "03209666-bc66-4c11-a553-98645dafc7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e18c63-a868-451c-b922-1c7a00b59b13",
        "cursor": {
          "ref": "84684ee8-bd99-488a-b10a-4d608c93b8dd",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0c377b9f-9d3f-47b8-9ceb-d1cb41c53d71"
        },
        "item": {
          "id": "f8e18c63-a868-451c-b922-1c7a00b59b13",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1cf261bf-aa38-404b-8568-217fc3c617fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76da996f-d6d0-4768-8535-8d6c1285cfe7",
        "cursor": {
          "ref": "72ba26bd-67db-40d0-848a-fd7d5162c732",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3a9bad3a-0cdd-425d-b8d5-19338c152b14"
        },
        "item": {
          "id": "76da996f-d6d0-4768-8535-8d6c1285cfe7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "86327d93-6dc6-4728-b105-65115d5fd184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2e2dcc-8ff6-4664-8deb-905ef3e461bb",
        "cursor": {
          "ref": "07357047-8105-463a-928b-c6e6775fdb2e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "72e42bf7-5997-40c6-8a61-875e8c4e2df6"
        },
        "item": {
          "id": "ac2e2dcc-8ff6-4664-8deb-905ef3e461bb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "04610795-4b91-4216-b6f5-a0c5af9e8aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df42ce21-66d9-40b2-b7d0-c2d8229ee4be",
        "cursor": {
          "ref": "d4b76b18-d98e-45d2-8675-a54b7fe86d0f",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1521a1e8-8d65-4809-9c2b-1707ab1fc4bd"
        },
        "item": {
          "id": "df42ce21-66d9-40b2-b7d0-c2d8229ee4be",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "43b85f67-536f-4619-9b4d-ddaf323ce352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee430f24-6cc2-475d-89be-d1280cacd50a",
        "cursor": {
          "ref": "da75a01b-acab-4f99-97eb-bdf4dbb87e03",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d0cd7225-548f-425f-9eca-b055e6635d42"
        },
        "item": {
          "id": "ee430f24-6cc2-475d-89be-d1280cacd50a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6751f255-5ca8-4e4b-8c72-209086473b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689a323f-10fc-4afe-b7d9-c3e692210e36",
        "cursor": {
          "ref": "7e0f55cf-21b9-4440-8bb3-2cfba0025e8e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0a670ea6-bff1-4f78-9b85-ea8661db3372"
        },
        "item": {
          "id": "689a323f-10fc-4afe-b7d9-c3e692210e36",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "50759240-6fa6-46ec-87e8-9d41a98a8de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997cd149-89b2-4fb9-bfc6-9640726c0c9e",
        "cursor": {
          "ref": "babb0e4c-33af-45d6-b9fd-0698ceac774f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ce519135-d857-46b8-bd01-904e0466b20e"
        },
        "item": {
          "id": "997cd149-89b2-4fb9-bfc6-9640726c0c9e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1f1c0e0c-8c57-4641-82e1-751e06d3186d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c76d875-7197-4b36-8dae-2bf0e2e72368",
        "cursor": {
          "ref": "c41a7f87-ae53-46ee-86d6-33840643c28f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8cad661b-8ce4-44f7-9ed4-ce6f3b56d7d2"
        },
        "item": {
          "id": "7c76d875-7197-4b36-8dae-2bf0e2e72368",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "be33f8c0-5b7f-44e1-ac4f-42dac6822e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23ae806-e8de-43ee-9d91-ecbaa4c423c4",
        "cursor": {
          "ref": "ba4d5164-9cae-406f-8f6b-4fd93da0d050",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1593d5ba-50b5-4d4a-90f7-a0b22ea3d90e"
        },
        "item": {
          "id": "a23ae806-e8de-43ee-9d91-ecbaa4c423c4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "009a714b-89de-4879-beb2-21036f94e1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6379108c-d589-400e-a77b-0f6d5206e9ee",
        "cursor": {
          "ref": "ebb0ec6e-d8e5-4574-849f-b9a3b1342bf9",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d8c28883-f081-4a43-9f5e-720250e778a5"
        },
        "item": {
          "id": "6379108c-d589-400e-a77b-0f6d5206e9ee",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8e232ccd-b05a-443c-8d2e-954e6db6060d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599bd212-4c4f-42bf-acc9-0ff6884cead0",
        "cursor": {
          "ref": "fc913ea8-592c-4a49-9f35-4b5a3f24099f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d2c54d6e-7118-4f7a-a58c-50e14b26cfb9"
        },
        "item": {
          "id": "599bd212-4c4f-42bf-acc9-0ff6884cead0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "717f76d1-b65e-4583-ac76-f0748bc386cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018026a1-9f22-4e0b-94b4-ced5797cda80",
        "cursor": {
          "ref": "801cb065-b402-4290-a010-67985b869808",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2f9207a6-c8a6-43b5-ac9f-5759bb6df4a5"
        },
        "item": {
          "id": "018026a1-9f22-4e0b-94b4-ced5797cda80",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bb21e43a-59c6-43d0-8abe-194f7d95af88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6cc0bc-a027-4ae6-8e8e-1da59493eb8a",
        "cursor": {
          "ref": "eb338e05-9998-48c4-99e0-b432b51c7a91",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "946531b9-7ed1-424b-9f05-b419f19b23af"
        },
        "item": {
          "id": "ef6cc0bc-a027-4ae6-8e8e-1da59493eb8a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0b5d78c4-8095-4f3f-99ae-6aca017c32f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd37e5ec-6037-4843-b80b-0c8fe982a88d",
        "cursor": {
          "ref": "b3f11003-8b2d-4226-b25e-bc171715b3de",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "21ddfc2f-d1fe-4ae5-9fbc-a2f22f1d82f4"
        },
        "item": {
          "id": "fd37e5ec-6037-4843-b80b-0c8fe982a88d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a044a91f-b534-4031-9c09-a3721bf42a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc4c564-eaa0-48c0-b9be-437e5f07a3c5",
        "cursor": {
          "ref": "9b73d960-76e8-4d7a-8dbc-7c162e8cae09",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1a37c0ad-06b3-4a7c-b592-23d6d737bc8b"
        },
        "item": {
          "id": "3fc4c564-eaa0-48c0-b9be-437e5f07a3c5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0bc27c8f-0c0a-4d29-a99b-2e3d307e5328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f78d61-1b7e-4bda-b567-60c849b87b7a",
        "cursor": {
          "ref": "ae6b38af-117b-4388-bb32-6a501ed9d1be",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a8e64772-d278-49f0-91d1-816462b6d74e"
        },
        "item": {
          "id": "d9f78d61-1b7e-4bda-b567-60c849b87b7a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "433ec187-00cd-4aa2-a634-1201c625ef2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c888a9-7ad3-48f7-9bb0-90d35a583394",
        "cursor": {
          "ref": "ebd9881e-2e00-4448-b1a7-12c53e54ac07",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7e5f0075-17aa-463d-9ab1-80f80b7f73fc"
        },
        "item": {
          "id": "56c888a9-7ad3-48f7-9bb0-90d35a583394",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5f2c969b-f339-4422-8d2d-9f6002613b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d43082-c019-4494-b087-3aa437d0bd7b",
        "cursor": {
          "ref": "cc606627-3b84-45b7-a9e9-21ead11d889c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "740af29b-134b-4dd8-9819-1534c15f23eb"
        },
        "item": {
          "id": "45d43082-c019-4494-b087-3aa437d0bd7b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1671b426-d65a-4642-a750-c8d5d8a08d72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b51082-9932-4683-ab64-16d04fd06156",
        "cursor": {
          "ref": "592aa7f7-9955-4c7d-a611-110b3fa4ad0a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a676dba6-ae1c-4ca2-8bc8-db68c87734ce"
        },
        "item": {
          "id": "16b51082-9932-4683-ab64-16d04fd06156",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "40e1b1a2-2786-4bed-bac2-5463b0ca63a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f53eea5-9b61-46d5-a95e-65a9fa40dd86",
        "cursor": {
          "ref": "c72c375a-8f6a-4184-893e-43d85d3d2c67",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f4e95063-f7e1-4a09-8b2a-12a2099b5162"
        },
        "item": {
          "id": "5f53eea5-9b61-46d5-a95e-65a9fa40dd86",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "882ba292-1407-406e-b756-80b733d5d978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9717dd6c-dc99-494b-9b13-f3f40a8e1cdb",
        "cursor": {
          "ref": "250bf5df-a166-45cb-a0f9-569f2fe8ee11",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b4d76853-1de7-4d8f-9051-560f016e9ea3"
        },
        "item": {
          "id": "9717dd6c-dc99-494b-9b13-f3f40a8e1cdb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e378b61f-beb0-4202-8306-6b7247ffb124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b9b0bb-e27f-45f5-b162-ecc54b73f093",
        "cursor": {
          "ref": "efe3f2f4-f82f-46c7-8ebf-d04e2c263860",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "139700a1-1805-4522-b885-f6cc24101dc0"
        },
        "item": {
          "id": "e0b9b0bb-e27f-45f5-b162-ecc54b73f093",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a53208ea-1d2a-4bc5-b141-25224bcf9fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1874c681-8a54-447f-898c-7dedb4b64224",
        "cursor": {
          "ref": "b14157ef-a070-4047-a8e7-eecc2d7ffb40",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "11c2f2c9-630b-4afc-bee0-aa198cddffa2"
        },
        "item": {
          "id": "1874c681-8a54-447f-898c-7dedb4b64224",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7404a25d-f81c-4d77-a179-af84796d9e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe69aba-119f-4fe2-baf0-afcfbc031990",
        "cursor": {
          "ref": "3a3ef7c4-5cac-472c-bc72-aa7e6c14c4f0",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6f7506c2-01a9-4dd5-a294-cdbf511b9101"
        },
        "item": {
          "id": "6fe69aba-119f-4fe2-baf0-afcfbc031990",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7b5dbb6f-db05-43ec-aff0-7712299168bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2226b0b9-8c77-4c23-8a20-e8bc0feda8a4",
        "cursor": {
          "ref": "1eddaa75-4dc3-446d-b90a-21a08410b6ee",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9bdcf228-08d0-408a-bc6a-9d85c9c46963"
        },
        "item": {
          "id": "2226b0b9-8c77-4c23-8a20-e8bc0feda8a4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8e272f73-8f05-414f-9653-eff1942fe367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef01e2c5-8b9d-4e1b-b66f-073a3e4423b6",
        "cursor": {
          "ref": "d602ead8-53ce-4462-9765-f84ebba963e8",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5ae23128-cc66-41c0-aad7-7c424fcd445b"
        },
        "item": {
          "id": "ef01e2c5-8b9d-4e1b-b66f-073a3e4423b6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "29543868-07e2-41ca-9eb3-35a5ab7f26e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa690326-49c9-4bab-ba24-86bbbd38552e",
        "cursor": {
          "ref": "0a5d8c50-59aa-4d16-a9b3-7b46fcaadb0f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c37fc947-ace9-4729-be9f-7f4a119ee962"
        },
        "item": {
          "id": "fa690326-49c9-4bab-ba24-86bbbd38552e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "599a2fbe-c72d-4923-b0c8-1da18b1690c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4692fc7b-12d0-48bc-90e6-85e5cd5d72e8",
        "cursor": {
          "ref": "381c5e58-8a9e-4e6e-b9c5-d02bcbeae0fe",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5d53034f-c21a-4d4f-9226-f8fb740fa3e5"
        },
        "item": {
          "id": "4692fc7b-12d0-48bc-90e6-85e5cd5d72e8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7ec63715-132a-4ae3-bcfd-17e0a28074c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e353ac2-e019-4704-aa96-0d21473fc05a",
        "cursor": {
          "ref": "6bee907a-6ecb-4187-b013-7bb480655a60",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8316e0ea-9fb5-4680-b87c-2bb863fae262"
        },
        "item": {
          "id": "7e353ac2-e019-4704-aa96-0d21473fc05a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "de13e8c7-2340-4de7-a39b-d84b6a8b3a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053217da-8467-4727-9fa1-41c97f810ba9",
        "cursor": {
          "ref": "21b3ab65-647c-4e68-83e1-50edc11ceef0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4c9eb419-c747-4e33-9b5e-4ee768400bd1"
        },
        "item": {
          "id": "053217da-8467-4727-9fa1-41c97f810ba9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d04e5054-1386-4d4d-afd8-413d90ac9140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3be5531-a4b4-42d6-ac3f-f682561cfe8a",
        "cursor": {
          "ref": "8caa3915-9780-4d37-aaea-5cc41f5ad303",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "77af9d07-7781-4aa0-ad74-033c84c6ecb4"
        },
        "item": {
          "id": "f3be5531-a4b4-42d6-ac3f-f682561cfe8a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b221bffc-7bf1-4cb5-ad41-dcf6cbce146e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3d1b2a-1b49-461d-846c-890fbc5002f4",
        "cursor": {
          "ref": "ba6f1a89-3bc8-4cce-96eb-23c574964ba7",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0b2ef776-bea7-4560-b5b7-783b802052dc"
        },
        "item": {
          "id": "dc3d1b2a-1b49-461d-846c-890fbc5002f4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5ad557ac-f228-42a0-b89a-2a153411f968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb14f4ab-332e-485c-8fc1-613ad640aa15",
        "cursor": {
          "ref": "0cf70606-e74e-463b-8c8b-122e3a4741bc",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "24aec921-09bb-4d79-b529-740edc404778"
        },
        "item": {
          "id": "cb14f4ab-332e-485c-8fc1-613ad640aa15",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "22f86b98-d9e3-4193-85d5-f1763508c54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17b1cf9-ff06-441f-99c5-31ae4d959410",
        "cursor": {
          "ref": "7099fd95-1a25-4b5e-b6c7-7042afca87c5",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b2e55232-ea7f-4b04-92e9-4f7a0fe68a6b"
        },
        "item": {
          "id": "c17b1cf9-ff06-441f-99c5-31ae4d959410",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d0009088-3a34-4aa4-ad11-4e55f9e382f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594b68d8-ba31-412e-8df3-3175b274f7de",
        "cursor": {
          "ref": "ba845b5b-4eb2-4c71-9ecb-543d645ff000",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b7aafde3-6308-4c11-a5f0-b835d83decb8"
        },
        "item": {
          "id": "594b68d8-ba31-412e-8df3-3175b274f7de",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ce834379-e8b7-4080-bee5-8564b7ade5a0",
          "status": "OK",
          "code": 200,
          "responseTime": 158,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "669fb2f8-3bb3-438a-8928-eb8b5667d3a6",
        "cursor": {
          "ref": "b976a027-5199-4d66-9190-3ea18c077176",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "66ed09d5-370c-4be8-9e29-f9eed38e7a0c"
        },
        "item": {
          "id": "669fb2f8-3bb3-438a-8928-eb8b5667d3a6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bb58b992-101a-4179-b2b8-c87647b6f4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e639b9-c734-4e9a-ac6b-4ed7255f8669",
        "cursor": {
          "ref": "eab36ffb-5856-4781-8498-a1fe81ae0314",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0321685d-5c1e-49a9-9380-a92bab592de4"
        },
        "item": {
          "id": "b5e639b9-c734-4e9a-ac6b-4ed7255f8669",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b71caa2b-620a-4dff-a939-8ddc1923aeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881904f9-111b-444f-8705-f8818162f511",
        "cursor": {
          "ref": "c884733a-911f-4c71-bbed-ac335de3f9a8",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "321a730f-e12c-4176-8fd5-35028d5a3aab"
        },
        "item": {
          "id": "881904f9-111b-444f-8705-f8818162f511",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "88bac158-cf63-40e8-abbd-ddfb2b8172aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589d391b-6c74-4bd1-9d62-b23e3b36e8d6",
        "cursor": {
          "ref": "b2a8a3d9-907f-460c-b9b5-bdcefe550321",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4a072e11-bfcc-4f41-82ee-94170751d0a9"
        },
        "item": {
          "id": "589d391b-6c74-4bd1-9d62-b23e3b36e8d6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "33b8c5ee-b433-46e9-8cf9-3114774b1dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bde6104-ca73-4698-9665-42e3551d8029",
        "cursor": {
          "ref": "2d25b425-6dc3-49a2-b52c-91e4c2ca0fed",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ff01637d-e6ac-46ec-8c25-e4fff7668f34"
        },
        "item": {
          "id": "0bde6104-ca73-4698-9665-42e3551d8029",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3685354f-55e7-45c8-853f-f279dbd2d0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e604b8d-0baa-42bc-bdcd-cfe99ea12202",
        "cursor": {
          "ref": "e031239f-4437-4d66-ad42-09e8c1de6c74",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "de199476-2747-474b-8557-50e297635a7c"
        },
        "item": {
          "id": "0e604b8d-0baa-42bc-bdcd-cfe99ea12202",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e783474f-2bb2-441b-b0cc-bf9e9fc784f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0ac53d-af88-4348-9592-257cd6255c93",
        "cursor": {
          "ref": "e71ad567-6cdf-4f95-a96b-22284b3dbda6",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "09edef8d-6006-4853-b275-45ea7be9a23c"
        },
        "item": {
          "id": "5c0ac53d-af88-4348-9592-257cd6255c93",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3dfe0353-a5e2-4ed8-ae12-85a47d472ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4f8322-3cc0-4900-9256-075a10c775ad",
        "cursor": {
          "ref": "9823a6b0-c10e-4c68-a153-7c5e29d90423",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "df68736f-dbb5-4cfc-9767-9430d05f3a7a"
        },
        "item": {
          "id": "1f4f8322-3cc0-4900-9256-075a10c775ad",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8a642fda-50b3-440c-af28-2f6c0c54f053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb20a9c-cb10-4caa-98bc-adbd78b65ecb",
        "cursor": {
          "ref": "8f8108ec-f79e-47f8-8569-6da639badfb6",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7ff75c91-bc9c-4082-9412-17c6e800a939"
        },
        "item": {
          "id": "2bb20a9c-cb10-4caa-98bc-adbd78b65ecb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d4c466b9-1c25-4add-a5cf-01e0fab48503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7a9aef-62d8-4de0-8166-dca112882da9",
        "cursor": {
          "ref": "c71f7213-2b1f-4ff0-b25d-75cf772ab0bd",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "01b7e42f-899e-411f-b6e0-90a09d6b6cd8"
        },
        "item": {
          "id": "1b7a9aef-62d8-4de0-8166-dca112882da9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f89f2654-59a4-4a2f-8545-99ac477230d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0632e61-b361-44ad-be3c-d965241c1fcf",
        "cursor": {
          "ref": "61d5beca-741c-4a3a-ae94-803b100c0f6e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b09ff3af-5c10-4c79-a0e1-d83b800891bc"
        },
        "item": {
          "id": "b0632e61-b361-44ad-be3c-d965241c1fcf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b13c8672-42c6-4930-9d4d-ff9a57c1239a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee26d01-dcd5-4895-855a-52ab88b843c8",
        "cursor": {
          "ref": "4806baac-2d91-4d9a-a19a-b235d358c9fa",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "16bb1402-cf82-492b-b00c-71903faa6f48"
        },
        "item": {
          "id": "1ee26d01-dcd5-4895-855a-52ab88b843c8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b32de36d-f501-4673-b973-14249c33a8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef13660f-e929-4487-b9f1-b69bdf91c36b",
        "cursor": {
          "ref": "1186afd5-564d-451b-8758-202264a9a4a0",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f1efa53a-0cf5-4ace-a3da-93ecc183a4e8"
        },
        "item": {
          "id": "ef13660f-e929-4487-b9f1-b69bdf91c36b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "326d7b91-4f59-49b3-8e7a-db8c31259f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdf67e1-7612-4908-86c1-f84cc3fcacd9",
        "cursor": {
          "ref": "756f8a90-9087-40b0-87da-d602b31d0370",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c7144efe-89f0-4f3d-b60a-ca03cb1b68ea"
        },
        "item": {
          "id": "1cdf67e1-7612-4908-86c1-f84cc3fcacd9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "61700c0d-4780-456b-a75b-e148a16b1e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505ff911-3712-4875-a70f-212fc30252b8",
        "cursor": {
          "ref": "4bffef0d-bb58-41bc-acfa-241434699c3a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7103dc4d-613c-4cd2-9d45-e037e03f24a4"
        },
        "item": {
          "id": "505ff911-3712-4875-a70f-212fc30252b8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "07f86b8c-b0fe-4bab-8963-acb8f4ec2def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541b8fb6-dc24-4110-b52a-94596e78ea7d",
        "cursor": {
          "ref": "529d9350-20c2-4ddd-9863-583f07132e63",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "552ad4da-217f-4f68-8988-9ff293a610de"
        },
        "item": {
          "id": "541b8fb6-dc24-4110-b52a-94596e78ea7d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "65f224da-58d6-42e1-be13-0a07a9918590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d013717-5b86-4c5c-a57e-11e6a3664d1e",
        "cursor": {
          "ref": "8f982f9b-ceb9-43c6-8137-7272cd33eceb",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fe293ef6-2e79-45ab-a129-f5df7a25da6a"
        },
        "item": {
          "id": "3d013717-5b86-4c5c-a57e-11e6a3664d1e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1e41d11f-50c6-454b-b8fb-a43956f2c284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0730c54a-aab8-44db-ac63-9940155e5e0a",
        "cursor": {
          "ref": "d638bdb4-a970-4730-8423-2c2d18cd1171",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a65e4916-f7b1-4511-ba83-c9f96b01fa22"
        },
        "item": {
          "id": "0730c54a-aab8-44db-ac63-9940155e5e0a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3f13b2d5-0c0c-41bf-976e-965699d6979b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7425ecf6-67da-4f06-9767-7383275b6064",
        "cursor": {
          "ref": "e025d732-1fd4-4cfa-9518-06d267f555b1",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "29e5be24-6e7c-4342-b714-6c155394cd5f"
        },
        "item": {
          "id": "7425ecf6-67da-4f06-9767-7383275b6064",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b63d13cb-c7b0-4fd7-b523-2e10478419c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023e2fb9-d7a0-497d-ab6a-bfb104fb7acd",
        "cursor": {
          "ref": "a4a357fc-322d-422e-be24-49f90b807a05",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "85a7fa0b-8db9-4724-bfb6-5f079b71ed54"
        },
        "item": {
          "id": "023e2fb9-d7a0-497d-ab6a-bfb104fb7acd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4df1d51c-a8f8-44c7-8838-f2b6c2eb4d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f06c384-fa83-4b7d-a36a-f9a3e23a85ff",
        "cursor": {
          "ref": "5d1f65ad-dd7f-486b-8cd6-9cf5a17bd195",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "26de7e58-935e-4583-b29c-4d307a7c730c"
        },
        "item": {
          "id": "2f06c384-fa83-4b7d-a36a-f9a3e23a85ff",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "91615376-a06c-4c2c-94fe-c45658fa53bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7e7fbf-c30a-49b4-af55-0a922da390e5",
        "cursor": {
          "ref": "aad76282-0c33-49d1-9051-25ad4f17b50b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0e26df39-ee0a-4d25-9d17-18300f8011c5"
        },
        "item": {
          "id": "4b7e7fbf-c30a-49b4-af55-0a922da390e5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "99878d54-5b72-4131-bb1c-d981a0033edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3093ab8c-7090-4c9c-8261-acac7de82492",
        "cursor": {
          "ref": "b37a0ff8-72bc-47d7-b67f-27507ff430c5",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1a272228-0a75-4919-8ca4-9fed12e5fbe5"
        },
        "item": {
          "id": "3093ab8c-7090-4c9c-8261-acac7de82492",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dd13286e-d020-41ac-b582-424f0d2022fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e53737-d92b-4aa1-959c-194407ba7bf4",
        "cursor": {
          "ref": "1ce8045f-84eb-4765-8ed1-bf7abc34895c",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5f6cda3f-9284-40c2-951b-29e09e2a4475"
        },
        "item": {
          "id": "a0e53737-d92b-4aa1-959c-194407ba7bf4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "aed7ccd4-a9d2-4760-bd96-b1570f0ab5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4587164f-4a4b-4ba6-9303-e548f5c46399",
        "cursor": {
          "ref": "0216466a-a695-46e9-8c39-2df69115d069",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "48dd984d-8a3b-443b-b828-6d5f092f0812"
        },
        "item": {
          "id": "4587164f-4a4b-4ba6-9303-e548f5c46399",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0e24ccc8-4430-4028-aeb6-831a2c6a240e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6bc135-16e9-406d-a7a1-e14442eae09d",
        "cursor": {
          "ref": "7284a2b1-acec-4381-bcc2-c259fb06c3e3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "45b39ad3-ad5e-4ca7-94a4-a7abcd5d1a02"
        },
        "item": {
          "id": "4d6bc135-16e9-406d-a7a1-e14442eae09d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c621f119-e7ab-4edf-8cc0-a3e4acceee24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e78de62-b386-4a54-a3c2-3089d1380195",
        "cursor": {
          "ref": "47cee7c1-6831-4cf0-a006-78bba99b3089",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d71922eb-215b-44c5-88dc-bd356aebff84"
        },
        "item": {
          "id": "3e78de62-b386-4a54-a3c2-3089d1380195",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d4fc399d-fff1-4c0c-a5fc-4c4dbd3838b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2394a75-da42-4012-9c29-78708cd96f98",
        "cursor": {
          "ref": "0b34f876-34cd-41e5-8a92-b665092f9d7c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fb1ac819-1b4d-448e-81a8-97c4166daca5"
        },
        "item": {
          "id": "b2394a75-da42-4012-9c29-78708cd96f98",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2263b4a0-546c-455d-9bb4-488744cb8f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26533f1-d3ec-4b28-a524-e71bb299a9bb",
        "cursor": {
          "ref": "4c26e5af-b6e6-4dcd-9ca8-0fecf6b026ac",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "46366787-c9f4-4275-a6f7-ccb2978a8d2c"
        },
        "item": {
          "id": "c26533f1-d3ec-4b28-a524-e71bb299a9bb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e95da33a-76aa-480e-9c0a-6012172605d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1913635-cc3b-4519-8118-a63a117874bd",
        "cursor": {
          "ref": "687c2439-417c-46d5-8b3f-bad4c9ebb610",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c717b3a9-9bb5-4b21-96e0-d582b0d59450"
        },
        "item": {
          "id": "f1913635-cc3b-4519-8118-a63a117874bd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f0c61004-6d68-42ff-9a04-bc2ce72e7dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2c80c1-2172-4dd6-8c29-6d877b97e22b",
        "cursor": {
          "ref": "9ae605ac-211e-4a4b-8ee3-2513a6ea9b3d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ccc8457a-b2c3-4729-8509-53cc53d63c24"
        },
        "item": {
          "id": "5c2c80c1-2172-4dd6-8c29-6d877b97e22b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c07e2298-972c-4c74-9bf8-a15706969dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47085534-3efd-4e2a-978a-761572f84bda",
        "cursor": {
          "ref": "7a74b002-7fe6-4268-b454-75b80d42f148",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4e54f65a-4688-4b0c-be3b-bc5ade5f4157"
        },
        "item": {
          "id": "47085534-3efd-4e2a-978a-761572f84bda",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "170e0eab-3b37-4de2-8f55-4e4a8703ac05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2f41cd-bbce-41cb-8f00-35f8f5070649",
        "cursor": {
          "ref": "3d77d0c9-a679-4b09-8f74-129273a72233",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f228997f-ea96-4c73-9d09-37cdceb546ee"
        },
        "item": {
          "id": "ea2f41cd-bbce-41cb-8f00-35f8f5070649",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b29b2560-cfc4-469d-8745-66e2847e42db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830a9dda-7b60-4419-abe2-39f03ab935a0",
        "cursor": {
          "ref": "f6f6cc10-5178-4f04-aca5-1fc2562eb261",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3c9f76ad-8d0d-4585-9179-e96e66cc84cf"
        },
        "item": {
          "id": "830a9dda-7b60-4419-abe2-39f03ab935a0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5989e9ee-c7a9-4d48-a2c6-49bb656efec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32fd7f6-e935-4f4a-8978-4b303c6ff756",
        "cursor": {
          "ref": "fd677a0b-baae-48da-9692-a24dacf17124",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2cca0f1e-68bf-4e0d-95c4-46e9228daa72"
        },
        "item": {
          "id": "f32fd7f6-e935-4f4a-8978-4b303c6ff756",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f4dec15a-c34d-457b-be8a-332a7330b36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42cee59-84e5-467e-b1e6-ac947a6d1690",
        "cursor": {
          "ref": "52519646-ce3b-4b45-bd3e-cfa8f044049e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c563f4f8-d9db-400d-a10a-a3fd6738ecaa"
        },
        "item": {
          "id": "f42cee59-84e5-467e-b1e6-ac947a6d1690",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "31c68761-2993-4583-aee3-5da60f8c1533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a533f119-0f8f-40e8-9709-9a2bde39e8f4",
        "cursor": {
          "ref": "c1c7e513-3ff8-4792-9345-94f43b6b9660",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1c5371b4-28be-4709-990a-74b762347222"
        },
        "item": {
          "id": "a533f119-0f8f-40e8-9709-9a2bde39e8f4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bc8e9784-9980-40bd-87f9-80ee95afc3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e6a50a-f9e4-4179-b9db-98632ce7654e",
        "cursor": {
          "ref": "b9d11e40-68e4-46ee-a4f4-0813067d55cf",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5934fdb0-40ba-4055-9dcd-7667ed549b76"
        },
        "item": {
          "id": "f2e6a50a-f9e4-4179-b9db-98632ce7654e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fc4f63c3-10fe-4626-915f-898100a8521f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefa68d9-b5f6-42a2-a646-97d9e8d46287",
        "cursor": {
          "ref": "a3008eb8-6862-4607-be88-4e6b6516476e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0bec9683-735f-405e-9298-45afbcafd043"
        },
        "item": {
          "id": "fefa68d9-b5f6-42a2-a646-97d9e8d46287",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "be2be299-8edf-4f2d-abaa-3e5f8e2f9d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3290cefe-c75c-4f08-b03d-6c5e1cd6064b",
        "cursor": {
          "ref": "4aaadc61-1214-4b24-bbe6-df830ccdb769",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "92f4bffd-b75b-4458-be9d-5551ca9549a4"
        },
        "item": {
          "id": "3290cefe-c75c-4f08-b03d-6c5e1cd6064b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "da1b3aea-158a-484c-81a8-017f323701bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b407cf-5170-4d19-bca3-ad1ba0aa4952",
        "cursor": {
          "ref": "756c35d6-e6ef-4b64-bfbe-e23080ec19b6",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e3914010-1a43-40e7-83d1-f134b840e832"
        },
        "item": {
          "id": "e6b407cf-5170-4d19-bca3-ad1ba0aa4952",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3a953e1a-b172-4fb9-9022-7c35c1e3fb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75867e4f-70c6-4eb6-8f1c-606e3f3463bc",
        "cursor": {
          "ref": "5da55d54-8e32-42aa-81d3-e1534b47f077",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3ad1d112-5b68-4bf9-96c2-53a6b3079695"
        },
        "item": {
          "id": "75867e4f-70c6-4eb6-8f1c-606e3f3463bc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "97ea02f3-29f3-496d-9d46-28cd898f288c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f9f6e3-384a-4725-b713-d5074f7b343a",
        "cursor": {
          "ref": "1e85b9cb-0f2e-4c25-90e3-e04e0d49f32f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "36ce64d8-033d-448a-9326-33e253245d5b"
        },
        "item": {
          "id": "06f9f6e3-384a-4725-b713-d5074f7b343a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "db9d129f-9c46-4534-9782-09e4d5e84cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8c70a2-e8d9-48e6-ab82-c109c57cf591",
        "cursor": {
          "ref": "7aa1dc3f-4f9e-4699-a640-d31571165779",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cbc457a5-9b7b-4bb4-9861-995e2e99648d"
        },
        "item": {
          "id": "cb8c70a2-e8d9-48e6-ab82-c109c57cf591",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "33f742ff-05db-42f2-a677-e0a43331c0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc84d5e2-2115-456c-b269-bb00aaf8cd54",
        "cursor": {
          "ref": "ba63853f-994d-4749-b825-31bd58078d42",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1b8d102c-32c4-4874-ad76-5f6a844ca10e"
        },
        "item": {
          "id": "fc84d5e2-2115-456c-b269-bb00aaf8cd54",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "97b405f1-9b72-4162-a036-6826655b00ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04aef65-769a-4172-bedd-a5b73434c672",
        "cursor": {
          "ref": "7d0f9a4a-281d-4727-8728-12433596262a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b1a1b95a-e012-4eb3-ac57-be2fe75c3c11"
        },
        "item": {
          "id": "d04aef65-769a-4172-bedd-a5b73434c672",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "be23940e-acfd-4295-b69c-6a3531d880fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3583cbd6-122a-4126-8fa5-c6ab7693bf78",
        "cursor": {
          "ref": "315c9bbe-56c5-45bf-8b8e-6354dd31f2b0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "09cae3dc-866f-498b-8752-c26b29f1813a"
        },
        "item": {
          "id": "3583cbd6-122a-4126-8fa5-c6ab7693bf78",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4298ab99-808b-474f-9852-5aa4c6acf35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dc6f72-3c67-4d67-887a-5872169c2301",
        "cursor": {
          "ref": "7a86820d-f1d3-47ab-b075-9382ed75ee7c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5a19ab92-a0d9-43ab-9b79-0e790772e18b"
        },
        "item": {
          "id": "d5dc6f72-3c67-4d67-887a-5872169c2301",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "027338d7-e050-4254-8010-ba8fd989f603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c130a502-0bb8-4394-a32b-3b6234f9413f",
        "cursor": {
          "ref": "329ce858-2962-43a1-825b-eee1a790a47d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f079d03f-32b6-4c92-824a-3d42d391a266"
        },
        "item": {
          "id": "c130a502-0bb8-4394-a32b-3b6234f9413f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "866ab7f9-03fa-43b6-b7ff-85e3f9411f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bd724d-aa51-414b-9041-4e842308c3ae",
        "cursor": {
          "ref": "88d1e293-36db-435e-9064-a435bc9b4a4c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3c3e6240-6e88-4f88-8d49-a364872c3ba4"
        },
        "item": {
          "id": "91bd724d-aa51-414b-9041-4e842308c3ae",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "86deefaf-ffbe-499e-949c-49966faddaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbb2d24-cd80-47f2-a89d-153b9ff8fcaf",
        "cursor": {
          "ref": "574c7564-64cd-4bfb-800e-59afcfbf7088",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "57c7d2d0-ea68-401c-b904-0e1cfd8892e5"
        },
        "item": {
          "id": "fdbb2d24-cd80-47f2-a89d-153b9ff8fcaf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e6450560-308a-4ea6-b22f-605e80c8fbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dd8097-45f3-4552-a04e-1f90361074cf",
        "cursor": {
          "ref": "e74e425b-a15e-4174-ad59-cf6970d54d9c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "711e6d65-b412-4115-99d3-4ce75985318e"
        },
        "item": {
          "id": "e9dd8097-45f3-4552-a04e-1f90361074cf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ac046cc8-a3da-441f-84fe-cb6bcd99e3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2af98aa-59b5-4396-8735-3c489263010b",
        "cursor": {
          "ref": "531c1a04-cf70-4c9c-88b7-4edecea9bd5a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "42780cef-fd98-4d5d-97b7-566ad6974165"
        },
        "item": {
          "id": "b2af98aa-59b5-4396-8735-3c489263010b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9c141200-ea9c-4948-8fcf-55b35e26ec4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee5ceea-29af-4f9a-8f5b-7ecf9cdc487f",
        "cursor": {
          "ref": "54f61723-552d-49a5-93e5-a79c89c9498c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dcd0d9dd-af73-4029-ab8d-3d2b55a3573e"
        },
        "item": {
          "id": "cee5ceea-29af-4f9a-8f5b-7ecf9cdc487f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cc37d065-0009-4d66-a6e9-300abe474e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14acb649-24d3-4bfa-884f-dc6890875f50",
        "cursor": {
          "ref": "a33bd947-fc21-40b3-ae2a-eb259ee6888f",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "16479383-08aa-492b-a0f5-e927d5e77646"
        },
        "item": {
          "id": "14acb649-24d3-4bfa-884f-dc6890875f50",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ae9ff457-5ff1-4885-84a4-a0a2bdc29af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106f89b6-d64a-4d3f-bad6-18894da41235",
        "cursor": {
          "ref": "fb6cf600-ea57-4257-871c-9bef850e9dc0",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "202b5c63-c208-4ece-8d85-33acc11ce60c"
        },
        "item": {
          "id": "106f89b6-d64a-4d3f-bad6-18894da41235",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9a872098-2b16-4ef0-a7f1-c909cf85ee2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444610ac-7ced-4591-a3e0-64892901084c",
        "cursor": {
          "ref": "cbcc5aad-f2e8-4c1f-ac27-ca439f188958",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "21b2fdef-d48a-4f09-9e8c-0e6d3cabb637"
        },
        "item": {
          "id": "444610ac-7ced-4591-a3e0-64892901084c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bcae9862-3fd3-438e-b9a8-e94fc7daa49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fabc0ad-b639-4e28-9116-3a5417be42c2",
        "cursor": {
          "ref": "61be9d8b-150e-4d0f-b326-d118aae52afb",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4563428e-8b50-407e-95f9-6db400831ae2"
        },
        "item": {
          "id": "5fabc0ad-b639-4e28-9116-3a5417be42c2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8de73179-7ea4-429c-b8b8-7cf7a4824200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b427b6f4-d57b-4a5a-8bf0-0d4a83402868",
        "cursor": {
          "ref": "3372a88d-619e-4e28-9bcf-2423abf9ce8c",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9f40fcd0-9aae-4635-873a-c1ada7450386"
        },
        "item": {
          "id": "b427b6f4-d57b-4a5a-8bf0-0d4a83402868",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d59c17be-6a6d-4244-a997-a5d3202a7c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ad70c9-72a2-4ba5-8592-5ba775a20cd4",
        "cursor": {
          "ref": "5c4de4b0-74a2-40c9-a886-b011d6a55737",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7378cc43-366e-405d-abfa-445db5679dac"
        },
        "item": {
          "id": "66ad70c9-72a2-4ba5-8592-5ba775a20cd4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7efa142f-8ab2-4c4c-89a7-7943687ec547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1e97e6-1060-429a-8414-7b3e66ecd49f",
        "cursor": {
          "ref": "2bbac90a-fa5f-441a-86a9-2d8f98ce4e83",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d9c42d0b-6b77-48b0-a60b-8bf77e53ad6a"
        },
        "item": {
          "id": "ba1e97e6-1060-429a-8414-7b3e66ecd49f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c2724946-9a74-46c5-bfdb-77efaa720dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e975e2-6e7a-4eff-912d-39c7689a3ec5",
        "cursor": {
          "ref": "13b338d7-35e9-424c-98e1-7c224eb580dc",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1750a822-5335-4b45-9a27-33e5bf6112aa"
        },
        "item": {
          "id": "46e975e2-6e7a-4eff-912d-39c7689a3ec5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a3bcddab-7f97-4ae8-b134-54110c9828a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343ea0e2-f353-45d8-b3bd-1806638e4078",
        "cursor": {
          "ref": "e01dc8cb-5c61-4932-a519-3b763486f473",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "68f17b08-e54a-4234-8a9b-a6471eed0a1a"
        },
        "item": {
          "id": "343ea0e2-f353-45d8-b3bd-1806638e4078",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7e016f10-e879-4654-9fb7-fcf52db3dbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff95af04-c79d-41e4-ab8d-08672214b284",
        "cursor": {
          "ref": "69576735-bd36-475b-b3b4-283a7d4048be",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "95aa381b-db3e-41b8-81bf-21de316faa04"
        },
        "item": {
          "id": "ff95af04-c79d-41e4-ab8d-08672214b284",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "24d7ce0a-d6cc-4b12-a9cd-0bfad8019f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b390ba-6074-4c2a-8223-2435b7c301b2",
        "cursor": {
          "ref": "ad86c899-610a-4440-99ac-1149aa2cac71",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f6098a31-35fe-47c9-9c7c-d5f18d3234a1"
        },
        "item": {
          "id": "33b390ba-6074-4c2a-8223-2435b7c301b2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4467aad7-51db-4127-9f79-d4ed92b1c42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8968647-48e8-46d9-bd27-5a134112a8fa",
        "cursor": {
          "ref": "de59c5f6-685c-4b83-b841-5d1dd43f2df5",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ea7e1f80-b291-4435-bd1b-58efa6faf691"
        },
        "item": {
          "id": "a8968647-48e8-46d9-bd27-5a134112a8fa",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "85b0c132-ed30-4bbb-9fad-5b712b8e6b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131d0e28-f740-4df4-9a13-f03bdb53f65d",
        "cursor": {
          "ref": "55e15b87-2e2e-4a33-913a-c418a5db90cf",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4dce8dea-c1a0-4121-af1a-433230ed89d1"
        },
        "item": {
          "id": "131d0e28-f740-4df4-9a13-f03bdb53f65d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ae565880-3534-4ba9-bf4f-81ab9a544644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69979f4-1851-44a0-bd05-ef0e8ee33128",
        "cursor": {
          "ref": "9178bc24-9336-49bf-9c87-76b700217535",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "30f4a330-00af-40f4-a84e-fc87e1b28997"
        },
        "item": {
          "id": "f69979f4-1851-44a0-bd05-ef0e8ee33128",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cbdb33df-315c-4e9b-8129-79a9dbe92885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d20631-7666-49ed-91d1-53e9a00a953a",
        "cursor": {
          "ref": "a116c629-a4a2-4b6e-b763-881924388dd5",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3b5a57ee-7cf8-46e8-85bf-f52304bf8197"
        },
        "item": {
          "id": "39d20631-7666-49ed-91d1-53e9a00a953a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "45d07e6b-c2f8-4e7a-bdd3-a1956496a019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d412e1d-9682-4660-bfbf-665e97a5a471",
        "cursor": {
          "ref": "f8f2be1b-4456-4a25-acdb-523c17338be6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8dbaee08-d4d1-44f8-aa61-3dd8c314228d"
        },
        "item": {
          "id": "4d412e1d-9682-4660-bfbf-665e97a5a471",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1cf97ebe-7a96-422c-9186-8fae4c3ce1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141a94da-6eec-4f88-a44d-8c90cc7ea33c",
        "cursor": {
          "ref": "cae16ab4-c4cb-4f7d-bfc3-3a081c5aa487",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e5a1bf55-c45d-47cd-9ae3-1ef4342745fd"
        },
        "item": {
          "id": "141a94da-6eec-4f88-a44d-8c90cc7ea33c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cb3a6d89-935e-45dd-acf2-342af14e33f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c5dc52-68ef-417b-9254-075870c83901",
        "cursor": {
          "ref": "f9248e86-1875-4e48-884e-d548161e384d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8d468ad5-7aba-45fe-b7a9-86e4cf33a94d"
        },
        "item": {
          "id": "30c5dc52-68ef-417b-9254-075870c83901",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7f242251-fb84-4366-bb96-79d55cdab134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b06eb77-a7fd-4418-bb77-316795f86c5e",
        "cursor": {
          "ref": "9e691dcf-3ced-46fd-801a-bd7b8cb43ff6",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a6dcf460-e6db-4071-a728-81155dde3f93"
        },
        "item": {
          "id": "2b06eb77-a7fd-4418-bb77-316795f86c5e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a7acf2b1-0031-486e-bece-d28e6c714a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5513cd-730a-4f0b-85f0-26b95620d189",
        "cursor": {
          "ref": "e8364292-2337-461c-b6b0-1598ddf1ff31",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ab65b0cb-0f45-4639-9953-d19362fd0156"
        },
        "item": {
          "id": "5b5513cd-730a-4f0b-85f0-26b95620d189",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b8773d4d-726a-4daf-b137-a9cdcb5d1336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929f9291-0a76-4814-8ece-caebe541a579",
        "cursor": {
          "ref": "9bf5059e-45cf-479d-ba47-1b6c3b79c186",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e5defefa-48fd-41db-91ca-51db4e8e8add"
        },
        "item": {
          "id": "929f9291-0a76-4814-8ece-caebe541a579",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f09e4d91-4316-4084-b56c-0fa3dfe17cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6daa06-d848-441d-8045-78cd7e86045b",
        "cursor": {
          "ref": "21ad0e2f-5f78-4810-be1c-88ba60409141",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c035e351-3f95-4dac-818b-d6cf8a64d688"
        },
        "item": {
          "id": "7b6daa06-d848-441d-8045-78cd7e86045b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e4a87a15-33c3-4da2-8570-1781d435f32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5ceba7-cfeb-4244-94d7-1b5049188504",
        "cursor": {
          "ref": "53fda27e-23c4-4f65-95d6-00ea2b1a1a28",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8d92bae4-a850-4837-bebd-d5b1e051cf4a"
        },
        "item": {
          "id": "bc5ceba7-cfeb-4244-94d7-1b5049188504",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "11eedb90-f9d1-41d0-b9c8-345726f5beeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6128ca6-5ae7-4dc4-8524-ddb7e82b3737",
        "cursor": {
          "ref": "df1d1f45-d713-47a5-b4fa-cfdffc319a60",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e456be14-f95e-41ce-bf24-ba351d6b01d8"
        },
        "item": {
          "id": "b6128ca6-5ae7-4dc4-8524-ddb7e82b3737",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "46447be2-3ed2-4aad-890b-67fb68a5d02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f2d574-fbd5-4740-9cd1-f3e461c3999c",
        "cursor": {
          "ref": "29d8f65a-3db5-446c-a8eb-381aaf6e4e38",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5e51ebd5-2fb4-451e-86b3-2368132ed2eb"
        },
        "item": {
          "id": "a0f2d574-fbd5-4740-9cd1-f3e461c3999c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "23db31eb-4d5a-436f-b169-b2bb62d4e64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2eb7e57-0226-4eee-8570-f929cde73140",
        "cursor": {
          "ref": "51516e0d-570e-43c0-a967-28b405fdfd35",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "25a95772-d3b1-4d5c-a3b2-c1a6f351af73"
        },
        "item": {
          "id": "a2eb7e57-0226-4eee-8570-f929cde73140",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "be2045df-95f7-426b-a7ca-92434ad35ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a41324c-1c33-4f07-a57e-1384b384410d",
        "cursor": {
          "ref": "0a90de13-3397-42fb-a900-d7a573dfd24c",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0649f7dd-9f01-4e37-9dbb-ecb6cd98f54a"
        },
        "item": {
          "id": "5a41324c-1c33-4f07-a57e-1384b384410d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "43f68b88-b719-45b8-9321-1ac5de7b1ad2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391edae7-e1de-4b78-9804-d2540d13543b",
        "cursor": {
          "ref": "513f2605-e4f4-4512-8f94-3507c3455f1f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d0c4c13d-0e72-43d9-813b-52a1d0b52592"
        },
        "item": {
          "id": "391edae7-e1de-4b78-9804-d2540d13543b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8d1005e2-233b-4eb1-8ec5-87d3bf205a09",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e900338-9c17-436e-9093-b37e8610ccdc",
        "cursor": {
          "ref": "dd152d04-486b-4d0e-a3f1-4dec01413e9b",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "76562f90-eaa6-45b3-ae3f-af32a4989976"
        },
        "item": {
          "id": "5e900338-9c17-436e-9093-b37e8610ccdc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d61eae1e-99e6-4cfe-9f31-a59ea04d96a6",
          "status": "OK",
          "code": 200,
          "responseTime": 4056,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e15f06-d5fd-4c5b-b600-ac0a2c4d4cb5",
        "cursor": {
          "ref": "15eaad2a-2954-4ae1-8e13-e097c21cd285",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1493db3c-2360-42d6-8760-d2ed5447f0d8"
        },
        "item": {
          "id": "d2e15f06-d5fd-4c5b-b600-ac0a2c4d4cb5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e74a3471-9937-4a28-a457-4c7c24df901f",
          "status": "OK",
          "code": 200,
          "responseTime": 2767,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf6a377-852c-4fc8-9ac2-ead42e46a89a",
        "cursor": {
          "ref": "2bf82879-dff6-47c9-8dc4-2284961e7831",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cf364c57-45b4-43db-b3e0-cf4e557fff3a"
        },
        "item": {
          "id": "cdf6a377-852c-4fc8-9ac2-ead42e46a89a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "528f820e-e60c-4071-8999-b3c446857eb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf6a377-852c-4fc8-9ac2-ead42e46a89a",
        "cursor": {
          "ref": "2bf82879-dff6-47c9-8dc4-2284961e7831",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cf364c57-45b4-43db-b3e0-cf4e557fff3a"
        },
        "item": {
          "id": "cdf6a377-852c-4fc8-9ac2-ead42e46a89a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "528f820e-e60c-4071-8999-b3c446857eb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fa71b5-9a8b-44bc-9df3-b69bfc558aee",
        "cursor": {
          "ref": "c1bd383c-2381-43b2-be47-b9f3d4509eab",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9ac7d3ab-2225-4f8e-8acb-72979dfb7dd5"
        },
        "item": {
          "id": "57fa71b5-9a8b-44bc-9df3-b69bfc558aee",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6eea9ec1-7d45-428b-8d37-bf11c7dc629e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24e95eb-bc59-467d-96e2-63088571069b",
        "cursor": {
          "ref": "f997fa38-81d8-4d15-94c8-2930e9920aeb",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "f79a2d29-71bc-436a-b29e-fe9b1e02526d"
        },
        "item": {
          "id": "a24e95eb-bc59-467d-96e2-63088571069b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "622960e4-c561-43ac-a892-4b9a6801b500",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}