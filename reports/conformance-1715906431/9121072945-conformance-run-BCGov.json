{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6c7ba3ea-8c50-4916-bc93-ae19b2287cb6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8c0e2e89-cd67-4265-9ecb-3477e3bf03ad",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99fb37ed-a6be-4792-870e-84b64b0f7b68",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "84fad439-62b9-4c52-84b4-f21f56462cad"
                }
              }
            ]
          },
          {
            "id": "e146f277-d274-44a3-b2b5-e220042b9b1b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7c60469-7a41-49d1-9b98-c3198f490a0f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a14b1548-9212-4cc1-8af3-6056ab771054"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2508c538-984c-4a72-98bb-db05db6cbf52",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "811fed42-f931-47a2-bc16-b53a0ce8f81a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "97312023-26db-470d-9693-51d27092b8cf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ec4585e-9fb0-4912-9355-9ce555347d5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d27a229f-c394-448e-96f8-1a5058b69b4c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed3a3a4b-81e8-4690-a52d-6179d168c9e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84fbce36-503d-46fb-9dbc-e713124a1538"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a16588e0-c5e9-4c49-8e61-58a7e5260ce3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28ee11e5-dc8c-4440-ba79-6486ae0e302c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98a00ea6-0932-4284-9514-0c9fb97d4899",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "037c9200-b4f6-4b25-9f59-ba243af977fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c8139d5-456d-4d91-a001-f443ce73ec08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87839131-d67a-485e-b306-e897aa592b7a"
            }
          }
        ]
      },
      {
        "id": "55d9fde8-3d7d-4f76-8b2f-83c685543acb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "74045daf-a40e-47a0-afaa-eec725296ba4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1cb2f0ec-8be9-489c-9777-8e3cb39b3261",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8aa0ce3-157f-489b-ada8-8f788663e26d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aca7fbf-83b5-4e39-8516-1f2dc2e73aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "173e3182-5279-463c-ba0c-df0d2b79874e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a34cda-7239-4300-8dcf-a09a4a36f78d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f1f82b-4e0d-466a-8e4e-23699c82baa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3245adc-0c1f-4372-a7ba-1024f4a76c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af58dcb9-1ee4-4024-8da3-fb66a9f0f6d8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692041f5-4ef0-4497-b462-708ab8526940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7d792ad-6079-4806-93d2-bbf016843464"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42a4646a-f05a-4a75-9a5a-4698331e590d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a795a88d-502b-44bf-b7d1-f4394edd2962",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d76395-bacd-40df-a57b-f9e7ef49d1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64013c30-ec3b-43a7-8318-ba17778c05a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e26cbc-4353-48b2-82e2-0b23a64e600c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99f2a37-80ff-4477-8cae-da0842f8227f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4b481bf3-142c-46ef-914b-759b17f10387",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5db82e6a-f1fb-4bad-9240-53cd9c1c19b8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11cd807c-e34c-4af6-9b1f-4bf65b25c336",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fb2eb3f2-a027-4981-b442-29f51dda6d7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55f47dbd-0338-46c8-b103-16410b98b181",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "adbd6246-362d-48ea-ab46-650099f49cf1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40d89381-2802-4629-bb8d-73344e40b010",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff67a6aa-4762-4671-b8be-4b84eb640874"
            }
          }
        ]
      },
      {
        "id": "b1bac0a8-e129-4d4d-8f0a-cf6a95a40174",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d1bbd9e6-ac90-486d-bc63-7b6320416faf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08170be7-2c3b-46e4-b682-38fa54e74e0d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a5283f22-f8df-4a07-bbcd-8bdec5a1c4db",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d5fa8a-fcc3-4e08-b2a0-cbbc47f22001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9659be-2df9-4db2-bb30-91881a988293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dc4ada-7f0d-451c-b021-d40a28da64d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acdf5c7f-1132-469a-bd99-133ccea4e7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ed5ce8-09dd-4002-9955-c99dc6e70120",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40f2bdf-d576-440d-9dc1-dfccc8dc95e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e24cb5-74af-4eea-8917-7ac3a6784624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8196b64-580b-4b71-9857-540832aee0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05133251-690a-4224-92c4-ec5cfb1a7f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2b1f5e-4970-473a-a80d-948c6d805b11",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107dd0c8-8555-449f-87a5-7c709710d284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ebe84b-e10e-4dc4-83a7-ddd47eca6c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f287d63c-f908-4546-8fa4-ebb4afd75463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71c183d6-2983-4380-9659-eaf283ce7fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e12b613-95f6-4d76-98b1-1fbcb7c630d3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7aa3430-a835-40b2-9606-022442158f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a9d1e0-7641-4486-bed4-e9078b49ce68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757e58f4-d070-4f2d-a563-b7dd7b5abe49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0c91d62-6ed5-49e2-9a2e-cd4b21b848a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912e9cf3-202c-4fb4-a756-877e08c06816",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ec8d53-c1af-4be3-a712-b87c7054e0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc171e4-9103-4e4b-8491-ab4694789307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4dad90-2327-4ecf-817b-22f30bde8d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0f2b4d4-9e2a-4222-8e1d-c1d686023031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df609a6-a5ff-4088-8784-8d13ccad4970",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e7c238-d958-4b25-a75e-3afca2b4b87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7653d3-964a-425d-894d-db547e0eefa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0843591d-7e65-4919-8837-d315312cb08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f749e56c-89fa-48d1-a17e-650f5ef189f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89c03e8-8721-45ab-b685-c9574b0579e1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050ff5f6-ac0b-403a-9f27-0af399a43259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43c4e40-5ba2-4178-bc00-af8e9bf03acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b79307f-ad9e-40c6-bf1b-3bbbe8db11c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ec96715-4e86-427a-99bd-40d75a43eae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8c903f-e61a-4c16-b862-a1b615668f1c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce476894-919f-4d0b-8c2c-65532402c4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3474477-dc18-4db9-8067-f2e07d8d3805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fce976-d34a-4f37-8b15-0353c74682a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a30690db-45db-428c-95d4-c3012771132c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a267f837-0ec3-4ea0-801f-be3e8d16508d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a00d98d-70a3-407a-bce7-4ed72374dbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa1a185-b87b-47f2-8539-24310270a15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec9dde5-4ca7-4140-9d38-a5f9cb3f0674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "021d9694-92fc-436b-9840-6b9face760c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbe5a3d-fe63-4d7e-84e4-c8aee97bac35",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13750b7-956b-45ce-921e-1bb16bea7ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a442cf7-1ad7-45a5-a3a1-1f4bfeed83b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12e1a04-6fd8-4b9e-8071-e39e6c381b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca2700bd-258d-4b42-ab16-fabe99513f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177969eb-8826-4242-ac95-80de856c8085",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a8556c-d201-4f3a-9bd1-758341e7ca5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d9ad12-7090-4182-bd2d-5c7615fd35f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be00c293-53e4-42ea-9387-337d25570168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e68e70b6-7a94-48d4-b74f-e1e58159b710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c324cca-f6f0-442d-99bd-ec84c1a1ec32",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fbccf1-84ee-4373-915f-2e52f2b76398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4dac28-aced-44fc-8a7e-f6f2eb480176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82838ab3-5805-47c2-a3cf-2f6737bcd43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d84eeda-60b5-4b87-acd3-6f9c7265155f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85e0e54-65b9-49c4-b658-5e2bf2b48e77",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c277320-6203-48d6-8e4d-f23a5fcf1c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77798242-14a7-4a88-b769-5a3a0a9c44f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156513ad-3040-4391-b3a0-11b8469fe117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c30eef3-4789-476d-9b91-c26963e4710b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3d88ee-89db-4ae7-b60f-949f3f814fec",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ceda32-78fd-456d-ab4d-98f24c21ae2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79305b99-8db4-4306-9f82-a236ebd61de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d67968b-ec7f-46df-bf13-ba22b55b1abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0adb9051-067d-4a89-94ed-63109f52ae61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013ac5b6-d831-4a37-9628-29df416f0cad",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5764da83-25ef-486a-9dad-1e125a7966a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b322bd32-eac4-4a9e-acf2-c95d196e8029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7677164-3461-4a07-b9d3-588e3e930a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4039599-9081-4478-adcd-f8abe16aa932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5617452c-73ca-436a-8a3b-eb7c5be23692",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6a7f0e-b802-48e3-8aeb-35d7bcc428ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f192e6-bf81-4354-a76e-7955bc6c4de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89e6a32-adca-40bc-a927-4fda227bef4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "743252df-6b60-4ee9-82b0-6589f34d40b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b605036b-7edd-45b7-a1a9-d9375a6dffae",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba7de12-11b2-4dd6-a1bf-9335fe4703bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ea5de8-04be-4ab2-8e38-cc8ac687c944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f6afbd-7b93-45c1-b936-0c48b0fb8958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a50aa075-889f-4cd7-ae78-14038d742b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7e6453-abb3-42e5-b0ef-7f13e60c9bc0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7015b4ce-3b1d-462f-b1b4-2f4c6825c1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1b89cb-766f-46b6-b96b-3b8be280ed7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829a0efb-c135-42d3-bf51-2289b96dc3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5fbbde-c4cc-4757-9531-05ae5d16a253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6505437b-c0f9-4764-9e18-006e94ea6ba1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c255a3af-08b0-4f28-9e92-73bba0d5dcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0baf58d3-fc84-4e37-a232-5b4eff3be87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68dd858-e45f-46ca-bc3f-dd27c6074a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "604193ae-e5a6-4e84-93ff-cf784de38fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46065db4-31c2-4222-882e-c1599cf3bce7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7dc036-6f08-4b47-913e-14a4fa82f78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57415c67-d8d4-4bf5-a4bc-1a94ad156a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce94f27f-ab43-4999-bccb-228302483f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b45d5eef-0de8-48ba-9d7c-f87a97d9d797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a201d318-cdb7-4116-bf44-517260566b6e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d177b78-5b3e-4c79-a02b-ce0a6f205a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be87ff4-dbd8-42a9-94dd-663689d130fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0eab5d-de73-497e-a830-2bf3d2f99ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eadfd36-5d3a-4dd1-8904-99911fe2d17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59db6f1-379a-46db-b25a-5d18c275d821",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7a966e-cdf0-4ad3-8afd-94fa9736804d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d79a9b3-1b84-4c6a-b863-a1709a6b102a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb5892b-a3c0-429c-ae7d-9c8f50759794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1000f8-c9f7-4270-bee4-41823f808269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcce07d-0aef-4125-8231-0bd54e5ea35f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d90efc-91f5-45f3-82d0-bdac6fb70327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64702371-716a-47ff-91a7-4a6cf09314a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce45d40a-496a-45c6-a278-bfab5e8428de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "820997c8-18b1-4e0e-958f-038ac01a0096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e9caf4-c48b-4563-aa87-28ac8b6c3954",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fac95c-f593-497e-bc58-fd535517fae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd268f81-1304-4b9c-b8ea-5d86f4b65422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953d4990-92a4-42f5-9345-888d1d3e50bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcddfd61-181b-4fa3-a0c2-efeffe471f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb16bede-40be-43a9-848c-ab3262851e33",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a508782-f9f8-452c-b079-73d93656bd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25828143-ae75-4b99-a9db-f807c690e58a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca25eab-d744-41ca-a8cb-46a55c7486ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ed4f4b-4af3-4475-869e-e160fb535c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838efa12-d14a-4dce-ab28-1b33b0f51717",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf73dd3e-aab5-4891-8073-7bdcfd6335ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f3117f-e885-4134-9e84-4e82f3b10226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273c08dc-28b7-4a79-acc9-175547159890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "557c35b1-d0d9-41e4-9234-1d5236b7685e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fb9a11-9cd3-4d29-aacb-2842991955fb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2f65b6-89a0-434b-9607-c0f7032e4cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c20256d-ff32-458f-9e9e-0147e09e29c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a577cdc-74cd-425c-8b4d-5934bfd3de8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "147f3c87-d8ee-4f82-b51e-8e09896fbeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf0a6a4-c988-4836-9ef3-ebb0f70e6aff",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47ff37f-7783-444e-a5e1-73bda5bf3301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f74a65-98da-4882-a4d0-55d238f8ce7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abeb9800-d499-4f48-aafe-a4fe2026a475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b22b5176-656f-4402-86a5-81d9ba3abd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc29368a-2b19-495f-bfc7-fdffcd6eec25",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50268d45-4084-4e40-8b9a-44bad4738458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce70db7-223b-438e-8d2d-aaca7f67aee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af71f22-421e-417b-884e-b40a5b4d1a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18723cf6-c01b-4c5b-95ba-dbd291452374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b884ad04-736f-4ef7-863f-71f0d9096c76",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9fb940-9c9b-49e1-a181-e41dd72da853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a564bc-736f-4bde-9aca-26ab0aedd4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4b0715-089f-4b6a-8e7c-c07e648bb03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5c411e-27a5-43d0-9ed9-15ac6d0c4b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5534444-e979-4e89-858d-88bba17a0e53",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cf6643-33bd-4016-b2a2-0680c185d58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bbbda2-36e5-4555-bd50-27512a357822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7f427e-fc22-497c-883d-9fe368e56dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "181275ae-4b75-462f-b273-8249a0b0bc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc161c3b-130b-4146-8a2a-210109d0d1d1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8502ce35-aa00-45b0-9d54-267bfd7380a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89511e2e-a8af-48e7-8fdc-489cc1435f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0225144b-2416-4d6f-98b0-8ca3f8c1d0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "549a4c3a-b894-47af-93aa-b46dbb2770e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd03abf7-28c4-4e44-95bf-81037a4dd9d4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a91a274-c90d-4531-9609-233e23f80b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e342bf8e-ebc9-4eec-9653-4e22ef90a03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ba55e8-a547-489a-af36-4d0079221d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89e5eea0-c4af-4f35-84a2-b91ef66ca843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073b917f-ff3a-4ed8-8d79-408ec93d2fb5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb43ef0c-26fd-4111-a0ae-86eba6de1119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7813db0-537e-4054-8acd-806816e39ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1490317e-e3a4-4133-ae2e-d57f648c06a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "949d06fd-c6b0-4f8b-8d24-dc157753479e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465ab73c-1103-4661-a702-9a4e0f155163",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bc9aa4-3e9e-4a9f-80ec-e2e0a1112730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5fd1c4b-3de0-42ea-98df-d38e3ddf7a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e984949b-f773-4780-94f8-80296730fe98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "16d87ce2-1b47-4b1f-8a38-5a72d6223653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791cf553-f65a-4186-b060-5aeca65cdda6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d4ae5b-fbaf-4325-9fc5-e0c2de5f4b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d01abfe0-1ea8-4fb5-b085-d098cd37223c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca34d8f-18af-4307-a620-ceebe9f646bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c361ed7a-38a9-4db6-8f4a-cbc472e010fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8389fc5e-ed10-439d-89f5-7049a956e086",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f976e0-b9da-4362-9443-b88c35ed3973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61829489-b3b2-4635-b0a2-c982d84cd073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b26b1a8-b657-4556-ab7c-9de876f660b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c963521-90ea-4659-befb-94ce4b04b6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ad67e6-2d27-42dc-9916-7611af59d3c9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861a9c48-bafb-421d-b8c5-7877b5dd81cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c463b76-7119-4a6e-a7d6-e48dda93199f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4797be0-34f0-41a2-bf36-688769a72d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3314eb82-feb1-4efc-9fdd-1bcf4559840a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0610d157-dd85-45ce-9cc2-a93f63a1fcc5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017e29db-3755-46c0-981d-09ddc0f7b68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a497ed82-0abf-4bce-9513-1ab249547a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9303a19e-5c78-4858-ba00-a677e7261cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "adaae885-f004-4c60-b513-af2aff778aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e726ad-d9f3-42bb-98ad-d727f19baf31",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eac2e0f-fc5e-4d58-893e-5c5af4b4ca31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b033174c-2b63-4015-ab1b-3f6057cf5d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da4709b-56f8-4ec6-9bfb-b5a1db50ec68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ef0c39-39ad-4d15-ab83-29c8beb74ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5924813f-29b9-4fcc-b250-2f5195064553",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23e2b31-a815-493d-8337-46da3304214f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf34b856-e59a-435b-bb4f-1982bb28c56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a544c265-1c23-4c99-bfd2-3ce2a5cc11e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9275dac8-75b9-4d1f-8bec-5d0003efd129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85419f29-5912-4b39-bc62-453fd0b46e05",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5693ef0-9d71-4ffd-845f-39b2f5561911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bb11ea-ad16-4035-b582-17cf752f0e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d557525-decb-4b6b-92ff-8292f1ad0ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b6972f-1a8a-44ec-9d22-65751fa531ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dc1de1-9613-4def-8134-3bfb2aa50b34",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60456ca-f79a-4583-be8d-8bcb5b6d8ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70141f00-b951-49dd-a01c-05fd36bd7173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5d42b8-bcd9-46c5-951e-f88a538106ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "aad07fe2-f7e3-4799-9b22-2246af359f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec71c64f-8fac-4d67-8d53-be74acc107d7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbeea412-d687-4930-ae87-c4a874f74e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d46a089-12fe-4484-aa87-34a4cfb68189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc354bca-5524-4841-81c6-41bfecead83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "58446069-e731-4c7a-adab-583bca3a985f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5664e6-539b-49c2-999b-2bdb030d24d8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36b16b1-9530-490f-990d-3f412b0edd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d3b860-3efe-4981-972c-7a5cfe483d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cd4b4b-9ded-4884-b0ea-7f15ea7d20d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2fe565-d849-4900-960d-8fb29f01b9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80605b54-ba80-43ed-9a2e-8f374c35cc82",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56888d89-f04a-4476-b349-e545ea723bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af83965f-a0a0-4775-8f65-63e1805b7552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36ee4d5-30d5-4ae0-8101-024143dd497a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd113d8-7957-44fe-83f4-a783fa431a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9893ba8-13fe-4e8a-99c8-52a6c80cc87e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cf1763-123d-4e4b-92d4-1d974e669be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef002b61-a42b-4ebb-bac6-059f60a1b14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa0bd01-c512-4a94-ae00-34dea7a73ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fff34b89-345f-4685-a76c-b54d858ea09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6326a4-0bd0-4efb-a538-da4e38dd510d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4ad2cb-2019-4cd1-9ba2-bd760f9962e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a8b89a-b020-4823-afb1-2b33c390ddd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b2a6d8-4273-4578-b031-f952ec487b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e91224-e0ef-4a34-b60d-6ca691c46f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4330e83f-9c2e-4b3f-acac-182e8e2d2b78",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d616fb7-3924-4f02-a599-ae1a08221c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0baa4703-5039-4e37-9f2a-116d26d23e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9dc805-7131-4bbf-a57e-c5c38eab70df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9352ab9-30a3-4213-88ef-cc5a6cec822f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10785b2d-56b2-4f90-ba57-bb087070e4ee",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c98921f-f50a-40ce-bd8d-984fad80b6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4993b8f-c5c5-4a8e-90fe-55d045e44d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effc205f-e33d-4f25-b46c-a8ac3fd216d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3e1ba5-fc08-405f-926f-cbca34ef6e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5607107-650b-4626-93b9-9902fd3d59f7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d885f3-b23d-4c76-8c3e-8e5b54b1aecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66aee9cb-ec71-4f01-8612-31dccc2161fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6b9198-d0c8-4e42-af69-95401b9cada9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "87754a44-e721-4349-9e03-0e806cb1ce47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1af7031-27b3-4ad6-be1f-89e85b5e616b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e123f2a-be43-406d-9b00-7d82b9adee47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb2a203-ea12-4184-81d6-8114451bcd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fe1867-5865-4660-bc16-8af441088287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a11edc2-0a28-4d2b-8ddf-912cd8306095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d3c375-ee6e-4fa2-975e-3c92e25e08e1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79eb04fc-8b77-466b-82ac-ecdddc7c16d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b8b17b-5190-492f-9984-d42ef94c0f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f23a91d-9956-4298-ae34-a52d5720a327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e73c08a-e758-4c67-ada1-cfa59a2233cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083f441a-b95a-4a7c-a8de-f09021515ee1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45232a0d-2a92-4a31-8ace-1524dd894028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c4617a-31d1-46a5-b2d3-c72af16dece1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5049d824-e970-401d-adc2-d0f092bf037d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d340b133-1932-4534-95b9-dd1236a29efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25705276-8a0f-46b2-9120-81d0bec9ecaa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf52816-63a1-4770-9229-37f9d18d54c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a73607-2895-4a7b-8221-ff04bbb61426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395950ed-31de-485a-ac2b-27064894aa04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b931dda5-ec53-4aa1-bacc-e45b0b77bdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7f3d16-1eea-4c9a-ab06-6a316f9df929",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcbbe3a-1380-4005-93f0-cbdb59be8453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c003995-bab1-4519-99e0-647189017df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56359e56-f1bd-457f-b69e-dfad94176924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "59fae9b0-9a86-48c9-9664-6b1249089d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92adcc04-de55-4f20-8ce8-cd37a31af89d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4119c44-c07b-4494-8641-c788e3371cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387d5c5b-8506-4126-9ec5-21a933374161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672210c3-9a40-4abd-921e-5515ec903c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7172e3f5-f1f5-44d3-be29-202900fda1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7381f27f-ce97-47bf-ba72-f5bdb2b8605f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d11e5c-9063-4275-9919-e7497d8ed479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3919d7ba-e64c-4153-a150-ecd0d5ee72bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd71384-d85b-44d3-85c5-b7a126db718f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3b9d43-c23b-4f33-92c3-132d9bd31a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb7a425-1166-4630-8c2d-6c9dc47ead7c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4572f488-3ff9-463e-91a3-4d482b7764cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e8a756-621c-47fe-be21-3b58400af708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf1ad08-27cd-4144-9ff0-835b3e48b6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1558292b-a580-4482-a14f-8569341ca1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d896ebf1-e5b0-4aa4-81ba-1d9960a62e5e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a82d0a-518b-4a75-85f3-2ef7139a3642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59169be-64da-4434-b85e-98802e143a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd9144e-6070-422d-8ff5-6b810a603c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb2d7af-9f8a-43f8-9ddf-e9cda5de565f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41aff4ae-1a5b-480e-b28c-e5660d583412",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148cc6a9-c34e-4b13-ba2f-ff9d1e0adbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d73cab0-fea8-4144-a9ca-e376c705fabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f637b3b0-4b14-4ac7-897d-2fcf611b7a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc93d726-7f6a-49bb-8213-3fed7f70cb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8410d48b-6040-466d-8904-ec51b2481a31",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab054f81-cf9e-436c-af38-6cc5b90da892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b0d2be-fe65-4395-959f-397213c649ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24dc0ba-1e23-45bd-8204-f83f242e4eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d134d0c8-f38e-4741-9032-5cecacc533ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dfe2ac-eaed-482d-b407-9bf1ee28e5ef",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20c7d38-6e6f-478e-8390-ff40aee8abf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca380780-e0f2-4cd6-a0d6-cde3cf625819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc3d226-a1e5-43c3-bfe7-c6af1aca50a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f35ffa-2cc8-4b1a-b9fb-1e118b8e681e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aab6667-503d-4474-b10b-e2259f9da564",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae06168-052d-465a-a35f-8a8ef7152ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be0eb3b-5a69-4e14-8646-83658654a399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c9cc26-6bac-4510-a8b2-ac3024b79948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f784e5dc-c3da-4762-8590-30043de9002f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453c5595-a837-401f-ab88-cd89ca8181ba",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd7531a-e8c5-4372-9d3e-5fd19768ed9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81c857c-1b82-4beb-a73b-9f81b784a565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d39882f-8832-4f57-9568-91ccedbcb9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8a4145-47ef-46d0-8722-ac2b8b5180ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67ad263-31e5-495c-9fa3-316b2ab3c3a2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f6b1a9-6aa1-4d0c-b53a-2f6d82143d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0b61cf-353e-4c4c-8c38-d4e4e65f4241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5652c41-c18a-401f-a501-5abf14dc7817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3235bc-2146-471f-b55b-3bb6f492baa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211c5d09-3c09-481e-99cf-c83d7d324c32",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87f4c3b-5309-4e65-a657-03288471d43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de84a47-426d-49ee-8b61-4b37b117d1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d446d6-2524-4e74-96e0-f37fec7b6368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd9f2a6-868e-475a-85a2-e119756af92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfeb89e-08a1-47ea-9a12-65a0cfc4df74",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196d3655-6d7c-4da7-84f0-5ca631ad40a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62867c44-f989-408f-93a1-7c06c039e273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01660c5e-7dae-4c47-83b6-d6890bb25517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed3c1cc-5ad4-491a-8c57-c426d613cc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709cba99-0bdd-411f-acfe-e6c7f0bb8f7f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796057d8-671a-4010-9328-61770f6c32db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d3532c-efdd-45d2-af8c-ebe6c0457883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22658b4-6b80-4c25-a1e8-e2b1178e3bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "64980e22-3e15-4cc3-863d-3874a3ec0d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb901bc-741d-471c-9690-6f3d43312dc6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed51711a-35f1-4fbc-b8c7-4f96224a75dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22bd432-7051-4e4a-aa57-45ba9170d2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bd28af-c693-4e8e-a7eb-2568dad1a929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16d359e5-5ef0-4d6e-9926-14cca3741264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6805648a-7f81-407a-9018-9dc36a9c5734",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318067a6-39e1-4c62-875b-b81a81f106ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3267c508-a1c3-4d52-88ed-c70a0ad55b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc76893-883d-4270-b0d0-dc99a2ac2902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a27a6e3-82fe-47ec-a8dd-57fc56a921d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8d8f4d-0183-453c-95f2-f58d7c60c8ff",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e98b66-93c0-4026-bfcd-5535c9e16e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61edd893-02cf-4e82-89a0-7687d1ac8180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1fdf77-e715-40b6-baf2-244779ce3efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "242d7dbf-5459-4768-a839-e0f248addfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2253a9-1857-4fdb-a2ab-30bdb3dd6304",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca12aa6d-5b2c-40a9-9a92-3df859f73ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de510172-acaf-4e00-9312-bcb91ed7ee38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c32a51a-f44a-4d65-8f50-d4c3d2b026d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd96959-48e5-4c88-a2b8-770abae3437b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a243ced-fe51-4fe6-a463-c12c2847d042",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9932d9f-49b8-45e0-b6fb-87823b17f88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05ececc-828a-41e3-bede-41049e508040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382f7b7b-08f9-42ec-a3b1-fcaa7b15f572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5c2dcd-5ea4-40f9-a5a0-f7b47a07d923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e223c9c-f215-4dfd-8fd2-8d075bdb9f19",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464386ed-f55f-4487-ad38-586c60cbe261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9038817-309e-4bc0-8a01-25b32a76223e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca75ecd-6204-4630-bb71-4caf188f3b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84209346-084b-479a-8fc6-064e2e916c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f377e2-2c83-4251-a0d7-394c31ba53d6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f49cf33-bedd-4345-b6f9-9ce20caab231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc697d4-4de4-4d82-a0bf-3e9c23113afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1528bac1-08a9-4258-b527-2a31a7fd4639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80e1c1ac-1c0e-49a2-b717-f6dacbebe0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1689f5-8dab-4e29-b07d-a5860760cedf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e379c66-d5e0-479e-8f68-90b917f3ad71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31eb0883-fabd-4408-8bd3-d801438d11a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facc9ab9-f3f9-4bba-9b6a-3df1af2008ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79ede616-626d-44a9-b836-74667ab76dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6fb16f-a310-469b-bf8d-28688a7c3fc5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8174e52a-cd26-49ea-a1c0-237a3d41ebf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c184498b-8297-40da-8d62-5fdec7d282fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa5b830-9501-4a65-ab3e-0759d574ee5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2547439-ff03-40dc-b121-dab532b403ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a70322-6a8f-41b8-acda-358ebf94990d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88a1136-cd0c-4c27-a6a7-3dc3a39fd397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43cd2e5d-6131-4e5e-bd2b-fec213399fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedbf6ed-22b6-4691-861b-a50447818396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a095f7f6-1d1f-42d5-8146-12e028921fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd31e22-7fe0-468e-9f78-ef50e5575a9d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83000ea9-e24e-4d6f-9168-ff3c33dac9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c66822d-3fda-491f-953f-194e5f127498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ed4002-2ad6-448b-97c9-c2ab9fc20b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd2b239-ad32-4be3-9eab-6d38501df441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a330875d-c565-4894-a22b-97539c43bbc9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ca1a1c-71d0-4a8d-adac-1a82e31fbaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5719f3a-dd17-4009-b5cd-ed833b92e092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205e78d4-6851-4001-a836-4b5b74a53f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85195506-cf89-4c46-8ef5-351f01746765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92964d1b-0e26-4cde-b419-cac1670b0539",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42937ae3-e0c6-4621-a5cb-9b5b318d1f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2880e057-da60-4a41-9763-f94afb56f985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad2e7b6-2cec-4bde-ab0b-3de0ca47e95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "246c0784-5234-4578-b2ce-7af6bea9c504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef3ff85-3f53-4b38-9d34-5068c86e693e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0006061c-1d68-4611-9b8c-e0e3cb65ec96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ccb19d-c8d8-4f23-a5c5-a505da8ba70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9d79a3-3f0c-4c5b-ba6d-327fe84c979a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66a88b5e-13b0-4501-8497-524b176b7108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36f04cc-e287-4e04-ac60-eef24a637425",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e79c025-2c1a-4909-a143-925cf6f28d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f21e7b-6329-489d-82f5-c030ee0c8ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a146bc-0c8f-4590-bd7b-72b9c1971271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff09babf-6048-4b4e-ace2-05ed6771e370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922e96b0-0cb1-4044-b226-8a4a03bb7b41",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bc633e-4ff9-4c17-972e-8245bd9c28b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776b42b5-895a-4ee9-8775-40c121458b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf745798-8d3b-4a5b-a338-04662cb1d9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68d1079f-036d-4eb8-bacd-9b7c876c90b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf249673-3df1-4bf3-85f1-23a65c9aa7b7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21824d12-5107-4ae8-9798-a5801d8cf47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f180dd5e-a8f4-4bb9-bd7c-3bf80e3df02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbd99ef-4560-4483-859a-704352d0476c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d1cc30-b73c-4107-9300-aa1bc4cca2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275f6ad5-fdc0-44ca-bd06-528d099a3872",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4b508c-df84-4303-b051-c483895424a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799cc3e9-e844-47ee-8f50-e6336d321d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab0090f-cde3-4085-9cf7-18830331cf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d61bc0a6-f7a3-47ff-a674-e426b310ce25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ea0ae1-5025-4e5c-aa8e-1a9508497fce",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed823990-cb8a-49bf-9de7-5c1031975731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b3d8f2-38c5-447a-8828-ab9762b16bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55c87df-57f4-4544-bc74-1586aa2fa700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7cbeee4-58ca-4854-87e8-63ae22864379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c683f60-6712-4721-a100-a5b981993780",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426b1f97-2f1f-4cc3-8135-bfd968ea7f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d487dcde-d3c8-432d-b392-6c830267295a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1b44d5-d4ad-4c69-946a-60c054242f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba8f654-c908-4275-bd62-5ce2f6f4a39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023ec8b3-6384-43cc-8c57-53319ac26a99",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7abb42-e6fd-4d0f-9ffb-dc2863eb02fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0c1643-91bd-4e9c-8cc8-d7c3903dcbea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bffa23-2457-4403-8d88-1bda944a523b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b102134-ade8-4766-8ff1-bd61ff6fc6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e444c9d3-bb80-4ae0-aed4-3ada581bbe1e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee27f4c6-a522-457a-a14e-8ff6ea57b6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b244bc17-e1ae-4d67-bcb3-00b47030b303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33892ae5-7bd3-4c47-9921-323863188c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "15e76557-5d8d-47f8-a46b-81dd8b7cf5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c014e2b-ff62-4e08-b8ca-6e7f09b2b0d6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e5095a-a56b-4ce4-9303-cbc3e8fe4d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "82c4c830-5c1d-4814-a86b-5cb513e2d889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb858a74-ab3a-4a68-a49c-5584c625bc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f84a916-3b99-43e8-bf94-8ab0d604b9e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a280d595-6f28-4a03-acd9-44db60bd8cc3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64f879fe-1f61-4b41-8106-e87134ccdae4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62521a7c-6c50-43f9-8cdb-b50c1d072436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ff416a9-4035-44e9-a7d2-93685e042dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3e904a-1562-4819-b6eb-4d17a23b650e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48535ff0-2f03-4428-a2c6-82027eee2e77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd87c5cf-a09c-4244-884c-37d99c848b13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d3fae84-9154-4d05-afc8-d20fd52848e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37ad2796-f41f-4b5d-8f72-e3d1ec45678c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caa6c36f-ce82-41da-bd24-b83ac409c3bd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "68f4111b-cc70-4110-9b94-f9960dab9b35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa934bd7-8262-4436-8fc1-1383bc7e470c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9992f46f-906d-49d8-a00e-c5d86578f88f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1fdee52c-494a-4724-9e3d-f700ac4c1c1c"
                }
              }
            ]
          },
          {
            "id": "f3f39dbf-d970-4561-9dd2-31a9205b4985",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed754fad-e0f0-42ba-9709-a1ff5ebaf983",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e2e85fcb-d376-4a57-aa7b-0465461d3024",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1231679-9f81-4a5e-ae1d-e6d0dad19635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f1d13ba5-d4ba-4676-9259-5a5b550c12e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b87635b-9e85-47bc-9bc1-c38fddb6c5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4f9a29-91fe-42c3-9682-2986bee49118"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "783db3b9-f8ec-4994-9ae6-9e21ff70cbe8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5b14a13-50f0-493a-bfce-fa8ba55c9324",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c5c9bd4-7868-4331-9cbf-dca21e267f81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b750ebcf-17ff-4f54-8054-fff1e8252af9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7a28f08e-40cf-4a92-b96d-06a15cfc9a99"
                    }
                  }
                ]
              },
              {
                "id": "7d9d8c8d-757d-42d8-8fe0-075181d1947c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "325378a4-41ac-4039-9f6f-f6ae00ab0f9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f30deb2-34ca-45da-a8ab-699d7b7770dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ef7fb8a-9798-48df-8f0c-a6065fb9f7ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e2a06b6-2603-46b1-bb1f-0942c391e7fe"
                    }
                  }
                ]
              },
              {
                "id": "2038de2e-828e-447e-b813-b3f4778709de",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac8b8bee-8f56-487c-8177-c69c58ebc08c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4054d707-df21-42af-9bdc-9ca515c99148"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9525b0e4-4f52-44b4-a3c1-ea97521207bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "81135bc2-d934-43e7-9f92-c04937158468"
                    }
                  }
                ]
              },
              {
                "id": "7d233b57-7019-47f7-892c-8c608fbb8abf",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe98aee7-8dd8-4cd9-97c2-2e589ed3eccb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58694e8e-a820-488f-b89e-683271855cb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34fbfece-842b-4c22-9650-cbb396c2b294",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0a4fb2fc-a2e3-4d5f-bae3-3dec5abf717e"
                    }
                  }
                ]
              },
              {
                "id": "f332f543-4f82-4bab-a77c-ad506b99cc52",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a635417-f0c4-4c79-9631-01cc556164d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "873c28ea-c4cf-4e51-a090-5a59a90e2b67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca60940f-ec7d-4aff-8194-e15f0617a59c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "24c83215-4099-458d-b321-ffd9e6018aa8"
                    }
                  }
                ]
              },
              {
                "id": "e83006ae-21e1-4b56-ab19-ff3f11317420",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9209934b-b5c0-402c-974c-db9eb0ef703e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b3a782f-d9ad-4ba1-812e-e1c77692961a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2781b73-c01e-45c3-b112-567988173fe2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99126449-5d9a-4a93-8410-64360a94aefa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ecf6864d-91bc-4c40-bd8c-133e8bafebf7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f067e29e-bf29-475f-b2dd-c1cbae823dc9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "abf55fb4-e95c-425d-a0ad-ca3ee87c45d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93feb3fd-4756-49f2-be65-93fd903ba5a6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0237441-e2b0-4ab6-9cb9-b9b726babede",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f2e6e735-fee2-49dc-9f8f-a3f0378a9515"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81c0a6f1-b438-48f2-8234-6850a7897e92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f487e2b2-5de8-4c05-acd5-da3652c307a5"
            }
          }
        ]
      },
      {
        "id": "18283a1d-c51c-4ee0-bcb3-832e8d781afd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e155a5a6-b11e-4728-914b-544fdd1c14ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bdb97361-7b79-4cd5-a92f-2938f53503b8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52bebb41-1a06-4218-9193-7145e846ff9d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221bb8ba-1c19-4de6-bef8-2ff92b3e4dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a15e89-e890-40e6-a262-00329efbcc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8151161-72a2-496a-af92-bd0ae4dc64e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2869c791-b1fb-4cfd-b429-3df758999fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0effe1d-bfe0-4408-b495-fbe909ca3241",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b902fc4a-943a-4222-8610-b4a3cb321c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0be8f3-8a6a-4b69-84c0-bc05677188ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185f8544-1802-4771-b8e0-829bc5a4c084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec93a4ee-1824-4488-806e-d26bdf739dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d898ed0-ae8e-4f3a-8a7d-e67264dcd752",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4773681-4f97-4ac3-9a9f-3aa730c9d245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa242f09-2f6a-4fb5-be13-44884353b630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14070848-a22e-47e3-81a6-d93440ae0401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0fd9de-67a2-4329-b3cd-7f7765576ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cd84c7-41c8-4aff-9aff-5ab012800c7d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04734323-8297-4bf4-ae8c-d501c44a0878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac691e4c-c41e-462d-b239-036b462912ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f356ab-2a73-43d7-9b02-dc7023c7fabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2342a480-05d2-4e6e-a3b1-0f79e0d23468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f086c2bf-c2b9-4de0-b2cb-3c466d51168d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5873fbdb-6011-4f34-bd69-b952765b550a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7b7498-88f1-461a-a5bd-82810c8588b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b1fa3b-67f3-40ae-9ae0-a1586dc72550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f73d6e75-5f9d-407e-964d-88a2537d2e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5037546c-5e63-4621-88c0-c61a85def9e0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e301bf42-c59e-4a9c-b0c8-bbbc055e8ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070e9378-6460-4310-a73c-9b4fc551bc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e001d46a-a7a8-4067-939a-f074599297bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "103468a3-1434-461d-aa6b-a53f4428ec8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902d61b6-5f50-49b8-913e-8dc4ad88fe0d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb7fd30-aa1b-47ce-a5eb-176b26c32178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c552b2-5299-48f2-adf6-462cef849217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c725213-dbcd-41e6-91d2-d200f1879e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8b3494-b08d-42a2-bf3c-62eb64a2f673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb41c8f7-5d54-4b1d-91b7-220b2838b146",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719dd79e-e8cb-4222-b30b-835dca7add85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539e479d-8c0e-4724-9c82-7d564a429ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92608c86-90b1-4a2b-a24a-a51904880ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78497b1c-9ea9-4e24-9f29-3af4497d5f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e5cf4e-766d-48a1-b7b8-a3c1931010a4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22167631-db80-494a-8ddd-4fe695244e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad6ab88-5d6f-4acb-b629-05ea6046923e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a15ef0-7f99-4106-bce5-b1f34323743e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f67f19c-9b27-4ec7-bc60-6fd076092956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3994c297-2b70-424b-9d14-56f066b64f49",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91640392-cb0e-45c1-aaa4-3411fd99e6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685cc85a-857d-46d5-8f8f-64eb823604eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de28e43c-ec60-4583-9380-7ebce2de4a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e29b6c6c-af14-493a-9bd6-93b89e3373bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0e20c8-0ada-4ea0-8c8f-d1da665fb016",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cfac84-92e0-49b3-ab77-e00666c822f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8b3c52-b175-47a9-9c1e-30f554719933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689aeca4-ab0f-4574-86f7-fbe35696eaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c6566612-9acc-48db-ae05-b7aef5d878e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2dc07f-2430-4d3a-9ca0-26ca988a7786",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480ecc6c-1313-4b35-97c3-784deaa3fb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78329700-eccc-48a4-af6b-e3c90d18e94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a295b70d-28f0-4191-8997-121aa790c35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f10ea814-85d0-4a22-9931-525eb0f83363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939de056-6a74-4540-9416-a996cdbb4ddf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9288dd92-c1a9-4de7-a302-7d82182cce20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af97923c-a4be-4339-813b-221ea1b803de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372cdf15-bca7-41cf-963a-a1208eb67930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "faa932df-4c0a-4021-90d4-4e2385eefc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c16ae9-6ad8-458a-90aa-47c6ad04da71",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95370a7-5efc-4459-90a9-c17f9c13a732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec696a9-8f2a-4589-b7a7-b21360f9247b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c319b37c-1ee2-4168-b3ca-fcd50e052297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a3af52-36a5-4c1b-b831-ac94eda08bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74e842e-dfe3-4bac-8c03-7e48b5356e9a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b8ee76-ae13-44c0-8802-2968ebc41e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb347e87-db00-4856-9808-a2c2e9c76dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa5776d-5030-49c4-92ab-cdb45ac3884c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4831c0a6-bcae-49ca-bb54-b6b2bdd68640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4980302-b119-4ee3-8e16-6ec91fad7a6a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a07865-3ef9-470a-aa9a-715e931c7a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b5df4d-f8ee-4014-94c7-368fc66d44d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a049a3-da90-47de-9a08-7ade309a8659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e160c46b-1f22-414d-bb4d-48fd79c3e076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075432c0-a736-4168-88ca-15645f379559",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7642eb91-efc4-4fe9-891c-1871d63c5373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b10e49b-08d1-4e1a-9826-992818de253d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24674e5d-63cf-4a5c-88d8-1030ae0c7179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb2e19a-08fa-4bc6-9bfc-ae13cc0b0cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac2b828-c5ab-4a31-86f6-67870d12a91b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576b9a12-7599-44da-a63b-87847dccc342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dffb8895-1f8d-4674-bbf0-5b8d61632a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22d5911-c76f-425c-b4b8-39de92b89ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e42af37-0d2a-4324-aae5-054222206cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dece0408-e79d-4569-b5e4-abd06caaeb4d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9282ddaa-9f22-442e-8686-8feb632df808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548f4c3d-dc72-4773-a8ce-40ad2a0ef464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf644f5-b764-42f6-86c9-d90010c2ca5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2556c457-334d-4f73-9131-dce47858e910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b0c60f-2657-41f4-8b29-341ebacca095",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7036839b-2553-42df-a1d8-f127a33640ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b6d595-a3c7-4a07-9d64-bfed83d8e25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09970d01-399a-49f9-9c4b-3c267ad82997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30dcfc2e-acdd-46b7-8404-ed404e4a468a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021b1d45-7201-4903-a298-d058326b2c1e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2172c89-0212-4c02-8441-fe58953310db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f55e85-9b03-4df9-a636-8ccd7e63b251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f163c6-807e-4675-a0ed-d04660b2b831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe26f550-0889-4577-a1de-7f2e6f358bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc983bfa-446c-4b30-bdc3-3b4bc60d6d1a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1351975-8582-4dcf-9717-c56c250ceecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860dca0a-b44d-4d7f-a932-726944d07aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04a7a35-9e09-4c8b-86b2-320fbb13e2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "532de246-fcbf-4dc2-aa01-effa370768cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21f2896-a61a-41cb-9a6e-fa0ad07713cd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6e4cfa-1071-4995-9a81-0fc9a6cd4ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e77eb4-67ec-427b-acd7-4f5612113c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8481474c-841d-4028-bb6c-7a034bf618f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46b6de8e-5f12-4053-8f3e-b8a79d5c3c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816cf444-3b1c-4cc5-ab83-890a25a26d02",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38c881f-19ba-4ec8-977d-9355dab1f869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f25cc2a-b70e-4528-8358-967cf120c784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483d807c-d257-41be-a782-dee78f6f56d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6095a752-293b-49eb-9af3-48df7b743c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bddc424-164e-4a26-8f65-c9c473587986",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d94283-489c-4a06-bc02-cf43f763422b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cae2cd-0352-474b-8b7a-e4b24cb3926c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b0c7da-e2a9-4e83-87f9-3378deca3feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd513461-ec86-4bce-ba8a-67b9d2c9c37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69deb54-9aff-4938-99ca-6e446ce269cb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103a9215-3ef5-4073-99c7-ca00bfd8d7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6091d01c-44d1-44ff-b1e3-ae0aa4ccbb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a12663-b4a3-49f5-b11b-a8723285f7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "136cdd26-b8ac-4dfa-a2c7-dc54ea706440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d79469c-2b86-4e33-aa3a-dbd1a10f1bcd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8245de-aa33-40f6-b330-17a27f576f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd578e2-1e8e-4245-bf44-dbe05900156d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cede5546-92cb-45ef-b900-051013b959ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b853ae41-d7d4-4a50-b534-d3a6bb314f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb9ef97-bb90-4223-8019-f52aef3bd6fa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5da58b-8ebd-407b-9b9e-d6910aed9eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6035dc52-6159-4aaf-9e63-02c697eb8fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0da6a09-630b-46f4-91e3-1102480e261f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fba184cb-7bc6-488c-b7da-a24b9a775e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c00eac-f3d5-41ef-b3a3-56927595a3e4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822168c3-37b9-4ae5-8a0a-abed0f4c7ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c85d3f-4864-44a2-b99b-daa232e0d5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92e3abb-2db4-4f5f-affc-6346399adf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cd44c0-0b6c-4e55-b104-b73e807e9910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a031c5-ccde-4433-88d3-66b71874ff07",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2c25b1-c4bd-4335-a3db-29c76661bd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbc433f-d2d8-4c0a-8510-eea370a7bbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4b000f-ae78-4e9d-a81a-43172600ef2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9cbf32b-f5bb-4fa7-987c-5f10283ea982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69894dc6-477f-4025-becc-29b9876136f6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8ae459-6098-4033-b6d1-db45be5fbeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfd3020-cbb1-47aa-83e0-d0c8580231c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd26e728-e243-4210-b227-952d8e3dba08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "651740b6-09d3-4888-b918-a6391ad302c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2472762-4f4f-474f-905a-79470dfc6be1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d915cde-31cd-472b-be08-f97bccbbf0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a69ae8-f660-4f81-afd0-4053a0b684c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9548a21-727c-4b8d-aa6a-eafbc2566671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bd82b9-dc69-4a77-b71a-c93762537f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e76f9a0-8bac-4e0c-afd6-33473f74a574",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8844dd05-0505-4be6-b2fb-d612584fd420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1087713-91e0-4d15-8e8e-237b3d227b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7411e88c-04a0-4033-b510-8face2fe13a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a739a3fb-7995-484d-858d-caf32b5ff4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77259740-7eea-45a7-8476-99d9ff946f9f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9365a049-d1e7-4b2a-90cc-08950e21b5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ddb447-4f70-44a1-b2ec-97e74b4e56ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb7458f-1193-496d-98c7-715469fb24c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a12d6ba-24f1-4778-8cd6-6da957b9dd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71533aba-e34c-48a4-85ca-5d24cab1be26",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e47c1a-d633-4c52-85f2-a7fe5717dd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fbbf2b-9bc5-4049-b5ba-675a1796efdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7be9ef-a20d-4039-a319-c82ff070f054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4913fd16-7b3f-40c1-ad52-e4c73705780e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a906d2b7-fedb-4e1a-b39a-5a3bc156e1b6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312e32c6-1f47-4650-b231-27ec96a61d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645ced2c-19ef-457b-89c3-4d3d0558d939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562646e9-29ae-44cd-98ed-7952b57ba058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5310bc0-7c37-4545-8312-801e775d2334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46059729-3231-4360-832c-955427baa6b1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544b1e5b-aa3f-41cf-9867-92b32251f416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a48876d-b95b-4e7d-a270-abed3698c0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0ef82d-19a7-4f12-8397-cbcc54b0968f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4061f1a3-d29c-4a39-ac34-7229a2c808aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "072f20ce-2332-44b9-b50e-775bd52a015a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f672b83c-b094-4163-bb77-bcfdde379784",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb63273-eba4-415c-a25d-df1b70f00adb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b034db-8936-4928-8fa2-70a255dd04be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21eaa8c3-2a2b-4a13-a9f1-e3414c419ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6071f3d-64bf-473b-8343-3649b03be220"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eec524fa-94e4-444e-bb10-b07b652d9634",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30c03dc0-5974-4d35-b71e-ff2c25fb9592"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4004f578-2f1d-4b46-a04c-02325122d8ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47957603-5afd-457b-9228-d35c28d1e37c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff840d14-ca21-4c46-9662-e62fc2882d12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3e24ecd8-992c-4759-8e37-5e7660228855"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9c3341a-f60f-4793-97ac-ee5739df207c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74f58140-a57b-4359-b175-708613cc702b"
            }
          }
        ]
      },
      {
        "id": "f4d96115-52f9-48af-bdf9-ef04dd15cff1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ccf44182-2fe1-4cbf-97d0-28a882106b28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83792702-909c-4042-8a55-89e01fb45f4b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e970c5c1-c9de-49b5-803d-1057afb120ac",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b52dc3-8afe-4822-b218-1837a6e395cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcb7476-d2f0-485b-9154-94b808f5f970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc57681-c743-45fd-bc84-3a5bfba21e18",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592f85dc-5cfd-4072-82d5-b523c5d58fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175afaa5-9919-4821-91d0-325261f316f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b99fb9e-25c3-46ff-9651-b283a4f761d9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989b6a0d-8c0d-4665-9a6f-845e0bdb1ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad95c99b-4334-44d8-a9b9-843caf71b237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11dcd4b-1ccf-4d01-a347-294e5a8875f0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d78fc8-6b03-4fc3-81aa-0ca524acc7bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d245d2-ccbb-47d4-874e-f53e128048b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b7a1f1-7cd7-4dc0-9c6a-a6ee6ac50508",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9535d2d7-6b14-48a2-af08-2c5f6d7798cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c509b7-0d8c-4e5c-8d5c-1eb06a8b4c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0038c203-7628-47cd-9ff8-35a9070141f5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d039b00e-3228-4018-8c34-1c07340ba71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07a18b3-ef3b-4db7-b23c-0cb81cd365ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e340f9-ab6b-428b-9ccb-58077c7673a4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca8990e-5f0b-4a15-aeee-4d463decb0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4673dd-84f8-43db-8339-8b2c97a7e4ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e095c216-5e8c-445f-83a7-cc7a02158b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6b7f88-d192-4b07-9339-9abf62c56d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a72bc83-535d-4425-aa01-dad88816763f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e7ab71-36e5-4bdf-abc1-51cfa9e5a168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6db7e4a-c94c-4a11-99b2-3a69059de4fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3c3127-5e2a-4ba2-81df-9304d3df1a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bc4d74-0159-475d-8e50-88efcc1117b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f26847b-ed86-42e4-b538-4ceb0ddb8a6b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a03ee8-eae4-4f5b-91b7-5fa50d2036cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e525ad-5cfc-4ca6-97cf-de1cc59b2a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2935e65-860e-4418-9000-82e60911dc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf49f44-bc42-44d4-85a7-94c72b7b340f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab31400-d9b4-4e11-9d90-b0538658a89e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2868f71-39d7-43ec-b62b-e4b7cbffff33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2027c430-f791-401a-a590-93d25900a5de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd3a184-0582-4176-9a37-91f2d6710811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a626b6-8c4d-4db5-81ac-5894a9189fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a878c1-bc9c-4431-b734-b8c20559c671",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c32bb0-31d4-4a8e-b627-23f62b004c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5853e272-4970-4f52-b0b1-bec86a829bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9bf653-a318-422c-9090-dfc046b37cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d25949-40e8-44ef-a2ef-98ad66a81ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f6eafa-604b-4f37-abad-134db933e20c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dedf995-6493-4c7d-861e-acadd81f18f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cad58ad-8035-4c10-8a50-9927ca49ef60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434b1161-6650-4375-8d6f-62b44f4ee1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73b5be8-9f4a-4ef6-8dc3-484c2094a8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bd0f59-0c8c-4443-8b9d-80fd7d32ec9b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283b0028-1eb2-4a44-9ba3-4ae5a255cf30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6f4c67e-bbbe-4a98-a4c6-00b098b77848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3393f8ba-db60-44e0-96ea-9d1cb683dcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b056bf-8bc0-427d-ab51-3a9147df2594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e66058-73fa-4d55-a7c5-bb07e0350231",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a771773d-11d4-4097-8284-010904689ee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "666b0336-68fb-4545-86c1-bd214145bace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89855628-8b38-4022-846e-3ca365f14c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b382faf7-42c0-4910-9981-7a1298ddcb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297f1b5e-d171-4a6a-9e4a-03559b9184cf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af40e81-dae6-4949-96f6-7c4f6d779c35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc782d41-e005-47b4-95e5-46da798a8fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c653e79b-d843-4128-a71a-95a9fb7660fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b30f792-0765-49cd-bea3-028f186cfeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a33312-8760-4b0e-8b3a-f613ad5f6fc2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298d23ff-5fd2-4940-8957-d39814422efe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "642051a2-27ba-4678-8ef2-ead3d80317b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b87745e-9528-4228-904d-ced7bef93fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824d69f8-3df1-43d9-b30e-d42b9d4413ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2cb898-d35d-4069-acaa-fa0c2aadfb0e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5caefd82-144a-488e-88bf-3964053f8e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be2181e-119d-45c6-946f-54b9257c2089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2642f26c-7ca6-4080-bfba-8718bc830f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb1a0cc-f080-47d8-a1ae-1984ae51e5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980a70ad-755d-4c1f-8a83-6e6860b827b5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cb8532-8f34-4747-9bba-9b19f402464c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3d4dd2-2932-45ac-b0b2-96e3065287a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a8432f-c363-44da-8835-682d1ada73d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376d3142-b191-4d0d-94de-b1bec43d6e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a666a478-809d-4685-b8bf-25003359875c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63282a4b-d7b2-44e2-9707-0d05f8a1476d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cacec0fc-17cc-490f-a39f-a17f1cea620d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477a095f-10e5-4761-9640-a4e727f9fd17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f39507-bb32-41f1-b193-30e69cde88e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894c2ac5-cc0b-4deb-90bd-88c3cccfde05",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe143e6-8f44-48a2-b853-fde38d0d92a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1024a3-eaa0-45f4-8319-442de1e0c982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156a9684-34cf-49ae-a4d0-9291e5555131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372a16ac-5cca-438f-a30a-393ef5bb3a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04afecf-7ab5-4d7a-a3d1-ea3637f76257",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17f5d31-acbf-4c3c-826b-b0fabc8f6d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05fea236-4009-4f26-85f6-81f69dd042de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efcada8-5ace-45b4-b7b4-726dc6d71b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cae2d6e-508a-44c1-b747-6aad2328536c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf7aa0b-ee65-4c0c-aed9-2c8bcf8bb17e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015f075c-81c4-4bf5-b6e2-5d6e62e4aa71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b908e6ae-4f7e-4279-bbcc-72aeda4c777e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0ecbc8-f8ec-4691-9582-8e6c8990bd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6507b104-f6e9-4034-bf1b-f0feb15ffb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4898ccdc-e149-407c-b6e3-d2cc2160e650",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c18f0cf-4d8e-42d4-9f02-29ff66048a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3794c731-b708-4256-b84e-24f4820186e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2cc94c-13b9-45ff-91ec-497b56b6eeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec5b33a-1550-474f-a641-843573a25701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a552ddf-460e-4c61-9c5f-38fa72971c97",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c217188-80b4-4806-9a08-c2cc4c96668f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02fc37a9-84cd-4661-93e9-eaff1a2fa5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc8e816-86ba-434d-9e94-3e5499435817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9767782-fde0-4985-8464-0894f658a6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce21d05-26af-4869-b550-c0add714f22c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3184c2b6-ca07-4e5c-ac96-7eb894d0f450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12befc1-0f33-421a-b3dd-b3850c8db80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c87b3c6-e5f5-48bb-a338-7c62a2454491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc23e62-4d0b-40a9-9aba-9b82dbdd8f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d443e36c-bf3f-49c5-bb88-a7062c0eaaf6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd499e0-963f-4d0b-a8e5-a8bf7039b002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "925e8f0e-7845-48eb-b545-859673667f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec264b4-866b-4127-b062-db8c65b31a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9891c6-283b-4b7e-a304-eb24da7d50de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f8b4b3-3bbd-4178-9185-9325ee668917",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5349afb1-3cec-46e6-9d79-47b342a4688b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad91539-ad3c-46e9-b7bc-5e9f3db6033c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b142eb-81b4-467a-bb63-29767472d826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b2c7f1-62db-45af-9233-d3d681973d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f316a8-9f83-4b7d-be1a-9a66d1b2fa60",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dedd6a2-be7c-49b2-b207-63bbecdb2294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f71e67-b40c-4d7f-af60-5b99fda238a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23fc137-081e-4ac8-bb75-cb277712600f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c61bfda-7cb1-4c19-8030-c0ae8aa12cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe58017e-5854-4010-9d19-764ffda9245a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35346170-e2af-4077-a6a7-1b267b1173d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7acd0c2d-5f1a-475b-aa1c-c9e543dd360c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4f3626-305e-43ea-92ef-15f3d18252ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e364b72e-df48-43fc-ae1b-60106adfba37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501260ad-b4d7-481a-b053-29bca921ba11",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734912ac-8fb8-4d84-91f4-a979631275f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0682ed3e-e2fe-4d62-a79b-75e19c55b7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afa8765-fc2f-4a7c-8a04-a2c6d381fb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca691ca-1f1f-46fc-8183-a7edc93a49af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2563ca-df4c-46c1-9479-d2308332bae4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f991c691-e371-4497-be5f-ea99346d98f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6c0cede-2c9d-4a9e-a397-b7d767107adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9f3f19-7da6-41a6-a027-5623b767004d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece3574d-5964-4105-a50c-66a9df24f78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f51348e-2f51-43bc-bda3-ddcfed360ff5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63048c9a-cd14-4deb-8951-b4b3ac98e3d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a7a54a-8bdf-4510-99ba-0e389cac133a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75357df2-1138-4c42-9f47-f5414ea77c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef3ded8-e339-4f1c-b763-2fc93008951e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a560aa-1fb7-4a34-b16f-784ab4d019a1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a50d418-c256-451e-8c8e-6b253c517522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d50e374e-a5d2-452b-bcb3-51f08c33a990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12936867-02c4-423e-8eff-05799e88aa02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75192c3d-9eec-49fb-98fb-21e740fc6c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982cfcda-16cc-4ff5-811b-3b8cbcd4cd68",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f339e8-6985-4754-ba0b-4e6a25540c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2969f886-65c7-476c-807f-d01f0465a934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a0dfba-6385-41ff-af2e-a288323f74b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e24cb80-588b-4961-b071-f0df52009c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a57ae0-db48-4a2e-8fcf-ccbb63745924",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1562352-9358-495b-b3c7-c58592c7a7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290a86ba-d84f-4551-b7e8-d4320b7466d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3a5fc2-c14e-4421-80a6-3b5b51f7d646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc7ce7f-a0a7-488d-a2ef-a2c806bbaa04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218e14c8-2072-4edf-bfd6-624da4f18b9a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120ff59a-5fef-4a3a-a2f8-a70b903d1acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326a4f41-67ba-4b60-981c-0e0e45d9126f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e898c8-fc57-4aed-b2b2-0c0de1c9d67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd8565b-672e-4cc3-b899-f37a149f848d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d89d157-6a9f-4154-ac35-4de9ee36911e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01b2767-6ffa-4b80-99c8-56e3497356fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ae3817-1aec-43b5-ae30-16c762bea708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31f7376-1f4a-429f-9486-0336a2226abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea490a68-b8ff-4054-974e-ad41ad0acba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c6189b-76a4-4824-b457-be19781b7927",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fece0c97-41fd-46af-ab3b-69ad3086fe7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c8b8c0-52a8-4bd5-9371-d773a4f7f325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54d75df-807a-44da-9f3f-d244a9461187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a788540e-a162-4459-a69b-bb43a05f53f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6e1413-80eb-4333-8119-0be0ac19b88c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb88594-010d-4b8b-a160-0d525f2fae79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b020c80-f3af-49c1-b1c9-3ef44092b3f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8a397d-aacb-4f53-a953-a0cf49126e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c90f6a-df10-4fbd-a631-bffccedc898f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4f9edf-ceed-4e64-a238-18c51b317a71",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c5e1d1-50f6-48c1-9232-b2655e7eeb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da593de-5351-4c5e-b93b-292d1ba86b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14892e93-0a60-4e7e-bd5b-79cfc9cf741a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f4e0ab-3bb1-4571-a21a-ada12e67ac07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3752da-3618-4ab7-9ec9-7833d7d8d4f8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da22539-5023-4cfa-b63a-b15035c576ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c056bfae-4d22-4bbd-b67b-3d6a5eaf2b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50f70bd-6451-482b-89d7-0eb0b4578a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8125eb87-84f5-499a-b4ab-d942ad6fb626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d9a0ec-aa92-40a6-bff2-5822e396b39b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe30ae75-4f81-429e-8bad-6f9e96985b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0410a8ba-f7d8-4af3-8e29-b700dd07813c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf5d08c-6eff-4fe9-b88c-ff3ffb598591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2d3f99-d8da-4f8e-ba39-e757c940713f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a0044c-2782-4682-9fbb-6f0cf9f64596",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ba97a8-f5b0-43ac-81c0-1e17d4ef0dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae719177-a5d7-440d-8efb-7a0c6c668faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1033bb3-8189-4451-91e2-ba1081338ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f93ab31-fbff-496b-aaea-ce17dc2f301d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cec47f9-8361-413a-b624-99864b5521d4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c201d3e-a114-4479-8596-0baa00435ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f73acdd-07a6-420e-83d7-5639e8b2a103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22661ca8-ff34-4e36-b5be-dd91e1c2e0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feebbeeb-22c2-4696-ab81-0e2d2ecf8e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8ca069-a815-4b95-b345-2eeb5399b68b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0489be4b-6f97-4c6d-a33a-a85506f4fc6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f382009b-04b8-4d2b-b2ff-e90281f91657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2541893d-9ffc-420e-9908-6d3c990a905f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85687c4-683c-45dd-97cc-26bcb57eacf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf555b10-0356-45a0-94ab-79954ab5f1b0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007bfb41-44ae-4be0-8a53-bdabc1e054ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405da266-a3f9-4860-8eca-c9cd285a6c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e275bfa-fece-45f0-9bd6-3b442f89ec36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ec4f99-f939-48c3-9ac7-46dde5a241c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07d72bf-6b17-4041-8481-d446aed0e7fd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc931155-ca5d-4b07-838f-36f0ef47654b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec7177c-c3e9-430b-9a5c-dd4e199fdced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41d513c-35be-4410-b77c-8a38c30df2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84d2f57-e97a-462e-89c7-51153fb62d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e21058b-2cbb-413a-8b90-e40e542d4178",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63278500-1666-4fcb-83c5-275a6f290bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a242f72-8a08-4a92-b3d1-e1b0dbef9f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6f0a56-8ec2-400a-ae5a-365f1617a97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca8bbc7-797f-4991-bdd0-b1bb197ed616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0280c6-f0bc-46a2-8623-675baf17cf62",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3defa4-0847-4aef-8ae3-e30685919692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d32e282-fa66-43da-bdf7-f93289e2c40a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "792d9017-5020-42ae-8551-50cdc671d6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e3c5c9-a789-4126-8dbc-31af0994be38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900928b4-d78b-421a-b97c-52c67c1dac3c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cfac93-a9d4-408c-8283-60a0f62d3aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a226550-9b01-4f3e-b39b-8ae495cc24d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1166fa5-fb35-495a-b8fd-c1172a4fcd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eecfa222-4f63-47b0-b5e6-70e7d87944b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef961bf4-15e2-43c8-8bb3-a6079e7125c2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621260ef-18fb-4741-a7b3-57e5e5adc341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df49fdd-628a-4a6d-850c-34c2e9f1af69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833f3a94-0bf2-40d9-bbaf-865ad57051c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d80dbb5-035a-4f1c-9687-e9f17b0d7d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f31f8aa-aac1-47e9-8539-82f88209a3d2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f96dc7a-1625-46c1-9479-8e6a767c66e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef9da45-7ab4-413a-b739-365c50efa056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fe2246-fc83-4152-8370-aa687c7e690b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43e2441-4635-45a9-9570-38dfd75386a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886e679d-63b8-41e5-baa8-c77e1dc4f709",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2b4ceb-1bc4-4805-8851-361fef3a8969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a22a4e5-7e22-42bb-889e-4eeb3d305df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a4bbfa-f362-4169-b4a1-1ef9bbdd290d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3bb54d8-9b42-49ee-ab4a-3d9d26a2ddbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19371583-7624-46d1-88db-5df63f9fe61c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6f6f6e-00c7-4860-b475-9e3336a0c6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0392df-a6cf-4f4f-8db2-6f5ca79aa380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c567e45a-ca81-46ac-bf52-667c41566090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39596a0c-1bfb-473d-a54c-24451914c7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2162d97-e8c4-4b6e-b5d6-b293ec2d5a58",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a88bf38-454a-4697-b23d-d7a0bba6e398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9bf75a-4d73-4879-b4a7-db63364ba895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e4dc12-7790-4d72-9707-ee475d188c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55c4f09-c522-4734-b185-75cfd2bfb171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f25aec-f9b4-4cef-874d-81e797ebe745",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0eaa8b-8f36-4a83-82dc-4b8ba766eef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fb6825-f951-4710-a32e-0024786b2660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a57362-bf0c-4ba2-9896-02354308b1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3d9e6c-a9d4-494d-8993-c40559a586d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc6252e-2ed0-4b70-97cd-b91bb1c30896",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606789c1-f582-40b9-ab59-0f37e71ef494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aea6a8a-4911-4818-83af-f071fdc5b8fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7612eb4-223f-4632-85aa-fc10b86e7968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c213be4c-8eb5-43c9-ba37-0996fd48ae3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929d6b73-13a0-4360-895a-08e0ce1a7fba",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f41462-8d7d-4618-b0a1-26a5338cf6b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec028f11-f00d-4173-96d2-5d8472880d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74d577d-77db-4751-8a58-ed4eb8740031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d680f906-ca0f-44d4-baaf-c0263b99ebc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6a60ad-7d0d-4485-ae31-e1b62b6a1543",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef0e2a2-ddb0-4fb2-9936-da2f80314e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3dbedc-4e3c-4e23-b5e1-54057974d978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911af383-65f7-4108-a0c8-ba645f78229e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1358cc0-abe1-417c-991e-dfa6441814ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418477a7-2233-402f-8408-31105ca2b851",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9183d246-fab3-40f9-a9a4-4793007b722b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54def95-f884-4daf-8dfd-794aca0d6781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc22886-6071-4948-b780-267607b77fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddaa169-a627-4d74-8244-61ec9fd490aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2951399-f028-4759-8591-d86bc84bb728",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169d88d6-05bb-4bee-aacc-ac9da66ae32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78799023-228a-46e3-9cda-d1dc8381bc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deab87a6-0ca3-473e-9473-de42036d9bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098a2be6-7436-4aec-b72a-358bf9861f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31377179-7613-471a-afac-69e99e68c1c0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5044f2d-745d-4051-85d0-b66cb202c60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d96a2df5-03e6-4cd6-877b-011ebbc36d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65053c3-c637-4290-8341-7a5550e90f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b16df20-6589-436f-a598-ff0770c206c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7908e3fe-cad6-4013-82d3-90c5fa244e85",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892c53de-ed10-400b-94aa-491121a3d5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417294ce-6446-445b-a384-dab4cced56c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac1f49c-dd1f-4dcd-b3b3-a245abfbd0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87d2bfd-43b7-42f6-9728-22e05e98e571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2ef49e-5414-4449-bd18-5d420e631e57",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564804ad-4018-4f34-998c-e65a43e37127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "502ed80e-b0a4-48b3-97be-21b48549be30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0132cc-233b-46fe-b9dd-d38e7585acd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae13814-c703-4d30-8e7e-18a67946bd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc356678-c272-411a-bb59-c095e871c37b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2a46e7-8563-4aa8-a45e-88cd0def48a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce433305-484b-40e9-9932-8f056eb83436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e98670-9619-4a64-a14c-a6bef87e3798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0910deb8-ad3e-4d52-bc1d-e21ee8181d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ad3663-eafb-41d6-bada-9ee1d339f80e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689c17cc-6fa3-42a2-8e68-f16f8ca73a0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b0d8f97-befb-4931-a6f8-d555e6b6ac8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d42846-a574-41d9-9e48-33a0a8145ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041313d3-4a14-4fd1-bd23-19c8abac9f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ebe387-2500-4d77-b5cc-b7cf9a3d4d81",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75df7e39-74a7-4843-b890-eb96599c05f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08b09a17-276b-4306-aa7e-dade31e4c3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c04d0d-47d4-472c-9c1a-370aeb048996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169eebc6-d617-4552-b3e2-04086a5dc412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24969c78-453b-4884-87fa-9cb2d6d9d39e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825c9e88-c9bf-4019-a6d2-e7a326356972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c499b4-18a1-4e20-8216-7dd04bd675b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17155a09-10eb-479f-b222-37ac452d0848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623cdda5-3054-48d3-b2da-bc522275643d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a549883-45f6-4b27-91a9-d60c958b42e8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f53cdbb-d5cf-4a47-9c2e-7c0f51370d18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "110c5869-c840-45eb-ac1d-19bf75af9935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f168fad-4538-43eb-a4fd-0e170d45e827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79eb84fc-d89d-4402-8d8a-13cfee6d7c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b86e60d-947b-485b-b455-7c6974425e79",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df243dc1-0ed1-4260-9060-1d7e8756f6a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd5d689-17f2-4a24-8f0b-3779625206a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53acda6b-2624-4cec-aa1a-71677a5459f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c433ba-2af0-439b-b45c-530df6ca58b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56c2528-7c06-4237-8a41-995ec1f3885a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8600f1b-35a9-4d90-80a7-690468a26715",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe2c9618-abb8-4565-b777-8d4cde69bdcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95648953-f35f-453e-aa9f-118d6df742d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a1f392-f2d9-4db2-9f34-f1b9cc268582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783907cc-0172-4c9c-8cfc-6b37bc88669c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d2d80c-ec23-494d-87c4-88fa63ed80cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "311e4c21-c24f-4a72-99af-50597cad3f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccef82a1-fddd-4321-97f1-6510faccb90d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39324f16-ba03-42a1-ae3f-476f10fddc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e82cf89-49a9-48a6-9a3b-0237fff6aae2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62537b11-c05d-42f7-b358-e29964bea001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37c6205-7261-4211-9e99-1b7b678e84f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516acfdd-0656-4354-b348-860084616e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047e81ba-2ca8-446a-a29c-4a60e2a6b13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9429e34b-1e01-4117-b357-ce232e633fd6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c852dc83-86e6-4e11-90b6-b6589f0b7c46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2da9a19d-b246-4c9d-8d93-90c07d9c8a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cce1ce-4980-42ff-b916-8ad2f2a8050f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad316453-6a5b-41cd-8a82-3925250e61fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1882bf-056a-481a-8d90-0e8d550ce443",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55deb9fe-7faf-4efd-8b9b-ac1d7d8bacea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb393ea9-abe7-476e-8404-fb040facea70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e11b15-0331-4902-94b6-16b4ba655239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a1b945-0508-4dfc-88de-62d917fd5651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684c581c-dd69-4acd-8cf8-07219a7b55ee",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397e8539-b619-46b3-a731-70403b7070aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca25e63-c6ab-49b3-9a86-17779110e7cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1addcd4-34c6-4e76-9529-24c0a9eb0361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9523b1-4679-4375-9312-a1111997efb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccb0e61-4a22-4056-bb89-dc2cf52339a1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8840401f-816d-4f3f-8f09-12892ee703f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655f72bc-07d3-410e-a96b-08199a385c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "732b1441-5e05-4dfd-9e25-9fad807faa00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad5097d-2db6-42fc-b20a-d1dfebdb670c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b897b697-3210-4a95-80c9-8835eecb0a6c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f20b4c-4370-4ab8-8dfc-6cd07ed8e080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6adaaa6b-9093-41b3-b8fa-1a7d57c6eafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323540e5-1c2a-4874-a9f7-fed1bf183dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e8cd90-e490-4abd-9d50-85361cc7fdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a4083a-607a-451e-9d7d-6ea920e6b20b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c8e480-f3c5-449f-98e8-8711e61c8d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83d7e7ca-fc47-4a42-b892-72f929cd3b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201dabf0-add7-4258-b475-287dfab9b63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd0ed69-17d2-46e8-bad8-a493e795bec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2751595-a91f-4979-88bd-273a3d3a35d9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0cfca6-d350-4b88-9c95-811ab80aaff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e0b682-2455-42f5-8be4-bf7f971be403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f00263-4fdc-48bc-bdbf-7e09aa0d41f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6a83c9-540d-467b-a5e6-231279600197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283e46c9-17f1-4666-a94d-019b14c72742",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484a8199-1e1f-49a6-9fff-c6f38976e7ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4415722d-b57d-40f8-b7d8-76e337bb6e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e76d965-3c1a-4932-8a14-5119a73a5444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1195214-3b4c-41de-a9d6-fdca31338c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f7235e-7816-48f8-83f3-1f898c6ef221",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42c0137-496d-47a3-99e3-d217cd21ae72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2311044-a939-4215-b72d-f955ffd3e261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0253cd89-59a5-47fb-a280-36ce94bb4440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcd44c0-fccd-41a0-8ca5-86b3009674c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f0207a-87ee-44d8-b420-06aa8d508b9c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2cc97f-d184-4dc1-a534-ca0a8b34baae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43578b67-ce7e-441e-9bd5-58eea7833d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a88ff6c-80b7-4212-a599-f1ceac7d706b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b75011-faf5-48ca-8cd1-f098d5e5721f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a13cd9-da5c-4c0a-a7b7-356b29fe6526",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d32f950-5492-4c62-9768-5c7de2183ad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe2e8312-9358-454d-8bec-dc513528dd6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af78a40-b54b-4f20-8e6d-481018ab41e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c2b22c-9bb8-402f-859d-0c65953b544b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdfc0d1-8177-45f9-9ad9-5add8e67c2f2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e4fc63-b704-48f7-a9cc-2a47d4dc3ff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65967194-e86c-4e02-a09e-1bec1fb57a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25df64e7-aad1-4c5d-9294-681d4cf9dd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7b80d1-8aed-4975-83cb-61ec3685eb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee975ec-2962-451a-8f87-e7d5416cfeda",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f3cb99-9094-4cbb-9915-eb54bd471049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f277e877-f0aa-4410-802d-00157d362cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2155092-f63d-4888-aab1-4521f2665753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d63f92b-6a51-4051-a06a-9eed749768f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834504a6-e699-427d-9c5c-d4ad3b392c15",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31aefae-ada7-4ed2-afdd-844e88bd300a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d7a808-ce96-4000-8074-815501488407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eccc098-1711-48ce-ae44-e4e62f75ed5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c6310a-1f18-42ad-acc1-eecde9ecdd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6e80e2-cad4-43c3-bffb-ba45a2a4ec21",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca502b7-6885-4a56-8d0e-921d92a4cdb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34e7aeca-c92b-47fa-9120-22cd6349a95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d569a4d-772b-4b32-b53e-66ad95e945cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654a6063-d2d1-49b1-8abf-b9c528a0be64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5717c978-de3e-478d-b7f6-b5bc378fdcb9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566d8c73-56a9-4fc6-b0f6-eaa14d03b999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c889d043-c9d2-4ffa-a7d7-9afb3e601bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ef598c-7deb-4b34-a104-b4b86a487cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5547b75f-6880-4422-bdea-1d28040e49be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d92dc1-1d1a-43a9-8ea7-e8dbf7d7c2b1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4be241-0eaa-438d-9179-604e5d52583b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd7c2ef7-8798-499b-8879-7c43c5cd11e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d026906e-78a1-4ecd-a045-ad257e4bc33b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25291e81-082c-4f14-8d86-4f81765a6549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bc16cc-6551-4e1c-9339-750de6d64009",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a40a4c-e2dd-488b-80d3-422cf8b0fbe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2c2aaa5-905b-4930-abdd-c39147b70d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4afd8a9-b32e-4111-9ad4-532d7a19a120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c05c42e-61bc-49c0-8fe9-00a74fc38dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36699e4c-6b55-45ae-b93f-3ea1307e51b0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5266b0-6057-4f2f-a663-35adcf17a82e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ab1511-c281-4118-8978-ebb51fcefa04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca322f4c-5f53-4af3-93c4-bcd28b35ac2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af320a7-8edb-4b57-bde9-e667d3bd237b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517c103d-9dd8-4e5c-8dd6-fd80f6f3f676",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcb0dc0-5aaf-43d3-88df-8c7ab0f24531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84da13e-0794-485c-a5ab-511f7db7d17f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e224939-77cf-4770-9634-95bd1d47ec11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825efa50-a7a0-439e-a5d3-3332ddfcdb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ad3691-5fa9-4582-97c4-f392997106ec",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260feca5-ee5a-4ada-8520-d61de1a4ced3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab9d96e-8ea9-48bd-9746-f9f8c1b49572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ba3da5-4857-476a-854e-60621f82c790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a27931-5b64-4f30-9d9c-a8c6d9145ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b3f7a7-56d0-41fe-afeb-90aab3849aa4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73665152-4ff4-4ad7-b4e1-2d801e2fed01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "920f1b5a-40f5-406a-be15-9e0d9e3f6e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc75f393-2cad-45d7-a818-17a9a7c49be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f919114c-88c5-4214-a177-34edb59479b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8f1a0c-67b5-41b0-8482-2e978a19dd84",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f22706-edfe-4669-83cd-8fdffa38b850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2864fafc-9838-42ba-82a6-87bd78eb3da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a14c3cd-bd28-4f4a-8603-f6d2c14f5251",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b36b57-649e-4ca5-b9db-694e7ac57cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a4b009-daa6-4187-8f3d-6af8ba1d36b6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e69fbe5-30f2-4e83-9638-ade80f5f02d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c28c89d-b52b-4ba4-b320-1e377084c54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2846732-2b19-4518-b577-f672c79360c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d789fe3-1ad7-4b46-a86a-b1faca6f6f89"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f57575a-ae94-41b7-87be-3f5f838faa45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6711de9-1c8b-45f6-9440-f1c883af0794"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20a5c681-a987-4ebc-b47f-c4fef62988fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc56a182-98d8-4798-a349-77e2802457a7"
                    }
                  }
                ]
              },
              {
                "id": "daf748a5-e8f1-4c66-bd98-e960f61dc09d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f5501ef-44b2-45ef-9f4e-f50faadde906",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fe33dd-088c-44f7-9625-f4fd53f35e69",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3f2dc979-5ba6-409e-a74e-22b72637e465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a988de7-83f1-403f-b394-12ad7f2c45f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74d76de8-cbca-4502-a5e8-491e68ca89a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4422779e-a3c0-4096-a3f5-4b21080f9484",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "370a2c34-49c1-4a8a-847d-ae07a1cec7f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90a1c860-2f94-49b9-88ce-01a3fc208cc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "938b227f-a23b-4999-b6f1-52526a2a598e"
                    }
                  }
                ]
              },
              {
                "id": "faa93920-0421-4287-a108-e9aceb775e4d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c9eca015-757f-4ea3-93da-53454af399c4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea08fa55-c0e5-46ba-b745-06af5f3ade14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c7baf32b-0ccc-4da9-b0aa-1e12a0dc0349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc88a1f6-68f2-4d7a-bb79-b604f2bd4744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14585db1-b87a-42a8-91f5-f7dacba9b310"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "885eb323-66c0-4236-95e7-ae6e7c5fdaaa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eeb34f92-efb1-4071-ae26-6bd45c149491",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2364c96c-48cc-4836-b45c-e202c6b3c7dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ea54f151-38e8-42e5-8be9-2a3f9f1d1f4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9be11a6-4ac6-42ce-9492-e729c2e018d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb21e7a5-c3d5-42e4-8c4b-2df9d8117596"
                    }
                  }
                ]
              },
              {
                "id": "f52501d2-c684-43ca-9452-b36e4c301460",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53fb1e82-6ec2-47f4-8404-4ab189baea1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d39165ce-ad31-4d93-ab00-ff106745de2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b369b2c4-ca82-47a2-bf03-1e7e18a7c2d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e926d32-a81c-40a2-a7bc-dcf831b0a9f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58098fb1-a154-46e0-a4dd-7cdf98426e98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a0e7a3bd-9451-46bd-9213-3265c43ed976"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5dbefe1f-9774-463f-a9d4-12701f49a94b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "655bdfd2-d23f-42a6-b1cc-77666f9eef8b"
            }
          }
        ]
      },
      {
        "id": "fe660cfb-a122-40ad-b882-8ab8871417c8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a457a182-3d41-4c3e-9641-9eaa73d3abc4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d7387a0-b9bb-4255-b65a-a464fe77bfa3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8b5a0c0-bd9c-4e5d-91ea-8be440c4a0e7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08d839e-30b4-4b4e-8010-184b192b7b0e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c20a3363-5d8a-4adc-9ab6-fc0d72f17dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88461fe8-7245-4f9c-a84b-4606194f3a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c8c1bbc-0817-4603-9181-c998b858f5e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac282e2e-9704-4fa0-9fd4-c9412938a92c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d57207b7-71d7-48ce-9a8d-905252a4949c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8ad519b-487b-431d-a2cf-9b11255f3dec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ef469a2-fa11-482d-b566-4b0140928485"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c55dccd-f0a4-4894-9a2f-b8b716a2a2f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "801bba71-dd9d-4acb-89e6-43c97e82ac2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ae61deb-9e9a-49d4-9142-2d1d4302e5fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b386df2-fb54-42e3-91b5-985014dfde3c"
            }
          }
        ]
      },
      {
        "id": "945c4334-4697-4f5b-8426-decef56daa7c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f55cd84d-816a-426a-a72e-1347ea6f873f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36923976-4b9b-4534-90be-5fbf30c65a45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67c20dcf-d247-459a-ac18-933e18dc5319",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0edb6e-2a5a-4887-bc99-457ac462a434",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f7b5223-2043-4751-ae23-413b409bc860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa52f4a1-b896-493e-8286-1984e1abf7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "576d539c-6eab-46cc-89c8-d0d6897ecb3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7f92f16-b0b2-402b-acd0-e68ec8080f7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9eab0c5-6cb6-4ede-884b-bd0ad4c4b2fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99dc0207-f091-4259-a89c-3c1d4dd50488",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "617a23d9-1902-4bbb-856c-c707f618c81f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da4ca2cd-ffde-4491-9dfe-759ab81a0392",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a55aa2a9-77ee-4d1c-9bd6-bef4be2ef60d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2bf1b04-7a2c-4f2e-b0e5-2aeaf3eb04b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b7d066b-18bd-44a9-a960-fa0cfe3ef715"
            }
          }
        ]
      },
      {
        "id": "dc94d1ba-ec26-4d42-a796-2c60c9ad3cab",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b4a622eb-aabb-4f8f-b936-489a354b761f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee3e4b0f-2373-42eb-bd1b-4055ce979a7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ee608df-e656-446e-bfed-6b274e57103d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef11fb9e-11fc-43ef-9633-a840ac2d029a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e90b6f3-a2f0-4f07-9f7d-b29433a882c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e9dcc3-b466-4859-a4ae-cf51a7b8899c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1716a7ef-1b70-4230-8204-635c38ba70f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5434aaf-7d6f-47a1-acc3-4fbfcec5bf92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c186a121-e0ab-4d33-ac14-d35ec7780b6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95227496-f6e0-425f-8223-78f5ed51aff9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9150a6b7-5800-44bb-99c1-b87df44c1b77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "856a079b-866a-4926-a73a-ccefc721222d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "036284c5-3ac9-4ec7-ae96-0ab64d223dd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a73b5e4-3b95-4157-91e2-b19ac047767a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56d2186a-4ceb-4eef-8bd8-c7d2b9db9733"
            }
          }
        ]
      },
      {
        "id": "faf31c3b-4678-4e81-9f86-788ac70af11b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b66fa85d-408a-4634-9748-c26bc0925630",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db1de462-aea8-4642-b53e-0fde247ceb60",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f762f005-5eda-479e-8b18-166a69254863",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ed81812-e95c-4ac0-bb0c-931586844a92",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a15478e1-21e7-4428-9c71-64cd1d577224",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 7
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 251,
        "pending": 0,
        "failed": 4
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 35
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 7
      }
    },
    "timings": {
      "responseAverage": 132.1491935483871,
      "responseMin": 6,
      "responseMax": 3271,
      "responseSd": 382.19098565439623,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715906200578,
      "completed": 1715906241877
    },
    "executions": [
      {
        "id": "8c0e2e89-cd67-4265-9ecb-3477e3bf03ad",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7f8a6d8d-6b8d-4da0-9e5b-87539ec75a29",
          "httpRequestId": "7ffdcf99-ed63-4aef-b34e-5e29f63b697e"
        },
        "item": {
          "id": "8c0e2e89-cd67-4265-9ecb-3477e3bf03ad",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "44e7cf72-1eaf-4cd8-819f-de85bb62309c",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "e146f277-d274-44a3-b2b5-e220042b9b1b",
        "cursor": {
          "ref": "0d1941ad-698f-469a-8358-2c20f319f5ba",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "764920c9-d856-4855-82d6-7800347aa504"
        },
        "item": {
          "id": "e146f277-d274-44a3-b2b5-e220042b9b1b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5c27f1db-2486-4793-b966-1e72dc78a966",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "97312023-26db-470d-9693-51d27092b8cf",
        "cursor": {
          "ref": "e05a3db1-8ab4-44e6-81d2-82079b91fce6",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2fddd37c-8171-4c35-8e89-72049f90ec74"
        },
        "item": {
          "id": "97312023-26db-470d-9693-51d27092b8cf",
          "name": "did_json"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:3)"
            }
          }
        ]
      },
      {
        "id": "d8aa0ce3-157f-489b-ada8-8f788663e26d",
        "cursor": {
          "ref": "146b717c-5d85-48d5-ad4e-dc235f832473",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2ed4eed0-9d2b-45d0-9c04-3c2a45cab16d"
        },
        "item": {
          "id": "d8aa0ce3-157f-489b-ada8-8f788663e26d",
          "name": "did:invalid"
        },
        "response": {
          "id": "9b4307d8-fc7f-4513-9df1-0ece1050aab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2355,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8aa0ce3-157f-489b-ada8-8f788663e26d",
        "cursor": {
          "ref": "146b717c-5d85-48d5-ad4e-dc235f832473",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2ed4eed0-9d2b-45d0-9c04-3c2a45cab16d"
        },
        "item": {
          "id": "d8aa0ce3-157f-489b-ada8-8f788663e26d",
          "name": "did:invalid"
        },
        "response": {
          "id": "9b4307d8-fc7f-4513-9df1-0ece1050aab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2355,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a34cda-7239-4300-8dcf-a09a4a36f78d",
        "cursor": {
          "ref": "04e21d19-7cca-4b23-837c-eb04874f1086",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1b054c3f-c286-4cca-97fd-f3b2f693d247"
        },
        "item": {
          "id": "50a34cda-7239-4300-8dcf-a09a4a36f78d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "905e02c8-a08e-4a33-a512-597fd5f0270b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2640,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af58dcb9-1ee4-4024-8da3-fb66a9f0f6d8",
        "cursor": {
          "ref": "d6c35b09-da90-4274-b5ed-f671305fbe34",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1e6e4a34-0267-4ad2-8ce9-8addd31c00af"
        },
        "item": {
          "id": "af58dcb9-1ee4-4024-8da3-fb66a9f0f6d8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6a3542e6-5b7a-41fc-a7bd-b20e7e1a22ff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2071,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a795a88d-502b-44bf-b7d1-f4394edd2962",
        "cursor": {
          "ref": "2af4f616-51f8-4a56-aff6-0cfc1a1d7cc9",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "aa2bcd32-4dd9-4289-9105-c7c638ea3b03"
        },
        "item": {
          "id": "a795a88d-502b-44bf-b7d1-f4394edd2962",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "15b112f4-9050-4183-8306-a113b3f7aab3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 404",
              "stack": "AssertionError: expected response to have status code 401 but got 404\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "5db82e6a-f1fb-4bad-9240-53cd9c1c19b8",
        "cursor": {
          "ref": "b2484cfe-446e-4337-a2bb-8158db4f6f63",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "23b4b3cc-6b2e-4a2d-a619-2879084b367b"
        },
        "item": {
          "id": "5db82e6a-f1fb-4bad-9240-53cd9c1c19b8",
          "name": "identifiers"
        },
        "response": {
          "id": "8599c99b-e54a-493a-9322-f9ee48e5a912",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "id": "a5283f22-f8df-4a07-bbcd-8bdec5a1c4db",
        "cursor": {
          "ref": "45500a5a-b922-4cc8-8cbd-7d29d325e505",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a04e0408-4842-4984-88bb-387a3e0c1d53"
        },
        "item": {
          "id": "a5283f22-f8df-4a07-bbcd-8bdec5a1c4db",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8009ca72-e09a-4622-96b1-d3f4dc06c75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ed5ce8-09dd-4002-9955-c99dc6e70120",
        "cursor": {
          "ref": "92ea6d38-fe2c-4a4e-bd0e-34b6d85a7337",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "16abf4c7-f4df-40b1-9954-a73d4f25c6c0"
        },
        "item": {
          "id": "71ed5ce8-09dd-4002-9955-c99dc6e70120",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "435caa77-870d-4ac9-b013-452ec6f61260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2b1f5e-4970-473a-a80d-948c6d805b11",
        "cursor": {
          "ref": "8b858497-04e8-466f-a431-1bb4308dd85c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "27a26361-155a-4f92-b0d1-945e295eaf86"
        },
        "item": {
          "id": "fc2b1f5e-4970-473a-a80d-948c6d805b11",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a5ed0fd1-d53a-47e2-bd7a-24d3422acf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e12b613-95f6-4d76-98b1-1fbcb7c630d3",
        "cursor": {
          "ref": "64ed17ac-0dbd-4fbe-b9ac-384b55dc037d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9c2ce22c-7f9a-457c-a0c2-3e318d7b169f"
        },
        "item": {
          "id": "3e12b613-95f6-4d76-98b1-1fbcb7c630d3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cdfea4eb-cb65-4dc6-a24d-d62c72bb93f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912e9cf3-202c-4fb4-a756-877e08c06816",
        "cursor": {
          "ref": "745c0d10-40d7-4b71-bb5d-ef9d054779cc",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f9819352-f162-48be-a4c3-967c9292efb5"
        },
        "item": {
          "id": "912e9cf3-202c-4fb4-a756-877e08c06816",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3e5f75eb-4aa7-4c61-bf97-63c99b1c54cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df609a6-a5ff-4088-8784-8d13ccad4970",
        "cursor": {
          "ref": "de799a36-0146-460d-9990-133454608c08",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4a26df8c-32ee-4924-9472-3417412511e8"
        },
        "item": {
          "id": "3df609a6-a5ff-4088-8784-8d13ccad4970",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e5c6620c-a10b-4d96-93a3-6c693a00123e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89c03e8-8721-45ab-b685-c9574b0579e1",
        "cursor": {
          "ref": "d3c278b1-de6d-404e-a7cf-6f5a3e1641a2",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5c560c76-55d9-442e-86bb-607ba5e71bab"
        },
        "item": {
          "id": "f89c03e8-8721-45ab-b685-c9574b0579e1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ae808474-67ac-4a42-88cb-3b6943e970e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8c903f-e61a-4c16-b862-a1b615668f1c",
        "cursor": {
          "ref": "2edf882b-4531-42e3-b0ae-478c4ae554b5",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "796d3b64-aa04-41ac-937a-c6ccea13f5f3"
        },
        "item": {
          "id": "4f8c903f-e61a-4c16-b862-a1b615668f1c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "01f247e1-a66d-4a3a-8dc1-a6dda20090ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a267f837-0ec3-4ea0-801f-be3e8d16508d",
        "cursor": {
          "ref": "fe42f078-4dbb-4e1c-a037-2e5a13bfa6f5",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7c7446a2-44d3-4eff-b578-9e6210e38413"
        },
        "item": {
          "id": "a267f837-0ec3-4ea0-801f-be3e8d16508d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4a8ffd02-3113-47a9-8d60-0af8860a96c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbe5a3d-fe63-4d7e-84e4-c8aee97bac35",
        "cursor": {
          "ref": "2a0cad31-f330-4f89-9c8b-ad4f2c0843ce",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f26e2e19-54fb-4794-bbfa-58f556df531f"
        },
        "item": {
          "id": "9bbe5a3d-fe63-4d7e-84e4-c8aee97bac35",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6cf77e98-baf0-4ade-81fa-5d02668950c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177969eb-8826-4242-ac95-80de856c8085",
        "cursor": {
          "ref": "f4b0dec1-ef76-46ff-848b-07ada665c1b4",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4939e51c-aeea-4460-9130-0332fd2a7a70"
        },
        "item": {
          "id": "177969eb-8826-4242-ac95-80de856c8085",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c53f2262-f857-4dbd-9978-6fb683557448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c324cca-f6f0-442d-99bd-ec84c1a1ec32",
        "cursor": {
          "ref": "cb4a4d96-486e-4029-9d6e-f33f374ec7b6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1f580333-3cc2-480b-9843-fdf57bd6d5b4"
        },
        "item": {
          "id": "7c324cca-f6f0-442d-99bd-ec84c1a1ec32",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "711fa3fe-4aa0-45b3-a39b-888fc1427907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85e0e54-65b9-49c4-b658-5e2bf2b48e77",
        "cursor": {
          "ref": "4df1f33b-ec63-4f02-9adb-fe396b4fa844",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "559ea61e-b8bd-4844-8024-171a925514c2"
        },
        "item": {
          "id": "a85e0e54-65b9-49c4-b658-5e2bf2b48e77",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "791013d8-3bcb-4ab2-8ce4-a8af2f2cf9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3d88ee-89db-4ae7-b60f-949f3f814fec",
        "cursor": {
          "ref": "3f2a1bed-081c-4416-a583-fd0fae5b9ab7",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bf6ddddb-2cf4-4610-8323-2e770cd03191"
        },
        "item": {
          "id": "6a3d88ee-89db-4ae7-b60f-949f3f814fec",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "544f5c88-5a24-48bf-925c-13c55360bd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013ac5b6-d831-4a37-9628-29df416f0cad",
        "cursor": {
          "ref": "f11fad1f-248f-4cba-b1f4-55f1276947e7",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "37a92251-cd99-400b-8b02-c46eca182a09"
        },
        "item": {
          "id": "013ac5b6-d831-4a37-9628-29df416f0cad",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6ab3baab-e97b-4683-91c5-890e262a37f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5617452c-73ca-436a-8a3b-eb7c5be23692",
        "cursor": {
          "ref": "ef20d8c4-426b-4b06-a23e-f400c9ad426e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ce8d2dfa-8860-4d23-a0da-e6df68f068f7"
        },
        "item": {
          "id": "5617452c-73ca-436a-8a3b-eb7c5be23692",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "566456d0-4fe3-4a75-aa65-3a85c78a5b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b605036b-7edd-45b7-a1a9-d9375a6dffae",
        "cursor": {
          "ref": "e2aecc43-7b02-46bc-8789-e0ed07b630fd",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "681d6624-767f-40d3-82b9-20b8378cc531"
        },
        "item": {
          "id": "b605036b-7edd-45b7-a1a9-d9375a6dffae",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9fb193fd-ad99-478d-8df7-f27fb1124d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7e6453-abb3-42e5-b0ef-7f13e60c9bc0",
        "cursor": {
          "ref": "eb87965d-754c-4c29-bff2-60d9e899aeed",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a8dd48d5-9bd4-49af-99c8-60602a2a8344"
        },
        "item": {
          "id": "3d7e6453-abb3-42e5-b0ef-7f13e60c9bc0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9670ce08-2b16-4b40-aa8b-3ceec35a292a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6505437b-c0f9-4764-9e18-006e94ea6ba1",
        "cursor": {
          "ref": "40248ea5-969b-4143-be6b-ea8e7576d7b3",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "74c5418a-b2c2-437f-b075-2e34773cebb1"
        },
        "item": {
          "id": "6505437b-c0f9-4764-9e18-006e94ea6ba1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a51ae4ef-f3d0-485b-be37-c2f43ce6d671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46065db4-31c2-4222-882e-c1599cf3bce7",
        "cursor": {
          "ref": "869f6254-16d4-49f5-b4d3-24e67944c08b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "83ba90f8-698b-4075-9f1b-0942b9d77630"
        },
        "item": {
          "id": "46065db4-31c2-4222-882e-c1599cf3bce7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b54301e6-5619-406c-92b5-36f22c0fea16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a201d318-cdb7-4116-bf44-517260566b6e",
        "cursor": {
          "ref": "efd9d5bb-15f8-4f10-b840-1df1c87f015a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "49dba7c0-2cd6-4d7a-a7a0-acdd5c5b1317"
        },
        "item": {
          "id": "a201d318-cdb7-4116-bf44-517260566b6e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ad23c8a1-20f8-48f9-8d8e-32222f300e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59db6f1-379a-46db-b25a-5d18c275d821",
        "cursor": {
          "ref": "09ca5079-9b7a-4e42-b612-9e9d46d61a47",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9b1392c8-d3d6-4842-8192-4565c2670695"
        },
        "item": {
          "id": "c59db6f1-379a-46db-b25a-5d18c275d821",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cc53e362-2d04-49e3-9e32-ab2524314fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcce07d-0aef-4125-8231-0bd54e5ea35f",
        "cursor": {
          "ref": "34754351-ab69-404d-9faa-90414c8a81bf",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6ccfe455-c96b-4ffe-aa0d-b4017961c10f"
        },
        "item": {
          "id": "6fcce07d-0aef-4125-8231-0bd54e5ea35f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2099c592-9cc7-4e97-8114-bf64a828c47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e9caf4-c48b-4563-aa87-28ac8b6c3954",
        "cursor": {
          "ref": "a029a2b0-0f59-4fa7-9f9a-874e7493a32a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c28dd686-97d4-46f9-aca7-2f1d3b8f2f67"
        },
        "item": {
          "id": "85e9caf4-c48b-4563-aa87-28ac8b6c3954",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "728793db-e284-455a-84e8-0d17f722260e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb16bede-40be-43a9-848c-ab3262851e33",
        "cursor": {
          "ref": "102aee4e-9d49-4029-a7c2-4751fd200e3d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a804ca53-8a61-485b-a487-0383fbc9171c"
        },
        "item": {
          "id": "bb16bede-40be-43a9-848c-ab3262851e33",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5b1dca53-a6f2-4d58-aa6e-5e3d520a0b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838efa12-d14a-4dce-ab28-1b33b0f51717",
        "cursor": {
          "ref": "c99612b6-81c8-47fc-b991-88acc7e73b4f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6dfa004d-41aa-4be1-8f17-82e7c5c2eb30"
        },
        "item": {
          "id": "838efa12-d14a-4dce-ab28-1b33b0f51717",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "701aba79-bb52-4021-b2b9-c11268d69317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fb9a11-9cd3-4d29-aacb-2842991955fb",
        "cursor": {
          "ref": "6c650dc3-d298-499a-a185-ba74dd596ca5",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "82be5a1a-935c-4baa-a28e-96bd5654932a"
        },
        "item": {
          "id": "89fb9a11-9cd3-4d29-aacb-2842991955fb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ae0bfdc4-076a-44c0-98c7-a06d7f407b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf0a6a4-c988-4836-9ef3-ebb0f70e6aff",
        "cursor": {
          "ref": "fe4ff8a9-99fb-433d-8425-e80fccb524ff",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e75beb6c-98ad-4e78-876c-ed9d71cd3b3a"
        },
        "item": {
          "id": "baf0a6a4-c988-4836-9ef3-ebb0f70e6aff",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "784def15-9a5b-44fa-8a57-0c30018f2d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc29368a-2b19-495f-bfc7-fdffcd6eec25",
        "cursor": {
          "ref": "463cbb63-74af-43b9-a19f-351a64388cc3",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "826b4c88-4ee5-4a5c-8ec2-eeeb1f9b1cdc"
        },
        "item": {
          "id": "fc29368a-2b19-495f-bfc7-fdffcd6eec25",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f786d780-6065-4f33-a7ef-122a57328b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b884ad04-736f-4ef7-863f-71f0d9096c76",
        "cursor": {
          "ref": "54d819c5-4ebc-46e2-a2e3-00880a44fa90",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a648874a-1eb4-462b-a692-02a33bdd46b7"
        },
        "item": {
          "id": "b884ad04-736f-4ef7-863f-71f0d9096c76",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1ab3adba-1605-498b-a216-f24a1dfee83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5534444-e979-4e89-858d-88bba17a0e53",
        "cursor": {
          "ref": "c01cc82c-bacf-4c44-9262-8e66d90b23a9",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b98ef2cd-90f8-4d03-b3a9-c0de0298ba5f"
        },
        "item": {
          "id": "d5534444-e979-4e89-858d-88bba17a0e53",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "564d66dd-8f93-47b9-af96-9a0b89d26846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc161c3b-130b-4146-8a2a-210109d0d1d1",
        "cursor": {
          "ref": "d9c91979-8bd6-4740-a8df-a08256131d5a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e465b8fa-024d-4434-bef1-e0c6f578b2e1"
        },
        "item": {
          "id": "bc161c3b-130b-4146-8a2a-210109d0d1d1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8fd396c0-894c-4025-8466-b6da33eed82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd03abf7-28c4-4e44-95bf-81037a4dd9d4",
        "cursor": {
          "ref": "85dc3d2d-3a7f-420a-9b89-bc5bdd7ca202",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8be5a14d-2123-4269-9e95-7ff97731c82f"
        },
        "item": {
          "id": "dd03abf7-28c4-4e44-95bf-81037a4dd9d4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9dc41d16-6160-4c25-8a6c-6b4510cb607a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073b917f-ff3a-4ed8-8d79-408ec93d2fb5",
        "cursor": {
          "ref": "0610e556-5586-4fde-a21b-36683da927b7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c79e6531-3070-413f-99aa-b9a0b4ba78ad"
        },
        "item": {
          "id": "073b917f-ff3a-4ed8-8d79-408ec93d2fb5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "82449064-a940-41d6-b214-8a9b6e0029dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465ab73c-1103-4661-a702-9a4e0f155163",
        "cursor": {
          "ref": "edf728f4-fb29-4c70-bd35-c3878bb5ed24",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a474c5a7-a737-4119-9d38-fbf1c520e0eb"
        },
        "item": {
          "id": "465ab73c-1103-4661-a702-9a4e0f155163",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e9101ee5-42c8-41ef-92bb-b54cfaeb3664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791cf553-f65a-4186-b060-5aeca65cdda6",
        "cursor": {
          "ref": "19c06f56-3b60-45f1-a0cc-beb4e6c596e8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9a9cf659-0752-42eb-abb7-d1dee23d6b27"
        },
        "item": {
          "id": "791cf553-f65a-4186-b060-5aeca65cdda6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dfb0fcfe-a113-4606-a710-940ae62a3a99",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8389fc5e-ed10-439d-89f5-7049a956e086",
        "cursor": {
          "ref": "cbd2506f-5a6d-43b2-88cf-beb36c4b3c86",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0bbcb5a1-f24d-4ed8-8f33-1eeadef77267"
        },
        "item": {
          "id": "8389fc5e-ed10-439d-89f5-7049a956e086",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5ff2f461-f567-4265-be68-a219a43c25aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ad67e6-2d27-42dc-9916-7611af59d3c9",
        "cursor": {
          "ref": "38f73d46-f981-4999-9f88-91193c0eac84",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1361a8a9-ab22-4b74-a870-21cf6a40f169"
        },
        "item": {
          "id": "b7ad67e6-2d27-42dc-9916-7611af59d3c9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6a668226-7919-480f-b177-5c6104306823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0610d157-dd85-45ce-9cc2-a93f63a1fcc5",
        "cursor": {
          "ref": "0fbeaa86-d269-4fca-a6b9-de78ebfee441",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6a651a3a-908e-4be2-bbed-328152fdc168"
        },
        "item": {
          "id": "0610d157-dd85-45ce-9cc2-a93f63a1fcc5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bf2bd205-662d-48f9-bcdc-cad56f46272c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e726ad-d9f3-42bb-98ad-d727f19baf31",
        "cursor": {
          "ref": "bcc881a8-ccdb-45cf-9f47-8d9b2ec716f2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "91a64969-3013-4b37-b626-2a80955eb8ec"
        },
        "item": {
          "id": "15e726ad-d9f3-42bb-98ad-d727f19baf31",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9e843ca7-b155-4ae0-9d00-afcb1c0e8c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5924813f-29b9-4fcc-b250-2f5195064553",
        "cursor": {
          "ref": "bf3c59a9-0dbe-4a6c-81ac-b3509e080ca1",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4c55b5ae-0057-4647-9cce-18ef2ae4013a"
        },
        "item": {
          "id": "5924813f-29b9-4fcc-b250-2f5195064553",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "80146df5-f359-42ee-9cf2-1ce0c0e0c9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85419f29-5912-4b39-bc62-453fd0b46e05",
        "cursor": {
          "ref": "b3fbc3ee-9d43-4df0-ae63-84ea78408ece",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a277d16d-ff2d-44f0-a589-d3fb810e3bfe"
        },
        "item": {
          "id": "85419f29-5912-4b39-bc62-453fd0b46e05",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4c3b186b-871b-4da9-bacf-d72e625c2d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dc1de1-9613-4def-8134-3bfb2aa50b34",
        "cursor": {
          "ref": "2d8bb70b-26ef-418d-adb4-267b7c7265d9",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f03800d4-8633-4185-b2a5-66fd97072cc5"
        },
        "item": {
          "id": "50dc1de1-9613-4def-8134-3bfb2aa50b34",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "02a6cfb1-d032-420e-af25-133e38ebc94f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec71c64f-8fac-4d67-8d53-be74acc107d7",
        "cursor": {
          "ref": "408b7ab2-4146-42a5-91b5-98ed22a25e73",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cb481fda-ab60-4777-8129-2609a7f34c6a"
        },
        "item": {
          "id": "ec71c64f-8fac-4d67-8d53-be74acc107d7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cf72f9cc-daa5-4e6d-99e0-7b2a21f27c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5664e6-539b-49c2-999b-2bdb030d24d8",
        "cursor": {
          "ref": "9ca3b097-7ede-4d80-ad22-2e43f637ce3b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "52e48eab-3ea1-47c7-a134-161a1ceb5bc6"
        },
        "item": {
          "id": "8b5664e6-539b-49c2-999b-2bdb030d24d8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d319e5f5-d953-424d-8baa-ab3f9834252d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80605b54-ba80-43ed-9a2e-8f374c35cc82",
        "cursor": {
          "ref": "2600757f-43ed-4324-9506-2c4bcafe5e24",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1346dd81-f0ed-42b0-b6c2-eb197f944bfd"
        },
        "item": {
          "id": "80605b54-ba80-43ed-9a2e-8f374c35cc82",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "371d3030-8081-4544-b5d5-a09485c6ad6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9893ba8-13fe-4e8a-99c8-52a6c80cc87e",
        "cursor": {
          "ref": "3ba56a2a-ba53-440c-b3c4-ce4da2041a05",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1aafe140-0ea3-476b-9e3e-10dd94bf3c9f"
        },
        "item": {
          "id": "c9893ba8-13fe-4e8a-99c8-52a6c80cc87e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cec3a9a0-3fb7-409c-b2d2-861da67ce882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6326a4-0bd0-4efb-a538-da4e38dd510d",
        "cursor": {
          "ref": "41a9e3d1-aa93-437d-bac0-21f7990a2bab",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "081563d5-c642-4902-8409-753088157832"
        },
        "item": {
          "id": "aa6326a4-0bd0-4efb-a538-da4e38dd510d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b0d3d1ed-9d15-4f0a-ba96-b41b97cfd8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4330e83f-9c2e-4b3f-acac-182e8e2d2b78",
        "cursor": {
          "ref": "a1e6d322-8264-4dcb-9d0e-0bcca93c90b1",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "02fc3c32-4b8d-4d56-b813-f71d3cd7a832"
        },
        "item": {
          "id": "4330e83f-9c2e-4b3f-acac-182e8e2d2b78",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4e355075-ac12-4223-9933-58c2dc800f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10785b2d-56b2-4f90-ba57-bb087070e4ee",
        "cursor": {
          "ref": "fa8b537e-e335-4e93-9f0d-81895d3a7bfc",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fbeb1088-6717-478f-9aaf-c6617f4f2194"
        },
        "item": {
          "id": "10785b2d-56b2-4f90-ba57-bb087070e4ee",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d0f053c6-9b09-438f-bd7e-19be1713191f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5607107-650b-4626-93b9-9902fd3d59f7",
        "cursor": {
          "ref": "02c27730-a2e3-4e65-aa92-adfe59b57827",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5e9ecba9-1884-45ed-b3d0-ac4c2d76696b"
        },
        "item": {
          "id": "c5607107-650b-4626-93b9-9902fd3d59f7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ca74a71d-1106-4686-a1a3-75da7d0187d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1af7031-27b3-4ad6-be1f-89e85b5e616b",
        "cursor": {
          "ref": "0024f6e3-93b2-4bdf-ab77-49e7cff327f0",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b4a29949-f223-4951-bdfe-cf7d2a84de5a"
        },
        "item": {
          "id": "c1af7031-27b3-4ad6-be1f-89e85b5e616b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "688c4fa1-4c1f-4355-981b-aa226a18a217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d3c375-ee6e-4fa2-975e-3c92e25e08e1",
        "cursor": {
          "ref": "478bd582-4cc3-4ff3-a1c8-874528f425e9",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ea5e4786-ed7f-496c-9d89-c8763b238f98"
        },
        "item": {
          "id": "35d3c375-ee6e-4fa2-975e-3c92e25e08e1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "29e0b6a2-3182-4d27-93f6-17f50efa2ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083f441a-b95a-4a7c-a8de-f09021515ee1",
        "cursor": {
          "ref": "2a61f4c3-c2a2-40d8-bcc0-b51a77ba838d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3aab52ab-957b-4434-9ab0-8d11df782062"
        },
        "item": {
          "id": "083f441a-b95a-4a7c-a8de-f09021515ee1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "29467f90-baf9-426f-b4f5-969b17d94c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25705276-8a0f-46b2-9120-81d0bec9ecaa",
        "cursor": {
          "ref": "edfe58b7-eed8-488d-91a0-5876dc3d4db2",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ca1cc930-07ad-46c5-bec6-4fd7e0a60fb4"
        },
        "item": {
          "id": "25705276-8a0f-46b2-9120-81d0bec9ecaa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "847ae271-d1da-44c9-9582-5ad417b738dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7f3d16-1eea-4c9a-ab06-6a316f9df929",
        "cursor": {
          "ref": "0c7fbe80-1bad-435a-ac07-6b17aec1ec7c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "23b716e9-8c98-42c4-a637-3a4ff98da887"
        },
        "item": {
          "id": "4e7f3d16-1eea-4c9a-ab06-6a316f9df929",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "85683348-f184-4121-8688-b5365b73b89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92adcc04-de55-4f20-8ce8-cd37a31af89d",
        "cursor": {
          "ref": "3d63ca7e-31e2-4ea6-a34a-8efe306959b9",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1a78348b-3025-4438-b78d-f51bceb79ffc"
        },
        "item": {
          "id": "92adcc04-de55-4f20-8ce8-cd37a31af89d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0e32e9be-fe90-4460-984c-57cb910bc0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7381f27f-ce97-47bf-ba72-f5bdb2b8605f",
        "cursor": {
          "ref": "a2624331-4fd2-42ef-8894-5c2ecf24c3bf",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ae4acd1a-b83b-4e03-acfb-3dfb4138f570"
        },
        "item": {
          "id": "7381f27f-ce97-47bf-ba72-f5bdb2b8605f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7a47af7d-6c2b-4796-b511-6d83bb07bf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb7a425-1166-4630-8c2d-6c9dc47ead7c",
        "cursor": {
          "ref": "59399e64-99b0-4124-9072-7a8252841cf2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7c4a06e6-b663-4d11-b640-3b88b84950f6"
        },
        "item": {
          "id": "fcb7a425-1166-4630-8c2d-6c9dc47ead7c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3cc1e713-552f-44d5-b803-eb7ee5933f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d896ebf1-e5b0-4aa4-81ba-1d9960a62e5e",
        "cursor": {
          "ref": "cf199b17-8eea-4bbe-9858-519025dc1a5e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c277547b-56e8-493b-8ad8-bb9a400bca75"
        },
        "item": {
          "id": "d896ebf1-e5b0-4aa4-81ba-1d9960a62e5e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bedc5865-d15c-4110-aef1-3a1f387d27d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41aff4ae-1a5b-480e-b28c-e5660d583412",
        "cursor": {
          "ref": "52a39852-d3e4-49e8-a54a-050217ae0ca1",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fa90b51d-e272-4b93-a3d5-cd89ac09a3c6"
        },
        "item": {
          "id": "41aff4ae-1a5b-480e-b28c-e5660d583412",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b0ea7551-97af-4266-a7cf-d0cb05c41115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8410d48b-6040-466d-8904-ec51b2481a31",
        "cursor": {
          "ref": "448be0a3-48f0-48e4-b361-b340e6ba0b43",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "61de5918-9c9f-4a45-9e47-a62c5124e22e"
        },
        "item": {
          "id": "8410d48b-6040-466d-8904-ec51b2481a31",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9cfa73cb-a00b-4215-bac6-87971bc3b312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dfe2ac-eaed-482d-b407-9bf1ee28e5ef",
        "cursor": {
          "ref": "ce804355-f081-402a-b0ba-d34020cf1e4a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "226fb5f8-f73e-4a82-b832-6b45b4a6728b"
        },
        "item": {
          "id": "65dfe2ac-eaed-482d-b407-9bf1ee28e5ef",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e8606606-ece9-4d6a-990b-1b451254938d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aab6667-503d-4474-b10b-e2259f9da564",
        "cursor": {
          "ref": "7eeb030c-26e4-4ba8-9a78-c6226a8cea8f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "899764c8-48b1-4028-acab-e7ec27f644a8"
        },
        "item": {
          "id": "9aab6667-503d-4474-b10b-e2259f9da564",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "71a2f11a-470b-40e7-825f-a656089dcab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453c5595-a837-401f-ab88-cd89ca8181ba",
        "cursor": {
          "ref": "8302b93d-04c1-42f7-8ec2-97c776647de3",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5e16d6f7-c871-4344-8470-db188ef940e1"
        },
        "item": {
          "id": "453c5595-a837-401f-ab88-cd89ca8181ba",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7aad2c22-e566-4973-bf40-a7a0c8521064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67ad263-31e5-495c-9fa3-316b2ab3c3a2",
        "cursor": {
          "ref": "2779ae91-76fe-4018-836c-4ed84b3144cc",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5955a2b3-228e-4fa4-b34e-115a7c9315a8"
        },
        "item": {
          "id": "f67ad263-31e5-495c-9fa3-316b2ab3c3a2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7d19965b-634f-4810-9a83-e9a6c2668baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211c5d09-3c09-481e-99cf-c83d7d324c32",
        "cursor": {
          "ref": "33f7a7cf-1647-43cc-820e-cfcdd4df0aed",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3d2b7d25-76a3-4fe2-b14b-0e3e0400f01f"
        },
        "item": {
          "id": "211c5d09-3c09-481e-99cf-c83d7d324c32",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b091acbc-b504-48f5-b56b-0fa73aef54ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfeb89e-08a1-47ea-9a12-65a0cfc4df74",
        "cursor": {
          "ref": "c7b8f69e-2724-4b0d-be80-ef754d03d07d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "259c3f76-5ee7-43e2-8724-4d7733ca06f7"
        },
        "item": {
          "id": "ecfeb89e-08a1-47ea-9a12-65a0cfc4df74",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c968280e-71ab-40c9-892b-b18151cbcde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709cba99-0bdd-411f-acfe-e6c7f0bb8f7f",
        "cursor": {
          "ref": "9c2ca50b-187c-46cb-9236-4bde91a98df5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "92668f15-ec27-458d-a679-4759813e9630"
        },
        "item": {
          "id": "709cba99-0bdd-411f-acfe-e6c7f0bb8f7f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2c404be6-10d0-44ce-8807-da7f22815e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb901bc-741d-471c-9690-6f3d43312dc6",
        "cursor": {
          "ref": "0515618f-1d0f-410a-b6d8-087e1675605b",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8eb4d62c-0c8e-4b60-acc8-6e845a11199c"
        },
        "item": {
          "id": "bdb901bc-741d-471c-9690-6f3d43312dc6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ca197321-58bb-46d8-9583-561c7bdbabeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6805648a-7f81-407a-9018-9dc36a9c5734",
        "cursor": {
          "ref": "a9c545fa-bb1e-4b3b-b0ef-ea003f54f53d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "95e12f0e-1281-45aa-b088-cfa2c6d26497"
        },
        "item": {
          "id": "6805648a-7f81-407a-9018-9dc36a9c5734",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3aff50f2-1f10-4ad6-ae58-196b7db4ab4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8d8f4d-0183-453c-95f2-f58d7c60c8ff",
        "cursor": {
          "ref": "34d60076-516f-4a5e-bd75-69346879529e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "05503f1e-d4e9-4cf7-89c3-84f26ba46f19"
        },
        "item": {
          "id": "ba8d8f4d-0183-453c-95f2-f58d7c60c8ff",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7bf19694-aa68-4f70-8443-4f0545b03469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2253a9-1857-4fdb-a2ab-30bdb3dd6304",
        "cursor": {
          "ref": "ccf98add-819f-41f4-aaa3-415b623dc830",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0ebccc86-1625-4541-be1f-c3a4e67dfd8b"
        },
        "item": {
          "id": "ce2253a9-1857-4fdb-a2ab-30bdb3dd6304",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0cb027d3-da98-4308-9e2b-7aa4e6bdc8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a243ced-fe51-4fe6-a463-c12c2847d042",
        "cursor": {
          "ref": "a1e07d4d-b488-4af0-ad42-afbb43587be9",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ba6749fb-2004-4e94-b925-7e9e6a821f27"
        },
        "item": {
          "id": "8a243ced-fe51-4fe6-a463-c12c2847d042",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8c99cf2f-deb4-4113-ac06-3e319663126a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e223c9c-f215-4dfd-8fd2-8d075bdb9f19",
        "cursor": {
          "ref": "2920cc6f-e2c1-48e9-a5a3-33d87417b8b5",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c1715834-3636-45e9-a0e5-5a48a3f4a6ef"
        },
        "item": {
          "id": "8e223c9c-f215-4dfd-8fd2-8d075bdb9f19",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "06d0982d-69ec-42d1-b311-39c990ea1e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f377e2-2c83-4251-a0d7-394c31ba53d6",
        "cursor": {
          "ref": "4103a282-03e8-4f4d-972d-6cf72ab4cad9",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "43ce428e-aa68-48f4-80d0-3f461617cdec"
        },
        "item": {
          "id": "e3f377e2-2c83-4251-a0d7-394c31ba53d6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bd05d1e9-9449-4a45-a0a8-5d13632bc611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1689f5-8dab-4e29-b07d-a5860760cedf",
        "cursor": {
          "ref": "34874f54-3fa9-4bec-97de-39c67b69a112",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c83d395c-8045-4e47-b861-56d395e9ff60"
        },
        "item": {
          "id": "0f1689f5-8dab-4e29-b07d-a5860760cedf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "02dd5b66-568b-4bb9-9a23-574c91939843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6fb16f-a310-469b-bf8d-28688a7c3fc5",
        "cursor": {
          "ref": "5dd866a4-b6b2-4372-b244-cf16887f5a0c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3b5f9762-d2ac-424b-9fae-00b433a4739b"
        },
        "item": {
          "id": "7f6fb16f-a310-469b-bf8d-28688a7c3fc5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1bb76756-a577-4839-81c1-0ff09d221bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a70322-6a8f-41b8-acda-358ebf94990d",
        "cursor": {
          "ref": "97096bd0-335e-4f3f-91fb-3d6c49ef219f",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9669061b-07be-4e1f-b26d-37f352a10412"
        },
        "item": {
          "id": "f9a70322-6a8f-41b8-acda-358ebf94990d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "504b648c-f15e-4b14-ad45-2ceabb24b2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd31e22-7fe0-468e-9f78-ef50e5575a9d",
        "cursor": {
          "ref": "55fb00ef-07d3-4aff-b64d-4f929ca5c785",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a20d35ac-e1e3-41de-859d-a3a39186b519"
        },
        "item": {
          "id": "fbd31e22-7fe0-468e-9f78-ef50e5575a9d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "94424b55-9064-443e-8a66-d206bc8c47b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a330875d-c565-4894-a22b-97539c43bbc9",
        "cursor": {
          "ref": "2b30a860-9ee5-4a79-9fc7-92d4c86064ba",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2075a8eb-3c61-4a2f-a603-2b9b5e5068f2"
        },
        "item": {
          "id": "a330875d-c565-4894-a22b-97539c43bbc9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f0f57c5d-b12b-4a77-9946-b472a13de575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92964d1b-0e26-4cde-b419-cac1670b0539",
        "cursor": {
          "ref": "0e0647cf-eebd-45b1-9371-6f0d9954ec8b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "62171ef3-4c34-4880-8304-454b4034ca50"
        },
        "item": {
          "id": "92964d1b-0e26-4cde-b419-cac1670b0539",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "63dd0119-c26d-4b2e-81a6-7e30d2180de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef3ff85-3f53-4b38-9d34-5068c86e693e",
        "cursor": {
          "ref": "f13a3888-b2fa-4df2-9ea0-f4df81da37bc",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "96f70dac-9340-4900-9184-e6a14943c781"
        },
        "item": {
          "id": "5ef3ff85-3f53-4b38-9d34-5068c86e693e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4024d9a2-4a45-419b-96ba-36a83b7451a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36f04cc-e287-4e04-ac60-eef24a637425",
        "cursor": {
          "ref": "7d3eb6db-e375-4fd7-8f90-1d0cb36cf5b8",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b9a38be1-5288-491d-b576-b6c83c3b2287"
        },
        "item": {
          "id": "b36f04cc-e287-4e04-ac60-eef24a637425",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "542859b9-e639-4273-9c2d-bcc74a79be2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922e96b0-0cb1-4044-b226-8a4a03bb7b41",
        "cursor": {
          "ref": "6db2acdf-ba1b-46c2-958e-f409e32a736e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "986a00c5-aae1-4172-8772-af9f7eb1a9e1"
        },
        "item": {
          "id": "922e96b0-0cb1-4044-b226-8a4a03bb7b41",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f202dcf8-0a99-4b47-9459-9f083ec47213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf249673-3df1-4bf3-85f1-23a65c9aa7b7",
        "cursor": {
          "ref": "b23eda1b-33c3-49b5-8789-d0c24f560284",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "420cee86-d7ac-4d55-b798-3e156450df33"
        },
        "item": {
          "id": "cf249673-3df1-4bf3-85f1-23a65c9aa7b7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d82b84b7-94a4-4082-b723-5a8fa2bbfdd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275f6ad5-fdc0-44ca-bd06-528d099a3872",
        "cursor": {
          "ref": "a3b46ec9-5a51-422a-8d07-490feb95980e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "675b37f5-5016-4149-9915-9c62e4988a1a"
        },
        "item": {
          "id": "275f6ad5-fdc0-44ca-bd06-528d099a3872",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a0599c9e-02a5-461e-98a0-4a4165d847ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ea0ae1-5025-4e5c-aa8e-1a9508497fce",
        "cursor": {
          "ref": "98dc93d3-6ae4-4788-ac73-0eb4332363a4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "86ac62b5-d1e3-4762-ace9-5abdfcaf2d45"
        },
        "item": {
          "id": "c8ea0ae1-5025-4e5c-aa8e-1a9508497fce",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "565f8185-4b2f-435c-a70a-7439a1f5c45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c683f60-6712-4721-a100-a5b981993780",
        "cursor": {
          "ref": "dda3d4d8-0b49-4d82-9860-cb6120bb5685",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4e40dea9-c1c5-40a9-b526-4d83dd9be361"
        },
        "item": {
          "id": "3c683f60-6712-4721-a100-a5b981993780",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "888b711f-ecf2-4ee7-a310-430b5dfc7391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023ec8b3-6384-43cc-8c57-53319ac26a99",
        "cursor": {
          "ref": "d5f79f58-77c9-443d-99e0-f8b668f186c1",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fb7b2f9f-68d0-4629-bd38-9e7df550c02b"
        },
        "item": {
          "id": "023ec8b3-6384-43cc-8c57-53319ac26a99",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1e0a3230-7a24-4d41-8532-76644acf612c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e444c9d3-bb80-4ae0-aed4-3ada581bbe1e",
        "cursor": {
          "ref": "a44b9ccf-135f-43c3-9f22-28903e0c2690",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5090c37c-7a0c-469c-9fb0-fb1140c10444"
        },
        "item": {
          "id": "e444c9d3-bb80-4ae0-aed4-3ada581bbe1e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ffb06368-ff2a-4d90-b66f-8d4ce5a8fb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c014e2b-ff62-4e08-b8ca-6e7f09b2b0d6",
        "cursor": {
          "ref": "7216419e-e1dd-4895-95ad-db65dc5427af",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "00541c9d-2330-4a2c-9255-552e373f30ef"
        },
        "item": {
          "id": "9c014e2b-ff62-4e08-b8ca-6e7f09b2b0d6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4c0d62ed-8931-46f2-b6f3-e36aab976ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f879fe-1f61-4b41-8106-e87134ccdae4",
        "cursor": {
          "ref": "0e00f696-00cc-4e04-8b1c-a82deca1f6c0",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "41ea20ac-7718-42f8-9b70-18f4beebea2a"
        },
        "item": {
          "id": "64f879fe-1f61-4b41-8106-e87134ccdae4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "01941e44-7c5d-4c4c-a5db-8cce33f0ba62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e85fcb-d376-4a57-aa7b-0465461d3024",
        "cursor": {
          "ref": "5fbd645e-ecc0-42c8-a661-a5fbd65b2421",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "03b46ab5-902e-4d51-b373-3a8bd536fc07"
        },
        "item": {
          "id": "e2e85fcb-d376-4a57-aa7b-0465461d3024",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "965ef3a4-9c75-479a-b057-bc7d6e163ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "783db3b9-f8ec-4994-9ae6-9e21ff70cbe8",
        "cursor": {
          "ref": "8459f769-211c-4cd3-9604-0a414312490d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8c815985-017b-42d1-a06c-e7cf74b168ff"
        },
        "item": {
          "id": "783db3b9-f8ec-4994-9ae6-9e21ff70cbe8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "180b5cf3-9802-4951-9857-54e3f749c70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7d9d8c8d-757d-42d8-8fe0-075181d1947c",
        "cursor": {
          "ref": "9f381efa-cffe-4c7a-bebb-84dfc704324b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c0603ae7-0790-480b-9fba-cbc9806fd497"
        },
        "item": {
          "id": "7d9d8c8d-757d-42d8-8fe0-075181d1947c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d9eca317-6cbc-46ac-a178-c322f0a95f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2038de2e-828e-447e-b813-b3f4778709de",
        "cursor": {
          "ref": "a36f5e44-f5c4-4d3c-88d2-66b37a7ff2a1",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6c9f2c1f-72b7-4c4d-91ae-bfe36c579618"
        },
        "item": {
          "id": "2038de2e-828e-447e-b813-b3f4778709de",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "350d35e7-a7cd-4599-a555-714917b70f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7d233b57-7019-47f7-892c-8c608fbb8abf",
        "cursor": {
          "ref": "7df553b6-85d6-41ec-8209-86f8aea6067e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "84715c3f-af3b-4296-8ad2-6fd980a55afe"
        },
        "item": {
          "id": "7d233b57-7019-47f7-892c-8c608fbb8abf",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "484b2fb2-dd9b-45da-b9b5-1179284133b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f332f543-4f82-4bab-a77c-ad506b99cc52",
        "cursor": {
          "ref": "38c256b5-8e9b-438c-8b58-961410ebaade",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "20239056-d2ae-433b-b122-f06532af395d"
        },
        "item": {
          "id": "f332f543-4f82-4bab-a77c-ad506b99cc52",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "598618ab-1198-4569-8904-0edefec4dea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e83006ae-21e1-4b56-ab19-ff3f11317420",
        "cursor": {
          "ref": "37dace68-cda7-4065-9447-786e6b48eebb",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "46ce5de3-7696-4aac-839f-12a1cbfdb902"
        },
        "item": {
          "id": "e83006ae-21e1-4b56-ab19-ff3f11317420",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "815b339c-0020-4e1c-9415-3fdf16032ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "52bebb41-1a06-4218-9193-7145e846ff9d",
        "cursor": {
          "ref": "d59ad041-fc6c-4f8e-9bc2-a2a85c04724d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "730fc4be-d564-4545-bbac-73fc9a388a4d"
        },
        "item": {
          "id": "52bebb41-1a06-4218-9193-7145e846ff9d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "323bb559-f17d-4c4a-9643-1a55bb0b4d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0effe1d-bfe0-4408-b495-fbe909ca3241",
        "cursor": {
          "ref": "903714ae-47d3-41a9-8246-fb7e14513748",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "aef0f58a-17a3-405d-bf44-cef85751ec31"
        },
        "item": {
          "id": "b0effe1d-bfe0-4408-b495-fbe909ca3241",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1d2ae400-4098-4aff-b81f-312a1d843c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d898ed0-ae8e-4f3a-8a7d-e67264dcd752",
        "cursor": {
          "ref": "b1979cbf-611c-4fff-b44f-cc02d6f4a04a",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4883611d-d50b-4246-b6a0-7fa2b167d2f0"
        },
        "item": {
          "id": "7d898ed0-ae8e-4f3a-8a7d-e67264dcd752",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dbe29b84-e51c-4918-989a-5241b080b399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cd84c7-41c8-4aff-9aff-5ab012800c7d",
        "cursor": {
          "ref": "2ecce441-4019-41bd-b9a0-ff543e5cb870",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b93fa57d-c401-405e-9b5f-014e36f3c7dc"
        },
        "item": {
          "id": "d6cd84c7-41c8-4aff-9aff-5ab012800c7d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d618858e-56db-4077-8665-b49439b5b4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f086c2bf-c2b9-4de0-b2cb-3c466d51168d",
        "cursor": {
          "ref": "59f957e7-7ec6-4b33-bdd0-15400e15b877",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3a011609-d7ba-48e5-81b8-9b2e696a928b"
        },
        "item": {
          "id": "f086c2bf-c2b9-4de0-b2cb-3c466d51168d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8be59ab4-5075-42ee-b49c-316ca42ee219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5037546c-5e63-4621-88c0-c61a85def9e0",
        "cursor": {
          "ref": "9adbeee8-a089-4fa4-b23a-553bd899cf93",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1223a3b7-7d84-472f-997d-06787b049613"
        },
        "item": {
          "id": "5037546c-5e63-4621-88c0-c61a85def9e0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "61e44edc-1e72-4623-a928-b90f2cd77389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902d61b6-5f50-49b8-913e-8dc4ad88fe0d",
        "cursor": {
          "ref": "cf8178f9-bd30-4728-a27f-6e815a6d9be8",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5703182b-b1c4-4ba0-b6c9-7956735e1ab3"
        },
        "item": {
          "id": "902d61b6-5f50-49b8-913e-8dc4ad88fe0d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b90417e3-daed-40b7-a1cd-0da369a15f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb41c8f7-5d54-4b1d-91b7-220b2838b146",
        "cursor": {
          "ref": "1c435d39-b61d-44cc-880b-4d412e5d0fc8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b8ebee2c-b838-4d72-b061-fbf569df40d0"
        },
        "item": {
          "id": "eb41c8f7-5d54-4b1d-91b7-220b2838b146",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0dc4c554-d202-40f0-b583-3fa4e7bb2c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e5cf4e-766d-48a1-b7b8-a3c1931010a4",
        "cursor": {
          "ref": "d0fcf186-c6b2-40a5-b98e-1eeee6d88e02",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fd9d19bb-295e-45c6-a329-19f30754f686"
        },
        "item": {
          "id": "97e5cf4e-766d-48a1-b7b8-a3c1931010a4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2d100772-d62c-4670-a1fb-eeef828b0e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3994c297-2b70-424b-9d14-56f066b64f49",
        "cursor": {
          "ref": "4d2cc8f1-d995-4287-a8b1-fb7329b8bc40",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e6ccd6e9-0239-4649-a4c8-52ed25686fde"
        },
        "item": {
          "id": "3994c297-2b70-424b-9d14-56f066b64f49",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0736cf02-00be-47c4-bb5c-56fd1c712182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0e20c8-0ada-4ea0-8c8f-d1da665fb016",
        "cursor": {
          "ref": "1d84063e-6886-4244-a178-40d0ac23075a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a81eb415-a0e3-4c46-ab61-e4513e21f2d5"
        },
        "item": {
          "id": "7d0e20c8-0ada-4ea0-8c8f-d1da665fb016",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "360f27c0-3e71-4669-9e3a-b81b2d4c24be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2dc07f-2430-4d3a-9ca0-26ca988a7786",
        "cursor": {
          "ref": "640f2bf3-ae13-441e-b1f0-b27d092cc3d0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b7b49195-837f-4aa9-86fe-020d5b4428a0"
        },
        "item": {
          "id": "9f2dc07f-2430-4d3a-9ca0-26ca988a7786",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c609e3a0-e160-48f1-9f77-c5e1b756d555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939de056-6a74-4540-9416-a996cdbb4ddf",
        "cursor": {
          "ref": "3b248d9f-c432-4ca8-b3cd-6c8640314efc",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6982187f-60b1-48e5-8766-1fdecb0e6682"
        },
        "item": {
          "id": "939de056-6a74-4540-9416-a996cdbb4ddf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4a631280-3751-41ea-bcd9-8354e83812d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c16ae9-6ad8-458a-90aa-47c6ad04da71",
        "cursor": {
          "ref": "20d5cd3a-144d-44bd-9ef9-33e875ae6122",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "27b4f65f-6233-4276-8938-428061168e9f"
        },
        "item": {
          "id": "83c16ae9-6ad8-458a-90aa-47c6ad04da71",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1dc8510d-110e-4e43-8647-82b13e3ff89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74e842e-dfe3-4bac-8c03-7e48b5356e9a",
        "cursor": {
          "ref": "68b92ef6-7db6-4cc6-9fa7-bc7c8694255b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "70554b33-f462-46fd-a651-af71ea2d9f02"
        },
        "item": {
          "id": "a74e842e-dfe3-4bac-8c03-7e48b5356e9a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3ecb03f8-2ec0-41b5-b08c-450a3796e70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4980302-b119-4ee3-8e16-6ec91fad7a6a",
        "cursor": {
          "ref": "36a243ea-e023-4b25-b8c8-977fd2eee172",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "48c328a3-07fa-4e31-a777-05d40d4bb25c"
        },
        "item": {
          "id": "d4980302-b119-4ee3-8e16-6ec91fad7a6a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f5c9a9b9-2fe2-475a-b8ae-15a284be8dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075432c0-a736-4168-88ca-15645f379559",
        "cursor": {
          "ref": "34971bc0-ba4d-4678-b23a-205d30284f04",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "746f06d4-d6e0-40e2-b03c-a573d29db9de"
        },
        "item": {
          "id": "075432c0-a736-4168-88ca-15645f379559",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6f6596f6-7183-4135-bdfc-9dae8a0e775e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac2b828-c5ab-4a31-86f6-67870d12a91b",
        "cursor": {
          "ref": "6dba2fb8-fb26-4976-b9c3-3b3bf38a2677",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b26e34fb-a4fe-4359-adb9-b71f65b65129"
        },
        "item": {
          "id": "eac2b828-c5ab-4a31-86f6-67870d12a91b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a6c74607-84a0-4c4c-a255-d18c3ffb0bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dece0408-e79d-4569-b5e4-abd06caaeb4d",
        "cursor": {
          "ref": "d1e30f69-1dc8-44e4-bb36-e66e4a98eac0",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "035c5fa3-89d8-42e2-8fb5-bc99c966bb9b"
        },
        "item": {
          "id": "dece0408-e79d-4569-b5e4-abd06caaeb4d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "582bb666-8efb-40d6-9c3f-b8654e036f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b0c60f-2657-41f4-8b29-341ebacca095",
        "cursor": {
          "ref": "e671650f-1ef4-485a-af12-3533819eee77",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "63091c16-3773-4366-bdff-cc6d760b2938"
        },
        "item": {
          "id": "f9b0c60f-2657-41f4-8b29-341ebacca095",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5fb24ece-1312-411f-8d8d-44742e64a9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021b1d45-7201-4903-a298-d058326b2c1e",
        "cursor": {
          "ref": "2422a298-024f-46b1-a82c-6c130f81c5e8",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a02f29a1-fd58-46d7-ade5-1425a5e626fe"
        },
        "item": {
          "id": "021b1d45-7201-4903-a298-d058326b2c1e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0c252b78-5ac4-4154-96d6-72a96bde2b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc983bfa-446c-4b30-bdc3-3b4bc60d6d1a",
        "cursor": {
          "ref": "be4ac923-8750-4f85-8e1c-27a6ba797ed9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2aeabdfb-9b53-4bd7-9e2a-a0099494e8f0"
        },
        "item": {
          "id": "fc983bfa-446c-4b30-bdc3-3b4bc60d6d1a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b5c2d642-e101-4363-a422-68200fa9ffb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21f2896-a61a-41cb-9a6e-fa0ad07713cd",
        "cursor": {
          "ref": "2196979d-94ea-4886-b752-783e0a5a7d61",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fbf18111-895c-4820-8885-15a585043124"
        },
        "item": {
          "id": "a21f2896-a61a-41cb-9a6e-fa0ad07713cd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "225eefb3-b3a9-4179-8d4b-9e5420b3801b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816cf444-3b1c-4cc5-ab83-890a25a26d02",
        "cursor": {
          "ref": "c3e7c461-3219-4675-89e1-f800ba4a6c5f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "62a7d5df-1f2c-4e42-be26-91586d5ac492"
        },
        "item": {
          "id": "816cf444-3b1c-4cc5-ab83-890a25a26d02",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2b23b302-b6a3-4acf-b198-037d4770011b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bddc424-164e-4a26-8f65-c9c473587986",
        "cursor": {
          "ref": "7586017c-47f0-47da-8cb0-b124217bd69e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0850c8a6-9e53-4914-b4af-a84463d9b588"
        },
        "item": {
          "id": "1bddc424-164e-4a26-8f65-c9c473587986",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3e979b52-c5c7-4a02-8e6b-cf872bc85c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69deb54-9aff-4938-99ca-6e446ce269cb",
        "cursor": {
          "ref": "e99c65c4-fcf0-4b28-829f-0fd3999518b6",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "44189827-af21-4621-9a44-5d2e67e42002"
        },
        "item": {
          "id": "d69deb54-9aff-4938-99ca-6e446ce269cb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c5772a5e-6554-4071-9c22-8048031ceb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d79469c-2b86-4e33-aa3a-dbd1a10f1bcd",
        "cursor": {
          "ref": "074273f4-487b-492a-bd7e-723ac88a315a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "77d7affa-e058-4f57-88f9-28fa8c717096"
        },
        "item": {
          "id": "0d79469c-2b86-4e33-aa3a-dbd1a10f1bcd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "07abd740-e594-45cc-b4e3-edd2ec2aa5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb9ef97-bb90-4223-8019-f52aef3bd6fa",
        "cursor": {
          "ref": "88404824-c70d-44c2-8f25-61ba222aabdb",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9579280b-061e-4870-9c4e-784a1cfc744a"
        },
        "item": {
          "id": "deb9ef97-bb90-4223-8019-f52aef3bd6fa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a7f642bf-2fa0-45d4-9081-8b592605c835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c00eac-f3d5-41ef-b3a3-56927595a3e4",
        "cursor": {
          "ref": "82ebbbb6-2e94-4dfd-9d5b-25e3479164e0",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3a5509f6-220a-480a-a264-b167d46636fc"
        },
        "item": {
          "id": "51c00eac-f3d5-41ef-b3a3-56927595a3e4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "307bc32a-3519-49d6-9a84-d25ba6805c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a031c5-ccde-4433-88d3-66b71874ff07",
        "cursor": {
          "ref": "e8cca78b-b806-452f-bd5e-67aabc49e353",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "84e30c53-9877-46e0-875f-73672e73d424"
        },
        "item": {
          "id": "08a031c5-ccde-4433-88d3-66b71874ff07",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ab20b8a4-0b5a-49a4-a04d-4a4144df5427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69894dc6-477f-4025-becc-29b9876136f6",
        "cursor": {
          "ref": "6f999468-3324-4a2a-a76a-f612a6f025f8",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6fff05fa-b4af-4250-b60f-cba83e77c798"
        },
        "item": {
          "id": "69894dc6-477f-4025-becc-29b9876136f6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3345e538-29dc-4056-a338-ce886ec3f28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2472762-4f4f-474f-905a-79470dfc6be1",
        "cursor": {
          "ref": "dc5c77b5-f66d-4113-8381-eed578e1b274",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1c76c5f9-2a35-406f-83c5-6b4c1f010b95"
        },
        "item": {
          "id": "a2472762-4f4f-474f-905a-79470dfc6be1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a25a26c2-9897-40b8-a55f-0ae376108f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e76f9a0-8bac-4e0c-afd6-33473f74a574",
        "cursor": {
          "ref": "4c7e023c-3102-41db-98a2-831da20842b9",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "66d44012-d6b0-47dd-a617-5c779a62b7c9"
        },
        "item": {
          "id": "6e76f9a0-8bac-4e0c-afd6-33473f74a574",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "66a88e5b-cc99-4f09-a08d-92f121c65e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77259740-7eea-45a7-8476-99d9ff946f9f",
        "cursor": {
          "ref": "042f4845-fe2e-4fd8-b243-bf1af3d67122",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3d18e5d8-e5ef-4c7d-93d4-4578caac200a"
        },
        "item": {
          "id": "77259740-7eea-45a7-8476-99d9ff946f9f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "aeacd477-45bc-4dea-a9be-4e96a224bf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71533aba-e34c-48a4-85ca-5d24cab1be26",
        "cursor": {
          "ref": "c429a8c4-61f0-4ee9-9150-4e5308ef314b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "346035cd-2345-4786-b926-c06a533c80ff"
        },
        "item": {
          "id": "71533aba-e34c-48a4-85ca-5d24cab1be26",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "56559a04-2b7a-4736-8887-1e993955f161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a906d2b7-fedb-4e1a-b39a-5a3bc156e1b6",
        "cursor": {
          "ref": "31c83e9d-3ff3-4acc-b78e-9af995b40b0a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d02fe9cb-02e2-435f-8170-6faf5a63fa3e"
        },
        "item": {
          "id": "a906d2b7-fedb-4e1a-b39a-5a3bc156e1b6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3d865706-b2f0-47c4-ad41-214ac3ee27f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46059729-3231-4360-832c-955427baa6b1",
        "cursor": {
          "ref": "798e4695-b23c-427b-a826-797dfc4f4627",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "330b50db-651f-40fa-a74a-04e637f492fc"
        },
        "item": {
          "id": "46059729-3231-4360-832c-955427baa6b1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fe137d17-299f-4ab7-8b99-840b2e7a04e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f672b83c-b094-4163-bb77-bcfdde379784",
        "cursor": {
          "ref": "967cd75a-9d2b-40c7-93f7-58b69bf4e111",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8f419085-990a-4be4-b1ac-0652dc7b4337"
        },
        "item": {
          "id": "f672b83c-b094-4163-bb77-bcfdde379784",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "51a4f0fa-4766-43f0-be4e-be0691219779",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e970c5c1-c9de-49b5-803d-1057afb120ac",
        "cursor": {
          "ref": "51db4b3f-10f3-4f70-9391-37e6b1adf63e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "825a7510-083d-4fa3-8ba8-8cd0ca6b9b2d"
        },
        "item": {
          "id": "e970c5c1-c9de-49b5-803d-1057afb120ac",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ee1a4513-20cd-467e-8ba1-bf482d612fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc57681-c743-45fd-bc84-3a5bfba21e18",
        "cursor": {
          "ref": "732fb30a-e1cc-4c8c-99f4-ef16d5b37d9a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "313e2082-4ce2-46c1-8679-c2b7a2277dda"
        },
        "item": {
          "id": "efc57681-c743-45fd-bc84-3a5bfba21e18",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c98520a1-4db6-4c79-9193-2a2bc0b024a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b99fb9e-25c3-46ff-9651-b283a4f761d9",
        "cursor": {
          "ref": "af3cb840-b89e-47ac-89ba-eed8ac98fd2b",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9faaf2c1-5a93-4e48-ba51-cd398be2ee6c"
        },
        "item": {
          "id": "9b99fb9e-25c3-46ff-9651-b283a4f761d9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0b9a5321-0f8c-4cb7-8782-19dd113079df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11dcd4b-1ccf-4d01-a347-294e5a8875f0",
        "cursor": {
          "ref": "3ea431ae-c914-4338-a7bc-8e0154025178",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b23aacc7-ac46-4286-b774-bcd68432fb4d"
        },
        "item": {
          "id": "d11dcd4b-1ccf-4d01-a347-294e5a8875f0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f74b5b0b-00b0-49fa-8d99-49bbd7a794db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b7a1f1-7cd7-4dc0-9c6a-a6ee6ac50508",
        "cursor": {
          "ref": "922d8e12-343e-4285-b6b1-5ce17165a82e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "48157a52-a743-4160-8097-186716b87a73"
        },
        "item": {
          "id": "f1b7a1f1-7cd7-4dc0-9c6a-a6ee6ac50508",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9605acd1-30d5-408a-84ec-0813220fa7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0038c203-7628-47cd-9ff8-35a9070141f5",
        "cursor": {
          "ref": "187e9300-858f-484a-aeb4-670a5312559e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "14e9205b-d14d-445c-b801-90c30a6d8934"
        },
        "item": {
          "id": "0038c203-7628-47cd-9ff8-35a9070141f5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5e1f1898-84a5-4a95-9184-72b2f84c139a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e340f9-ab6b-428b-9ccb-58077c7673a4",
        "cursor": {
          "ref": "05a00461-d250-4a83-a07a-c54795f72a96",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8cbef3a6-69e8-4d05-8cae-dfce6a5cd558"
        },
        "item": {
          "id": "b8e340f9-ab6b-428b-9ccb-58077c7673a4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2157c2f9-65af-4645-a5a3-e708f905ecb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a72bc83-535d-4425-aa01-dad88816763f",
        "cursor": {
          "ref": "186a5276-530b-4a9d-bd7b-ee0d93845b69",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b04cfd64-02fb-418d-ad19-f9d8d9183dbe"
        },
        "item": {
          "id": "8a72bc83-535d-4425-aa01-dad88816763f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "768f17df-cbf6-4210-b434-eed398c1482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f26847b-ed86-42e4-b538-4ceb0ddb8a6b",
        "cursor": {
          "ref": "a37b2022-78c0-4971-ac9a-86c1969f59e4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "89fcf119-2839-468a-a3c0-722755966c5a"
        },
        "item": {
          "id": "2f26847b-ed86-42e4-b538-4ceb0ddb8a6b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "22244355-3b31-4b42-be85-8dc9232cc7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab31400-d9b4-4e11-9d90-b0538658a89e",
        "cursor": {
          "ref": "ddb9b69e-5a5a-4e09-a9cc-fe9bf66796f2",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c0326ca7-f18a-42f1-bf41-97c573c24396"
        },
        "item": {
          "id": "9ab31400-d9b4-4e11-9d90-b0538658a89e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "895b262b-ce1c-4fad-8ce0-c3f92fd7fce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a878c1-bc9c-4431-b734-b8c20559c671",
        "cursor": {
          "ref": "aea8607d-69a9-4ebd-b999-61525c8405c0",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "61da4670-c07c-4999-9aeb-47535246e93b"
        },
        "item": {
          "id": "46a878c1-bc9c-4431-b734-b8c20559c671",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ea665165-b97b-49d5-be6d-801594c550a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f6eafa-604b-4f37-abad-134db933e20c",
        "cursor": {
          "ref": "d771a5c7-9c53-4e72-a404-ddc36dc76179",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "939d4b43-142e-4249-9eee-25c81eb4f53e"
        },
        "item": {
          "id": "a2f6eafa-604b-4f37-abad-134db933e20c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0730e912-b2c1-486a-b9f3-5dd9be5009be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bd0f59-0c8c-4443-8b9d-80fd7d32ec9b",
        "cursor": {
          "ref": "f296b388-f2a8-4cf5-b6fa-6e8dcc98908a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7a62ba1d-370e-4fde-be87-247674c9f5d1"
        },
        "item": {
          "id": "79bd0f59-0c8c-4443-8b9d-80fd7d32ec9b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "18ce125d-cb33-4896-ae05-90d80d63c1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e66058-73fa-4d55-a7c5-bb07e0350231",
        "cursor": {
          "ref": "9c7192ce-0745-451c-850e-0a4fa1d4049c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "20aa2fc1-f8e4-443c-9574-cb68ff6f1ee4"
        },
        "item": {
          "id": "03e66058-73fa-4d55-a7c5-bb07e0350231",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "be66ec4f-f221-4a16-b61a-f92ea3784fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297f1b5e-d171-4a6a-9e4a-03559b9184cf",
        "cursor": {
          "ref": "16f347ad-9f72-440d-a02a-ecac080a289f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a645851b-1e64-4f8e-ab09-9127c21f51b5"
        },
        "item": {
          "id": "297f1b5e-d171-4a6a-9e4a-03559b9184cf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "419bff3d-ef63-45e2-b72b-584421817234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a33312-8760-4b0e-8b3a-f613ad5f6fc2",
        "cursor": {
          "ref": "d55122fb-bfe9-4614-84b9-428b87c30c83",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "74af00f6-234b-4904-bfe6-860dce9beb50"
        },
        "item": {
          "id": "87a33312-8760-4b0e-8b3a-f613ad5f6fc2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "606b177a-2170-4b5f-b36e-a195609b9b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2cb898-d35d-4069-acaa-fa0c2aadfb0e",
        "cursor": {
          "ref": "30fbcae4-6288-468c-baa8-e8c368bfbcfe",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7c0326d1-154c-4560-9a86-9027541a5030"
        },
        "item": {
          "id": "4f2cb898-d35d-4069-acaa-fa0c2aadfb0e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f6cb6e64-81fd-4d8d-bde0-a803ac684499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980a70ad-755d-4c1f-8a83-6e6860b827b5",
        "cursor": {
          "ref": "2ee5ae7d-268b-43d6-a7f4-d7fb31d06bef",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "dd8364c7-53e7-43be-a085-8fbd20be1796"
        },
        "item": {
          "id": "980a70ad-755d-4c1f-8a83-6e6860b827b5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5720a161-d54f-427a-b086-649ce6cb8667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a666a478-809d-4685-b8bf-25003359875c",
        "cursor": {
          "ref": "a7963ac9-707f-4142-82f3-31517c8b37c6",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a92f50d3-10a6-425d-a17b-f49ce37b5e05"
        },
        "item": {
          "id": "a666a478-809d-4685-b8bf-25003359875c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "37396b3e-f6ed-40e5-b1d5-394f54a5f56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894c2ac5-cc0b-4deb-90bd-88c3cccfde05",
        "cursor": {
          "ref": "3d1a79d2-0fc2-4a1f-accd-2174c0fd61d4",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "77b64e3d-ee8c-4d63-80ed-80b626fbee31"
        },
        "item": {
          "id": "894c2ac5-cc0b-4deb-90bd-88c3cccfde05",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aa4d02c9-e4d3-4a08-ab6f-90a3addb6838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04afecf-7ab5-4d7a-a3d1-ea3637f76257",
        "cursor": {
          "ref": "ff0c7960-11b3-4b91-9c74-13d1d7c0e19d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "64a2b375-dba9-4429-96d6-c305abd247b0"
        },
        "item": {
          "id": "e04afecf-7ab5-4d7a-a3d1-ea3637f76257",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e2993d26-e0ca-4ac2-9d02-13b1fe8da0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf7aa0b-ee65-4c0c-aed9-2c8bcf8bb17e",
        "cursor": {
          "ref": "ebbdfea0-0224-4a60-88a3-97fd3e5dffe9",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "52475772-4360-4897-8b4f-7307c46925ec"
        },
        "item": {
          "id": "dbf7aa0b-ee65-4c0c-aed9-2c8bcf8bb17e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a95d84ae-9654-4f57-881f-28377c98718c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4898ccdc-e149-407c-b6e3-d2cc2160e650",
        "cursor": {
          "ref": "118314af-c9b5-4c0d-a4b5-580d599b9633",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2474e8c5-b4bf-40e7-a1a2-729541d70922"
        },
        "item": {
          "id": "4898ccdc-e149-407c-b6e3-d2cc2160e650",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9cc319b1-ffd9-456e-b7c7-6cea93f4e693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a552ddf-460e-4c61-9c5f-38fa72971c97",
        "cursor": {
          "ref": "fd416cf2-03c9-4392-b7c8-e2ae5e248c5f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1dc383ca-75cd-4702-b90b-0b38620c760f"
        },
        "item": {
          "id": "0a552ddf-460e-4c61-9c5f-38fa72971c97",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "35bd7edf-a080-45f1-b98a-d8e07f743521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce21d05-26af-4869-b550-c0add714f22c",
        "cursor": {
          "ref": "ebcc24b9-8393-40f6-a79e-9d155c696b39",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "327ea8f5-c3e5-4b1b-ab61-c27134441deb"
        },
        "item": {
          "id": "cce21d05-26af-4869-b550-c0add714f22c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "23614a5c-8a61-426d-8d2a-6a0076b0f7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d443e36c-bf3f-49c5-bb88-a7062c0eaaf6",
        "cursor": {
          "ref": "c87d27f3-5829-410f-952b-e46940c715ef",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ccadde98-94cd-43ef-b77c-138f6c66617e"
        },
        "item": {
          "id": "d443e36c-bf3f-49c5-bb88-a7062c0eaaf6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2b4e4684-845f-4b92-964d-06117f6575b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f8b4b3-3bbd-4178-9185-9325ee668917",
        "cursor": {
          "ref": "92f35cfe-4305-4225-ad26-e1711e802288",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "70c89c53-19f0-4dde-803d-d4a4e1d1593e"
        },
        "item": {
          "id": "68f8b4b3-3bbd-4178-9185-9325ee668917",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3276bdf1-b473-4274-be9b-b14e9cdcdb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f316a8-9f83-4b7d-be1a-9a66d1b2fa60",
        "cursor": {
          "ref": "a37447a8-b92d-4de2-8da6-0eaba7de62ec",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a48e9bb6-d7af-4bf0-a926-a25edde81fe7"
        },
        "item": {
          "id": "99f316a8-9f83-4b7d-be1a-9a66d1b2fa60",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c80017f2-0046-4e99-8e63-88694bb799f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe58017e-5854-4010-9d19-764ffda9245a",
        "cursor": {
          "ref": "e93c064b-9691-4ec0-9a7d-687ef61bef04",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dd2b5dfe-797b-49fe-b72b-278cf287d2eb"
        },
        "item": {
          "id": "fe58017e-5854-4010-9d19-764ffda9245a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2e30c580-4115-4102-a2cc-4ee5b63714e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501260ad-b4d7-481a-b053-29bca921ba11",
        "cursor": {
          "ref": "c688d027-f692-4887-bcce-c95740f7c95a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "00a87a8f-ca25-4f84-97d8-2d910aabfbbd"
        },
        "item": {
          "id": "501260ad-b4d7-481a-b053-29bca921ba11",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bfaac2c4-79c9-494c-b118-5ace1459e94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2563ca-df4c-46c1-9479-d2308332bae4",
        "cursor": {
          "ref": "355050f5-ecac-45b3-84f1-631bdfd5bc1d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f17436d3-dea8-4c3c-b5ae-81863bed35ec"
        },
        "item": {
          "id": "fc2563ca-df4c-46c1-9479-d2308332bae4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a5b31228-6065-4406-9f97-bbf90feef4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f51348e-2f51-43bc-bda3-ddcfed360ff5",
        "cursor": {
          "ref": "ada23a3c-7c7d-4d32-8ce4-176f7bfe6d56",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0d0074fb-a881-43ac-8880-1b42200514bd"
        },
        "item": {
          "id": "2f51348e-2f51-43bc-bda3-ddcfed360ff5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9850d603-e166-4716-9238-9f3dc6d55cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a560aa-1fb7-4a34-b16f-784ab4d019a1",
        "cursor": {
          "ref": "3ca88430-f401-4b7f-a5cd-351d70a9bbe6",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "091d3818-b7d3-4b46-bca0-b1e6011e68f6"
        },
        "item": {
          "id": "01a560aa-1fb7-4a34-b16f-784ab4d019a1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "71a089b2-eb03-4579-83db-fcb2db7003f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982cfcda-16cc-4ff5-811b-3b8cbcd4cd68",
        "cursor": {
          "ref": "b5fc34b1-70bd-4bf4-8755-79cda8ed6c59",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f8e21212-2241-40a7-8629-4c9ffd1124b1"
        },
        "item": {
          "id": "982cfcda-16cc-4ff5-811b-3b8cbcd4cd68",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "da390e75-0400-4eff-8aa8-e9e70e496945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a57ae0-db48-4a2e-8fcf-ccbb63745924",
        "cursor": {
          "ref": "ff04e7c0-4c46-4ce6-87ec-f1f7b0639b8a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0b59fd19-b43c-4a6e-bf38-9d93b25ecbf0"
        },
        "item": {
          "id": "77a57ae0-db48-4a2e-8fcf-ccbb63745924",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "224e51b4-dd2e-4a06-bdd0-f409372d8a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218e14c8-2072-4edf-bfd6-624da4f18b9a",
        "cursor": {
          "ref": "6a49311b-ea1c-4fd2-a7e1-800efc91d59f",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ac02e869-e384-4483-9b49-5b19affd175a"
        },
        "item": {
          "id": "218e14c8-2072-4edf-bfd6-624da4f18b9a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f6b8cd4f-b624-4127-965b-2c3328c9419b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d89d157-6a9f-4154-ac35-4de9ee36911e",
        "cursor": {
          "ref": "15429368-3c9c-4150-b288-aa1e448337f2",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4d95e08f-dbba-443e-8dab-acb87ea28d1f"
        },
        "item": {
          "id": "2d89d157-6a9f-4154-ac35-4de9ee36911e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "084c3aa1-4dc2-4c5e-81bb-9507170d2de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c6189b-76a4-4824-b457-be19781b7927",
        "cursor": {
          "ref": "3e241c02-98b4-42e6-a903-9db08cc2cd20",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fe0fe193-e6f1-4e1b-8ca9-792a1f729040"
        },
        "item": {
          "id": "27c6189b-76a4-4824-b457-be19781b7927",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "327b22bc-cba1-4279-a8d3-0f2ab1b3afd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6e1413-80eb-4333-8119-0be0ac19b88c",
        "cursor": {
          "ref": "c73482ac-c134-43c3-9ad6-d3e03a823a50",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b2a7aa00-28ce-4e24-9c50-19029c034db7"
        },
        "item": {
          "id": "ff6e1413-80eb-4333-8119-0be0ac19b88c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f941d699-d8b0-4330-9f41-a6f03a4f65e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4f9edf-ceed-4e64-a238-18c51b317a71",
        "cursor": {
          "ref": "89bfd236-fb04-494f-b2ef-d0a679f3f96b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "61caa8d7-ebd2-47f2-b65d-f6986b282125"
        },
        "item": {
          "id": "bb4f9edf-ceed-4e64-a238-18c51b317a71",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c47f1684-fef3-4fc4-b6ff-ec3f0b8738ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3752da-3618-4ab7-9ec9-7833d7d8d4f8",
        "cursor": {
          "ref": "7d62492e-d2a3-4b71-8afa-c1687c98b3f0",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "99e43246-dcf4-40ca-b903-2eceb185416e"
        },
        "item": {
          "id": "3c3752da-3618-4ab7-9ec9-7833d7d8d4f8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ccccddaf-d9bf-495e-bff0-68c2038e80f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d9a0ec-aa92-40a6-bff2-5822e396b39b",
        "cursor": {
          "ref": "49f53e48-d779-4a75-ba85-6ee97d5457a8",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3462cfe4-adfb-4177-8a7d-8b83de07e1d2"
        },
        "item": {
          "id": "d5d9a0ec-aa92-40a6-bff2-5822e396b39b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "52e61388-9311-4be6-958d-63625a68aac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a0044c-2782-4682-9fbb-6f0cf9f64596",
        "cursor": {
          "ref": "0f973ad2-5de6-41b5-b7b0-7e0efcf29f5b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3b28b908-2972-4a84-82e1-e8942193a3cb"
        },
        "item": {
          "id": "b7a0044c-2782-4682-9fbb-6f0cf9f64596",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a071e694-61d3-4c17-bb76-5b99319b6fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cec47f9-8361-413a-b624-99864b5521d4",
        "cursor": {
          "ref": "a698c71b-571b-4e90-875f-59c8f669a1cb",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1889f5f0-607f-4d9f-9ad3-a54e9d73c643"
        },
        "item": {
          "id": "8cec47f9-8361-413a-b624-99864b5521d4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "61a66e90-4e09-4703-8b17-ee0df10cf8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8ca069-a815-4b95-b345-2eeb5399b68b",
        "cursor": {
          "ref": "4d7c9248-2010-49c9-8634-495ea66891fd",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ba78b13b-65c6-45d5-ad4d-f2ad81d370f7"
        },
        "item": {
          "id": "fb8ca069-a815-4b95-b345-2eeb5399b68b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "82a34719-aa46-492f-9796-67ef86250d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf555b10-0356-45a0-94ab-79954ab5f1b0",
        "cursor": {
          "ref": "7fb7d837-86fc-4ece-86e8-073c5deca0e1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ad4d8e91-aba5-4bd1-a25c-ac56616635c2"
        },
        "item": {
          "id": "bf555b10-0356-45a0-94ab-79954ab5f1b0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2c10d188-c492-4813-95f8-74235699af2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07d72bf-6b17-4041-8481-d446aed0e7fd",
        "cursor": {
          "ref": "738680c2-f3c5-4481-b2f3-2e44779ba47e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d336a4a9-e2e5-4d95-bda0-1521abb46f8d"
        },
        "item": {
          "id": "e07d72bf-6b17-4041-8481-d446aed0e7fd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cac7127c-a11c-4562-9932-61b50a23df20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e21058b-2cbb-413a-8b90-e40e542d4178",
        "cursor": {
          "ref": "aa3856ea-6f4b-4a56-96bd-8a0c97cdf3cc",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "33141b8c-03b8-4c49-9c68-5c38a53c384d"
        },
        "item": {
          "id": "2e21058b-2cbb-413a-8b90-e40e542d4178",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c2777e46-7eb3-4b5e-9b13-1a966916e208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0280c6-f0bc-46a2-8623-675baf17cf62",
        "cursor": {
          "ref": "4056d01b-f335-48b9-b0ff-01d6a05a9363",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "99a58519-aa1c-4cbd-9fea-027b672c698c"
        },
        "item": {
          "id": "df0280c6-f0bc-46a2-8623-675baf17cf62",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8dbc67e9-811c-422c-9a84-dd788e0e1980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900928b4-d78b-421a-b97c-52c67c1dac3c",
        "cursor": {
          "ref": "aa010017-2242-4157-9d07-af1f1e1b8591",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "665dfe2c-d51b-4306-90f6-f7dc9cfe5b89"
        },
        "item": {
          "id": "900928b4-d78b-421a-b97c-52c67c1dac3c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f03446b7-ef90-4e74-8b79-f1d47f94e00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef961bf4-15e2-43c8-8bb3-a6079e7125c2",
        "cursor": {
          "ref": "10461cdb-8cb4-47f0-aeea-1058d7cddb25",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3ff7f9a2-1294-4f04-8a87-34b21c5207b7"
        },
        "item": {
          "id": "ef961bf4-15e2-43c8-8bb3-a6079e7125c2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7bae4a37-b200-4bac-828c-34120f144f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f31f8aa-aac1-47e9-8539-82f88209a3d2",
        "cursor": {
          "ref": "807100a1-98b4-4536-9493-275f48dae207",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9aa8f890-e27a-4930-99d1-e73bb093b3c9"
        },
        "item": {
          "id": "7f31f8aa-aac1-47e9-8539-82f88209a3d2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "297c187d-63fd-4616-a68f-de267843ece9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886e679d-63b8-41e5-baa8-c77e1dc4f709",
        "cursor": {
          "ref": "81c200ab-0a82-46e5-9e91-502a1d5d7d35",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c8c0f235-90dd-410d-9046-3fe47ed8cd9e"
        },
        "item": {
          "id": "886e679d-63b8-41e5-baa8-c77e1dc4f709",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d42b40d8-5353-48d6-99ae-7fa9ea5610c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19371583-7624-46d1-88db-5df63f9fe61c",
        "cursor": {
          "ref": "a0094191-9a93-412f-95c8-88e83e98c7c4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e356e896-0276-4aa6-94d6-7aa70a763978"
        },
        "item": {
          "id": "19371583-7624-46d1-88db-5df63f9fe61c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dd04c8bf-e4ff-4d55-bf63-8615e29ab4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2162d97-e8c4-4b6e-b5d6-b293ec2d5a58",
        "cursor": {
          "ref": "1ca1e34b-c679-4b6d-b73b-eeb7cf795fb5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "297876cf-a9f2-49e7-bccb-2915c6048065"
        },
        "item": {
          "id": "c2162d97-e8c4-4b6e-b5d6-b293ec2d5a58",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "200622e9-3569-481a-91a6-4c6a4eb1076d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f25aec-f9b4-4cef-874d-81e797ebe745",
        "cursor": {
          "ref": "6f9b36b3-d4f8-4976-b45e-a26166daf6f5",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "39462b1e-51bc-416b-9834-778488376818"
        },
        "item": {
          "id": "55f25aec-f9b4-4cef-874d-81e797ebe745",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "98894976-f229-4953-bac2-e9271e429f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc6252e-2ed0-4b70-97cd-b91bb1c30896",
        "cursor": {
          "ref": "40e2d957-40df-480c-b857-20660ac38b73",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3ef0767f-3a75-462e-84cc-11585afc7d17"
        },
        "item": {
          "id": "1fc6252e-2ed0-4b70-97cd-b91bb1c30896",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f19a6368-0688-47ee-9ca7-d89efbc992c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929d6b73-13a0-4360-895a-08e0ce1a7fba",
        "cursor": {
          "ref": "a430a538-57ca-490f-b9c1-deaf87177af8",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "93b1e057-474c-4036-b75d-3f6ac279cf8b"
        },
        "item": {
          "id": "929d6b73-13a0-4360-895a-08e0ce1a7fba",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "dd41bf87-cf70-40c3-a956-fd2f8b301543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6a60ad-7d0d-4485-ae31-e1b62b6a1543",
        "cursor": {
          "ref": "abc77331-e989-471a-9ab0-a46d77c60cd5",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bdbf6df2-4eac-4c2e-936e-11fccf18251e"
        },
        "item": {
          "id": "6f6a60ad-7d0d-4485-ae31-e1b62b6a1543",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7963d618-bac8-4bdf-9c3e-75f42e60ecdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418477a7-2233-402f-8408-31105ca2b851",
        "cursor": {
          "ref": "decaec63-1214-471d-b465-1e1869bf5229",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bf778582-b794-40ed-91e7-3a13bbb241bd"
        },
        "item": {
          "id": "418477a7-2233-402f-8408-31105ca2b851",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6b208c9e-e7fb-4cf3-9f50-205adcf36a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2951399-f028-4759-8591-d86bc84bb728",
        "cursor": {
          "ref": "558870f7-3004-4b7f-926a-bbb429dc4cc1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9edcb155-ad31-450a-9eb8-d1154e49d83c"
        },
        "item": {
          "id": "b2951399-f028-4759-8591-d86bc84bb728",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8d88bbbe-55f1-4e20-8467-3ca1c7e64740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31377179-7613-471a-afac-69e99e68c1c0",
        "cursor": {
          "ref": "9fc91442-a57e-446c-a178-0008aa72d878",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7984d319-d084-4f9e-a437-da14cba2b5a8"
        },
        "item": {
          "id": "31377179-7613-471a-afac-69e99e68c1c0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8cbbe5ce-d485-4396-8a1d-d676476bba81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7908e3fe-cad6-4013-82d3-90c5fa244e85",
        "cursor": {
          "ref": "1e08cd17-70a5-4fe0-bc36-5d78b9f67ad0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "494b51da-73a6-44c3-86da-d084f1d508df"
        },
        "item": {
          "id": "7908e3fe-cad6-4013-82d3-90c5fa244e85",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d74d01d7-cf7c-425b-b01a-d578b166e46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2ef49e-5414-4449-bd18-5d420e631e57",
        "cursor": {
          "ref": "1ab0382a-d0c9-4217-bd7a-1bf38c8669bf",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "94d8abd2-f67a-428c-861c-06f85d525d53"
        },
        "item": {
          "id": "db2ef49e-5414-4449-bd18-5d420e631e57",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a7fa97b9-8dad-420f-b741-ede1af6df8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc356678-c272-411a-bb59-c095e871c37b",
        "cursor": {
          "ref": "5a1d59dd-920e-4cbc-837e-9ee50d347a6b",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b89a567c-3a57-4221-8d27-2023eb4a6665"
        },
        "item": {
          "id": "fc356678-c272-411a-bb59-c095e871c37b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9cfb8793-5e32-43da-aee0-884b0c69c3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ad3663-eafb-41d6-bada-9ee1d339f80e",
        "cursor": {
          "ref": "f580ba89-2d41-410d-a429-572d8d1639c1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "80c28706-7b42-446b-b9ac-39a8147abdf1"
        },
        "item": {
          "id": "a5ad3663-eafb-41d6-bada-9ee1d339f80e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dfab0003-3187-4560-b47c-026da0ffe5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ebe387-2500-4d77-b5cc-b7cf9a3d4d81",
        "cursor": {
          "ref": "bdae1b74-6ad8-4dbb-8ba2-d88ffcf42598",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "50747d3d-bc48-4e4c-9230-8b4494aa9047"
        },
        "item": {
          "id": "91ebe387-2500-4d77-b5cc-b7cf9a3d4d81",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1e6b32f0-fb5b-40c2-b434-e55cba82950d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24969c78-453b-4884-87fa-9cb2d6d9d39e",
        "cursor": {
          "ref": "1f0db6a6-6e72-4707-a1bb-84b24d00a94b",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f5d3ca4d-30f9-4500-8ff8-9551443ec4f6"
        },
        "item": {
          "id": "24969c78-453b-4884-87fa-9cb2d6d9d39e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7ac7f2e8-cc23-4bb0-ad30-43f1a172d36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a549883-45f6-4b27-91a9-d60c958b42e8",
        "cursor": {
          "ref": "9bf0a200-7f8e-4207-8865-433071617fe9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "12a27e92-98c2-4f4b-8f2e-7e525b731cb3"
        },
        "item": {
          "id": "9a549883-45f6-4b27-91a9-d60c958b42e8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3a1a68a0-8ddd-49c3-8565-10af79d9684a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b86e60d-947b-485b-b455-7c6974425e79",
        "cursor": {
          "ref": "32d1432b-f53c-4263-a5fa-fc16ee962a6b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "90d81de3-7d0f-48d9-b87f-ea69fe111427"
        },
        "item": {
          "id": "8b86e60d-947b-485b-b455-7c6974425e79",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0c08be4a-3fb1-4bdb-8034-c87fea21a207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56c2528-7c06-4237-8a41-995ec1f3885a",
        "cursor": {
          "ref": "e5d56176-495e-41d3-acdb-d012dced2f9f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8fcdac99-5672-43bc-ae47-a9ca5de17368"
        },
        "item": {
          "id": "f56c2528-7c06-4237-8a41-995ec1f3885a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "81aa7744-0df1-4cfc-8cc0-bb22b42f6886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783907cc-0172-4c9c-8cfc-6b37bc88669c",
        "cursor": {
          "ref": "a682d685-c856-48b3-a699-4ac98d32bec7",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9cd2a4a5-23ef-461e-a49f-877d01064795"
        },
        "item": {
          "id": "783907cc-0172-4c9c-8cfc-6b37bc88669c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a2ba30cd-e0df-428b-8592-5403b6f39ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e82cf89-49a9-48a6-9a3b-0237fff6aae2",
        "cursor": {
          "ref": "564ecfe4-ce35-44fb-b017-33b13ac5f750",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bb6513cf-08a5-4c47-b6d1-1680553189fe"
        },
        "item": {
          "id": "2e82cf89-49a9-48a6-9a3b-0237fff6aae2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f2b2e7c3-c226-4db8-bd21-751897c98c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9429e34b-1e01-4117-b357-ce232e633fd6",
        "cursor": {
          "ref": "2c9720f4-0081-4f11-8f75-1ca8b05bda88",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "39172ec3-a202-47c9-b572-577cf2db1342"
        },
        "item": {
          "id": "9429e34b-1e01-4117-b357-ce232e633fd6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2495b22b-25b3-4708-8069-f58f04d67e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1882bf-056a-481a-8d90-0e8d550ce443",
        "cursor": {
          "ref": "33e192a7-c038-4dc4-82a2-1e37c7a73150",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6e588ebf-33db-4475-afcb-f5300fc9678e"
        },
        "item": {
          "id": "bf1882bf-056a-481a-8d90-0e8d550ce443",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ab34e805-5e8f-42cf-9a9d-9f679d9e1628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684c581c-dd69-4acd-8cf8-07219a7b55ee",
        "cursor": {
          "ref": "78fd396e-aa43-41d5-9cdf-54c3137de1f0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3f756d44-6532-4bdd-ac06-4aa8c5c738b7"
        },
        "item": {
          "id": "684c581c-dd69-4acd-8cf8-07219a7b55ee",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "69a1540d-cf20-430f-bb3a-fcb4c914db61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccb0e61-4a22-4056-bb89-dc2cf52339a1",
        "cursor": {
          "ref": "76e41abf-c8de-464f-8bff-0eb1a6170ce0",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b3a6dd41-89e6-4cef-89b8-ed0ff786e2b4"
        },
        "item": {
          "id": "9ccb0e61-4a22-4056-bb89-dc2cf52339a1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c374374d-7d08-4cba-9b99-f646cca34ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b897b697-3210-4a95-80c9-8835eecb0a6c",
        "cursor": {
          "ref": "f665e045-1b8b-4901-a9eb-9efbbd7ffb68",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d6085f31-1c4f-45cf-9f4e-5a0aab22b022"
        },
        "item": {
          "id": "b897b697-3210-4a95-80c9-8835eecb0a6c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "728a35d1-1b03-4496-a09f-d2aba3de3739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a4083a-607a-451e-9d7d-6ea920e6b20b",
        "cursor": {
          "ref": "0d1b73db-48ee-4ad6-90d2-b4271bdfb170",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "619ce665-7b86-43fc-869e-5ddc7c5cf35f"
        },
        "item": {
          "id": "03a4083a-607a-451e-9d7d-6ea920e6b20b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1addfa03-8399-496e-811a-8882a493c1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2751595-a91f-4979-88bd-273a3d3a35d9",
        "cursor": {
          "ref": "2f141048-0572-4e49-a406-4dd7206ce546",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "15029f2f-635b-4312-a39d-165cd873bc0b"
        },
        "item": {
          "id": "b2751595-a91f-4979-88bd-273a3d3a35d9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ffa21f53-1082-45e8-b6de-2cfc66cd3d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283e46c9-17f1-4666-a94d-019b14c72742",
        "cursor": {
          "ref": "34d8d894-f936-48db-8d9a-b7c1d1b7b705",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f88753c0-3d36-4c79-9fab-8a4370bbf3a7"
        },
        "item": {
          "id": "283e46c9-17f1-4666-a94d-019b14c72742",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b89d5c8b-d7a7-431e-9400-c668c27c16bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f7235e-7816-48f8-83f3-1f898c6ef221",
        "cursor": {
          "ref": "32915b91-3cf5-47a3-9b23-b779a5f91c82",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b19aa88c-7537-4d70-9907-112eba078940"
        },
        "item": {
          "id": "e8f7235e-7816-48f8-83f3-1f898c6ef221",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "26da3a73-e432-4d93-a5c4-d13cd6d1c13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f0207a-87ee-44d8-b420-06aa8d508b9c",
        "cursor": {
          "ref": "7bfc6cec-ac33-4636-a6c9-a68f6fab0327",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c678a8e1-f0ae-4a66-a4ec-3c23f4da7b37"
        },
        "item": {
          "id": "87f0207a-87ee-44d8-b420-06aa8d508b9c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8b9512c0-05fe-4452-9ccc-0dad550b69f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a13cd9-da5c-4c0a-a7b7-356b29fe6526",
        "cursor": {
          "ref": "dc6370e7-dd73-4d6a-b605-d17e8b185e94",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "20866bdf-6dc5-4b6c-b3d8-2b7047457160"
        },
        "item": {
          "id": "d8a13cd9-da5c-4c0a-a7b7-356b29fe6526",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "de7dda64-a995-481f-a332-e357ae7861c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdfc0d1-8177-45f9-9ad9-5add8e67c2f2",
        "cursor": {
          "ref": "41f3485f-b264-4d1f-b3f3-17b51558d45b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "eb2ab88b-6c08-4575-85e6-bd7be0c1a079"
        },
        "item": {
          "id": "8fdfc0d1-8177-45f9-9ad9-5add8e67c2f2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5587836d-2e5f-4550-9319-48752c8a1cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee975ec-2962-451a-8f87-e7d5416cfeda",
        "cursor": {
          "ref": "bc2ae023-7ff5-4bd8-a08d-a3915bb50185",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1ad6b971-0506-4b80-94b9-30ad7a61c0ff"
        },
        "item": {
          "id": "aee975ec-2962-451a-8f87-e7d5416cfeda",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a3050b49-e904-447c-9e05-949d8568c85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834504a6-e699-427d-9c5c-d4ad3b392c15",
        "cursor": {
          "ref": "b191a874-231f-4615-9a43-974fc423985a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2cf1705d-5bc0-4612-8d6f-e4cf93567734"
        },
        "item": {
          "id": "834504a6-e699-427d-9c5c-d4ad3b392c15",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a8fc945e-b39f-4e43-bd29-fb2bbfccc05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6e80e2-cad4-43c3-bffb-ba45a2a4ec21",
        "cursor": {
          "ref": "1a79d09e-de11-4045-8006-838a6b715781",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "52fed8c4-6695-4c03-8e02-9b91f09bc6f3"
        },
        "item": {
          "id": "bd6e80e2-cad4-43c3-bffb-ba45a2a4ec21",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ea5b1c49-8492-4014-a583-27a9f513b747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5717c978-de3e-478d-b7f6-b5bc378fdcb9",
        "cursor": {
          "ref": "ed9228ed-8c74-4c2b-9f1a-a34c982be754",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "13c40a4b-dbc1-4c05-92f8-ece6108eb71f"
        },
        "item": {
          "id": "5717c978-de3e-478d-b7f6-b5bc378fdcb9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2229ce58-b78b-4c4c-a230-00d810eab0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d92dc1-1d1a-43a9-8ea7-e8dbf7d7c2b1",
        "cursor": {
          "ref": "a2fde848-3d23-4fc5-8294-fc627e1f4f3d",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f7ad8ca3-9738-4b1b-9d4f-7b2bd5e39f7a"
        },
        "item": {
          "id": "a8d92dc1-1d1a-43a9-8ea7-e8dbf7d7c2b1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "40237f47-16dd-47b2-a8ab-c4ad08a29607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bc16cc-6551-4e1c-9339-750de6d64009",
        "cursor": {
          "ref": "3157dfba-d2cf-459f-8be0-f33d170c74d6",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "68dcd31f-3e93-4d3d-8897-26ab51f1d225"
        },
        "item": {
          "id": "09bc16cc-6551-4e1c-9339-750de6d64009",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "527ab701-6d2c-47b1-840f-39b60563ccea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36699e4c-6b55-45ae-b93f-3ea1307e51b0",
        "cursor": {
          "ref": "163185ac-5b24-4f1b-b203-48da0bcb7ee4",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "95289ede-123f-4338-8a01-5e8f9d6a70c3"
        },
        "item": {
          "id": "36699e4c-6b55-45ae-b93f-3ea1307e51b0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b968daa3-6bc1-4cea-9bc9-9683d9a79183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517c103d-9dd8-4e5c-8dd6-fd80f6f3f676",
        "cursor": {
          "ref": "02311597-02b2-4741-aa05-1ae6e095a1e7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "696bf32e-85ad-4486-bd05-ba1ac932b7bf"
        },
        "item": {
          "id": "517c103d-9dd8-4e5c-8dd6-fd80f6f3f676",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "39c487f0-5f1f-4274-b4d2-4072a739baa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ad3691-5fa9-4582-97c4-f392997106ec",
        "cursor": {
          "ref": "9aaa496f-2ed6-4d12-b2ca-33f17a204dc1",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8c7f9f89-870a-4be7-8a7f-f58aad442a43"
        },
        "item": {
          "id": "a0ad3691-5fa9-4582-97c4-f392997106ec",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "65d5084f-f6d2-49a0-82b0-f89f751f8543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b3f7a7-56d0-41fe-afeb-90aab3849aa4",
        "cursor": {
          "ref": "3a3f17f1-e7f7-446e-baf7-42e59ea5c155",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "40c2d4bf-2da7-4b11-beef-fa84adbcd99f"
        },
        "item": {
          "id": "93b3f7a7-56d0-41fe-afeb-90aab3849aa4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cb16e59f-4e85-422c-9eda-fa690f1e473e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8f1a0c-67b5-41b0-8482-2e978a19dd84",
        "cursor": {
          "ref": "d0dc6550-b0c3-400c-b9c4-305e24bc09cc",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "52146170-17f3-4b59-b59d-714fdbddb6f0"
        },
        "item": {
          "id": "ff8f1a0c-67b5-41b0-8482-2e978a19dd84",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5c0ab5d4-32bc-4e1d-8c72-8fe19aa3e129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a4b009-daa6-4187-8f3d-6af8ba1d36b6",
        "cursor": {
          "ref": "eb079d23-ea83-4afb-a941-e09e6079242a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "299d8bbd-3319-49d8-89e5-8ed8ea4ce168"
        },
        "item": {
          "id": "37a4b009-daa6-4187-8f3d-6af8ba1d36b6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b50742be-334d-4dc4-a0bf-5ddc67a06d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5501ef-44b2-45ef-9f4e-f50faadde906",
        "cursor": {
          "ref": "43e1ad12-e80d-494e-9263-2998bf8240bb",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f056bb3d-ba0f-4c3a-80b3-bd6b60be0e97"
        },
        "item": {
          "id": "4f5501ef-44b2-45ef-9f4e-f50faadde906",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b8e9d23e-d9e5-4eef-aa29-4c5187023bd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9eca015-757f-4ea3-93da-53454af399c4",
        "cursor": {
          "ref": "b743a982-aa88-4837-b389-245cdc75dfc8",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5608e000-f661-4c5f-8e77-98448254d3d9"
        },
        "item": {
          "id": "c9eca015-757f-4ea3-93da-53454af399c4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5a627f8d-e79a-413e-859d-e2f01657462f",
          "status": "OK",
          "code": 200,
          "responseTime": 2052,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb34f92-efb1-4071-ae26-6bd45c149491",
        "cursor": {
          "ref": "d0301b1d-5696-44f2-9905-637177eda3c6",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "48f54ade-bfde-455a-b784-89ecb50a69f8"
        },
        "item": {
          "id": "eeb34f92-efb1-4071-ae26-6bd45c149491",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0da08504-10af-4b36-bb74-c6a0b726a466",
          "status": "OK",
          "code": 200,
          "responseTime": 3271,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52501d2-c684-43ca-9452-b36e4c301460",
        "cursor": {
          "ref": "a19e542e-78b8-477d-983d-4c33fcf6fd6b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1e32b4b7-4a5f-4e04-89f1-06cb34a8bc22"
        },
        "item": {
          "id": "f52501d2-c684-43ca-9452-b36e4c301460",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "431b7f45-d31f-4392-a7f2-57c9b24dacb1",
          "status": "OK",
          "code": 200,
          "responseTime": 2716,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b5a0c0-bd9c-4e5d-91ea-8be440c4a0e7",
        "cursor": {
          "ref": "f68d68b4-00a7-4c0a-a9a5-8cccb85eb5a1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d0b51f02-448b-4b48-8640-31d73a7b8453"
        },
        "item": {
          "id": "b8b5a0c0-bd9c-4e5d-91ea-8be440c4a0e7",
          "name": "presentations:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:248)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:248)"
            }
          }
        ]
      },
      {
        "id": "67c20dcf-d247-459a-ac18-933e18dc5319",
        "cursor": {
          "ref": "5ae9c4b8-c863-4a58-85a9-40b47127a790",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1fb4e1f9-aaa8-49e4-a594-7dcb7be2522a"
        },
        "item": {
          "id": "67c20dcf-d247-459a-ac18-933e18dc5319",
          "name": "presentations_prove:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:249)"
            }
          }
        ]
      },
      {
        "id": "7ee608df-e656-446e-bfed-6b274e57103d",
        "cursor": {
          "ref": "a48e32b2-3702-4155-b32c-35026b140e1d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c33b4e49-3fc2-4cf2-8b37-cac17d3bb0ce"
        },
        "item": {
          "id": "7ee608df-e656-446e-bfed-6b274e57103d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:250)"
            }
          }
        ]
      }
    ]
  }
}