{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4b9c81fe-706c-4c57-ae99-b4c6f45d6985",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cb7e1dc9-3287-4ec1-aaf4-05292c83e7ae",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94c14308-a8aa-4696-b136-77455bf6d4c3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9155bde2-d6d7-460c-8978-0f6c363e21c3"
                }
              }
            ]
          },
          {
            "id": "f40ed4ea-9964-4376-bfba-b497b143a35d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "87facc49-61ba-4fd8-a0b8-3cdcfabc8bb9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d3915ffc-2096-4fb8-863f-d771663b3670"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b18773c6-0976-44ae-959a-ec785a55749f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1e6eaa58-fac9-4c77-be55-b801b3bc448e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c4e2c80-328e-4afe-a3df-eed15118bf37",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e747de0a-e6c4-48f5-86f2-97cae060a555",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fb8d1b9-ec74-4bab-9d6b-fec976532965"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5b0001d-e0eb-4518-a293-34a1637bdf0a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b6b7e50-a816-4edb-b51b-f881a282c197"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f8a61d35-2a95-407b-9318-1f33439bda82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ad6afce-e6ab-4d25-8851-10accd06bee6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb375aa3-d264-4001-a468-b5119f217b08",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0215b3bd-4305-49b6-bb64-f85b984a69e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8eaa568a-ad80-4a47-a665-7569687c0cbb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eed3e217-fc97-4071-87e3-6f84a25db204"
            }
          }
        ]
      },
      {
        "id": "aafbfcd8-753d-4972-990d-9dac9b32e384",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "62606f63-5960-45d0-b58b-7468c60b7365",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49567937-ce7e-406c-a35d-d04cb53f8246",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2aa9c440-61bf-4351-b9e5-af4cc1140f06",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879f2dbc-6a3d-4e71-8a03-408222205d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98ab18fd-d601-459a-95e8-5c7e53041975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c789f454-a8d1-44e4-845c-f73f39d953ba",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd7d22b-dbec-4254-9509-55fc0931ecb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c1bd8c7-f619-4fe8-89eb-f692d8753dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa98543-bfeb-472e-971e-2eb7156df6f4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9975e8c1-d316-498b-a21a-c5ff662cd959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48bc2531-f429-4983-b272-7fa6a89ea809"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64eca8c9-da73-4a3d-9c54-8a96eb381eee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "896c474e-41c9-4c73-a77c-f66ea32f5bea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1d4f3a-aa56-41bb-b23d-f5e60ba9b8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "213959a7-414a-4efd-9dab-82076d0a6d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc539de5-cb64-448e-9ed8-2fb53b60f4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c6f529-63e1-4471-a9e3-47314078b713"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c661c4a1-5d5a-482d-8c47-481afd721c67",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62887f8b-7908-464e-9a43-4e00c5f6554b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eba88f0b-bc4f-4905-9aa2-31b92b72fb7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "eb7da11e-c477-4095-9157-917393f030e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8d7edca-eca8-40c4-a79b-9d8eaebd3fd1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "56ce72a3-33b5-4645-957e-05f8b9e3c61d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "711c178a-6c6c-4f29-a0b2-992819ae72ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04537ac9-fe04-4199-ba05-27d92590ec42"
            }
          }
        ]
      },
      {
        "id": "48572f89-445e-4285-b249-d83b1aa51431",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f2b8dd93-22de-46ab-b506-4657317c3f4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcecb3d3-fc38-46f4-b29b-d7edababa50f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b23d8423-805a-489c-9e33-4a0d18db1af0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c3a706-1913-4b18-9fae-14b1a71cda35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ae7f26-716e-46a7-a75a-43d6c39a7748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c0bdb4-8041-4fb9-84b6-65c4370e3767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a90e41b5-2ee6-4044-9645-9402c8b60e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c90f4d-5ce5-4734-9a70-fa530350fd05",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42b166e-15d7-45ce-bad9-beac3df339da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4576a5b0-ca40-49be-8324-f1b036a332d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6333a06-dee7-4fb5-9503-32941257f579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "287d33dd-13a2-4a20-a925-2c779b42aa54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91209280-e0ea-492e-ae83-52666d0b294f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea308c66-9fa9-424b-b889-fb5283362c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20db75b6-b233-4a61-a1be-ab3801769501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af8662e-b9ca-41fd-9ca4-1c76881ecafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "550a4651-3187-46aa-b399-18958ba0d8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1884303a-13f6-49e3-b74d-ce99e029156e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06d6fd0-690b-4387-86eb-a55ff18a37ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ecc62f-ce84-4654-b7cb-bceae8953296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301027a6-fc97-459f-8eaa-cf1a0f245e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd7ea3e6-84a8-472a-8a20-212ab6147ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474caa7e-1212-48e9-a994-4cd4f85f681d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7708e3e4-405e-4c3d-a300-e909e4b1938c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18da8813-ad70-4e31-baf3-ffc281743f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864cd1ba-95bf-4d2e-ad7b-2a8fcc9a71c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18592d18-1430-4474-9925-0576ed86afae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d037542b-eadf-468f-83f9-e4b26707b013",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74aaa8e-c04a-45da-bb9f-e877f308e146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf6f64f-4f73-4c5b-a380-6cbe125abfe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1331c5d-5275-4504-933a-fdd02828485e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "439a9b7b-c7c5-46a1-800a-d37d34be6a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21467d5-b376-4708-8184-dfa9c371dfc1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36dcd4d-badb-444d-881b-03d3c8f53365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1249a4e9-890c-4bd0-a558-92f7a8601ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d2c0a7-281d-445a-9b97-cb6592b8a605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43cd1b8f-9973-4a34-8181-9f1bd32dbb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5091bfe6-7276-4af8-9ac1-e506fde7139f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8701f51b-e69c-475a-9208-b7b5bde6a0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dec6e09-3ebc-456f-a19a-62aae3c8aacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3387dc2-6fcf-4b86-9d0d-3094fe5e0432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "388435f1-61fd-4a12-8337-3ad1e36fd289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f1498f-6c00-40b6-98a4-71274d38db62",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a1e916-ed9e-4ee9-ba6e-e3d013e9da2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb7bd1c-364c-480f-8fc1-641176bb3b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf98b3d-1c45-4d55-a338-70b069a02730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca36bf03-dc75-4845-a228-0a88c915abf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6cd879-fd78-4d5a-a00e-6e1f068bff2b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44711a78-4327-4898-b3cf-6f21b8bc20de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f24729-51f6-4e9b-b2d2-b2446afe88af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963fede0-931c-4ab8-bb47-ec0fb7f7343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2b3ce24-63cb-411a-83e3-e1f215029d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc87232d-a1cb-41bb-89f2-076f8284b6c1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7794a4-9ce3-403f-8abe-cc8c7a16b231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca70da2-3194-423b-a836-802dbefd91ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e50871-3166-42eb-b81a-c2ac254a53df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbec0d88-7dbb-4860-a10c-0edd023e2192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e05ac0-dd53-442c-a285-e339e0e759fd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da431741-36d7-4ad0-b73d-db7512d2daef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24478e5f-66ed-4535-b818-377bff3babf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d6436b-3e5e-4072-ad00-425a12d34b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ea52ae0-b729-447f-bb1c-7ff19ca52e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ca9cf5-7684-46ec-9a65-0fd733be6768",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5091a88-f790-42d0-8618-1cb09028ffa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e15af0f-1283-4a75-8a1f-81c692af8f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2211dd-08d6-49aa-9cc7-ddfe48c28638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6545bcf5-1f30-4d9f-80b8-ce7bbdac6e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f840c45e-03fd-4e82-81e3-520713980773",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf05f1f4-40b2-49a0-915b-6511bf0896a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0cf167-2b5e-49c9-b7af-3d29f25b69c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac84a436-4b62-4234-93a6-9f1414c02b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "814fbb4e-4929-47ed-9bf0-a62ac96dbf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5f206e-b20f-477d-b283-193916baf120",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e1c05c-42e4-4c7e-8c41-d34349140a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4848803b-7d0f-41c6-a276-b202bfff5972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad32627d-c273-4a1a-8c28-be7da93a698d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97ba8c80-4e0f-4037-92e9-453956971309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a82ec0-2698-4365-8256-b46ee24e4700",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f07c1c-40e1-45d5-9a9e-ea35c622462b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f1a0c8-dea2-4247-b09f-1d695f0ceacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d267e99-061e-419e-ae30-b79e1a06f507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8955db2b-30f4-4c34-a54f-8087677cd6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000ffb63-9e26-4403-9241-234dacf17e61",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f97bf40-03eb-4965-8531-b8eaf28e5600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19df5b73-0b21-45ab-bc61-c9fcdbfdb9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d09c114-3024-465e-904d-5a2f9e9fdd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f78207e7-1343-4a34-b8bb-47113ed4a238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5c53c0-b7b9-49d6-8edb-35813d6b85b0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b948f430-f089-4a7f-b2d9-798e8d6353c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1772f92-8134-4c3a-82dc-1f03c239cf8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28b54ae-ef28-4459-ac0d-0e56f4445202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e51f61c-049c-49d9-ad22-dc9b64a27d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befec541-dbf6-42dc-b04e-10d00649eb03",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be72a6e-78a4-4050-80a3-be4ba1a8c883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9c322f-8de7-46fa-9bd0-a908837983a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a181967-0f96-40dc-9098-411f17a12f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0c998a-8210-4bf8-9989-fef4fb9a0cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bce824-9578-4396-9f65-81cf76dc0459",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3a80e5-8ae9-4aec-ac19-ba0fe3ec8e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0c861c-cf34-407c-832f-b19af4fcea6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f937a31a-dc6d-4daf-afe3-d90c223295b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49497228-f814-4920-b67d-7a4f41dfc5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d361566-65de-4fd6-ac9b-48ecf2fdec40",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4a75e3-1a81-4986-bc5b-9752c290a57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a941689e-5bc8-4ffb-bea0-50122c026e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce9606a-2c53-4aca-b3d2-6cb4d4d5ed96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "452ffd79-d23e-4b06-8ccf-e4cb40e97ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11a7bea-5a37-4464-8201-77ddfb6b541b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2252d9df-5555-41f7-9cd4-d6d9ce7e50df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723acc8e-15ee-4229-ac0b-45619feee664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dce7c6-38ec-4c53-8875-408d95328578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b51e071c-fe4b-4283-a6a9-a00e41b637a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a53731-cad6-485e-aa62-5b41efa2da53",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e15e652-3ecb-4fde-af0c-9fd51d8adbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c673abc2-3aca-4cf7-ba6f-9e89b3758513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a9d7fb-a500-4dd3-827c-bd8b503dce54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5781c025-1afd-42fa-94c7-53454790f21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbb1d66-57b3-4616-8744-32f8094de339",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f951a45-b947-4ac0-bc62-df0081a6f254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a72dfe-e8a6-4d6f-aca0-6c45b53a62dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5df055-d34c-4220-8da4-8a757007e7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "00a647d0-637c-4d0f-9e1b-8063c5f6e818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a51d0cd-f32e-4318-aca0-87b9c44e383b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b513287-e217-409c-99e7-f23c61f1e554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc3444b-9f23-4f50-b90c-58248af9bd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f768de-7e3d-4e4d-b3d8-8ae1e2bdcf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7fee1b-f92e-46ee-acd1-776194b0b990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081b030a-ddbd-49bf-bf1a-41d254a7ad53",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4ff766-d770-4530-a428-cb500ccc6168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461eb158-3199-43da-a49d-f60bdebf10b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5942e659-5abf-4ad1-8f18-3f3abc02368e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49467172-e926-4153-8f89-42923a473614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb69026-e6b3-4f04-a92c-57a89c494e1a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921b2d50-9585-474c-b3cc-2e8ea909eb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12b7b97-d55f-44c2-975c-301a89208b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3eddba-2181-4fa9-86d0-b882bc71a9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dea777e2-3daf-4d03-b065-40e754396ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62f55c8-59a7-4ffc-b91c-8f6d55e69323",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9e538d-0074-4ffe-a301-320ae11a3263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6e7128-8730-433a-b51d-aaed7c157a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ce9444-3b93-4865-9f8d-cc94ffccdeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74cfc04-6cef-4ac1-8a92-c1162b9cfec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632a8448-a2f8-4722-aae9-5d1c5152fa28",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30d4ac8-3a4b-4f61-8c94-65ac14b75c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ceea3a3-7f68-4ffb-b084-c3ff063740dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8525b23b-f815-4a65-b27c-17058b6a5724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc09075-08bc-44c2-9a7e-e4fae6c15ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2c65ae-4016-4ccc-b1b8-e25ecaa6fc3f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8060217b-8438-4e4c-9930-4bb2aedb262d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516642d0-c87b-414f-8b16-694fefeca518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a659e6-131c-4b09-8e32-18e853522ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "96302c17-2ea8-4738-949c-a6be61eaf761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831663fa-171b-4f3e-b66c-3c9dbf412b48",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89edc308-a49a-4ded-bf4f-6fb8f9f551d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3c7690-afd0-4b91-b788-03e034089fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4711ff2-877f-4920-ab3c-abfcefaaaadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30701cd1-f1fa-43d1-9c7c-bf1c8df70286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b222e819-f0f6-4f2b-9968-f121ee8f9bde",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17111ea-336b-40b8-aa97-e1deade7c8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1714c744-fb10-4392-8d3e-bd278d0d8115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5245dd9d-e72b-43f8-92f5-3bcf6109976c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0e4e93-e52d-4ba9-b0be-f9e43521f20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a115453d-e8ca-457e-acfc-301934665654",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad6676d-8c4e-4a24-983b-eaec4fad7069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724d6947-24e6-40d7-8187-8f19dd29b3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88526899-96c2-4eb2-ac31-c21acfb6b6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4e5e7d-249b-49fa-845b-9022feaf6220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68b519e-24c8-4dc8-9ebb-10442a867e75",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e177e94-29b7-4fc4-9b6e-4d3abad46882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436632ee-7fc0-4606-9522-3e3c675bf264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c39edd5-26ac-47d5-8312-faa7af6c4bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08ea3057-c129-48ba-a34e-57935bd21f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cc8de3-345a-46c5-a8b2-b6451f6d37be",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f34852a-981f-4d04-99d4-5e46a831c94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4beec8c7-070c-424b-bd98-9bf8d3a8c71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b606d93-87a4-49ec-b104-1b538602b6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4d2d05-cfb1-4a20-8466-e11ff18c1e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44f7130-9555-4261-99dd-6fbb6cdb07d4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4de3b6-cc43-45b6-a358-99a323f72271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec22c6e9-8dc1-41de-9233-b8444070cfa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c449ad6-3369-4b13-8635-49e4054c3691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb880cc-a64f-4ba3-9474-d27f5d2dcf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c3fda6-f3b1-412c-b80e-904120e42aad",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a301b1-5324-4acb-bc0c-30e4734dc3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ef3d37-1e03-4fb5-8108-bbb5c93ece98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026ad91c-51d0-49b5-a781-b659617e3e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "935c5546-1e56-4808-9fd8-7eb94a43239f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5fedae-4605-408a-90af-56490872c4f4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897c4e03-1cc7-42eb-8034-077f60918b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0a4770-dbbe-4bd6-aa71-1eab4c4e86d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7837081-121f-4ee8-8fba-7acccfcd260b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "19e53a83-3fdf-486e-9dee-c7f8ad8d9975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4114b419-3216-4714-9aac-0bc9b03ec72e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3acf486-9ee7-478c-8103-43500ab7cbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b35416a-287e-4a7c-9700-e556d29dea2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8001a0-510e-488e-9905-2e7c03cc07c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2bff88-c170-43be-ab11-d5cdb38b6be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b87676-5db0-4129-ba1e-cd4fd82b73b3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5456c771-eba1-4347-9ee7-2f0b5f081b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8850631f-dbea-4eb9-8aa9-b9a063bdc353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f97722-7f3c-4d2d-a844-3041d4afd90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "75d58d51-3103-4393-8dc7-acb4467da4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1137310b-f6e9-4e04-8203-d2ed876cd620",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5edd234-8eb3-4353-82f4-28b6784ae17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54428064-ae86-4097-86a1-d061626fd04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b703080-4801-4d13-8b70-59385058a83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "260fb2b7-56f9-42fd-b34e-2450daddc5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d995973f-e88b-4f64-9d58-e435933e643b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3951a5db-23a5-40b1-aa2f-6664ff6dd608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54643241-2f88-4281-891c-6a173b7b29f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3aaf29-f7ea-4d27-ad9a-8f0ec897df7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4db010-5e9e-424a-a0ee-3c7cb3bd7bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90c2b3c-21b2-43b9-96fe-78d67760ef04",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600c0c92-f957-4e72-835b-813eb0a4f004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbe9c4b-4153-4701-b4a5-6e2fb0aad02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f195765-76a8-4d49-96b9-32301951205a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5408419d-636d-42cb-b40b-762fcbca92a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a308865-df62-4293-af79-181b3bc1a220",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7826c610-93ac-4d67-87e2-66d1acf77fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58fb51a-2b2e-412c-a7b0-292d196bdf43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdd9bd2-1f6e-471d-a1c5-e70989404402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b571dc9f-2b53-4f8f-a187-edb1d12e2e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675854d0-c91f-4186-b1ec-36a432a0f615",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46fbed7-25e3-4178-bdb6-649226a62ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8502f7-36b1-4fa2-9d1f-9208c4ae4013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99939e04-3aae-46c4-85ce-f063394edd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd0919c-46d9-4b73-8d43-8fb0d117c46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10620c00-59a9-45a0-a2bd-528f44dfb7ec",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6091f93-6a60-40c1-89d7-642756a7b60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dad5ec9-7f12-4c63-abf6-981098cc856d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8ceea4-9bac-4bc2-a646-71a5f46fc17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da1162e-b7bc-4f93-ae9a-613527c98ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3aa15b6-b362-499a-9678-6b235b664656",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8050362-58e5-4279-87e5-ce924bbd51aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293322e1-42a9-4f92-a36f-1a06e8a4182b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f1422b-ba9e-4cad-acf4-f7c91c3404cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "320aa025-ab80-4acc-b5fe-177538fb432e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472a33f1-cc6e-4d5f-ba4a-239d32bcff1e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df23a76-7315-4467-849c-9aa65b9fb7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140cc6a2-fb9a-4420-a05d-6a24fd88626c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fb5e9c-ed4b-4b3c-9a86-f56647081c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0081b2e-e0d7-4f51-b1a1-9226a331d7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf279b29-3ecb-4c1a-bb70-ab7fde914793",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a0e2b5-9828-4381-986f-9bee46fa8f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17aaff2-3719-4eb8-9e5e-17f7977ea0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e540c5f-5211-42fa-9954-77a71aa7a4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6437d665-19f1-41fc-9881-67bb4fdfbfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce555303-197b-410e-86b7-b537edaead9d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b01e84-7e52-4b7d-b891-f86ff4753f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82e07f7-54b0-481c-8c15-deb2beda567e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccaf33d5-cd10-446a-b8d7-36a11c3a5f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5466a0d0-af60-4227-803f-43216445234d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82f2332-555c-476d-8ef0-6bd419cf1676",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c35c800-91e4-49cb-9d5c-8301a5f2fdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914fc932-46cb-4121-8c3b-c62d9c5bc1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d06e937-957d-4b86-9f89-0e7a94fa964a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "31ce361d-b035-49cb-aadc-272bf6df6bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1705713-9cec-4eca-87b4-0901b70a2c6c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1c0da0-82d5-48f8-aa83-c2eda6909754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9214ecb0-cb4d-42a0-ba5e-fd3ca57f6f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf84033f-d1a4-48ee-a6d8-371d08c3ea8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9813f9f5-c0e4-4381-accc-08f097e8ee61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37d1b56-428d-47f6-96ff-4881bdade82d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f588a524-1493-4226-821e-27c639cd1742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7360536f-7c1e-483e-9dca-470a79c4576f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d62f95-d868-4d4d-8099-1b5180e6b6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cdcab0-1114-4f06-b2bc-94454b33b315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884de3d1-8c76-4d5c-99cf-b11d244a2003",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ec94f6-b8ad-45eb-a723-40895d31524f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677708df-cbc0-4745-84ae-d8a35b9e8541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e90a0dd-714c-4ebf-89ca-09b5df62b966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b703c22-d5c8-4866-9f3f-d607c5d0e176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4176289d-a571-4e98-bac6-eb5373bda43b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f121d27-0b91-415d-aafa-e67a07cbba8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ef84ce-90bd-42a6-a315-fafd75d65b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418c240b-0cd2-4773-927b-7b171162e485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38b0841d-cb45-44f2-a276-1261fe544a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36088353-9f3a-4723-9cb3-9de0eb6316ce",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55447098-8e9e-4bfe-b439-55e3d09214d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea82a68-3ec0-4740-ac04-46a576897bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5305d900-a93d-45ab-985c-417985fb041b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "27a9cc46-a9f6-4386-9f1d-faa4eca50608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d56231-75ff-4507-abe8-829ee5be8520",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18baed14-2f4c-4c47-91f8-ccad98d5a884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12882073-2ac2-42bd-be85-34ac6514ae9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5d3244-f49b-4cb3-ac00-32235e29262c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "235efa8e-5eaa-421e-9bb4-69acf9a32b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c75f08a-e212-4227-8388-a7ccc6e0fb15",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a001c6a-c763-40d1-856e-8c08caa7b508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559de0b4-1112-4955-a1b3-3e3bc0275d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb32e1c-8a2c-475f-834e-4da66d9e53a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb77b5d-aa30-4992-84d6-5d346f9b0412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a844d3-a8c8-4e4a-be57-da1ab17da0b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05d107d-d905-4065-ae04-977fe6e7e0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81c5061-b988-469d-b420-7fdb8398215c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f61261-591e-4be8-890a-569c3bfe8b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a7ac31-22ec-4672-936b-a38e0594975c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414e6c55-e2b1-4623-bd03-00957f4329b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dd1940-2c15-418a-b167-a3aacc27a35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf9497d-6343-49a6-860b-2acf5d915584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8655336-400d-4000-aae6-39bede837b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "158b1cec-d8bd-4bcd-90d6-3d6806f73aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a355b171-014b-49d4-b203-318ce9267dd2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b049538-8806-4fbb-823f-44ac07d22fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d115d644-f94e-4746-9a17-cabc0194ee29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41d9cbd-7f2c-410f-9082-68e5064e9601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a649853-6945-41d7-99d3-9a38fb21a969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1d0c9b-0f1f-49ff-b3df-ffdfba96b28c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a12603-9213-425c-9103-8134f574aca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ece2e9-46a3-49f6-8a4d-b02ece496546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6d1cae-b194-4875-8c81-03b8be14926e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f1b93e-11af-4a78-93f3-e2ad6bb754ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc915312-b8d7-4e2b-ae72-dc71e72792aa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd0a736-565b-4898-8ee1-d787db9df21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f076adc-c912-42ef-8f10-e58f80a6bc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987e7166-0841-4de1-94b9-4c31df3a911f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5362874-df31-4b48-9e51-1afd1eb8d34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086adc50-3109-4230-8e23-6bec7446584e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f168af-5b69-4b56-9e0c-6ded5fe5de66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fd376b-cc1c-4bac-8521-8b71a9fd2a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcdc7ee-bb06-4be1-a44a-786aaacc1261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc2112e-b864-4f89-abc0-c4ff17c484b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724cba26-71a5-49ce-9cc7-2623572b8b76",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5aee7e6-39b8-4e16-84f0-e20a6f861eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee290d8-00f2-4e91-8f18-30a76d817a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29b1438-464d-4b6c-a5c4-d1c8d86d49b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dff8a3de-841d-4338-a7cc-714e0e933b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8355f1d4-9714-4f7e-8854-0ac52e054f17",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cd4959-4d17-420f-9e25-c9a888817ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c376ce1c-06e3-4b6a-87fb-b7f90106da03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f533fb-3bc5-48c6-b8fb-04dad0415f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c124128-c5e3-40d5-8fff-152a468c1ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a87d7b-455c-4568-860b-80a279eabef9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451da306-e786-4adc-b751-ef7638eebdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9aa32e-fe06-42df-bd3b-e32a92a1386d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef780683-3d10-4740-b1d7-0d1f2e814080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32f29593-5bd7-42af-b134-95ec188ef804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b1c87d-def8-40ef-b044-b8f2c6f84aea",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7b6b0b-810d-423c-a6a3-cdc284d7100b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a624769-3c22-4185-8cbd-ff7c8362ad85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016cf3c9-ac2f-420f-9729-183416d9c7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "53b63e4a-3b6d-4c87-b2a2-8de6fac58553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721794d4-06fd-4f86-84ef-ed3a6b43463c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13040bb6-90c2-43b6-8f0e-d770017708dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852754a7-2cf7-41fc-9ee8-6df14de2e157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41030eb-0859-43c0-8eae-5b5360b4a10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "93f40b96-9d26-4f94-aa39-741e6f9963db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9ff221-007c-4d94-b119-caedc3235e0e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce849e2-2a44-4e79-ba49-df34cff8d0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31ab400-0112-4bf9-a829-f70a1e4804b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eec5f44-b1a0-495a-86e0-39f4070b9b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d0cf43-2df3-4399-95b7-d85008c256f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c92bc64-4702-4ffa-8f3a-9efdec893d5f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e68ef1-e6db-4c82-8723-96bb40b9af69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f2197a-17f8-4fc3-9628-4a017f623211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266d844a-93a3-49dd-96be-bf1ea5c60f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26a86ec8-dca3-43d0-85fd-4aee9780163e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5013110e-5c33-4fc3-b010-6b9f847905ee",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0a0089-74d5-4c8d-95a9-e4df58584695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d922406-2bc0-4fb6-9da8-b1f91fdda24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d645795e-1dee-4bc2-8b5b-6f5f292e821d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aca83def-3349-4db2-a6f5-ee1016945937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ae5c62-4c97-4e7a-896a-949729fe4923",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398414d3-b108-4cbf-b64c-f1a9f8635d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30234fec-df51-49e5-8b75-8c36b1fc32d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9730626f-0171-4976-9034-d80571d25eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af936dbd-6ddf-43dd-b4dc-6a8344d55942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7b5b62-780b-46ce-b692-f85f12454b30",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce53de6-02c4-4598-8341-916a24534911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1132233e-97f1-4480-a281-9b5c565671c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71c49ed-cacd-45aa-bef3-bd0adf251084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "487f3bee-4421-4358-8935-fd94a00de856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e56d745-5598-4375-93c6-1cf2f9db80a5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cea6c1f-42b7-4d6f-8ee0-2a5d5fbb33c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a548f26c-b26a-43f3-aae5-6181b13e0b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8036d72-d44a-473e-b6de-40aafd812194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d223bc3a-153f-4221-92ba-b0ee348d1377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8791dd-41f5-4bdc-aa82-1c740ad34738",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8cabb6-959c-4a36-83fa-a0ca7db515a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c773c2-6e6e-4060-9845-3443895594a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fba93f-061e-454f-ad74-1fd35f938d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d59987a8-1f24-47c7-b5c7-2aec03d89a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b82e5bb-cc46-419f-b00e-f04f90cc65f8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da73cca7-586d-4072-8b8e-1cdf9ddcdf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c8663d-b232-4b84-a8d8-fbfafd3b91b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34719608-b736-4676-a3d9-727aee1c2323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21f42506-3f2f-436b-bdbc-63a4836c86e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc955b18-e5bb-4e4a-ab5c-1cccb35826d6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dee7094-9e31-4b78-81ff-707c4569ed60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4ef966-0cbd-4051-9b16-b2872932c421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1711cdc0-357d-4d9a-82b5-1b47e9010846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e26f300-9e73-4397-b45c-ae8fc0bf760d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ef1bc2-963c-42c8-a999-b04c32151151",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c3dc63-a8bb-4865-a053-ce2bf19736c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe598172-556c-4c58-b6b1-2a8d6abf36c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bb3840-3416-49a7-9abd-9e23842f1dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14abb949-883c-448a-a57e-e204465da21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493fdfd8-e71f-41bb-9e42-c0b8c546402a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7f18c3-e582-4bac-8b34-def3bd8534be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b388500d-d83b-404b-90fd-89401b81694d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf7209c-9a34-47c8-a00c-fd20a60a588f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02429e4d-ac0b-4684-a352-f8a51a0edb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0935e94b-2d0c-4ecf-bd18-0595f35add51",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c911b0-979b-4237-81df-94213c74abe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395a37f3-bdd1-4d57-8021-8eca12182037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6601780e-cb5d-45e1-a21a-f1d139d5ca4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4239e36b-4cd4-4776-a2b8-31f10d52e3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026c35cc-9a8d-4da1-ad9f-596ab595e76e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829f70f3-d535-4784-8495-049bda2acd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7729fe-d77b-4568-a294-b2fe8641c39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c05eb1a-9c25-4196-adfa-d3af4f4682ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1cc47f-d0bb-4338-82a6-a0dab9bed0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8112e5bb-c836-408e-bcde-b3f56cdd9e38",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d17ab5-57bc-455d-a67f-8ea6c6ffdeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a886c3ef-b220-4d14-ae8c-74b5135c5c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4a941b-d751-45af-99cd-d1b9cc3c617b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "119c6c6c-11f4-4d87-b647-0e74b25d71bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fdd658-76fd-48ca-89dc-5b0f3cf8e1a6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0bff12-b7a7-4341-9845-8ef9a017c48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699fde63-c068-4239-9513-b1908f9b3467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce9f7da-2fb7-4c22-8acb-c8722a055c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c287592-82a0-4914-9650-da65ba5c5787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48944f0-b6a2-44f7-87c5-b301235a3d24",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868a6fc4-7f8e-4535-881c-0b8bd44aea20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d8f0d1-855b-423c-b6ef-85ed75fd3a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb1e394-1bbd-4482-ac19-39c91c3ed621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58c1b16e-a26c-47d0-8716-429b6abd50ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b614647-0559-4f43-bd85-042f79ca7195",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb02366-1f15-4e8b-a333-b48c462e41bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf9afec-75b9-4d2d-b10a-682fffde17f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d407e6df-ee6e-4ff9-adea-6379c43c8c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a2e557-b859-4947-adf0-4557046afbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340ebcfd-1ea5-4a2a-ab9f-699615e8a9cd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462e8ea7-ce4d-493c-8e99-1addcf298647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300c16f2-fa52-4902-a827-08b83b837abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64609c3-23b3-4eb2-8250-4d299f9a65de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "414e4e75-7d56-48d7-8ce5-ee5eb95e33d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23474ea9-1d59-4332-abed-1cd5d6bb84cb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4941466-1fe9-4dd9-9e91-301f10309786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3fbf2e-68ca-4d29-b8cf-f400fd7d8fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d7644e-e1a8-4ab4-80f7-112d434da453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f598accf-f6d9-4167-a6a7-c26d9deb30b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7255fb3-43cb-4004-a012-cd42bb8a0e63",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b86b0bd-9c01-4fad-8430-2257285b46cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2592f8ac-a4d4-4c85-8867-8c9025e88045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968d4bde-bc92-45f0-bc5c-cdf68453e470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "12a7c1b6-27c6-4a5a-b6ab-6d087e62cdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76697413-755f-4e9f-ac57-84eec3c2c5e9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8ef54e-1609-4dcd-891c-2ad61d30f807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca43be50-8ee0-4540-9e12-4e048da49619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b453b331-39ea-43a7-ab28-6c34938390b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d6812f-a934-4821-a155-73e81ca7ac62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52235573-ad28-474f-9935-aea35c455470",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5a760b-89bc-4bff-b61b-158ffa586cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24109e2-8699-4284-9b54-bb5e997eeba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6680e52-818e-48b3-8aa2-2a53a35a1ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "853cb05f-2b15-4018-8f30-6c373ee8c471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68231bee-54c1-46f7-81bd-d4e7458c408a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc4e8b9-b4c6-4bbf-a46e-0bb8f1c297a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cc7321b5-8e61-429e-830a-c4976d6baf18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433c1f53-3fa4-49fc-b40c-34b89f238cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9d99db-9a10-4f84-9608-b53118c6bdcd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b8be394d-11a4-4a13-bc68-2098372c249f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00988dc6-0b80-4f2a-a9bf-763f26a8dc73",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56bf542-fbcd-44be-b5a6-e7b2935b5f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c62e9bc3-56ed-4c2b-bcdd-5b7530434b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2597e6-90ae-48dc-9030-e8651b2c53e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d7e02bd-c86c-4a40-ba77-766d1da11a43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eae6d04f-8ed3-4b58-9879-f35808537142",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2b51f9f-cc00-4f46-bbf0-33fb3faf7fac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e21980e5-03f2-46d7-b060-663b071338c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "358d8afb-10f8-4765-98ad-39efc4333c2a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22b98926-457b-4860-a519-385abbada57e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb2d739f-d0fb-44fd-a901-a2294f06c4c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "59281f8f-d995-4d1e-82d0-a75ab2b5cb2a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "246ae35d-d97e-490a-95b8-a6edc1ecfca5"
                }
              }
            ]
          },
          {
            "id": "b1875bb7-fda7-4aea-b0b4-c2ca64757673",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a90b04ed-bce8-47aa-86fa-c17fd3e7309b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "01470d8f-ad3b-41f1-9c0f-ab0f49aa5bd8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2d870f-c059-48f9-8e8c-b0590694b21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e0050b8b-fd3d-4ceb-b39c-fc80ae5e57f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350f65b2-c30e-44ba-bb68-4127e5c45a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27111b1-34bc-45f7-b1df-7f3b346e8435"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad3a789b-148c-4198-bd18-5cd0ea162800",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8406eda0-bcbf-473e-a460-82eceb7b527d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dca12d29-8bd6-44df-8ab6-de59230a67dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a41921a2-78e9-4308-83c5-466e630c5e1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "25cdb517-1a3c-4fc5-9e4c-75e91a72164c"
                    }
                  }
                ]
              },
              {
                "id": "9dcda4a9-0fb4-43c5-b673-a8f36d8c483d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41000247-ad54-4555-ae06-1238230365ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad1c38cd-d58b-42f3-9749-8acb12e4eceb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e67439b4-f807-47a1-951e-1e8ed2dbc739",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4d37b7e-53b1-439b-93e1-8818f76d9487"
                    }
                  }
                ]
              },
              {
                "id": "9067204b-28fa-47ef-833f-769bdc1809cd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a116c05-729a-4b01-ac9a-cb77eb2055ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3bc6829-9457-4158-b35f-9230c5825ecb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24c93747-d6a5-4da3-8d8a-ba5e51af0c3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "afa92b58-646d-435d-89ba-74ae6fd50719"
                    }
                  }
                ]
              },
              {
                "id": "5282b55c-5a74-4e61-a411-017b4f560bc4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "676bafec-b319-45f4-b722-97ef2ee68cbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56092117-c525-43c4-9ece-7d03f428fa27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ddba92c-6cfe-4fe7-a81e-e1214b311551",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0b178494-e38d-4665-bf57-9de0cdf7756b"
                    }
                  }
                ]
              },
              {
                "id": "9a2e06dd-e7d5-40bf-aad3-a696d5d6506f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4763a5ff-883a-41de-acba-00a9054756c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8abfcc8e-cd7e-48f4-8162-254e356fbd16"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82f95072-235c-4e1d-964c-10a194dfe1cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c359e78e-341d-4d7b-940a-9fbd7c49a665"
                    }
                  }
                ]
              },
              {
                "id": "c5d1c7c3-c220-42e5-983e-71298d5cc8c0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "890ef46c-4e06-4fb7-87c3-d1bd66043682",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccce5dbf-91ea-439c-9ae9-021e1f8b2e98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c74e5aa0-0c6d-40a1-bb5a-42a0b09f0b64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "55d74f64-ff40-48b4-bef0-1e8b2baf54b0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3b2473f-0d28-4ad7-b2be-29990579d4fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e7dff42-746b-4900-8c10-31c21af07616"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fe3b2345-023c-46e0-ab79-bb64bbf7c9c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "258355af-abe7-48c8-abb9-9381ffc39c11"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "960f91a7-14b4-44cf-84ec-fea13660850e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "66290290-e907-4604-9188-eb78a1148b9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39a9760d-a635-4c07-a465-7ff6fd5fe175",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c75aafa0-e2a3-4371-a6d8-aecd6c1fa324"
            }
          }
        ]
      },
      {
        "id": "6a012307-a1fe-4aab-8d41-40e0929e3dca",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7e786b9c-c8d0-4f63-b813-674525b80778",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0f960c4-b0cf-4e3d-9f99-380c35630d43",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f503c62d-2e75-4c2b-b683-933e00624519",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc469590-321e-41ea-b26d-c4d5566eaca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a3153d-ec1a-447e-a80a-36dcc66ee8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca11e2a2-cd06-458f-bd1d-b5771a6e5774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d08eb3e3-989b-4828-aacc-65b6e67b60e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e498865-0ba1-4103-a076-4aae70e0fc17",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8cd54a-3b74-4c02-bd63-d69d0e1e4021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733d81ca-69d8-42d1-ab62-85f545885dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8637b0d3-3a9d-4be0-9cba-f0883184ae6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97edd4ae-7108-4309-8409-9f0a1706644b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ca82e4-15dc-46e4-bd3a-ab62e04fa719",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae889cba-92b3-4534-a12d-ce3c3de32090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10af897c-a7a0-438f-82e8-c9eb58d4c25b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc24aff6-5711-4026-b246-7a403a9d5908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7238b0f-5e1e-480d-9827-782fbdcf496c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8051faef-eda5-4935-aec1-3252ec618133",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d612892a-5d1f-4586-8f82-a18b024c0fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6f8112-f564-4665-8583-f1e8264eef46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1332af-b642-454f-a666-3aadc95cdc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46270d8f-577f-4d4f-9a7f-e678c84f58cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d1d47b-ca6a-4c8c-9971-5579483d9e53",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78c1c54-23e7-4563-adf5-99c970d075c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa87cf34-249e-424c-91d9-945afb2c5b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377bb3f6-a90f-4829-9a1d-868381ec789d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "576773eb-af02-4d31-bf11-e5ced118c8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bd4b01-7c83-4d28-9064-be3c0e14ee83",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e74008-acae-4741-8da7-64b36b342335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31138d05-af1b-49a5-a1e5-d107450468da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770f7877-cde9-4624-a503-0e6a9c677f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7e6255-fd55-4c0e-b94b-75645196ba4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef63762-6cae-4055-b94a-f34f945aa577",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234e73b8-8b79-46b8-829a-5377950b5643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e2ade5-662f-4267-b99e-66fb3051cfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e97036-73c5-4d0a-a72f-3dc315909e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "442dd5d7-deb2-4ec9-aa07-88bacd8ee66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb1a35a-cbf0-4567-abe7-f4d42211c659",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a98ddc-e288-4ae4-8ffa-dfc743f736ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad22dcf8-d47f-4288-a3aa-89da0f53d4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bb4d03-aa98-4787-a9a5-28456d144d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9374f2e8-e1b9-454b-a98c-74369f9194eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f9f170-4f10-40b6-b423-8caaa68c0169",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddaaa989-da79-4717-a232-aea3db606be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a0cea1-5688-4200-86e5-9c351c4e7edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4f16bc-6bc6-46ee-bfc6-2a0e89ffa863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d69c4ce-f991-47d8-b010-fbe4a3a5bbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b385daf4-4d97-4de3-9e2b-979945b0c31f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcd6177-6e22-468a-8dea-9075da4f722d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e873e35-7fd8-4f4a-9732-b7d16d4ed830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f87f4d2-df70-400c-a262-6d62738f12d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0da49a-9dcf-4e7e-8363-a3d448c09651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6d2686-97e8-47ae-a785-193c7c271937",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bcb14f-07b6-418f-a315-63d017a1cdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a884a02f-2d8d-48a1-9db5-4c5d29a098a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d8bf8e-324b-4201-854f-273976d9d2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a55fe281-179c-4dd6-8001-49cf408077b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfda0ab-7ebb-4389-b24b-68d98ba47930",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4c1f27-dfd8-4de0-852a-294317e3fd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6009ae-0384-4a27-aabd-586c04e86c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9994d3d9-5bd8-444c-9801-b0b10febcb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5340cf61-ed01-4c65-8bc8-a5599446a0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95cb2ab-c0bd-44dd-aa75-9ea68f363ba9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55023c1f-5ed7-4254-a45a-2e8afd6746f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337ba7f6-c173-41dd-832c-fd3bf7da5137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a9be8d-afcf-4927-8340-c99d1fc9163b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a64b8f-b750-426b-a69b-9a663e4961e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a966ca5e-5f2c-46e9-9230-24d3eb539cf2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05217059-b40a-43f4-a076-e3dcacf9a71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd43ad6-900b-4586-b9a1-a3f441c6e01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8d15ef-8bc7-489a-8153-d4c6b9dbd331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1121e97d-d27b-4bb3-a3bb-8fa221af6b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bec6e2-6edf-454a-a705-26a8e65d5688",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a12bf0e-51e9-4e64-aae1-865296ea7363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd21fa10-9925-45d4-8e56-541f6c2d2c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a4c04b-92ba-4cf3-9e67-7b414b17bc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4b48a1-f078-4687-9023-bbad776d0acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e890473f-5273-4a01-81ac-4fdad97126cf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b9bfec-131d-495b-99d7-38996efb8aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e939332b-2a2d-42db-966a-b2cd9a496b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de300e41-1f28-4c01-bdc0-497d35c7dd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8aa9c8-6b11-4544-b42f-7f45f9752bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6018ce1-5021-466f-9591-a29704c121e8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56d4915-1165-45b6-9d79-86c72b5e28fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c704032-1538-4c92-bcb8-a52376fd0c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afcf8b8-3d89-4aa8-829e-dec3db3a4528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9f6982-50b4-4ce1-b7f1-d35f2bab5150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a767859c-678d-4c57-a81a-7b037620a7ea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a679e048-bdfe-46c6-bc5f-9b71ffbc5dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a739083-51e3-4865-b93e-b4a35dd509ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510f55b3-d666-40ea-901a-b8ec82862a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "12641893-2425-4bf4-950d-a1b339fa9634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39128207-f226-407e-a355-26943dee3605",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4488b22c-0d57-4a73-be98-ee5485507ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd4ca23-17df-4c9e-a595-a77a484802a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf87887e-b44f-4bed-9d4b-a038dd0f3b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0caa9199-cd2f-4a27-811c-842fe3935f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577d362d-8a79-4846-a3a8-1764fe37a2f7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f143ac1-7a94-4cc6-98cb-48dfe42fac12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841029d5-7595-4097-86d2-846b003fa763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a185377e-4106-4dfe-944b-690981ba7510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "723dc323-962a-4945-bd59-8da4951b5edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f581ed-2d21-43c1-8c8c-8f230927bf49",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a48f61a-5017-4c05-83da-bab8b62b0894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efeb1979-c073-4cc6-a487-3e8afbf03f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d1ad75-2fdb-4d35-bb06-1dae15c7537f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f847e1-1da6-4f7e-b1b8-682d75115b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177db53b-9df0-41cd-9b65-2c7d052dbd02",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655ae954-0ba4-4ae3-844e-753201cfc10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3865aa1-85b5-4f27-b689-dabc6d3e6d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a71ea85-237a-4a11-b298-6bddde1f51e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78bd6c41-20e9-47cb-8f4c-05dcd2ed201a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd7b67b-07ca-487a-a283-0a1592b15784",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42be5315-0c6a-4584-9bb0-32559fe49474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889156aa-2813-444b-9499-edd177950062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46804ee-8ac4-4829-9739-3fa2d62dcd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36002013-2275-48f7-8985-91a4bd897fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8922ceb2-41c8-41b4-a72a-24d72d50658a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b40274-9aec-4acd-83ba-128c347b26c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d559446-4ddb-4313-b5bb-5b080082bb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8b5244-8669-4ccf-96c1-53b56abcdcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc772b1-396e-4a75-b59d-b51d61ffd585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7b2c88-05a3-41b4-a17b-a5c1caafcb27",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6813eda-36a2-4909-a02e-a60f8117b736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b650cb-2b99-44dd-9d0c-e4cd8e9c0328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d1a923-71e9-4e15-9f0d-0b5b631980c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0474b1b2-50dd-4a3f-8af0-acbc5c5033eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0927a2-1a76-45b3-88e5-c0c8e7933074",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a321e7-646a-46a0-bdc5-5d58fea2c381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a202e20b-d02f-496e-97ea-bdbd27e0a232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558d6c4a-57d7-43c0-9750-33438f0ae5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77c79655-30b8-463a-b232-46a0f33a38df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb6c088-00fd-45d5-bfc3-8d3544ca5c74",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4bb2b0-0207-40c4-bad4-82ed02a7c646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be767785-1319-454a-acc9-e2d4203fdf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab16445c-d99e-407d-8a82-b40ef04ec84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4b183c-32f0-48b0-a6dd-df9cac6e6937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09772201-b351-4fef-ba19-e0d383927e11",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c71d64-7495-43dc-8f46-f6b9ade8d403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bb1ed8-c99f-47fc-84f1-b0f5ff17e7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a49438e-0d44-4b6d-8761-2311718edcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dce8b072-b693-4767-921a-d7342a6c545f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cf65f0-69d5-4168-877b-8670caafe415",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f865ea0-4f3e-4a30-b71c-b916e3ba925a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f28038a-ade9-49a1-9c78-cb06635cd86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408c0a7c-e323-4cde-852a-949a5e650231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7653865c-c211-493f-8a5f-fa7e31867aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a197e39c-3605-4380-9185-a82d2aabaf12",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09e5687-6cd3-4993-a28a-fe7c106b205f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f90657-316c-4233-8a6c-bddea166def0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df89aaa-9e62-4ae9-8a8c-e3c4a97c8beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d31142-47d1-4a93-aefc-cfe6ed10bf28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b0ea6a-b4fe-4f42-8d34-0334d442a13f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e7c2d1-dc95-44c5-9ac9-24c02a8608d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ada8259-d7f3-470f-ae2e-c3d355e78b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9da3a25-cfa0-4560-acc8-3ac8552a5091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f643692a-e4b3-4e0f-870f-4f873de17112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3ad17d-8af3-4b99-a3bb-6c234630a4fe",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ac1d78-63c6-4815-9e0c-6cb49d9da492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e981c102-3241-4be4-8ac6-10bece01e5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3f3962-6afd-496d-9bfb-411ffd6ef594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1f77dd-2850-4074-9cbc-938084579c28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4282db44-66aa-41ec-a7f2-59610c66604c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3709aa7-c931-472f-b19b-dc40aabf4041",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d80ec02-3d73-4a8f-bca9-95f36200cbc2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fac8135e-6bf5-42d0-90f4-7d2a678ec863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f20ba4-05a0-46af-bdfd-c6628bad5c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0639ae5d-f1bf-4e67-a370-1243c3906baf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1de06bd-6034-4211-b443-cd112c10621c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41f0b99e-eac5-4f06-8bcb-72b1ca4a4822"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8517c153-9e5e-4017-9eff-7a16e01790c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09d2e7f0-b824-4a8e-b2fb-1d4687f8cd12"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c14b0b4f-9dbe-4353-a17b-ac630ff1a5fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4a966c83-bd8a-41c4-9670-63abefa5295e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "101c1200-6357-43f1-83d2-f1f5c06f72b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8966a199-ffe9-46ee-b88a-d3250e5a375a"
            }
          }
        ]
      },
      {
        "id": "8d26b175-fd31-45b0-8125-e403e50e4acd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0c2e43ea-86b9-4dfb-afb7-0fbb50870b8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "543c4f64-5109-429d-8afa-3e5644a12d3d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ea8d6880-605e-4c36-8f9e-1a33bbdfbc4d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56057b56-c0e6-40b8-9a4d-83475c4e0240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c53cd7b-f7ea-422c-83ef-f503507e4721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35cb4b7-eca3-455f-b48e-13056fa391d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e226e9ca-6b6b-4f24-8f9c-364d8fdc47c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecbbdb9-026a-47bc-8294-7cb1d8edaf1d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6500b204-28d6-48da-8928-9c47be6afbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc52154-70fe-427e-a30f-00a7a956cda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16269cf-7c23-45b2-9985-78eb6fd15bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f0a68e-ddcf-4bd5-999e-54c000fb095c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624c3e6a-35ad-406f-a3a9-77dbc2ec2bd4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dd57f1-a860-4a55-9087-2d702e3d054c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9057d502-f6bf-4fe2-8b95-59549f2fff46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e28afa-e707-494c-aa14-dd330e8f0cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7df8ae6-9e04-477d-839c-b0dfd1c0d122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1461f9-bb06-4c22-8d74-8bfdf9dcf6d5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc10e535-eb84-45f2-83a1-af0d8e24e2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a832ba68-fc82-400a-a1ca-91e0179784b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bae6a7f-a259-4ea9-85b6-3838aeb67a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9383a7-bcdc-4d6c-a951-4ac882946a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578287b4-6fd3-4bff-95f0-98a47f9e016f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff4b9dc-dbbf-4e03-b2bc-593006b8ebb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09112070-fd6f-43c3-a402-b9e921a25562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d25a1f8-8383-4276-bb2e-0848b0b65ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21da6e64-ae14-4656-a36a-3e14fa4eaab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56a0f13-7088-472e-8edd-0076e2b54a47",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48807ec3-9b5e-48e0-b0e2-81fbd41ba19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6997c680-d49a-475e-98e3-25f25a20ab57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b795c43-3ba8-48b9-893e-9fe67e88aa1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4792d9c-da11-4511-827f-4d2be2a8c8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f04bd9-db23-4812-82b1-cf2f54b88909",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eade8fbe-1625-4cd6-ae7f-ff889d268b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676ae308-9457-447d-ba4e-28034746af0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ec7480-d7e2-41eb-8eef-96aa490c3a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "923ffd98-6117-4c74-bb1c-b5a3e30a3498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb63a2c0-db4d-4314-a85e-68f366efe3e6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a41da4-d190-4f2e-9e91-9766a8a752ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a922bca7-bf11-479f-8e83-c1601fb2c27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133a6fc9-e69c-4cc7-9b19-894d817f8a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ef1032-e185-42c8-8f0a-342a133d7a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a45b504-5a24-4115-9db6-13102541566c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d0b999-d0e2-4b53-9544-c6bbe37d7b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15361d24-e081-477e-b400-fb77f597040a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc4cbc8-647a-4bb7-9443-d71ed06e26a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07d281ca-760c-43d1-8719-5d4eee84809b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ad7eb3-470d-47aa-b689-9653ee8cc270",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b60365-aacb-4a6e-83e1-8038a8b073ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fa6f77-b986-42c3-9591-199baad7672c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576908ac-84a5-4e8c-bfd6-aa8ce7c9e606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6df5b58-37dc-4ed8-b2c8-d2671518a1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1617bac1-4e1f-4bb7-9f91-30241848c264",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bfa667-fb54-4440-ac23-ab749940c932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a2a303-7364-4166-a777-793420ed7a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e14fa7-1533-4ff0-b882-c5cb95719b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e72a77b6-8c2f-449a-bcc5-334c30677c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2e2bcc-26cc-49ab-acab-4a003fa9d276",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26e2751-ad02-4319-b07c-99347140fe69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3010147c-9ff3-4d67-929d-74d3791cd2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11790615-3131-4733-8a18-e6542b39d6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14634081-db77-4feb-9cc3-4447f25f0247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bdd3e0-b1c1-4928-97de-f323d7cd3493",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972aea5b-c76d-4ca7-8f0c-7d4e7b660aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da709ac-fabf-4203-ad7b-4c4aea2e092a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07152c42-5448-48ba-a24e-6fffe3fc1462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e57edd5-d398-4ba7-aaba-b4c782376191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da3e17b-ed4b-4ed5-9d13-e401fc34d4b4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74f70de-c830-4025-b15d-0ca62db7ed20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebd8a64-cd13-4bfa-953a-3a768ad37f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c09c16-40b5-400f-8be9-3ebd4d51acd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "14139d05-c24c-4421-85be-682e7ff165cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569fa678-7e92-4890-ae3d-b74bf43de223",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b359827a-f069-4ec4-9ead-bf57b1fd74a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7172e752-4b90-47f4-8e16-1f38e7125d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cf7569-95de-4444-ab64-c7830c15e6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "65177430-4d04-478f-8be4-01c9bd737d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9bf7ae-8e2d-4f2b-b391-cec43c61d1f8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcb3ea4-f9bb-4ef5-a0e4-8e705e75212a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5564ad-2146-495b-80df-0142bc9e599c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e79f41-c348-460a-b2e4-f090ab912378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f845b065-70f4-406e-9f55-7b40e5713e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae39372-1735-46fa-a6b5-4ba7a023ddbf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024c618d-28f7-44e4-b874-e33935a9e3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb6fa3c-f9ad-4565-b2b7-5e7557557c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a2a5f0-301e-4fbc-985a-b9e452bbe63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b31dc0fc-421c-4302-b221-fbd277618dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8827451-f065-4369-8375-b02ab8c78029",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb1b3e6-6765-4c6c-ae49-c79e74a25a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7369f8b0-8438-4a5d-a11a-c6347d08298e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d2d587-3c19-4f53-8b28-4dbf7f80f05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0c0abd-e7d8-4d1d-a571-013b83751d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5843c4-0dd2-4225-a5da-1ad8ead65d50",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48aa8d1-1fd7-4ffc-80f2-316bc27443b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f308af11-9efe-4100-9e44-45daebae5c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190c77a6-a6ba-45d1-babf-97ba3aa88dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46a2a741-1706-4286-acfa-5b91d9bd7f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6a055e-b5a2-4408-9a64-f4b412469766",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb9dbd7-4111-47d4-917e-32f37ec9adc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c245d8c-fbd9-4112-bee6-cdc2df04d998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c769f9-a100-4886-8ce6-8cb8faab7011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b8cc98-947a-433b-bb1f-2385c24d42b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3186657-1368-4e19-8cfe-4388dfe30170",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf4692b-ee7b-42a8-8e71-fa8e3095b933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcbfd0a-7557-418c-adcf-6db976fe12fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb03d66-e8dd-470c-95e0-f8dbd004ca81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64795e48-d3c1-426b-bd78-7be3bc4b22bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adad3d1-3e11-4da1-b9c1-5e3038841171",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b8fb11-317c-45ee-8f2a-d48575bbbc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13638194-29de-4096-a109-2a37a01ad0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9119c45-20e8-4c6c-9a27-b0027d4cda2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5196221-9f29-405a-81a2-94d5b617d9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99405d4-411b-4f68-b286-0098edac825c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64915ece-da41-40d8-b4a3-04d9a095ef99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556642e9-1f20-4995-b348-eceacc140fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acff9261-c6e2-4e30-bd1e-444005446d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c92b5bf0-7eac-4dac-b6cc-877b5eb110d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca25f70-83f8-41a8-86d4-ea97929d041d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b943bd-6002-417c-975a-72d4eba04927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cd567f-319f-4648-9f53-c44b852d1500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0c3fd0-cd46-4cfc-b1f1-42daf276c072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0b3360-fd68-4a5a-80b8-515f44e51737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815f6409-0c15-4b5c-a9e1-1e3eb643f250",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b2bd76-112a-4856-b631-079e3172515c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7662aa44-3b37-428b-801d-67deb6d0ed8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac46184-9ade-478a-afe6-b7bdfe473aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e0d43b-d620-4859-849b-86d491580e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be722fbf-81c3-414e-ba14-f27f9e072de5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768bd5ab-8a31-44f3-9118-c8f38380cd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4805843-96b9-4704-9656-7252b3949b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904b7d9f-fab5-4511-bdfb-5a089717bbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5d10f0-a635-4338-b379-1be262524299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edcdefb-a8cb-4759-9488-86b3b9047c9a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d8791b-01f6-4a65-a67a-b3480f604593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0825639c-74ea-4abe-9548-e0dbcd5ac54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089f4b17-2f4d-4d6d-a6a3-a903d17d0af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a08c60f8-8bb7-4fba-ad97-58132452f5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592bdd42-34d5-4f65-86a8-c7233b269ec1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2215d9-94ad-47b3-b789-22247e7efe7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6618fdd0-8bb1-4d4c-bcde-11e5f93ff216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec85f8a-c32e-4cb7-b3ff-7511e86606bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0472c99c-714a-4a0a-9cf6-cf485d5942e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f91d656-7386-4183-a23f-2d1996301cec",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06cfd69-1030-4f81-8fb7-ad7ad8e0c019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d245ab41-2b84-4623-b032-42dbf4150969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a89ffb-7fed-4253-a410-310eb6c18ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "642bd2a9-9f6b-4e87-9a17-559323e78262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c30ddfd-38bd-41c7-a17d-4f94b8c3d548",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900a44f1-25ed-440f-9340-4776e14990d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5cd0912-f54d-4ca9-8bae-2c12ddf47e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412085f9-52b6-41dd-ae5a-d03c73318279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd335c7-8388-4760-9b85-efcc7c8f1909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e97497c-0e3c-421e-a022-96507f8570eb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf9d2ce-da68-4161-b0eb-3fa08fb25e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27dc1d03-6762-4070-825c-f4f1ba8f5238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45aef74-d7c0-4bbc-bedc-97c078a2ba5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4627fff5-d5da-4687-a04e-8d92cb48209e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f065e52-2ffa-478b-926d-493a595617ac",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd01362b-b905-4a18-b324-c62e948219ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f8dc18-ce42-4839-a0ba-f0bf198205c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929158c1-b86e-4214-8ce7-85b6a8a75328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da52772c-1577-47b1-9734-2e9be953fd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d983ab-49c1-45be-bc89-220d08d871d9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150e7f61-5ec2-4f98-a653-a030d27ca003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64faefa9-a689-4074-8d7b-9e85d5aae33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e4b5f9-5e07-4df1-a743-d95700f02006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b71c02aa-27cc-4c95-bf57-6523e929eca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa91175-4150-4492-8019-4b1be669d96d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdd1dee-4b74-4dd6-82c8-f3f7ae6fd978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de02ca3e-6657-4b59-989c-49306958065b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e4d3db-bd22-435b-a26d-62562951e64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7457acda-87ec-43e0-a870-812e58497bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c97b64-ea36-4e43-be0a-5e921bf6bee8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a00488e-7275-4cee-9b45-265c2088e6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03870d7-e58e-48b7-b13e-5af4aa2bdfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbda93a-08dd-41ba-9722-ab236da00435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc479825-e88d-4878-8366-d4227cb0cc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5dc5f5-82b4-4f28-b071-e0d7a23bbb4d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e21602f-68ef-47a4-9e2c-55160f3aa6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b81cf8-8ef6-4ee6-9f77-6ebeacc880c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3facd33-39e6-413a-b092-9c3edc1b6d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8913d4e2-0b6f-4121-896b-5579ddd03d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca54a491-5c86-4b22-8c57-be891613029b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5278a3-48a9-432f-9baa-feac63f65ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685c6c39-fb6d-43fb-bb9c-821047ef4d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af91fad-05cb-4ed0-a0dc-29ae5b2ebc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31206e69-df24-401f-817a-be1b5104b2d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cf97329f-fd12-40f3-8337-e58449236fb7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5cc2baa-5f70-4700-a371-262b22a9d833",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d336a1-2f8f-44a5-a038-a5c9be88c527",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "960737ce-a9a7-42de-b57f-730ba081b33e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc66ea1a-3026-452e-aafb-6de0ca663367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6412765f-3f11-48ee-b9f2-169c6d22f967"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a9a0ff7-fb63-4fa2-84df-f64a8115cee7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4244059-fbb3-41a7-8a5b-2312831cc999"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9da4aed7-af54-411d-8c0c-a99e68186248",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff85e079-43ab-4576-bf96-a9bba9facae8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8499b0c2-4e62-4c29-9252-0ac23093d115",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bbe9fe26-ed05-4c51-8d2f-12c0328ac642"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75e68a9f-475f-4f5c-8531-50e9211e6da7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12d1755e-43bc-47b5-af4a-92dcfe614a74"
            }
          }
        ]
      },
      {
        "id": "55115b4c-6bde-4b19-b261-fd23856e8f6c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f51f83e7-cf55-45c5-8f83-c9acd8aeb25e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d03bd851-618e-46fc-8e41-45153ef2927d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fae46160-34a5-48b7-874c-677367c177a9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679be352-fac2-423e-a95b-f36f63797ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69490061-0975-484f-855b-259aad092889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1501a7b-7808-45aa-b07e-42d66521dd8b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9ae202-a390-4ba3-9405-85f689605b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc41541d-b3d9-4f20-ad46-efd4c762a86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64289c1c-87c1-4e8d-a457-ca50ff581d9d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7912ee7c-3d69-4a7e-8f72-b56af71e96bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34bdb2d2-3b1e-41a6-8abb-e41db844ebc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3a33e6-be12-41e3-9804-ca463a2fbd33",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea2e001-23b3-417c-87f3-b79e59da91d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b230e1f3-2e43-422d-a001-ead1bbbd37ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5653fbf9-7623-43e8-9ca9-d82e1044e307",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a47fe1d-213d-4a45-b1b3-0d12aafa3c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc10ed0d-96e7-4b54-b7e2-5e25b65733ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d31ad6e-7df4-4144-9ef2-76c1d90df627",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00170b8-4b05-4981-9635-03bd0ec374e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b65d1e6-417f-4773-9c87-b620f82a0bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fca2d7-cb02-46fb-87a8-80f95206e6d5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4489564-e87d-472f-a1c8-63fe2f1f0e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd39446-a0ff-4a2a-b2b7-fe39c04c0e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6bbffa-c72f-4e11-913b-a0dfa46da6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5def0dec-2e97-4825-8353-ea7959e811e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0aeddb-a071-4caf-8480-6c6c966a9f9f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20e5ee3-a712-4d54-bc05-40a9ad18ddef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f903f24d-61b0-4deb-a7de-2e86943aaba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09da8a88-a565-4b57-b953-39d55f628e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efe5df0-107c-4065-ae9c-97507a546c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a932cad9-0702-4365-b115-cd5f643c5941",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd9ba8f-0412-44f9-9e02-c03c75630aaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdc712d6-eadb-4bca-b030-fcced40acfde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce33d2ff-7a62-4042-b516-c4d86350e5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16f6302-498e-4fff-a38e-86136279ba91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0155e4-bab6-4ba7-b4c1-897da26feffa",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3d4ac3-7b61-496f-84d5-6e665b3dda32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5285654-3136-4dd0-a53d-8b15d71eda61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9126fe-8fe7-43bf-a88b-7d1f59580c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff15ec49-3e84-43bc-8f68-81e8120fa344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1930e8cb-e35e-48fb-ac93-305d824dc8ff",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fb8544-99f2-4145-9313-a20868f32a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6646884f-cdf0-48b1-8c73-0726da3d66fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff979d3-dc64-4ad2-8ee7-9e310870d1c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6fff19-e60a-4f94-b1d8-cc23ee9ea6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20b9b6b-df93-4614-8660-9d036ce6d1fb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0e849e-c6c3-47c2-a8bb-e72b0202c164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb7df03-3015-464c-b12e-33f2ccef4e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d078a27-b75c-4aa7-96cb-39b00fa0c8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ccf44b-38d2-419c-a63a-948fffc3117f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e679a3-a5f3-471d-b7de-880822e0afcc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8edd95-8aa9-46f7-b685-7470a572b920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b5260b-365e-40f1-a1a9-13fd2592201f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9520c3-151c-4f57-873e-b06a72835da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1305c5e6-3b39-468b-a386-874e644ad6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a2d84a-7a35-4bbd-a434-c0e1469ab961",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c83b0b2-6d16-4171-8465-3f7578f6f9b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5605b3a1-0ff8-4084-b243-3418db070586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0914a7e3-17bc-4e4a-bd86-8b4161b1c0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc8360a-edd3-4b31-84f1-99662b70d654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa0724f-4a99-423d-bfd5-0605273595d3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d0931a-477e-456a-86c8-ac75230bcbb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3726b020-57d6-4fdd-bdb6-7de3b2bf3bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d280b6-8ccd-48a8-8944-2941dc86b774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64616de-d7a0-41b3-9e50-0a2d334bfe3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ebbe32-7f95-4011-82ad-338947a3bf9e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533547b1-051c-467b-ba5e-dc19d0e13402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "097a7f84-94fe-4480-ba16-6a245b73f030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0161db69-59bc-4064-b388-b67dacb9652d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cc72c7-e297-4bbd-84a8-40351a550946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ebb7d6-abcd-4a23-865e-1c854d4b46d1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c427b1-833d-4e85-a18c-1d3653ca2cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afad7c04-7bae-44d5-8e76-3dc5454e8415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a038f4da-0b91-42c0-8bb7-51d512d95ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a04cb8c-2682-4b11-b7ef-66d8603707fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1b2970-ec78-4461-9d2c-bb0ed1fdd512",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2776a7ee-47ef-4b4d-8b64-9514da6e8f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86526724-0ab7-4b66-816b-db8b4cc191fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2345ffe2-e805-408b-a1b5-9524ea79c18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e0f16e-cfc1-4205-9aa7-2630430ea39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84768a79-64aa-4ff2-a020-74914f4fb206",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdc1d14-7ddf-41a6-beb2-ac4938416222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767dbf67-0b8e-4547-9626-23c0c3e61572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac98695-7a54-41db-b0e1-1b4d27f2ed31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ed8760-3ea4-41d1-87a1-70cbabb23e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9a40eb-10d8-40f9-bcd6-15db283227e2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898e53c4-e88d-4ce3-b9a2-00091a5cff8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39e937c-ed80-4ba1-aa50-d6495214ada2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7da55ac-da51-416e-81d4-057960ed4044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e80255-8365-4e9d-a2ce-35bd1ed8ecc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15eb282c-18fc-4fe5-b731-f1b1b03e102b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc55686-f3e8-438e-abc1-cee8fd797218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0b1c15-2e6c-4a46-8efb-198742e60ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6043fb2d-82b3-4c4f-b2b8-0c9b66dc5030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eaec8a8-a3b4-4cb7-b92a-46f0be6f04cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0b405d-e385-433f-9966-77bb5d22b92d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620c45aa-f235-4ad3-ba40-2307bb2e12e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6dc663-76a1-48e9-868d-34b9003dfeb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "993580df-5821-4305-afc6-404f3a9086f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b97a4d2-ab98-4c25-9d35-31655b29d8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8159f1cd-06ef-415e-a3b3-e1a8ea152475",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6118a3-fb2c-4f9b-a093-46ee9ba5ee7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032be95d-1b13-4b38-b115-82b4168c43a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87979ba9-0a36-4fc8-998c-c1362a4de73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14d6181-dec9-41bd-aa21-da548c3725ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65d57be-7780-483f-a400-a6d6756624aa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5c6472-26e6-41ca-816b-bfdf62c17c86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fd1cfa1-9bd1-452e-8e5e-1e308286a89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe20025-b409-4e01-bce1-535d95635221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6976338b-192a-4fbe-91d7-78e8ac7e349c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95060dd-f2ed-482d-875b-53d901e4b447",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea3ede3-fcc4-4d55-b677-09d5927a2f3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d79397-b908-4f0c-8e27-163c7e4d7fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "764791fa-856d-4caf-976b-f53a7f3840c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e740a04b-3df8-40f3-aa75-33a7893bbd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93eb4b77-33b5-48cb-8949-81f51693d68c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3a0632-0399-4554-b11f-4d46050e31f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09c2c178-2917-4ea8-be52-7e8d55024b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5891694e-a2b1-497f-b287-ef183dcc144c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a02a440-5fc3-4e92-837f-996a7c6e4464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80bafd6-b6a2-4d2b-9ff6-f63858616fb1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0425d3-8a7b-487f-ae03-866dc9e39e54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2019bd96-a865-4668-80b7-a3e60e0a5609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f83dcf-1839-430c-b7cf-21172905d755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27175356-9d08-45a2-af0b-449ac4537709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c13ac51-45d1-4b16-bf34-5a9135709456",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e6010a-3bba-4210-b752-1a0809c61190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d54e8cf-2f4f-4ff6-941a-e6bb836a9b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ba36cd-28a5-48ad-aa0f-6f584daa34e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97f0d19-f7d9-4ff0-8673-226f5c276b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92214f11-82cc-4874-be49-a3babae19d43",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558dfe2e-d183-469e-b6d1-02b3c3586638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ba63159-cf83-461e-b4d0-f8ef050ec17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40161fbd-34fc-4017-bccd-8fdddc768ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132a1ac9-0708-4fd1-b538-afc0b8d8bf1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f06bf3-609c-484b-8f59-2676d5a569b5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989da3bf-d254-45af-8656-c0be84bcbed6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d849d46-2fdc-45e1-a3b3-663dd58346ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcd27a4-2303-4b55-a5db-81ff02a7416f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed485dc3-db66-4fbe-b105-f554e87b52a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1a856e-c00c-49b2-8632-d677bfd8b827",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d543b34-8474-4c3d-b03a-b57e9f80caaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "522e6661-d2fe-4025-b93c-cafc6878058c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcab5127-9c4c-46bb-aaaf-8f3a76520d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e7d44a-1095-4b2d-8d05-8637280ef472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87209a8b-31c6-4ecc-a501-a1a77918e5a0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f221b30-b850-4e77-b3b2-e84f2d7d6caf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1957179c-0c47-49db-b35e-43f29dc9ea02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a673c9b4-f417-4009-bf45-bd449457301a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9545c98e-b530-4097-a32a-eb30a85f9ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d1b269-50b1-466e-b065-89e1475a34d9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fd3c5a-c2b5-4caa-b197-3fe3b9f52da9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696ac937-2280-4a75-928a-a8cf5539a60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7f001e-c20e-4bec-a916-6a75a45a2eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868392de-43f2-419a-8d37-f7330777b0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0031db8-411a-4ae3-89a5-b5e0f51baadf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c596740f-9050-4cf8-ac48-d55415cea0d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0682b94a-eb2d-4696-92f9-8efe85fcde4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ab4164-ff69-49e3-aff1-9a5ebd8835f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1e7a52-70b3-4a81-893b-66e07df8ffab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ea34af-dd79-440e-9c52-8e1ec89a32cf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc49f29-5d7e-4eb2-853e-6b508744871f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d18bf56-d1bb-42a1-9357-293d44746705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "837517e6-0957-4bc5-b96c-c8129f208428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951442b4-c690-40ea-8354-226a65af7ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1d8377-6d66-4600-b10b-35095a337fe8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c323e864-67fc-4d21-9fca-bff02119c4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58eadc03-5ad7-472d-b2a4-de61d6b40060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a4d640-c355-4cf1-b479-37873f7bb454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8cc7c0-ab79-4d61-8d05-4f0368f800d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca58a440-f30b-4b00-ae73-30a9daf8a03f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e4885c-2600-4ad4-ae4e-453f0c7f6cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055cfb2e-33aa-4637-88d5-7ceadf417e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddabcba8-43f8-476c-80e2-8564c7df19e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8028a0-0d38-4b3d-ba5f-6c4e7893b6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2cb03f-27a9-435e-9ae9-c13cd39639a8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a76b8a-d30b-409b-a297-1e1dc55dc925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5821266-acd2-4707-b3c3-44b48ab3a049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe9189e-04d8-4560-b2e3-d6546ba92cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5752421-ec4d-44ba-83d1-c9f7601c2661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98fb014-0783-4793-9ab6-104866e6a939",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5208cd4b-e98d-4b63-a3b6-543356bc6d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfba2e8-d7e5-4811-94b4-87fe0cea4da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c762e9ca-26a2-4c57-8a69-2e3d8ff61ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b0fc97-a2dd-4ed6-9689-3a30ae385d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37bb860-5dd5-4dfd-a3f2-08dede7335f7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9b80d5-cf5d-4454-b979-163b232c186a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df5e322-a9cf-4586-9297-a3594ebfaee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5159fa9-ba70-490d-ad7e-b75c22e16756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dc833e-b8bb-4b57-b9b5-cd068f5f0850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee039e2-da59-4eca-9a0e-169cc46e3dec",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8200c9-2ac7-4e41-8752-f7a540494cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642affbc-2d16-4dd9-a9bd-a2cc90f9404a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dd0511-2cfe-4db1-9a72-f779903c7977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f9af3f-a474-4cf1-84b9-43fbc3c06352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b44cec-7dc3-4bd6-b5db-7785d8bfe103",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86732381-355d-452d-8f13-9478144e88f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33cfd80-d717-418c-83c0-3dd603e54528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde414ed-dc57-419b-8fdd-ad3398d19cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9c451a-5001-4ad5-b660-4aeace89adb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2adb6dc-7a82-4ddc-a1b7-f34e94f822da",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47646d83-bda6-4a89-b073-12aebaa8f9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6e6f61-8abf-49c3-962b-353d6b2cbde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8dcdb4-9a49-4ca3-8fe8-63f32f7b9f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a41232-21d1-4269-b232-0f9a037cf455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b59f34e-fbc0-4162-a9b7-c2b77eeb3681",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3944f2ab-b8cc-4cd2-9044-399d046f63c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f18c565-2642-4d8c-b540-784e8bdc0e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8695c22e-405b-4fdb-8daf-e285ce2e8d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f3ab95-23b4-4ac3-ae59-686acef80a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf3945e-5216-472d-9f67-329e7a2dd917",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b89b095-a422-4908-9c6f-86776ef8f7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232e1f84-9ddf-4131-8775-9b4599d9cff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b40346b-55bd-4b6c-828e-faee77fc7717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999f1b70-d8df-45b4-8b88-0257f1ae7330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8fe866-142f-418c-979f-8171a1bb725b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd35b54-06b5-425b-bd6c-d5a316161531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c30ee0d-3964-45ab-aebc-e6f9c4423465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ab73e0-570d-4cec-8f18-10416550e363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e0e7eb-b79b-40b9-ad7e-ab956cb08711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba0f352-804d-4fd0-9a06-339baf695311",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0549f33d-62e4-430c-aa29-555aaabbc1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6b63b6-0db3-411c-aa92-bd38f34625cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0bc3d1-2510-48d5-b257-5eb1ddce6925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95cd148-9c5b-4249-b411-658e43573119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5630d77-a2ab-4a4c-80a2-40e70afdf631",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eca60cd-7357-4cab-9282-122d994fcfd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6b303b-3ea0-4954-8917-f4dbcc14a8fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1066335-005c-454e-9646-9d9a9ac7379a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873bf86f-74f2-4231-87a1-81cf728e8647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63e8974-a579-440c-9490-c6a53e65b253",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4b7153-1d62-4a42-90a2-5bf4bd946f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fcf311-88b3-4862-b0c8-3c49cf97d101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ce78b2-6ddd-4d86-9788-900b25a552b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278de880-b959-45f8-84da-24d99a113094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e702e4b5-bf60-4023-bcb6-c9f82f295ec7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e23e9b-aaff-476a-acfb-4a2b021d6703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8c9b81-2716-4ff2-9b63-bd0ca554e03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec508881-2a5d-4b76-a39a-4a8175060702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978a8406-5b73-49b7-a02a-010e10da0f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53ea6e5-879a-4c44-bfbd-5e33045c8525",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee463ed-c763-445c-a900-c0a44b8e2305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b9e1df-0a42-4f27-b03e-014f07b6ac51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4784ab91-0e50-4d89-802b-8bdb37043adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075ba65b-6e91-45d1-bb01-c8190ea51eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089ff8ce-740f-42e6-8137-19f5f6747c41",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0936dca-bc78-4ea1-894b-e4afcb41ca8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc4ce4b-c1f4-4e47-9cb9-cf509bc8eb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a562171-5c51-4b83-9642-6318933a47e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ebfcf6-d8fd-4d81-aa0a-e802fc28fdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ff8a48-a4f2-4106-969a-5a6e2fdedbe8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c0361a-f5df-471b-8760-343572c2c7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76584b0-f066-4b5a-9ee0-c833a6ed9abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100b8a2d-35eb-4cae-a626-511ba834a045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab925209-8a14-47c7-90a2-6d5958505c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dbd0da-9fa3-441b-8671-757f2adf20b0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5219356a-d413-4179-a3ac-b3bb3455d514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60c64ac-6576-45d2-a4cc-d5d2630bf73f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427d233c-26ac-4006-9a15-6fc5cb928a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3fa61f-322f-4346-9e28-76320a14184b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b94adb-faad-4d81-b5cc-4271cdc12332",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e58787-5052-4069-a8c3-fe6b4618139e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad293aed-9e05-4fbf-a0f2-b2fe430ad905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b3ec3d-2c4b-4ef4-b581-4f241a3cc7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3245d03-aac0-4310-8359-51ec341416f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2449aa08-1b8f-4723-baa0-1e3b5f4499b9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac9bbe4-d5e9-4611-96fd-a8c5492c57ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ec6c37-6eab-4f59-8187-00cea51c6998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb821aa-ec33-42d0-a46b-01c5ede1794f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d717b3-49d5-4b42-acdf-b001e25073c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f527a88-9132-4aff-bd54-bcbf62d9760e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17097dd6-e2d5-4243-acb7-e66d86de3ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b343850-87c2-4e91-b994-0407b872c6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df45e42-907c-4791-a222-f99bc5fc84b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da5ba12-9420-4a7c-b29b-59f08257b4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119fca8a-dd73-4ffc-8953-f045020937ea",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac2bbfc-835a-427f-a4f9-cb587ba1e86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5446d515-6ad2-4f49-8746-60b568d4a7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccf3d66-e9a5-4642-80fb-539b9b53ad62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0f4d33-a6a8-4f4e-84af-f82f861c98e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96d4db4-1a8b-4569-b0f7-abb5b090149d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ec0bb0-310e-406c-ac91-d9bbf83eecf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6d224c-f7f6-4725-9476-04b1d0554d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0949507d-0a3e-454e-9751-a4fae286517e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429b98ac-6887-4723-bad9-40bce17c5b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18438a6e-1255-4a40-8545-92006eb99de6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7e6cd2-df3e-415c-8ca3-65696dcfc7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200bb2b4-1ca8-4988-be03-a5e1061195c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28e0447-6414-4ea5-b445-da63b0804cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9fd50d-e2c1-4bd5-b213-ccf56b053aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09828107-8020-447d-9538-6f7e45d51f97",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69068940-bca1-4924-89eb-a7909d7693e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7439689f-e505-43a0-b6e8-a7a24622ecb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d1ee5a-3ad7-4117-b45a-d4d39b0cea90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3462e9de-901c-4aa4-b83f-66bdbbeb7418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac01ad94-aa2d-4769-a064-520ea5e3b6dc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad2c0d8-e87f-4a45-9905-a8c816457f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f23cc3e-5db5-42cf-8f73-40d9a112d75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d56a218-9ccc-4a0e-a857-f02097671285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d1ee62-0ab9-4cee-b54c-1edb53675a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8efc188-98b3-48db-8b04-9be3f372c4af",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7077a4e1-13c7-47c8-a9ff-0471e6b3ba03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c11b4f-0aae-4860-b8f0-de24a9bf5559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a0d92a-777c-41eb-a77d-59e8a77dc35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc4961d-c723-4a7d-ad3a-afa0c747aa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a933f7-8ed0-4e9b-b2af-4c787042da20",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05feedb8-ad44-4ecf-9e72-c893823a0469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74b635ac-36be-4cdf-8538-3e05e8c24cc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ad9f5c-2d73-4ba2-aa6c-1288bfa33260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8eff1ca-dc8f-4692-ab88-89bb98548155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96157a05-e817-4de5-a328-9fc96c05d7d6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e45e613-6d05-41d0-8428-dc1d097ff315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e817a1e-be44-49e7-a714-c7f7518d6f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b179dbc9-10ba-4957-ad00-5815768cf708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dce79b4-963b-40f7-bc65-4c6da6bb9101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237b5de1-52fb-4385-a32b-032331e506a2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89c9c9b-cf83-4124-8ff4-a4112a51f25a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "177bf10d-d64b-4819-9c7e-6a8a78112082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df66b7a1-1af4-4274-8416-00f7cc788d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ece89e-44ff-43b4-9daa-55a7332e6635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4c3752-a4de-49f2-8a70-bc5c09d8bafb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cb36a2-6a85-426c-81dc-af565363c86a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1e38e21-532d-4233-9a96-8cd9874aeb5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef28ac1-e03f-4a17-8bbe-88f9ac86b500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a386f54-6dba-4e64-8410-38e86f117669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2563371-a511-4835-9847-97e908a46028",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f8387a-e0c3-4e4c-840c-cc7c353473c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b738d017-4d75-4565-8932-271e4223fd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc3bf82-98f5-4b6d-9509-51c546b34844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff58751-8931-4c42-9219-426181976ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba67b498-bdcf-4e37-9a0b-dfedfa1e0b8f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d44f14-f601-4d98-92cc-c19b5ecf3628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "902f3e6f-b0e4-4c8f-9c8e-1262834f93c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6cf0fb-f42b-4a27-92a9-12bf9863b438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9bc514-242b-44a7-aaf4-89d9c2ffe1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feea7749-7109-412a-99cb-a047b1016701",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e977bf78-b6ea-463f-8dbb-dc060f91993d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5185e19-3173-4503-94a8-2df423e53791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27bf327-b351-4d65-bc17-d28df3f4b81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d448a2e0-b5ea-4ebf-8b2d-c60a353b64d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc389145-7739-465a-8cf3-829d34cc763b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f257535-e824-4d78-a1d5-1ad9e58dbf83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e412396-f194-477d-b742-8ab39754fe12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a298383-8ce5-47f0-bd20-5536697050d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5afe16-6400-4559-8a0e-b3c8ab6ad9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4997cc89-d292-455c-bcd4-73efb02b1f05",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92244887-130c-4cf4-8895-5ade64f2477d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e508fa6e-7d13-4f1c-9a71-9323c2676797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0244251-5c15-4487-8cf4-2dada7aabed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24c0985-d7e8-4cf4-9c00-b1583e6f7178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb64696-23e7-40e7-8593-20a5aed160e1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6542309b-0282-49c1-b092-0f0faaa234b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b5a2b4-2bbc-42e6-b300-533960ed0dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f79600-5bb6-4120-8816-d3c6de19b241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508f235c-dbc9-482f-8c54-7d581209bee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643dec24-fb9f-4d97-b7ea-df32f20af86f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765b1983-d1fb-4508-93b6-e618e8d89312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa25683-653e-47da-881b-88aed4a78b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9588008-5140-43c0-8fb0-b1cfe1d74083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418a85e6-ab98-47f0-8173-8938efefad6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac3ffd0-9409-4a50-96f3-6a8e8fbae9d7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d90eb61-de04-4417-940a-d1cabea75114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0384887d-8780-4e37-9c98-2d8d8c0664f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce65b032-cf89-496d-a6e7-afb05f117e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2662b61-7775-443a-891e-f4d6cbd52d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6121fb-d9df-4016-8fc1-583983bdd9b3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc471d8-2530-494e-93bf-113702db4b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11765a0-db46-4e64-9841-c3ddae6bcc13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6896b5dd-34ba-468a-b9ab-cd94314ce0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b47cdc-77e8-4ad2-aeed-b778cdcef9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e226a975-2a16-406f-b8c3-117c5295ff39",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd40333-c6ca-41be-9a0b-e12dac35704f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f83799c0-5c98-41c6-8977-508dcfed2470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de4a22d-d923-4a81-86bd-b8e4c92b696b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9685a65-3495-4d02-9ab2-b5664477bd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d7bdba-90d4-444a-a282-a2e87c72bd92",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03c6546-fe0a-49da-92f9-09a3d1b2924f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7991aaab-2d2a-43c6-8638-317bf904153f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943c7247-0b51-46ab-ab15-76957f157b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac05824-95ca-42f5-bb15-0d848b189989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da76352-358c-4d5b-b36a-252b8ce40559",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc41454f-1c05-4ddd-b207-10cb40f9084c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f2a208f-91a7-442d-9696-4f1880707daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ee3a92-2503-4c02-895d-f2b5f6c91bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf08e21-f39b-4477-bb7f-a5021411350e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814a56d1-f9e0-40f0-a04a-7a87af0ac3af",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ecaa26-4564-4087-995f-9ee1cdbf779e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd3cfe89-cbd3-40ba-9aef-cc42c9d2a518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4550eced-e23c-435a-957e-4221afa2a373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9700a1-9ee5-4499-a774-fe60f5c2ea25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0367207d-a3cc-4e1a-a650-64bda5cb7030",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f83886-95d8-4ba4-adf2-48725c5fcd53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a81d3dc-000f-4b65-992c-cf767b0fc52b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51922e98-6f2c-4ce4-a77e-c58be966c572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5376cf-de7f-4443-90ff-d663b9d567a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6648f91-21b1-4627-8a89-bbfb4ae54845",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4281f6-d9e3-467b-ae5b-724eef1347a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b20dee09-49f0-467a-aa32-0986aeed47fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290ad1ee-bcce-4ec1-9ffe-e3246e28b881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae33732-50e2-4803-b90c-934a38dd2192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7285b522-e97d-4ea0-80a4-7ea22753e491",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cb33e2-efa3-4c09-bb7c-10ea3e27d7cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "143798c9-a27d-4e9b-abdb-2466fe8bd033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1521c33-2490-48dd-adc1-cf86e8aefffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc944c2-4c6d-49aa-891e-0aeceb14164a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471fd960-e59c-4256-81e3-e1d0fe92d60e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b23314-4bbd-43bd-afed-b6ea9fdd4176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9a0d617-53a3-4abd-930e-cd3814de6b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f383f9-4f48-4126-91f0-1f35c2b96ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230799e8-01be-4f02-8412-34d835284dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3c63f6-6e7d-486e-b32c-372c47528a29",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c868d4-b68d-4975-be75-1e603f7e9fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9756ebde-9571-4041-b896-a6e732b870f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a2a323-2c81-420e-a984-a4243518ffae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a415f434-f244-4508-bad4-b463ff6f2776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffd116a-76fe-4ae5-8e29-3f30b25ebe10",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e95668-a327-4688-a82d-516d9faa3f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db66aaa7-dea2-4aff-a6f3-0f1db835281f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634b8369-73e5-4dff-a9e5-ddd9eaa51ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656c20ba-cae8-4b76-bf73-e7a512688f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b94902-e6df-4f3f-a96f-80fdad9b1878",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980667a9-e60f-455f-a9ab-a5b72fac8e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2b195bd-aacb-4e4f-bb40-300bbf58cce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a29501a-b7e0-472c-a2c2-eaeeaef9eaec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1181a3a1-8b99-451b-825c-38090eea9150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ab756b-8ccb-4434-a27d-b6145c985e31",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b605447-de57-4707-8def-9a7bf6d2c155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cbc98d2-0cfc-46d4-9e2a-989f80516f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6696b9-a3f3-4652-9380-96aca1359dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfbc9fe-5e2c-4ae0-822d-f7f58fc57f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e822b72e-daab-4b24-92b0-88e664185cdc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3f7836-9099-418d-9e55-d59603b6503f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a7ee8bc-39eb-4173-9bb8-20a6019db109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64b2df6-9589-4f39-af54-03c725d39687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e3599f-9587-4ade-81ca-5cedf9010e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bdcfbb-4471-4316-9131-b2412bb9a871",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf78652c-3e95-48df-81d2-b610b48faba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da27d083-8087-40db-9559-1d9b56e499cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc71de7-aa7b-48e9-8ae4-7328fecda977",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b854e46-10d2-4e98-a310-fcc8cc6c0681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65612c8d-eda0-4ba5-93b2-3eaf311b0726",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c5671e-6d77-46a0-9d45-5a38e8a17d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df4dd75b-a4f5-46ea-9ca6-8bc218839928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb8b177-c93b-4e48-b2a1-4f4582ba9477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253f9d3f-5aaf-4e95-a1eb-18ed76d6b84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631d8ee6-ea7b-4b46-9298-eaa1bdf71d36",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba416a8-6b8a-4310-a393-9cc09ec1cb03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2310ec82-fecd-48fb-b208-ec621921d3a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb828b31-7fc8-4efc-a88a-6e5a530acbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d65c08-d6ae-477d-b77c-0ac020d45d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055234bc-2e38-47de-9180-0f412b4ebde8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198dcd9c-a848-4a4e-8083-e77cb0c4848b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef494496-5dd9-44d9-8258-ad825a3e06c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f136e118-7349-44bb-876d-bd8143100f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45ee777-7ec5-4929-ad1f-81c409bebf45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9204f52-6e06-4760-b02f-085770d6774e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08e05f8-3782-435b-ac7a-30e45d53f680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ded9b55-02dd-4c1c-aaa7-bc41df6f1101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b90317-de24-4b08-8728-3df31cd37b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d7a8c4-bb65-4c98-924b-8a54b4d3e580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa674b3-081c-4cd1-b367-088533b48ea5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6305b352-56a1-42c2-a90e-e77c0045f976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96aec3c3-53df-4aa9-a9a8-e0abebcf691c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f171362d-2c2c-429f-b356-8119bd1cb2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64f9159-c8ea-4816-ac40-3f5e558fa27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e432537-3dde-447f-86df-50ee78a8e6d9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743afbad-6252-4a55-8634-e5d45f0f0340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da62f0a9-3950-4d5b-83b8-acb40ce585f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf8a6ab-d9c5-428d-8ee3-9164fbe6e918",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb128123-a6db-47cb-bba7-caa4c3490680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6132f72c-96d2-4129-a05f-b07491396998",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669ec0cc-eb8c-4ff6-8b3e-83c8757a8a3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a225851-c577-425b-a97b-e41788737577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17090695-8b3b-4a87-ab3e-a273140045c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d41515-7e3c-4a5b-9d8b-d0c6ba0ca4cc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df237905-77e8-496a-9183-2e816cbc844d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0f45095-3c69-46c3-bb89-b696f14e5c4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5422ac21-262e-49a3-986c-8fe4202a7167",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "31a6edee-c669-4b3d-993c-394d88a0d2ce"
                    }
                  }
                ]
              },
              {
                "id": "3d85e2e1-3dd2-4041-931c-bab3c6c25c78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bf96207-0351-42c5-ae71-73121e029e1e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea0a721-67f6-4062-9661-ffda7d2b7355",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7c7e1517-a492-476e-9c3d-c92e90bba120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ab9604-9b96-4e17-a71e-4f49c53a89b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bf759eb-6446-44cc-89a2-57eeb299c123"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97f4bcc4-a332-490c-b4c4-22a0ce821e4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d3c7803-2a8a-445d-b45c-73d927405836"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba6b7b9d-2ee6-41b4-975b-33322ec4f5ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf297080-a7e5-4f74-aafb-532e5db812bc"
                    }
                  }
                ]
              },
              {
                "id": "bb6d1e07-07db-4e4a-b6f1-ce1107f13a47",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2465272b-df68-4c29-b59b-24edd93985b1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc4bbef-f2b9-4b83-8228-d91126316a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6c06b299-cd93-44fb-88e7-c87e90d42209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a614cee-4e12-4c0f-9148-46e3fd9e7b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59822468-98ed-4cd4-9f20-8e9e89926287"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bd632c9d-eb92-4f44-9566-c0f2db8419ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77499776-db03-47b1-a374-53fe4213ec90",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d80d2ef2-25bb-455d-a6a6-4246d7c68b16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "84b055d6-fb3a-4409-8119-efa44fa58416"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72300cd1-64a3-4202-8030-ea531182fa4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "886dd228-e7d7-4896-8c4d-e518ebbf0d63"
                    }
                  }
                ]
              },
              {
                "id": "618955ff-c306-4f2b-8bfa-075e59b86033",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9998e260-28a2-458d-95ef-b719ca6dcad6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9627f548-5c19-4f3a-a7de-d2b2cfd6d1d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de340e49-aa3c-41ec-8555-28d34cb236f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6e41dd7-dd92-4f89-a3d0-4cb094a17816"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91e859da-2eb0-48ad-a5fd-fcc846361cb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9104203c-5c8c-4ee4-9ccd-b73ca56170a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3db7015f-7f16-4756-a2e3-8f86ad4e8edc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc3306ac-51e4-4877-8af2-f687a29bd809"
            }
          }
        ]
      },
      {
        "id": "fdada422-b896-47af-8cb4-90d4653e8107",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "aa486edb-22c8-48ce-9d3c-df424595ea40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8be86c79-ca16-4c35-95af-6ff5a6bd1e2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d521698-4379-4c00-8878-1935b8a02f2d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63d755b-3cd7-4e46-acd7-895b2a5edaa9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fe38bf8e-ffb5-4597-baad-f7266e9fae87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42177eca-04e3-4293-8bd1-5d92ec45bef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ce2a013-4c3e-40af-b5c8-e3ce0a5d77d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a296017-1124-4019-8dae-741ce675db86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0603ddc1-877e-4a84-b936-0cb1033921b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6bbc5da-b2a4-49f3-b837-4abc1ec2c6da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ceff3ed6-7512-48e6-ada2-1636aef4f3d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6897dbea-262c-433f-8350-7a6868e405d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2e3b2876-5d76-4115-993b-cc55a92e3510"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6947a061-8d5d-4f8c-8d7d-f3b11e9b2b22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20d49160-9619-4fb4-9a13-5eb4288dd135"
            }
          }
        ]
      },
      {
        "id": "f7b88d9a-b48e-46fa-9a58-807a70418536",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "99ca03de-10f4-42dc-8576-97ec1a571d58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23561348-63dd-482a-8297-2a407dc4d228",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98952a06-965b-49c2-800b-7fa8b3ea79fe",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4a1ca3-da7e-4775-ab7c-cb017bd050f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7b8260b-5848-4524-a58f-b07b7ad56373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea15b26-f71f-4acb-aaed-1d441af2fbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1182f296-54ed-4a9e-922b-9f485a3eaf43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ef2cb5c-b94e-4f7e-ae84-c67c70d6e577",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ac565a8-ecca-4f0c-8267-a0b19adab189"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48d14787-e34e-4185-b550-ec204f9fef8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ad17052-a728-410c-89f3-dfffc1fb0f3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42e89b4a-0d54-48af-b556-0d371708fc1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "398f8b86-ac78-417e-92eb-8fbd6cef3e13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c23ab0a2-2ad8-4d69-8358-c08a1752cc8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fdbe578-727e-4dd9-a78d-2341c7a608e7"
            }
          }
        ]
      },
      {
        "id": "d108c2a0-87c0-4394-86e8-d21de8ade16f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dde2e1cc-0962-4ced-a234-878ab29eb1bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b70bafb-2d61-4c95-8e52-0c4388e0e808",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aabfd48c-c3d0-4834-9478-24b105ff1111",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144d473d-6c55-44c7-bdc5-c4c8263757f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51e732dc-8f42-48e8-846e-18bda9a7b402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dc365a-dd8e-46fa-97d7-108a1a996f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b524c65-6dde-4033-8f9c-c9eb9d488c2c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29ccdfe6-82cd-4fe6-a9fd-c394adb7e40f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b596b5b9-2045-43a7-8d16-5370a1000479"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e65bd8d7-4392-48ac-a934-67c0c5d6454e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8669f126-a637-47e9-b2c9-fea92788a143"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "936c164d-a831-429c-bde8-3be98924d518",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93cd427e-328e-481d-8374-c8beba74d725"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c537415-2231-4825-8a30-687e162b96e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55437fd2-fcfd-46f1-a1b6-cb33b56ca6ea"
            }
          }
        ]
      },
      {
        "id": "4ad9e12e-75ec-449c-940f-b5b493222d64",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bef8fca8-5f0c-4489-8f44-a85e1185039f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3abcba68-e583-404e-b36d-baebc959c0ba",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c0ba39b1-edb8-45f2-b189-2905f9095558",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f708267b-5bbb-4dfa-992a-4c115dab2bcf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "351c2f1c-0cfb-4f40-b6fa-12f2a11ba42b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 52.2140350877193,
      "responseMin": 20,
      "responseMax": 372,
      "responseSd": 28.284267765249147,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708389215113,
      "completed": 1708389238821
    },
    "executions": [
      {
        "id": "cb7e1dc9-3287-4ec1-aaf4-05292c83e7ae",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "11325528-0f96-4e5a-be13-0c2ac2d65606",
          "httpRequestId": "00900d18-fa62-4531-afc5-8b4b0fd04881"
        },
        "item": {
          "id": "cb7e1dc9-3287-4ec1-aaf4-05292c83e7ae",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2c0f1cbb-087d-4d99-bdd3-b9d8ead9ff4f",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 0
        }
      },
      {
        "id": "f40ed4ea-9964-4376-bfba-b497b143a35d",
        "cursor": {
          "ref": "d02760ca-afc4-42af-945d-efc3705d69eb",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "34164263-420a-4e80-b015-46b698946dbe"
        },
        "item": {
          "id": "f40ed4ea-9964-4376-bfba-b497b143a35d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9a3611dd-ab00-403f-b642-b89e6b50e6c1",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "0c4e2c80-328e-4afe-a3df-eed15118bf37",
        "cursor": {
          "ref": "99ab5f98-755b-4486-a2a4-6e4727c31c41",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9c5e995b-1c69-49a4-8fb3-8c28316c15f6"
        },
        "item": {
          "id": "0c4e2c80-328e-4afe-a3df-eed15118bf37",
          "name": "did_json"
        },
        "response": {
          "id": "9a07f30d-1c1f-4af8-91be-d733ab97d6a2",
          "status": "OK",
          "code": 200,
          "responseTime": 286,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa9c440-61bf-4351-b9e5-af4cc1140f06",
        "cursor": {
          "ref": "7ef515f9-1aa3-4f18-8da5-f98ceee32356",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d91b84be-fc79-4887-ae83-76b75c269c5d"
        },
        "item": {
          "id": "2aa9c440-61bf-4351-b9e5-af4cc1140f06",
          "name": "did:invalid"
        },
        "response": {
          "id": "224ff078-9496-46df-b213-27de31d1db02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa9c440-61bf-4351-b9e5-af4cc1140f06",
        "cursor": {
          "ref": "7ef515f9-1aa3-4f18-8da5-f98ceee32356",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d91b84be-fc79-4887-ae83-76b75c269c5d"
        },
        "item": {
          "id": "2aa9c440-61bf-4351-b9e5-af4cc1140f06",
          "name": "did:invalid"
        },
        "response": {
          "id": "224ff078-9496-46df-b213-27de31d1db02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c789f454-a8d1-44e4-845c-f73f39d953ba",
        "cursor": {
          "ref": "f558cc42-377c-4085-ae9e-e046af9347c5",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3ab23579-e37d-4c83-8d52-b82925839a02"
        },
        "item": {
          "id": "c789f454-a8d1-44e4-845c-f73f39d953ba",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ddc5b4a1-0aee-4f30-8bd7-36f73d7a872e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 110,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa98543-bfeb-472e-971e-2eb7156df6f4",
        "cursor": {
          "ref": "4f116838-f8f7-425a-a622-87f195cac02b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b40d714c-78b3-44b4-99df-38645d752131"
        },
        "item": {
          "id": "8aa98543-bfeb-472e-971e-2eb7156df6f4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b9993140-266a-4108-beee-161c91cc7f32",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896c474e-41c9-4c73-a77c-f66ea32f5bea",
        "cursor": {
          "ref": "a5455d6e-dc01-4df5-8a67-17ab3aa994f7",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2e4aade8-1009-4597-88fe-f343c14820ef"
        },
        "item": {
          "id": "896c474e-41c9-4c73-a77c-f66ea32f5bea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d94e71ed-73d8-4e8f-ac2f-64562d96b412",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62887f8b-7908-464e-9a43-4e00c5f6554b",
        "cursor": {
          "ref": "efed1f4c-ccca-47a0-bac4-87d083575889",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e8495744-9ab0-4289-8d23-cdefa728c0f5"
        },
        "item": {
          "id": "62887f8b-7908-464e-9a43-4e00c5f6554b",
          "name": "identifiers"
        },
        "response": {
          "id": "240c144b-48ae-49eb-ac8d-8b59279e22ad",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23d8423-805a-489c-9e33-4a0d18db1af0",
        "cursor": {
          "ref": "91baa834-b5fc-4a71-a275-1189eb0e330e",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2800a480-96b0-4564-b717-1830ce390ffd"
        },
        "item": {
          "id": "b23d8423-805a-489c-9e33-4a0d18db1af0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d0ded85f-d463-46c8-ad08-7db543e716d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c90f4d-5ce5-4734-9a70-fa530350fd05",
        "cursor": {
          "ref": "7691cb95-a3fe-43be-b63b-77cb5ff356b0",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7e645da0-8aa7-4fed-81c9-3f5b913a7f24"
        },
        "item": {
          "id": "34c90f4d-5ce5-4734-9a70-fa530350fd05",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9554f6ba-8e1d-4f2b-9203-e13fece507e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91209280-e0ea-492e-ae83-52666d0b294f",
        "cursor": {
          "ref": "14bdfad8-86af-4f99-bcb7-657c47499fa4",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "543e5e95-6c30-4475-bc5a-2f54b24c58fa"
        },
        "item": {
          "id": "91209280-e0ea-492e-ae83-52666d0b294f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3e5c75cf-f0bc-48bd-88c3-723cd20bef00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1884303a-13f6-49e3-b74d-ce99e029156e",
        "cursor": {
          "ref": "e75c7dce-1922-4bc1-ae1b-6132993319e7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6a78efaf-9b93-4bd3-bc51-d4609c4f7f45"
        },
        "item": {
          "id": "1884303a-13f6-49e3-b74d-ce99e029156e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d6ca9f83-118e-4516-a841-19d61df60b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474caa7e-1212-48e9-a994-4cd4f85f681d",
        "cursor": {
          "ref": "69d7568a-3f5a-43a2-9039-24b79dbef8ed",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ed2b08ee-e1de-4d9c-8d36-e76356439bc1"
        },
        "item": {
          "id": "474caa7e-1212-48e9-a994-4cd4f85f681d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3c12121c-7c61-423b-b79c-825e02f80e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d037542b-eadf-468f-83f9-e4b26707b013",
        "cursor": {
          "ref": "d07d5b12-5341-463d-9c70-ab5beb7666fd",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9675e32f-5e9a-416d-9f4f-ca8011f48943"
        },
        "item": {
          "id": "d037542b-eadf-468f-83f9-e4b26707b013",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d1c4510f-4c9a-4780-ae70-0ef56ccc56e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21467d5-b376-4708-8184-dfa9c371dfc1",
        "cursor": {
          "ref": "2cfa8ccf-28df-4602-ae70-9a1ce9608c1f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d5b17e59-7ba5-4448-a74b-57b164923113"
        },
        "item": {
          "id": "a21467d5-b376-4708-8184-dfa9c371dfc1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "745efc67-788e-40ca-976f-660e38332f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5091bfe6-7276-4af8-9ac1-e506fde7139f",
        "cursor": {
          "ref": "3dbcc87b-aeb4-4236-9061-2835dde73b57",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "36844062-8158-4673-b830-9aaed1f3f045"
        },
        "item": {
          "id": "5091bfe6-7276-4af8-9ac1-e506fde7139f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "56763cdc-e9d4-4201-9f91-019f87147bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f1498f-6c00-40b6-98a4-71274d38db62",
        "cursor": {
          "ref": "85271a1a-d5d7-4cb1-bd71-8f65dcf39524",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f7bf0291-19d9-4b55-805d-c5cac2279089"
        },
        "item": {
          "id": "a8f1498f-6c00-40b6-98a4-71274d38db62",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "70cc1c1f-d8c4-4edb-a47b-41d59949e2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6cd879-fd78-4d5a-a00e-6e1f068bff2b",
        "cursor": {
          "ref": "60228f01-860a-409f-b984-9e72c7f86078",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0f0425f3-2518-414c-930d-b940ab6d59b9"
        },
        "item": {
          "id": "0a6cd879-fd78-4d5a-a00e-6e1f068bff2b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "936fe758-0b92-4ea0-8176-44c49ed3f226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc87232d-a1cb-41bb-89f2-076f8284b6c1",
        "cursor": {
          "ref": "e34386b6-94a0-467f-a671-3bc55247c318",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "46106933-d2b6-4c9e-8b7e-cb86e274540f"
        },
        "item": {
          "id": "dc87232d-a1cb-41bb-89f2-076f8284b6c1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ae347aa3-f409-4a12-a6b4-5d8ec1286155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e05ac0-dd53-442c-a285-e339e0e759fd",
        "cursor": {
          "ref": "59dfde02-b188-455d-98b4-76a91a1f4f20",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6a2814f2-4e11-49df-a226-ca03a2897619"
        },
        "item": {
          "id": "67e05ac0-dd53-442c-a285-e339e0e759fd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2d32aef8-ec33-4fff-9a65-d1d7025ea9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ca9cf5-7684-46ec-9a65-0fd733be6768",
        "cursor": {
          "ref": "b82da11a-b54a-465c-b87d-2199c80f34f1",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "23ea6cc3-92dc-47c2-9191-dcf536eddcc4"
        },
        "item": {
          "id": "d3ca9cf5-7684-46ec-9a65-0fd733be6768",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b82f669d-36ea-4552-899e-63823c1b8f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f840c45e-03fd-4e82-81e3-520713980773",
        "cursor": {
          "ref": "3ff17938-549a-4af6-a47f-1c8b32ebb6d0",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "28b41396-22a9-4dad-b753-f188e7236c6d"
        },
        "item": {
          "id": "f840c45e-03fd-4e82-81e3-520713980773",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8c0d6b5e-7892-47d0-b7ed-57965b9731a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5f206e-b20f-477d-b283-193916baf120",
        "cursor": {
          "ref": "25c2c836-04fd-4212-9fb3-2d27d2f04553",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9e5815f2-8ddb-4b6e-8dfe-925fff21d60c"
        },
        "item": {
          "id": "ae5f206e-b20f-477d-b283-193916baf120",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a99e97af-4ed5-42a5-9239-fb78affe0849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a82ec0-2698-4365-8256-b46ee24e4700",
        "cursor": {
          "ref": "1ef0b086-dbf6-4c13-a4f9-6c8ef284710c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "781c96aa-bcd6-4185-8370-381a15fb4592"
        },
        "item": {
          "id": "11a82ec0-2698-4365-8256-b46ee24e4700",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "74d32c06-5b50-436f-80c9-abdcfdef38a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000ffb63-9e26-4403-9241-234dacf17e61",
        "cursor": {
          "ref": "3aa0c0b7-626f-4490-8ffc-39661844a015",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fecfd05b-e810-40fb-aaaa-64d0e03b6739"
        },
        "item": {
          "id": "000ffb63-9e26-4403-9241-234dacf17e61",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2c14361c-003f-44d6-bd5f-675eb0e6b47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5c53c0-b7b9-49d6-8edb-35813d6b85b0",
        "cursor": {
          "ref": "9b6c5ebb-70b6-4986-b8bb-8710b0aa61bc",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "da323ad8-ff57-4f58-bd10-2141819ad923"
        },
        "item": {
          "id": "2f5c53c0-b7b9-49d6-8edb-35813d6b85b0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3839c66a-37c7-47a6-bbc2-5f112f2f47d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befec541-dbf6-42dc-b04e-10d00649eb03",
        "cursor": {
          "ref": "b9857157-5390-4cdd-91e2-03306d4e52c8",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b5d478c5-ff19-45af-b1da-f6d0dc24e34c"
        },
        "item": {
          "id": "befec541-dbf6-42dc-b04e-10d00649eb03",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "40fe3b75-a13c-4b02-ae89-8efc9a583469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bce824-9578-4396-9f65-81cf76dc0459",
        "cursor": {
          "ref": "4d2a2da3-af0e-4503-b805-2defa183d2f7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2b7d6ba8-ef2d-4fff-aff6-dc068c99d55b"
        },
        "item": {
          "id": "52bce824-9578-4396-9f65-81cf76dc0459",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "24b79a7b-060f-45ed-b756-a38f5f8b9819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d361566-65de-4fd6-ac9b-48ecf2fdec40",
        "cursor": {
          "ref": "1ece393e-096f-46c3-9568-29b8937b45b6",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4fc4d367-cd56-436e-9175-cc215a4f9de3"
        },
        "item": {
          "id": "4d361566-65de-4fd6-ac9b-48ecf2fdec40",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "06ba1849-b41d-4853-9abe-7c2e3d35d270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11a7bea-5a37-4464-8201-77ddfb6b541b",
        "cursor": {
          "ref": "2cefb027-efa0-4129-be31-e38cd4c254eb",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d1c72b94-5fa0-4651-96ae-f692e3aee21d"
        },
        "item": {
          "id": "c11a7bea-5a37-4464-8201-77ddfb6b541b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e54e84d7-1e21-4884-be58-470258c98e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a53731-cad6-485e-aa62-5b41efa2da53",
        "cursor": {
          "ref": "b92689a4-a224-4525-a066-f47cc00ca1d2",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "08a53abc-82d5-4d6c-829d-8de0e496fe81"
        },
        "item": {
          "id": "62a53731-cad6-485e-aa62-5b41efa2da53",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e4b16fda-3b28-4bd9-9559-0b5caab37be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbb1d66-57b3-4616-8744-32f8094de339",
        "cursor": {
          "ref": "2afcbafb-355c-47d7-98f3-8174b0b5bacc",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dc067a54-e4d8-49cf-b58c-c35af6d9c56c"
        },
        "item": {
          "id": "bfbb1d66-57b3-4616-8744-32f8094de339",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b7265a8b-ce28-459e-87ef-b5c56387b195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a51d0cd-f32e-4318-aca0-87b9c44e383b",
        "cursor": {
          "ref": "7fc58a65-1f8b-40c9-b8ac-e5a07a21a59d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "921bac2d-f4a0-494b-a592-d2d3012d2373"
        },
        "item": {
          "id": "9a51d0cd-f32e-4318-aca0-87b9c44e383b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c11e13b9-c13f-47c1-9039-f9d3d00a8ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081b030a-ddbd-49bf-bf1a-41d254a7ad53",
        "cursor": {
          "ref": "3b66d11d-349f-4688-8951-0166e3acc381",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1d3e7d54-5a80-419e-ad54-adb4bfc9c87f"
        },
        "item": {
          "id": "081b030a-ddbd-49bf-bf1a-41d254a7ad53",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "04d423af-e267-420f-9094-ce1e5e660a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb69026-e6b3-4f04-a92c-57a89c494e1a",
        "cursor": {
          "ref": "fb8ede5d-302d-4c8f-a091-9c7234fd5e91",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f8f0f81b-de40-4d6c-8f19-a29f650b3868"
        },
        "item": {
          "id": "2bb69026-e6b3-4f04-a92c-57a89c494e1a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4a401049-5f50-4fe4-83bc-219dddf1a8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62f55c8-59a7-4ffc-b91c-8f6d55e69323",
        "cursor": {
          "ref": "d02f5a4e-d007-41f5-b185-358173aa3142",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "60843bee-8c46-4884-9d5f-622c17e9e66d"
        },
        "item": {
          "id": "f62f55c8-59a7-4ffc-b91c-8f6d55e69323",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "32e4e1e1-eab8-44af-b1d6-cc2db17e0969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632a8448-a2f8-4722-aae9-5d1c5152fa28",
        "cursor": {
          "ref": "43182781-ef54-4ade-a7f3-8bed0a13f18e",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dba7d789-1429-4878-ba32-50793c7258db"
        },
        "item": {
          "id": "632a8448-a2f8-4722-aae9-5d1c5152fa28",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "04761b8a-dedd-4601-856a-113f5e985be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2c65ae-4016-4ccc-b1b8-e25ecaa6fc3f",
        "cursor": {
          "ref": "ce39806c-4443-46e7-b10d-ca3a04e19914",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0471da0d-bfd9-4a8f-a8e5-25e3bffc0277"
        },
        "item": {
          "id": "7c2c65ae-4016-4ccc-b1b8-e25ecaa6fc3f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8286ed82-aaa3-4f7a-b6d1-f412066baa4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831663fa-171b-4f3e-b66c-3c9dbf412b48",
        "cursor": {
          "ref": "68760e6b-ac90-417a-81bd-f861717065d0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fc5a8443-e51e-4bc9-a721-a8eab0f31896"
        },
        "item": {
          "id": "831663fa-171b-4f3e-b66c-3c9dbf412b48",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "84222844-0446-4f41-ae81-a0a6b88fb07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b222e819-f0f6-4f2b-9968-f121ee8f9bde",
        "cursor": {
          "ref": "4a67df1c-15a2-43bf-8f9a-b29d8331b25d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0877d150-f793-43e5-8261-a28c92fc6432"
        },
        "item": {
          "id": "b222e819-f0f6-4f2b-9968-f121ee8f9bde",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "03f5daef-b5fc-4d82-8215-abb0924a2af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a115453d-e8ca-457e-acfc-301934665654",
        "cursor": {
          "ref": "37f5058a-d2c8-4216-96b0-2f5f6b258178",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a9a2a768-682c-41ee-bb96-2d937b32e818"
        },
        "item": {
          "id": "a115453d-e8ca-457e-acfc-301934665654",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "403cf41b-83dd-4cce-bd2b-24c9738a84d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68b519e-24c8-4dc8-9ebb-10442a867e75",
        "cursor": {
          "ref": "bc97be21-eb7b-43c5-aed1-79949cb26926",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bfe2b2bb-f488-4630-b0e5-d59747f7cbee"
        },
        "item": {
          "id": "d68b519e-24c8-4dc8-9ebb-10442a867e75",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "df91fbf0-519f-473b-bc78-11a18f9bce0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cc8de3-345a-46c5-a8b2-b6451f6d37be",
        "cursor": {
          "ref": "dd7f360a-5b9d-4840-9d3e-7dd507f4fe9e",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e94a66ea-2686-4556-b699-ce4bec5cd47d"
        },
        "item": {
          "id": "57cc8de3-345a-46c5-a8b2-b6451f6d37be",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3a18f3a2-f299-4b7b-8a6b-fc6e16155823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44f7130-9555-4261-99dd-6fbb6cdb07d4",
        "cursor": {
          "ref": "1fe5f4a0-c48d-4bb1-96bb-97a7b3dcd6f7",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ef8b634b-5b85-4292-8b4e-96b7b31530a1"
        },
        "item": {
          "id": "b44f7130-9555-4261-99dd-6fbb6cdb07d4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d4402a16-3773-47e1-95e6-31c86cf47f10",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c3fda6-f3b1-412c-b80e-904120e42aad",
        "cursor": {
          "ref": "270f9f73-bde7-412f-aa25-ae9a962f2309",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e9227deb-9ec0-477d-aa9c-777add9d14cf"
        },
        "item": {
          "id": "f2c3fda6-f3b1-412c-b80e-904120e42aad",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9caff22e-80c5-45fd-8bfb-4680aaf5051e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5fedae-4605-408a-90af-56490872c4f4",
        "cursor": {
          "ref": "6703d87b-187e-4456-8ce9-f0d4cfb11957",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3e42877b-0241-414c-9387-00cf0b6625b4"
        },
        "item": {
          "id": "8a5fedae-4605-408a-90af-56490872c4f4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b0a41665-3c16-4009-bc5b-fd22855c66f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4114b419-3216-4714-9aac-0bc9b03ec72e",
        "cursor": {
          "ref": "f697d6dd-8596-4ba0-9924-900aeb482c92",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2879c394-e0c1-4481-8f9e-0f6549c9353a"
        },
        "item": {
          "id": "4114b419-3216-4714-9aac-0bc9b03ec72e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d0f5ce18-12e4-41d9-8117-5a1b3ac2af5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b87676-5db0-4129-ba1e-cd4fd82b73b3",
        "cursor": {
          "ref": "d37abaad-a1d5-4626-b5d5-db721943c19f",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3b2ba716-07b8-4521-be03-738acd7d6cf6"
        },
        "item": {
          "id": "f6b87676-5db0-4129-ba1e-cd4fd82b73b3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ed1536cb-175d-40d2-87dc-f7a4af8a2017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1137310b-f6e9-4e04-8203-d2ed876cd620",
        "cursor": {
          "ref": "9136d7cf-32f1-4af0-a1d2-f4bd0430f0c7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6da12248-0756-41f3-9941-06269be2d9d0"
        },
        "item": {
          "id": "1137310b-f6e9-4e04-8203-d2ed876cd620",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9db885f2-1bbe-46b6-be69-7c201dd485c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d995973f-e88b-4f64-9d58-e435933e643b",
        "cursor": {
          "ref": "8dc130ee-e74e-4c70-b376-0b12dfcb7067",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "935b2f56-9091-4932-9944-c72ade7fbbeb"
        },
        "item": {
          "id": "d995973f-e88b-4f64-9d58-e435933e643b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d33c382c-eb9d-42d0-9c54-1a973ff5657b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90c2b3c-21b2-43b9-96fe-78d67760ef04",
        "cursor": {
          "ref": "d3a2e1bb-3a0c-4d61-9dfc-2841f85d1fcb",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fdaaa638-22c8-4917-bf04-90f642e8ef40"
        },
        "item": {
          "id": "f90c2b3c-21b2-43b9-96fe-78d67760ef04",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "45733681-12ad-416e-83b3-a52e65419d96",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 61,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a308865-df62-4293-af79-181b3bc1a220",
        "cursor": {
          "ref": "9c02de90-dbcf-418d-9931-a0d64d53dc86",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "69c334eb-aa30-41a6-b606-e2023be6dbeb"
        },
        "item": {
          "id": "6a308865-df62-4293-af79-181b3bc1a220",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "34fe5d50-cd2d-49ae-8bd8-e7a62b8b440a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675854d0-c91f-4186-b1ec-36a432a0f615",
        "cursor": {
          "ref": "2ccf4e8e-5a3b-4f0f-a2c5-77dc1d73f702",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5b218f82-2316-4823-a7e1-28771c59545c"
        },
        "item": {
          "id": "675854d0-c91f-4186-b1ec-36a432a0f615",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "73c01a36-dff9-4ddc-a471-f88674cc5155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10620c00-59a9-45a0-a2bd-528f44dfb7ec",
        "cursor": {
          "ref": "c7fad2c6-993b-4183-b744-c7c1e58ee811",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "986da153-4828-4ec5-ab74-76b9ddc857f0"
        },
        "item": {
          "id": "10620c00-59a9-45a0-a2bd-528f44dfb7ec",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e3b78633-1d8f-4312-a2f1-a227a65ad9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3aa15b6-b362-499a-9678-6b235b664656",
        "cursor": {
          "ref": "329cca07-dc3f-472c-a99c-aeb83203fa72",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8dd0d81b-dbe8-453e-b85b-e9e4b4ca16f9"
        },
        "item": {
          "id": "b3aa15b6-b362-499a-9678-6b235b664656",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "974bb97a-c2bf-44c1-bf20-8f025e02aeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472a33f1-cc6e-4d5f-ba4a-239d32bcff1e",
        "cursor": {
          "ref": "1be407dc-f557-4d12-b564-6474b2613383",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2d3489a4-cf61-4e14-88e6-4bf00c4e4e14"
        },
        "item": {
          "id": "472a33f1-cc6e-4d5f-ba4a-239d32bcff1e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cdadd35a-d213-4147-959c-b8f082fb86be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf279b29-3ecb-4c1a-bb70-ab7fde914793",
        "cursor": {
          "ref": "7608fd4f-4820-445a-a0b4-88f7d0d6326a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5024f019-750b-44d9-a068-4a58d9727e4a"
        },
        "item": {
          "id": "cf279b29-3ecb-4c1a-bb70-ab7fde914793",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b29fd734-552c-418f-a8f3-083896d5dc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce555303-197b-410e-86b7-b537edaead9d",
        "cursor": {
          "ref": "7f3ea2f4-6ecc-4640-a086-9005f09be441",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "82650d0c-4e8a-44ad-8859-1d69e9978c57"
        },
        "item": {
          "id": "ce555303-197b-410e-86b7-b537edaead9d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2affd62d-cc01-44d4-a593-3d92c3cef8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82f2332-555c-476d-8ef0-6bd419cf1676",
        "cursor": {
          "ref": "ae405ee4-7f3a-4206-9207-786bf5d97b9b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "99c04372-98e4-4b49-8487-2a82f7d81608"
        },
        "item": {
          "id": "a82f2332-555c-476d-8ef0-6bd419cf1676",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8b434cfc-4b0f-4a47-8c92-b4407f12787c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1705713-9cec-4eca-87b4-0901b70a2c6c",
        "cursor": {
          "ref": "1570805f-882f-4977-abe2-20bf8e745951",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "684833a7-87a9-4175-949b-7205c9e5bea7"
        },
        "item": {
          "id": "d1705713-9cec-4eca-87b4-0901b70a2c6c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "973d9ea0-1347-48e3-8679-204fac884e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37d1b56-428d-47f6-96ff-4881bdade82d",
        "cursor": {
          "ref": "25252b67-24b9-4a7b-b1a9-847bd5a7a0ea",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f2015a28-f8c1-466b-a33a-80256eedb643"
        },
        "item": {
          "id": "b37d1b56-428d-47f6-96ff-4881bdade82d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7746e6b1-9468-4520-94a8-f4e66f81a40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884de3d1-8c76-4d5c-99cf-b11d244a2003",
        "cursor": {
          "ref": "507cd764-ed4b-4713-9340-4f25bcfe1729",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "89468222-1909-48d2-a722-84618b027e12"
        },
        "item": {
          "id": "884de3d1-8c76-4d5c-99cf-b11d244a2003",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3ab54610-f8cf-4d4c-928d-e540058476b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4176289d-a571-4e98-bac6-eb5373bda43b",
        "cursor": {
          "ref": "6239b812-d156-4031-bc1f-33bc04e45713",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0ed58e41-968b-40b6-b67c-fbabc4e3dee6"
        },
        "item": {
          "id": "4176289d-a571-4e98-bac6-eb5373bda43b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f6bc27a6-a723-4f9a-85b9-2b52327141ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36088353-9f3a-4723-9cb3-9de0eb6316ce",
        "cursor": {
          "ref": "7f9b8aec-2423-446e-bc00-061b20d52725",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f278222e-5f90-4bcf-9ca3-216bb530ffb4"
        },
        "item": {
          "id": "36088353-9f3a-4723-9cb3-9de0eb6316ce",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ffdee4c6-5001-45d1-ad29-4f8cf5608626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d56231-75ff-4507-abe8-829ee5be8520",
        "cursor": {
          "ref": "a218d7c4-6e24-410f-9913-e591810b6595",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5816ac59-0221-4466-ba66-242984583d9f"
        },
        "item": {
          "id": "68d56231-75ff-4507-abe8-829ee5be8520",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7b5cdcca-0f3b-4e67-b8c0-784b23ccb497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c75f08a-e212-4227-8388-a7ccc6e0fb15",
        "cursor": {
          "ref": "3d9ea9ce-40f3-43e4-a017-b3d0079763e3",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c29d78fa-6f7d-49cd-97a2-c974fcc8fa81"
        },
        "item": {
          "id": "1c75f08a-e212-4227-8388-a7ccc6e0fb15",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c22575d0-d3d4-4f92-bf25-953a240c3ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a844d3-a8c8-4e4a-be57-da1ab17da0b3",
        "cursor": {
          "ref": "ab07b3cb-3135-4451-8c3c-08e5d4c2af27",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4fdb9bb4-9210-412e-9d5b-bd73e395333c"
        },
        "item": {
          "id": "37a844d3-a8c8-4e4a-be57-da1ab17da0b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7d1de7fa-9290-45a6-a7f5-682f8299a78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414e6c55-e2b1-4623-bd03-00957f4329b7",
        "cursor": {
          "ref": "22685900-3e83-428a-9575-118c746a3285",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5f47f717-33c2-46d3-a440-73a7909b688e"
        },
        "item": {
          "id": "414e6c55-e2b1-4623-bd03-00957f4329b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7e6427e3-42e5-4302-9c21-8f960313edc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a355b171-014b-49d4-b203-318ce9267dd2",
        "cursor": {
          "ref": "7629a3c3-f862-4a9f-980e-81eb91f29c22",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b8046c6e-9207-49c0-b009-30d6aa8dff22"
        },
        "item": {
          "id": "a355b171-014b-49d4-b203-318ce9267dd2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "16dfad39-5f44-40ff-877d-c6fedba9ad61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1d0c9b-0f1f-49ff-b3df-ffdfba96b28c",
        "cursor": {
          "ref": "30c51345-73b2-4e09-82b1-2ed20d542bad",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ca2b48e2-0066-44ea-acc7-b6696d286e27"
        },
        "item": {
          "id": "ff1d0c9b-0f1f-49ff-b3df-ffdfba96b28c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b68c6223-a046-4dc0-a88f-0cca4217638e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc915312-b8d7-4e2b-ae72-dc71e72792aa",
        "cursor": {
          "ref": "68f873cb-4159-4035-bad6-4e0b91d2a472",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4cf2581c-1d6f-4d74-b19f-92e3ee3b7969"
        },
        "item": {
          "id": "fc915312-b8d7-4e2b-ae72-dc71e72792aa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "91c9353a-0241-4605-b5b1-3632c75a88f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086adc50-3109-4230-8e23-6bec7446584e",
        "cursor": {
          "ref": "d9dc5824-aa47-4997-86e8-f3d5b5bfac11",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "651e8d38-6023-4866-bf1c-964a0a89a15b"
        },
        "item": {
          "id": "086adc50-3109-4230-8e23-6bec7446584e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1eef9ec3-6c79-4033-9053-77203814bd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724cba26-71a5-49ce-9cc7-2623572b8b76",
        "cursor": {
          "ref": "109b039b-842f-4430-a843-332622d856b2",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a5edf76d-b73b-4f72-b15d-26e852308adb"
        },
        "item": {
          "id": "724cba26-71a5-49ce-9cc7-2623572b8b76",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e27cf168-a7a6-4d56-b2a4-391f04f4a50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8355f1d4-9714-4f7e-8854-0ac52e054f17",
        "cursor": {
          "ref": "c9195baf-81b8-47b4-b4f6-a131fec66dc5",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "863d77c8-e142-4539-b8f4-bf3648c74ab4"
        },
        "item": {
          "id": "8355f1d4-9714-4f7e-8854-0ac52e054f17",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "23036e48-3474-456c-b1c4-b963611bdf93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a87d7b-455c-4568-860b-80a279eabef9",
        "cursor": {
          "ref": "4934d604-28d5-4d18-8f85-3e5c78b94dfa",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f261e0cc-af2f-4293-b2fd-31be3ed7b9d8"
        },
        "item": {
          "id": "23a87d7b-455c-4568-860b-80a279eabef9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0e18fe7d-732a-459d-88bf-db82ac2e688e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b1c87d-def8-40ef-b044-b8f2c6f84aea",
        "cursor": {
          "ref": "01a7d3de-408b-4aaf-a328-dd54169a858b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "38825ae9-3b08-4c87-9ac2-ad6a45db605c"
        },
        "item": {
          "id": "41b1c87d-def8-40ef-b044-b8f2c6f84aea",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7f731615-8679-4598-bb1d-d4c633aa5cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721794d4-06fd-4f86-84ef-ed3a6b43463c",
        "cursor": {
          "ref": "84402ef9-1082-4a27-8aef-57f7c96cdf64",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2b664fbb-4761-41a2-afe0-480a21d10fcf"
        },
        "item": {
          "id": "721794d4-06fd-4f86-84ef-ed3a6b43463c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b868e28f-0350-4979-863a-78b33883a423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9ff221-007c-4d94-b119-caedc3235e0e",
        "cursor": {
          "ref": "a0d5aac6-5cc3-4c78-9ede-1adc4ed7a30a",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2df1e5d4-e523-457a-8f03-23648b19cea2"
        },
        "item": {
          "id": "9d9ff221-007c-4d94-b119-caedc3235e0e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "55a74246-65e7-4ccb-8cf2-c0d201962faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c92bc64-4702-4ffa-8f3a-9efdec893d5f",
        "cursor": {
          "ref": "4cc2e93d-c158-4dbc-bf05-ecdc61d1b00c",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c3cb965f-da81-474f-a609-ba8f3b70e496"
        },
        "item": {
          "id": "0c92bc64-4702-4ffa-8f3a-9efdec893d5f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "12f2885a-0c3a-4baa-b212-406bf8b1383c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5013110e-5c33-4fc3-b010-6b9f847905ee",
        "cursor": {
          "ref": "4cfde6ed-966f-4624-9ab6-aa38c0601152",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7fab1a03-8bf2-4e31-8de9-dab43286e7b7"
        },
        "item": {
          "id": "5013110e-5c33-4fc3-b010-6b9f847905ee",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ecfb61a7-1c75-4ec3-95f6-9b9ed8371097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ae5c62-4c97-4e7a-896a-949729fe4923",
        "cursor": {
          "ref": "3b3d7cc4-3daf-48fa-83ec-9194d5c83fca",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a2a2c4f4-c5d5-4cec-b30e-b089a5e4eaa0"
        },
        "item": {
          "id": "a8ae5c62-4c97-4e7a-896a-949729fe4923",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e14b7595-0677-4dc8-bfc8-1eafa47995f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7b5b62-780b-46ce-b692-f85f12454b30",
        "cursor": {
          "ref": "402de461-c3eb-43cd-a34c-1ae5ac119da9",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "71f1884b-a12d-4f4e-a691-533fee10671e"
        },
        "item": {
          "id": "1e7b5b62-780b-46ce-b692-f85f12454b30",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fbee9fe2-8043-4368-969d-bdb25ec062fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e56d745-5598-4375-93c6-1cf2f9db80a5",
        "cursor": {
          "ref": "342edb15-f28b-4e62-9503-8a4f874dea67",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8abff1ba-c745-47df-96cd-29e60c16ceaa"
        },
        "item": {
          "id": "2e56d745-5598-4375-93c6-1cf2f9db80a5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2faaa585-5efe-49bf-bfc6-dcca268339d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8791dd-41f5-4bdc-aa82-1c740ad34738",
        "cursor": {
          "ref": "6117ae46-2b72-4d51-b8f1-8d3a309d6c02",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d430ab22-379e-4ee1-b7a9-c81133122ca6"
        },
        "item": {
          "id": "6c8791dd-41f5-4bdc-aa82-1c740ad34738",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "13296a3a-9be2-4d5c-9229-a79521b62f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b82e5bb-cc46-419f-b00e-f04f90cc65f8",
        "cursor": {
          "ref": "05a672e2-8242-4cf6-8624-2ee7821fd4b7",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9ac030b9-360d-46c7-b8b3-7b7af82c8830"
        },
        "item": {
          "id": "5b82e5bb-cc46-419f-b00e-f04f90cc65f8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2c021e43-e567-4a02-bfec-05ef2bd06bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc955b18-e5bb-4e4a-ab5c-1cccb35826d6",
        "cursor": {
          "ref": "5f06253e-9dd5-4eb8-8de7-61f48c005fd0",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3dec1d33-19ac-4852-9a64-4e63f182dc31"
        },
        "item": {
          "id": "dc955b18-e5bb-4e4a-ab5c-1cccb35826d6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "070edb3c-77f6-41e1-a6c6-d429739c5524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ef1bc2-963c-42c8-a999-b04c32151151",
        "cursor": {
          "ref": "8b937e1e-ff22-4afd-908d-6f58e800c20b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "667af569-131a-4694-ba06-0d1a10f688cb"
        },
        "item": {
          "id": "10ef1bc2-963c-42c8-a999-b04c32151151",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ee90bbf2-a58b-42e6-91d3-33675a670ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493fdfd8-e71f-41bb-9e42-c0b8c546402a",
        "cursor": {
          "ref": "04439429-0e04-4585-a709-6f62ffa597c5",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3a94f48a-0a62-4829-89e9-102d3da45f91"
        },
        "item": {
          "id": "493fdfd8-e71f-41bb-9e42-c0b8c546402a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5e942749-f2a4-4cb0-a3c8-796f6cabc85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0935e94b-2d0c-4ecf-bd18-0595f35add51",
        "cursor": {
          "ref": "ddc7f7da-987c-4902-8f12-c530e75b4969",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2695712d-cfd8-4d01-ad82-10dc0e5cec5d"
        },
        "item": {
          "id": "0935e94b-2d0c-4ecf-bd18-0595f35add51",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7e5130bd-bb08-4418-8007-de527760dca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026c35cc-9a8d-4da1-ad9f-596ab595e76e",
        "cursor": {
          "ref": "d462faa9-e3ae-44ce-a21b-f8066eb1da34",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5cf298d1-d411-4513-a9d3-880ef3169d49"
        },
        "item": {
          "id": "026c35cc-9a8d-4da1-ad9f-596ab595e76e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f40ae34d-f0c3-452b-8e4d-b692ac7b6f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8112e5bb-c836-408e-bcde-b3f56cdd9e38",
        "cursor": {
          "ref": "332e51c5-6404-4962-a883-f11b3d02b895",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "941091f8-c534-4cfe-b227-5ecb21118caa"
        },
        "item": {
          "id": "8112e5bb-c836-408e-bcde-b3f56cdd9e38",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "131c5d3c-5497-48b1-a9e1-e71bcd83dd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fdd658-76fd-48ca-89dc-5b0f3cf8e1a6",
        "cursor": {
          "ref": "ddab1c67-e903-4559-b481-27813356ea61",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "832eb1c8-319f-49bf-aefe-747a70ee3870"
        },
        "item": {
          "id": "96fdd658-76fd-48ca-89dc-5b0f3cf8e1a6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8bbb8bd6-a471-41cd-b46b-92f370b60540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48944f0-b6a2-44f7-87c5-b301235a3d24",
        "cursor": {
          "ref": "ea27279e-6afd-4cfb-996a-d4b007421177",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1b2cb22f-7e8e-4633-9746-87c6eb001a95"
        },
        "item": {
          "id": "e48944f0-b6a2-44f7-87c5-b301235a3d24",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7611582d-c231-46c5-9a51-89f988fc7e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b614647-0559-4f43-bd85-042f79ca7195",
        "cursor": {
          "ref": "b601c7f9-c370-4f62-8812-29c90b587a9a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8230cd60-eaee-4526-9107-13a07f3c77bf"
        },
        "item": {
          "id": "0b614647-0559-4f43-bd85-042f79ca7195",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e72bbd5a-2e5e-48ee-8da3-baf081c4f796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340ebcfd-1ea5-4a2a-ab9f-699615e8a9cd",
        "cursor": {
          "ref": "2621947e-a83f-49c7-bd22-3a4ab5481e11",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1b304838-61a5-48e6-b86e-b49bb1c9df46"
        },
        "item": {
          "id": "340ebcfd-1ea5-4a2a-ab9f-699615e8a9cd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "93e537a7-1fdd-4fdf-af81-0e9d4f14b6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23474ea9-1d59-4332-abed-1cd5d6bb84cb",
        "cursor": {
          "ref": "b2f659f8-e404-427b-8824-66761e461cd1",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e8b6abf3-0287-42a4-b390-b86a381de407"
        },
        "item": {
          "id": "23474ea9-1d59-4332-abed-1cd5d6bb84cb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c858f867-dfd7-4600-b37b-359b1903baec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7255fb3-43cb-4004-a012-cd42bb8a0e63",
        "cursor": {
          "ref": "0ab0ac04-531d-4289-b4af-c7b7df2eba09",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "913b3002-3286-4481-9340-2f56b0354b5f"
        },
        "item": {
          "id": "f7255fb3-43cb-4004-a012-cd42bb8a0e63",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8ab20c58-a83d-4f03-a26a-0bc326b1e759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76697413-755f-4e9f-ac57-84eec3c2c5e9",
        "cursor": {
          "ref": "dc845603-6c15-4f0a-b221-ec75008c577a",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8010063c-c8c8-45bc-9b09-e7588618d528"
        },
        "item": {
          "id": "76697413-755f-4e9f-ac57-84eec3c2c5e9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8e9797e9-6189-4aa0-b2c9-d1546529931f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52235573-ad28-474f-9935-aea35c455470",
        "cursor": {
          "ref": "958e84b2-35b7-4f74-a2db-f5a9b2b8dca9",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bdab8fc8-68bc-4dd5-b166-677dbc56be40"
        },
        "item": {
          "id": "52235573-ad28-474f-9935-aea35c455470",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "baf2a6c5-34cd-4c1f-b9e7-c61c3644aef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68231bee-54c1-46f7-81bd-d4e7458c408a",
        "cursor": {
          "ref": "12608b5d-c61f-4226-b4b8-3bf4c051abfe",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "09124d77-1bbd-463b-b3be-285769395f1f"
        },
        "item": {
          "id": "68231bee-54c1-46f7-81bd-d4e7458c408a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ded73a18-b7bd-4bea-9bc7-4fea684d5ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00988dc6-0b80-4f2a-a9bf-763f26a8dc73",
        "cursor": {
          "ref": "7898ad74-c1e1-4978-9d66-e6025e1018a3",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9ee74499-a349-434e-bace-be5ac9663426"
        },
        "item": {
          "id": "00988dc6-0b80-4f2a-a9bf-763f26a8dc73",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "098e3f92-8d2e-4acd-8091-e6fb2e8ea661",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01470d8f-ad3b-41f1-9c0f-ab0f49aa5bd8",
        "cursor": {
          "ref": "ee913543-130c-4675-b8a8-50144d962676",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b0fdf097-df2a-43bd-bf1a-a141134b905e"
        },
        "item": {
          "id": "01470d8f-ad3b-41f1-9c0f-ab0f49aa5bd8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "62381be7-5fb8-46c4-a203-1f370d8cee72",
          "status": "Created",
          "code": 201,
          "responseTime": 76,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3a789b-148c-4198-bd18-5cd0ea162800",
        "cursor": {
          "ref": "ab4ec879-e9a7-45ee-9032-cf061eb21624",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4ac9d68f-9167-47ba-9fe6-13127c45f5ef"
        },
        "item": {
          "id": "ad3a789b-148c-4198-bd18-5cd0ea162800",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2ffd9f35-84b4-4533-92db-43334f027310",
          "status": "Created",
          "code": 201,
          "responseTime": 372,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcda4a9-0fb4-43c5-b673-a8f36d8c483d",
        "cursor": {
          "ref": "0b074488-ed99-40b4-993c-060da4bb17ba",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "048c0477-0ca2-4580-9d87-186ab2ffdf13"
        },
        "item": {
          "id": "9dcda4a9-0fb4-43c5-b673-a8f36d8c483d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "43f26e54-5ab8-48cb-a71b-96336eebc185",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9067204b-28fa-47ef-833f-769bdc1809cd",
        "cursor": {
          "ref": "2c5178e0-5577-4ffb-aa1f-f350f2ee34ee",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ddb73122-31df-45bb-9b04-1779814e66d5"
        },
        "item": {
          "id": "9067204b-28fa-47ef-833f-769bdc1809cd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5a3ba7fc-c279-4877-a407-d8e698175b15",
          "status": "Created",
          "code": 201,
          "responseTime": 75,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5282b55c-5a74-4e61-a411-017b4f560bc4",
        "cursor": {
          "ref": "d2709270-5f1f-41aa-997c-b3ea839f57d2",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d7254762-ddd7-4c2a-97d5-c62fcc3fdf35"
        },
        "item": {
          "id": "5282b55c-5a74-4e61-a411-017b4f560bc4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "34adf1a8-d67f-4233-9d1f-61e02af17f6b",
          "status": "Created",
          "code": 201,
          "responseTime": 71,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2e06dd-e7d5-40bf-aad3-a696d5d6506f",
        "cursor": {
          "ref": "887ec3e5-1cad-4aef-958b-354c485be1b1",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7419b132-85d8-4872-9cde-b03f7185e549"
        },
        "item": {
          "id": "9a2e06dd-e7d5-40bf-aad3-a696d5d6506f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "28ac5646-4b99-46e5-ac64-a36c519653bd",
          "status": "Created",
          "code": 201,
          "responseTime": 70,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d1c7c3-c220-42e5-983e-71298d5cc8c0",
        "cursor": {
          "ref": "175518d8-a2b4-4e12-8dd0-07f90488fc8f",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d420dc97-bd42-48e5-b301-07c10038d0fd"
        },
        "item": {
          "id": "c5d1c7c3-c220-42e5-983e-71298d5cc8c0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b8d24c2b-2815-4c46-9a79-b2e8f97e1e4d",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f503c62d-2e75-4c2b-b683-933e00624519",
        "cursor": {
          "ref": "b2edb785-f2c1-4c00-9190-7bdd83cc684d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "77051e19-b72c-4f3c-bae0-6b89b66758b8"
        },
        "item": {
          "id": "f503c62d-2e75-4c2b-b683-933e00624519",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d1c7b128-cc96-4214-85c3-8c53b35c633b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e498865-0ba1-4103-a076-4aae70e0fc17",
        "cursor": {
          "ref": "6533ff07-a11c-4ab4-93d5-cf2425c76c1a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3a0dbbae-3a09-49ab-bbae-6a406178896b"
        },
        "item": {
          "id": "2e498865-0ba1-4103-a076-4aae70e0fc17",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3b469e97-9b8e-42fe-9649-9be968a9a79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ca82e4-15dc-46e4-bd3a-ab62e04fa719",
        "cursor": {
          "ref": "82b51f60-4717-4310-a3ed-c56b32dcc1a9",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "97479e7c-004a-4117-8bfc-8a9e8951ae1d"
        },
        "item": {
          "id": "f4ca82e4-15dc-46e4-bd3a-ab62e04fa719",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a571f167-f4b4-4faa-ba29-23e46c281466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8051faef-eda5-4935-aec1-3252ec618133",
        "cursor": {
          "ref": "29ff8b8c-a0ec-46f6-aa52-2e5d99c0b3ec",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "dfcf4abc-3341-4ecf-8a30-348b4daa5b91"
        },
        "item": {
          "id": "8051faef-eda5-4935-aec1-3252ec618133",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "48fd328e-6729-4a51-85cb-27f5f64ee633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d1d47b-ca6a-4c8c-9971-5579483d9e53",
        "cursor": {
          "ref": "a437868c-422f-4d4d-9a08-dc22f17350cf",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f7a590a0-2ed8-4521-b268-9bde4a5ef454"
        },
        "item": {
          "id": "54d1d47b-ca6a-4c8c-9971-5579483d9e53",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dc458abb-e9fe-4926-b171-98f897585c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bd4b01-7c83-4d28-9064-be3c0e14ee83",
        "cursor": {
          "ref": "cbcac71a-63d7-453f-b7e8-6f3c5074095b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5ab8e122-66bf-444b-a89a-2fea2efde72a"
        },
        "item": {
          "id": "f4bd4b01-7c83-4d28-9064-be3c0e14ee83",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c7a8cd39-98b9-4fda-ac50-430b94242b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef63762-6cae-4055-b94a-f34f945aa577",
        "cursor": {
          "ref": "9cc1e68e-7ebb-486f-9fc0-b3ccfe7b42a3",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f934c79e-860a-484a-b026-f9117601373f"
        },
        "item": {
          "id": "3ef63762-6cae-4055-b94a-f34f945aa577",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b177d087-5cea-48e1-8906-d008c1116caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb1a35a-cbf0-4567-abe7-f4d42211c659",
        "cursor": {
          "ref": "1b406a48-136e-4e5c-ade7-046162ec56ac",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e640f797-d5fe-44c0-921f-b32014cb14d9"
        },
        "item": {
          "id": "9cb1a35a-cbf0-4567-abe7-f4d42211c659",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4393370c-8c28-4a4e-9318-25cfce5c7287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f9f170-4f10-40b6-b423-8caaa68c0169",
        "cursor": {
          "ref": "39b49f1f-3011-495a-871a-dcbdd75f0ae8",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "190a84e0-befa-469d-b6f3-dd2c2a785ece"
        },
        "item": {
          "id": "25f9f170-4f10-40b6-b423-8caaa68c0169",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e3e3217d-f3c6-49bf-9c53-925f5f145a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b385daf4-4d97-4de3-9e2b-979945b0c31f",
        "cursor": {
          "ref": "bfac14df-f576-461f-9f5e-52f34fb0fc1d",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "49d09599-2963-4f84-af6e-f5c6d7d49291"
        },
        "item": {
          "id": "b385daf4-4d97-4de3-9e2b-979945b0c31f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bd09721d-bac0-4c0e-ac16-27a8aaa2e514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6d2686-97e8-47ae-a785-193c7c271937",
        "cursor": {
          "ref": "2491c349-8822-4ebf-9c6b-83a4a1167228",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1f8cd7f6-2b4a-4a30-8fd6-9348729740a4"
        },
        "item": {
          "id": "ea6d2686-97e8-47ae-a785-193c7c271937",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aef93f53-9002-4bb2-9f70-f2280655931d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfda0ab-7ebb-4389-b24b-68d98ba47930",
        "cursor": {
          "ref": "fc1d9ad5-4b30-4fc1-bcaf-446a97c5924d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "258b30aa-6cf9-46f3-acaa-1ec7a3cb8c4a"
        },
        "item": {
          "id": "dcfda0ab-7ebb-4389-b24b-68d98ba47930",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3fd4594b-6612-41b1-a279-ead1e762d9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95cb2ab-c0bd-44dd-aa75-9ea68f363ba9",
        "cursor": {
          "ref": "78fa0b57-d51e-4d3b-8422-a2d8fcc82acf",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e50959c8-057f-4ac3-ac41-92ef5bdeccf3"
        },
        "item": {
          "id": "b95cb2ab-c0bd-44dd-aa75-9ea68f363ba9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8b105320-7bd4-438d-a15d-25273dc4f3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a966ca5e-5f2c-46e9-9230-24d3eb539cf2",
        "cursor": {
          "ref": "26227417-b694-4705-877f-e8ca96479e27",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f70fcd08-4d90-4910-9dd2-41da261466d7"
        },
        "item": {
          "id": "a966ca5e-5f2c-46e9-9230-24d3eb539cf2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0754ee6c-228f-4cdf-9381-4f962824f8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bec6e2-6edf-454a-a705-26a8e65d5688",
        "cursor": {
          "ref": "33b18250-85e5-4929-9c77-d28caa31d131",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "89715fda-db10-4023-94fe-6999c31c8255"
        },
        "item": {
          "id": "11bec6e2-6edf-454a-a705-26a8e65d5688",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "888d235a-4268-464f-b901-54318305aa2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e890473f-5273-4a01-81ac-4fdad97126cf",
        "cursor": {
          "ref": "0452bd13-0b0a-4613-b8da-e3f83a27a97d",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "81fcc1ed-5be5-4d32-b87d-23d24e5eb16d"
        },
        "item": {
          "id": "e890473f-5273-4a01-81ac-4fdad97126cf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0df4970b-c8c1-4428-ab9b-971a508dcf5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6018ce1-5021-466f-9591-a29704c121e8",
        "cursor": {
          "ref": "191fcb86-1248-443e-99bd-d945a7803208",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0514f1ec-823f-4eab-a579-39f6f321b745"
        },
        "item": {
          "id": "b6018ce1-5021-466f-9591-a29704c121e8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b19cbc12-61ef-467d-97c4-fba09ef12f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a767859c-678d-4c57-a81a-7b037620a7ea",
        "cursor": {
          "ref": "25f57f67-f1fb-45d8-b2c2-fbf28bc510c8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "60660e43-4310-41cf-abf8-4679e75d1eea"
        },
        "item": {
          "id": "a767859c-678d-4c57-a81a-7b037620a7ea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2f0f90b3-0bce-4986-bb63-ce535ffc8940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39128207-f226-407e-a355-26943dee3605",
        "cursor": {
          "ref": "23a8f5fa-7add-49e8-82b3-53bcdae95f68",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c84eb5cc-c9a8-4049-add2-f4ec0231894f"
        },
        "item": {
          "id": "39128207-f226-407e-a355-26943dee3605",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ca61f1c7-8b5b-40a4-bfd7-3539164cd4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577d362d-8a79-4846-a3a8-1764fe37a2f7",
        "cursor": {
          "ref": "29b957a1-22a5-44d3-ae86-2cd759c26c26",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8d89dd46-08e8-49e0-b19a-29369171eb4f"
        },
        "item": {
          "id": "577d362d-8a79-4846-a3a8-1764fe37a2f7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9f9933c5-3d15-4d64-9ed3-0510d8bbb63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f581ed-2d21-43c1-8c8c-8f230927bf49",
        "cursor": {
          "ref": "88d64962-9624-4b23-b92a-b581b5c1911e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2116109d-8814-4cfc-bf8c-6a413a7601e0"
        },
        "item": {
          "id": "69f581ed-2d21-43c1-8c8c-8f230927bf49",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6c64206a-bcfc-4f9d-b73a-402cd392aba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177db53b-9df0-41cd-9b65-2c7d052dbd02",
        "cursor": {
          "ref": "f536012d-8b9d-41d7-8e6a-04bb3658245e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c437e275-06b0-4558-982c-7be0159333f4"
        },
        "item": {
          "id": "177db53b-9df0-41cd-9b65-2c7d052dbd02",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0c731e51-88f8-43a4-a6f0-bc8432385a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd7b67b-07ca-487a-a283-0a1592b15784",
        "cursor": {
          "ref": "a2eb05ba-0bcd-4563-a2bf-daca2f85f912",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b00e8e10-31bc-4829-aa49-513d82f902bc"
        },
        "item": {
          "id": "ccd7b67b-07ca-487a-a283-0a1592b15784",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8b4b2c8b-79b4-424d-9b89-44560766042f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8922ceb2-41c8-41b4-a72a-24d72d50658a",
        "cursor": {
          "ref": "f743020a-96df-462d-89fe-c1cf1e08d635",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "908806a7-83c6-48d7-8226-ce81962283f5"
        },
        "item": {
          "id": "8922ceb2-41c8-41b4-a72a-24d72d50658a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6ee9b56b-0ea4-4607-8579-a085d9845dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7b2c88-05a3-41b4-a17b-a5c1caafcb27",
        "cursor": {
          "ref": "6fb9e44e-d88d-4853-a0ed-7fd4b1f31737",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5ad9815c-c031-4617-90f4-3e4820d01ef8"
        },
        "item": {
          "id": "ba7b2c88-05a3-41b4-a17b-a5c1caafcb27",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fa984916-1d56-4c81-9a2d-807b47c6eea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0927a2-1a76-45b3-88e5-c0c8e7933074",
        "cursor": {
          "ref": "bce1197f-9cd5-409c-b131-1043898d846a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e0f57ccd-51fc-4061-ae04-983a38fd6ba5"
        },
        "item": {
          "id": "5a0927a2-1a76-45b3-88e5-c0c8e7933074",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d0acb73c-a93d-448a-b6da-0928b6afd34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb6c088-00fd-45d5-bfc3-8d3544ca5c74",
        "cursor": {
          "ref": "4c213dfd-4e92-4da9-8b0a-75e7ce181c45",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4e4c4dcf-4e59-406a-85f2-ffc21285db48"
        },
        "item": {
          "id": "1eb6c088-00fd-45d5-bfc3-8d3544ca5c74",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "502db78e-7330-41a2-a808-85b786e1f4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09772201-b351-4fef-ba19-e0d383927e11",
        "cursor": {
          "ref": "50c3e055-c25b-40de-8068-013eeaba4f75",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "eb68f0c6-5a1c-4dff-8584-e5c204c227ba"
        },
        "item": {
          "id": "09772201-b351-4fef-ba19-e0d383927e11",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1595c19f-ccc5-4dc9-9a66-5de2520625b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cf65f0-69d5-4168-877b-8670caafe415",
        "cursor": {
          "ref": "115cfbf4-9453-4204-b979-2c6d7996f67c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "deaae4a5-aaa7-40d5-a4a2-d9d139a1267b"
        },
        "item": {
          "id": "56cf65f0-69d5-4168-877b-8670caafe415",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "51d6c4fb-dc0d-4993-a634-b9aff065159e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a197e39c-3605-4380-9185-a82d2aabaf12",
        "cursor": {
          "ref": "f50d7705-dca6-492d-b610-c386261cb36f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f21deca3-8ce2-4c37-8d48-5c4feca059c8"
        },
        "item": {
          "id": "a197e39c-3605-4380-9185-a82d2aabaf12",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "41c5078a-b38c-417d-ba5a-6948afd9db5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b0ea6a-b4fe-4f42-8d34-0334d442a13f",
        "cursor": {
          "ref": "8d856c5f-d224-4878-8c07-5dfc67d038bc",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6fc776c2-ce9e-4b99-9a11-0d6076cea80a"
        },
        "item": {
          "id": "c8b0ea6a-b4fe-4f42-8d34-0334d442a13f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "20441f33-5914-4ae9-949a-80f22f0aab01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3ad17d-8af3-4b99-a3bb-6c234630a4fe",
        "cursor": {
          "ref": "e85cd8e0-9766-488b-bd04-6b0912b44986",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9fe8d6e2-860b-4d6c-a721-cae08b1ca12d"
        },
        "item": {
          "id": "3e3ad17d-8af3-4b99-a3bb-6c234630a4fe",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e6ca1a5e-90c6-40b4-bae7-a588e8f93ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3709aa7-c931-472f-b19b-dc40aabf4041",
        "cursor": {
          "ref": "9a9a2899-0cc9-48ff-8c50-d15223b29eb6",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ad62b789-f46d-4d77-a7a4-aa31bd5aa670"
        },
        "item": {
          "id": "a3709aa7-c931-472f-b19b-dc40aabf4041",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1e6cc5a6-6787-4120-b7fd-e282e2c0630b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8d6880-605e-4c36-8f9e-1a33bbdfbc4d",
        "cursor": {
          "ref": "ffd5f018-a272-4d1b-aefe-9bd26e48c459",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8ec7cb6b-fd3c-4b10-b349-a05bfdfc73a6"
        },
        "item": {
          "id": "ea8d6880-605e-4c36-8f9e-1a33bbdfbc4d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "40ea82ad-fa43-4123-bc5f-6ccf05b88853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecbbdb9-026a-47bc-8294-7cb1d8edaf1d",
        "cursor": {
          "ref": "46f22bec-1c0d-4b2a-adee-424e60eaa936",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d5449793-5061-4d17-bc8a-547deb2eefd1"
        },
        "item": {
          "id": "6ecbbdb9-026a-47bc-8294-7cb1d8edaf1d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "99b7cf6e-e164-466e-a235-afa211251984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624c3e6a-35ad-406f-a3a9-77dbc2ec2bd4",
        "cursor": {
          "ref": "42a8b208-0b0e-4d8a-8d8d-5be60a3564f2",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "41114d74-25bc-4521-908f-8ed321bec47f"
        },
        "item": {
          "id": "624c3e6a-35ad-406f-a3a9-77dbc2ec2bd4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e6044c56-728a-4f37-bbbd-4a7c2aab7090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1461f9-bb06-4c22-8d74-8bfdf9dcf6d5",
        "cursor": {
          "ref": "16f549eb-8b6b-4526-81ca-1af34e07c054",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "704db8ee-79a1-4127-bcb0-cb5ffec1d229"
        },
        "item": {
          "id": "3e1461f9-bb06-4c22-8d74-8bfdf9dcf6d5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2cd6f8e0-eae4-4cd7-9d7b-898e06eb9ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578287b4-6fd3-4bff-95f0-98a47f9e016f",
        "cursor": {
          "ref": "6734faef-d781-42f7-bfed-554192b979f3",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5a991848-f49a-428e-bdf6-b472a430ab10"
        },
        "item": {
          "id": "578287b4-6fd3-4bff-95f0-98a47f9e016f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bb61ae64-ae4e-4adf-a58d-77b3f003c860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56a0f13-7088-472e-8edd-0076e2b54a47",
        "cursor": {
          "ref": "77fa4a9f-b5f1-4bee-ad5c-ffb0c2d6a85c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2a0093c8-d3b9-4d97-8059-0ef30a139e6a"
        },
        "item": {
          "id": "b56a0f13-7088-472e-8edd-0076e2b54a47",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "df8e0352-4628-4266-875c-0b30d42a2fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f04bd9-db23-4812-82b1-cf2f54b88909",
        "cursor": {
          "ref": "efa93572-9687-4da8-9c92-18965df2b5db",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a4c7ab09-b322-44f9-871a-cf190b5a252f"
        },
        "item": {
          "id": "60f04bd9-db23-4812-82b1-cf2f54b88909",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c8a40972-55f3-4e35-b324-2a0f1d960eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb63a2c0-db4d-4314-a85e-68f366efe3e6",
        "cursor": {
          "ref": "a1cffa2f-10fa-4dc4-8201-f59a9cdc8ec1",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "656f7b63-2ec8-422c-ab28-e83e40f6a476"
        },
        "item": {
          "id": "fb63a2c0-db4d-4314-a85e-68f366efe3e6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9b916f7e-adbc-4b95-ac35-696a0fe0e83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a45b504-5a24-4115-9db6-13102541566c",
        "cursor": {
          "ref": "403c7318-0788-4a97-8f89-8c8efc8552fe",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "91735917-13f3-489e-865b-13b2374ff112"
        },
        "item": {
          "id": "8a45b504-5a24-4115-9db6-13102541566c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e7230892-62b3-4e9f-a3ba-7009d83b37ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ad7eb3-470d-47aa-b689-9653ee8cc270",
        "cursor": {
          "ref": "de765fb6-4b05-43a1-a328-c725d5feefd1",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7ffc7fd3-2136-4e91-8d1d-0b7547ecb60d"
        },
        "item": {
          "id": "b9ad7eb3-470d-47aa-b689-9653ee8cc270",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "97c8d279-af3d-4ca2-8bcc-222704ed9865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1617bac1-4e1f-4bb7-9f91-30241848c264",
        "cursor": {
          "ref": "f619f426-a797-4831-b71a-5a8ba0b3516a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b09c455c-8951-46f9-b590-a75ade8197fd"
        },
        "item": {
          "id": "1617bac1-4e1f-4bb7-9f91-30241848c264",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aa02022d-4aaf-4d7c-969c-f66b78a25af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2e2bcc-26cc-49ab-acab-4a003fa9d276",
        "cursor": {
          "ref": "febfdf10-d365-4534-867a-caa5877e364e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ca5b5d3b-cb3c-4510-b142-03beba2bd851"
        },
        "item": {
          "id": "ad2e2bcc-26cc-49ab-acab-4a003fa9d276",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "312d6656-a697-4141-9bfa-b70e634aa0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bdd3e0-b1c1-4928-97de-f323d7cd3493",
        "cursor": {
          "ref": "4024fffe-97a1-4a60-b08e-a42c4fbb98c1",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5f5cf769-8b0a-4e97-a520-259f81c1cd00"
        },
        "item": {
          "id": "98bdd3e0-b1c1-4928-97de-f323d7cd3493",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "be556820-5f92-4051-8e0c-76ea5a7897cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da3e17b-ed4b-4ed5-9d13-e401fc34d4b4",
        "cursor": {
          "ref": "b8bf67b8-3bc9-4c60-8a32-81fc5877e949",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "be6b5ca5-77a3-4e67-ad3a-d73131f1c9a8"
        },
        "item": {
          "id": "8da3e17b-ed4b-4ed5-9d13-e401fc34d4b4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fb8a21b3-15cc-4e64-865e-b4584f3a6614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569fa678-7e92-4890-ae3d-b74bf43de223",
        "cursor": {
          "ref": "06cc8340-6b3a-451c-b4a0-5ba6620072fd",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d0fd2aa2-fd93-42b1-aa03-77658e381d52"
        },
        "item": {
          "id": "569fa678-7e92-4890-ae3d-b74bf43de223",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7c298ca9-bf64-47de-86df-a0745c1dad0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9bf7ae-8e2d-4f2b-b391-cec43c61d1f8",
        "cursor": {
          "ref": "2fd0a292-11e8-494a-908b-b109ec3b67da",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9b734454-7193-401b-be7d-09284a2d16c2"
        },
        "item": {
          "id": "9f9bf7ae-8e2d-4f2b-b391-cec43c61d1f8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0ea5de07-dfa0-45c5-9949-b755a655ae65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae39372-1735-46fa-a6b5-4ba7a023ddbf",
        "cursor": {
          "ref": "bdf3fe60-c842-4d55-a25a-6ac87fa952f7",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2eedbaeb-a30e-4348-a7b8-fd0f3cb334f0"
        },
        "item": {
          "id": "7ae39372-1735-46fa-a6b5-4ba7a023ddbf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bec6394b-9be4-43ef-9bb9-da2e639a084d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8827451-f065-4369-8375-b02ab8c78029",
        "cursor": {
          "ref": "05a808b1-280d-4071-96e4-e25991af86ca",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "36ff2140-0e4f-468d-9848-03c8b56ea30a"
        },
        "item": {
          "id": "a8827451-f065-4369-8375-b02ab8c78029",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8a8a17e4-a8da-4d24-acbd-f5a069b6bfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5843c4-0dd2-4225-a5da-1ad8ead65d50",
        "cursor": {
          "ref": "03e28071-adc1-4efb-b16a-b09bc73d575a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "287a5e81-2b1a-4753-81b4-c8f511823516"
        },
        "item": {
          "id": "4f5843c4-0dd2-4225-a5da-1ad8ead65d50",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fd5bb917-2bd9-403a-a8d7-79d5ac0eefcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6a055e-b5a2-4408-9a64-f4b412469766",
        "cursor": {
          "ref": "c1c63767-a2ff-4984-be96-3296a510046b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3de67d4f-207b-4cff-8adf-d4d9314d2248"
        },
        "item": {
          "id": "7f6a055e-b5a2-4408-9a64-f4b412469766",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "918f7546-4fe8-4bdc-b236-b4cdef30ef01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3186657-1368-4e19-8cfe-4388dfe30170",
        "cursor": {
          "ref": "d5bb4228-771f-4705-83ba-7230fcb59f94",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "143f8cec-f2de-4b28-add8-9d51790fecd4"
        },
        "item": {
          "id": "e3186657-1368-4e19-8cfe-4388dfe30170",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "95cda663-1156-428c-a713-d7bdfcf9b971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adad3d1-3e11-4da1-b9c1-5e3038841171",
        "cursor": {
          "ref": "eb18e078-fd34-4117-8fbc-f3e00e879072",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "731b6158-74db-46b7-b23c-1d151dda4d79"
        },
        "item": {
          "id": "4adad3d1-3e11-4da1-b9c1-5e3038841171",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3827008d-0265-410c-aa49-dcccc56ee769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99405d4-411b-4f68-b286-0098edac825c",
        "cursor": {
          "ref": "b9f684d7-cd7b-498a-b66a-9ea7b56e8d60",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4f4e8610-3f69-495f-b0ac-d84d393e4470"
        },
        "item": {
          "id": "d99405d4-411b-4f68-b286-0098edac825c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "91129b66-44a0-40a4-89dd-9719bca93619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca25f70-83f8-41a8-86d4-ea97929d041d",
        "cursor": {
          "ref": "98b0db42-32e6-4b7b-b3a4-e5eea1a2854e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "48c7f586-dde2-4ae4-96f9-b9a1f575bf2b"
        },
        "item": {
          "id": "0ca25f70-83f8-41a8-86d4-ea97929d041d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7312fe95-2a2f-47c0-8c74-afba450f7178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815f6409-0c15-4b5c-a9e1-1e3eb643f250",
        "cursor": {
          "ref": "acd5656a-53d6-48ff-ab94-64527dad8bf5",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7c8e64ba-8893-4f11-b284-f19abb568355"
        },
        "item": {
          "id": "815f6409-0c15-4b5c-a9e1-1e3eb643f250",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ca28d5f6-6a80-4485-9b47-559f0052ba33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be722fbf-81c3-414e-ba14-f27f9e072de5",
        "cursor": {
          "ref": "d361acd5-5055-4b70-a980-34dc579e491d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ab8a3a15-d46c-44b2-8588-36808d7cbc6c"
        },
        "item": {
          "id": "be722fbf-81c3-414e-ba14-f27f9e072de5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2f1c22a7-03ca-4170-b898-bc5e802f8427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edcdefb-a8cb-4759-9488-86b3b9047c9a",
        "cursor": {
          "ref": "f498aaf5-7dfb-4d6c-8bfd-a1f20c816fb2",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "879eea55-ca7b-40af-9bbf-ce914133f99e"
        },
        "item": {
          "id": "3edcdefb-a8cb-4759-9488-86b3b9047c9a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cb2753fd-befb-44f0-9a41-b6a2a437b2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592bdd42-34d5-4f65-86a8-c7233b269ec1",
        "cursor": {
          "ref": "6902e5e9-12eb-4e08-8073-dcd13e3ca90b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4047e8af-ec7d-4319-9a76-7a151fbc4148"
        },
        "item": {
          "id": "592bdd42-34d5-4f65-86a8-c7233b269ec1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "44c48b9c-2d63-4bdb-bd6e-939546416368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f91d656-7386-4183-a23f-2d1996301cec",
        "cursor": {
          "ref": "19b94252-c038-462d-8f4d-70a894a48c7c",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8134b407-61f7-4409-8c7d-ada9d368cbe7"
        },
        "item": {
          "id": "1f91d656-7386-4183-a23f-2d1996301cec",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "48a8ba54-4cee-407d-84e5-b213da47e23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c30ddfd-38bd-41c7-a17d-4f94b8c3d548",
        "cursor": {
          "ref": "3502583d-360f-4efc-becb-a0c1d7b6ceae",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "35af1a6e-640a-4700-8f47-3bdeb7e225ba"
        },
        "item": {
          "id": "2c30ddfd-38bd-41c7-a17d-4f94b8c3d548",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ccb5fff0-8386-418c-9d96-fb79a2d7191e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e97497c-0e3c-421e-a022-96507f8570eb",
        "cursor": {
          "ref": "02fc8592-4a5f-450f-a584-d2b3d62e1945",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8435b637-83a7-4e2b-a7a0-5680ce978719"
        },
        "item": {
          "id": "8e97497c-0e3c-421e-a022-96507f8570eb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3f3054e4-c05b-4c45-bbfd-1e5441109321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f065e52-2ffa-478b-926d-493a595617ac",
        "cursor": {
          "ref": "f5eaf238-c018-48b9-9e43-01e3a9f4e72a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "343368d9-d4d7-4fe2-b8a4-a75f27bf9167"
        },
        "item": {
          "id": "2f065e52-2ffa-478b-926d-493a595617ac",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "72742627-d2b8-4c6f-b2d8-97b7b931f3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d983ab-49c1-45be-bc89-220d08d871d9",
        "cursor": {
          "ref": "245b8aa5-0765-444d-a87b-7947db253e6d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4642ef0a-abb2-46ae-ac11-7d21ef99f7f5"
        },
        "item": {
          "id": "a5d983ab-49c1-45be-bc89-220d08d871d9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9ec9536a-bf13-4af0-9288-89d16923e157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa91175-4150-4492-8019-4b1be669d96d",
        "cursor": {
          "ref": "b4dc09b0-bc6b-47bb-bdfd-c66dd6c3d771",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1a8d91bd-85cb-4319-b295-a5725f89543d"
        },
        "item": {
          "id": "6aa91175-4150-4492-8019-4b1be669d96d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "78dd9ea1-ba22-4602-b990-78755cc14386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c97b64-ea36-4e43-be0a-5e921bf6bee8",
        "cursor": {
          "ref": "aa83794c-dab0-43bc-892f-2de1c8818a3b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "88efc884-52e2-477c-a7bc-e698b6b0faad"
        },
        "item": {
          "id": "b8c97b64-ea36-4e43-be0a-5e921bf6bee8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "121ca1dc-06c6-4c5c-9bd8-2ff60bdc12bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5dc5f5-82b4-4f28-b071-e0d7a23bbb4d",
        "cursor": {
          "ref": "dbfa6bec-8baa-439c-8e72-39b2742aba67",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5dc91778-e6fa-4d3d-a8c8-5b829a0f9798"
        },
        "item": {
          "id": "dc5dc5f5-82b4-4f28-b071-e0d7a23bbb4d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9538720f-c1a4-432c-a7eb-df356dbcb087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca54a491-5c86-4b22-8c57-be891613029b",
        "cursor": {
          "ref": "4f67cf46-d901-44cb-a282-271f93d09522",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "56dead37-01ab-4d95-b48c-29e98bdf4fcd"
        },
        "item": {
          "id": "ca54a491-5c86-4b22-8c57-be891613029b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dd88a440-d5e3-417b-b6b7-9766c06e8ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cc2baa-5f70-4700-a371-262b22a9d833",
        "cursor": {
          "ref": "444da727-484e-4739-99cc-c0d47dcaa17a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0b2d4910-849d-4892-979d-9a4b410f211c"
        },
        "item": {
          "id": "f5cc2baa-5f70-4700-a371-262b22a9d833",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d408ebe3-8867-4191-806b-ce696d1a2dfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae46160-34a5-48b7-874c-677367c177a9",
        "cursor": {
          "ref": "56dd80ca-5a16-4574-97c4-75f85bcf9d67",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "556806d8-d220-431b-b293-4503d8505118"
        },
        "item": {
          "id": "fae46160-34a5-48b7-874c-677367c177a9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c39355ca-6f6b-47d4-a99f-6b8a4752b611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1501a7b-7808-45aa-b07e-42d66521dd8b",
        "cursor": {
          "ref": "aba00305-58b2-464a-8622-657f56b551fb",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "18a67269-187b-4f4e-95b9-e8f06bf0e3e5"
        },
        "item": {
          "id": "a1501a7b-7808-45aa-b07e-42d66521dd8b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "89eb40c3-525e-4494-9809-945dc1a089d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64289c1c-87c1-4e8d-a457-ca50ff581d9d",
        "cursor": {
          "ref": "dbc65be8-d0ce-43a8-9d48-c7b7f49f58ff",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "05b9df8e-8243-43a9-b843-11e6160a3aaf"
        },
        "item": {
          "id": "64289c1c-87c1-4e8d-a457-ca50ff581d9d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "413dfdbe-d506-453e-8dad-2b4872f2536e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3a33e6-be12-41e3-9804-ca463a2fbd33",
        "cursor": {
          "ref": "9cf6f1a3-d1a2-4f8a-8e00-5aa10aca0720",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5fc4c390-515d-4a26-970a-dc275b4e9dce"
        },
        "item": {
          "id": "7e3a33e6-be12-41e3-9804-ca463a2fbd33",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5a038945-f078-4e97-80dc-d829f25263b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5653fbf9-7623-43e8-9ca9-d82e1044e307",
        "cursor": {
          "ref": "fd81e5d1-6afc-4c3c-b89f-bd1c87c8dc7d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ff8ae930-6ca8-47d0-8339-a564913f6613"
        },
        "item": {
          "id": "5653fbf9-7623-43e8-9ca9-d82e1044e307",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "aecf83d0-65ae-434c-bb64-1f97c27590f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d31ad6e-7df4-4144-9ef2-76c1d90df627",
        "cursor": {
          "ref": "b1d0b02a-a630-4cea-b8d1-6d090120942c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "87d488b8-d3f4-44cc-8a06-9428d39cf3f0"
        },
        "item": {
          "id": "9d31ad6e-7df4-4144-9ef2-76c1d90df627",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f9543f3f-088f-4212-92be-74180f37149f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fca2d7-cb02-46fb-87a8-80f95206e6d5",
        "cursor": {
          "ref": "7d138df3-7626-44c6-8c10-71eea47ec2a0",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "44178bf2-6fb5-434a-8a3d-adf51655c114"
        },
        "item": {
          "id": "22fca2d7-cb02-46fb-87a8-80f95206e6d5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a47b69b3-1138-45cf-952e-ff6bfd6be755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0aeddb-a071-4caf-8480-6c6c966a9f9f",
        "cursor": {
          "ref": "42f5c6c5-74b5-4f70-8a70-99c0ae9e1c99",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9438561b-bde9-4edc-97ac-b5768fac8920"
        },
        "item": {
          "id": "bb0aeddb-a071-4caf-8480-6c6c966a9f9f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fe66eefc-fab2-4006-8a69-9dacdff9dc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a932cad9-0702-4365-b115-cd5f643c5941",
        "cursor": {
          "ref": "f1e44edc-3fc8-4a0e-9661-0a481c83045a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b0927039-7956-406f-884b-23afee20bd98"
        },
        "item": {
          "id": "a932cad9-0702-4365-b115-cd5f643c5941",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "084a656e-e1ee-48d1-b84b-600fc0331ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0155e4-bab6-4ba7-b4c1-897da26feffa",
        "cursor": {
          "ref": "0da89199-7b99-4e6e-ad6e-6f292b9f09f8",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "17251756-3d90-4251-ab0f-2151dbbe61c4"
        },
        "item": {
          "id": "1e0155e4-bab6-4ba7-b4c1-897da26feffa",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1d28fe9f-189d-4bb5-b2e1-9e02576c7aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1930e8cb-e35e-48fb-ac93-305d824dc8ff",
        "cursor": {
          "ref": "bb9f8acd-71af-4ef7-992f-a2cb68dbdc7a",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6c8109b6-2ef1-46e1-b0a7-a0c3e57e58e9"
        },
        "item": {
          "id": "1930e8cb-e35e-48fb-ac93-305d824dc8ff",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "be71d9bf-e010-4882-8682-6e071c975938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20b9b6b-df93-4614-8660-9d036ce6d1fb",
        "cursor": {
          "ref": "89131186-6064-44a1-a806-11dad3d3fc88",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "39556d94-2131-4850-b3a2-a51beb84cea0"
        },
        "item": {
          "id": "a20b9b6b-df93-4614-8660-9d036ce6d1fb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "56c0446c-f9da-4b01-a43c-ab5cdd79b3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e679a3-a5f3-471d-b7de-880822e0afcc",
        "cursor": {
          "ref": "e4a6715c-93f7-4f51-b082-33f4bb61328a",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2c1bc90c-0be1-4420-aa6e-578f917d8f48"
        },
        "item": {
          "id": "f3e679a3-a5f3-471d-b7de-880822e0afcc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2ef1eabe-b6c8-4bad-81b7-a8f490fad3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a2d84a-7a35-4bbd-a434-c0e1469ab961",
        "cursor": {
          "ref": "450695aa-7623-431a-b3a3-99ca0bd0a67c",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6b713b5c-2a9b-4e15-b11a-fb8558c8aa09"
        },
        "item": {
          "id": "26a2d84a-7a35-4bbd-a434-c0e1469ab961",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "43a81b96-02cc-4e82-8f6b-3760cecf1d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa0724f-4a99-423d-bfd5-0605273595d3",
        "cursor": {
          "ref": "22e2c0cc-cd37-42d3-9418-caf00e7ac1cb",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "98d581a7-cc9a-42c5-a021-dafc79ec1ba2"
        },
        "item": {
          "id": "ffa0724f-4a99-423d-bfd5-0605273595d3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "304cea5f-2efe-4488-9cd5-37d7240238c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ebbe32-7f95-4011-82ad-338947a3bf9e",
        "cursor": {
          "ref": "101c08bb-85ba-40ee-a6c1-7de9ef84db07",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f411a1da-4004-476f-a4ba-c83200d0a660"
        },
        "item": {
          "id": "24ebbe32-7f95-4011-82ad-338947a3bf9e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2fbd374a-b7b7-43dd-aef5-b10eb603d083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ebb7d6-abcd-4a23-865e-1c854d4b46d1",
        "cursor": {
          "ref": "252d50a5-bf5e-4d2f-b5b8-61ddfd706b9a",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ccde7804-0190-4927-9a28-8453686ca464"
        },
        "item": {
          "id": "e1ebb7d6-abcd-4a23-865e-1c854d4b46d1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e5c2d8cf-af06-476c-a04c-22f8d5a1c4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1b2970-ec78-4461-9d2c-bb0ed1fdd512",
        "cursor": {
          "ref": "e7232c6c-6a30-4d29-a994-0d2813b2896f",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "48c02e97-acac-4e9a-83ad-36cb8da60fa8"
        },
        "item": {
          "id": "9e1b2970-ec78-4461-9d2c-bb0ed1fdd512",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f0edc4f2-92cc-4994-bd26-a3ff918b917d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84768a79-64aa-4ff2-a020-74914f4fb206",
        "cursor": {
          "ref": "e5ad9b53-8aa9-48ce-aafa-65f054e31cbc",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bcc5e736-474b-4f8a-ab1f-2df4d7b3c46d"
        },
        "item": {
          "id": "84768a79-64aa-4ff2-a020-74914f4fb206",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "64980329-503c-4980-a838-a784f2d78676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9a40eb-10d8-40f9-bcd6-15db283227e2",
        "cursor": {
          "ref": "f7866a74-284a-4e4d-8921-46d323f80173",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a5cddf22-e7a6-42c0-aae0-d3b1b29a8fe7"
        },
        "item": {
          "id": "aa9a40eb-10d8-40f9-bcd6-15db283227e2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ea4dd10b-0ae3-414d-9c45-a5d9b7414c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15eb282c-18fc-4fe5-b731-f1b1b03e102b",
        "cursor": {
          "ref": "211d1e13-bc85-4b13-b052-d724308376ae",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "838cb981-5865-4c00-8dd3-0407f75b0732"
        },
        "item": {
          "id": "15eb282c-18fc-4fe5-b731-f1b1b03e102b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a0326ea5-1147-41f4-afe5-dc869d03ed68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0b405d-e385-433f-9966-77bb5d22b92d",
        "cursor": {
          "ref": "e1e02ace-3f86-45d1-a1a4-05217aaf725d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5900d8f9-739a-40a8-9713-e6e917b7efb4"
        },
        "item": {
          "id": "6c0b405d-e385-433f-9966-77bb5d22b92d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "99bf6509-bc02-4945-b96f-f1fe8e3c0a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8159f1cd-06ef-415e-a3b3-e1a8ea152475",
        "cursor": {
          "ref": "34130527-663d-47d3-bc71-e3ad4fd61e14",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "381909b1-ea54-4b69-825c-5095c2b4cbf9"
        },
        "item": {
          "id": "8159f1cd-06ef-415e-a3b3-e1a8ea152475",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c21f0fa2-7779-4bf7-bc28-a5a65ba132b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65d57be-7780-483f-a400-a6d6756624aa",
        "cursor": {
          "ref": "f72ecd56-a9eb-47f3-b1f3-e8853b2b1f2b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "82be9f97-3eaa-4e45-b216-9a664aa5f05c"
        },
        "item": {
          "id": "f65d57be-7780-483f-a400-a6d6756624aa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "56e6df39-8342-4b6a-8ac8-c57da976db78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95060dd-f2ed-482d-875b-53d901e4b447",
        "cursor": {
          "ref": "af168c6c-4af3-4ad7-ae5b-76e369ff386a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1fdae647-5fc7-4992-91d2-d1c3dd8fc683"
        },
        "item": {
          "id": "b95060dd-f2ed-482d-875b-53d901e4b447",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6fb58453-0cc3-46fc-b370-ab4c1030db92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93eb4b77-33b5-48cb-8949-81f51693d68c",
        "cursor": {
          "ref": "d735772b-a7c9-443c-b12c-e8f36c571443",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3c4943ee-7ae5-492e-8c7c-a439868a8f07"
        },
        "item": {
          "id": "93eb4b77-33b5-48cb-8949-81f51693d68c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9b745f23-022f-4a78-bec2-e1b53656ab7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80bafd6-b6a2-4d2b-9ff6-f63858616fb1",
        "cursor": {
          "ref": "36f45f1a-3811-42f5-90bd-2e8e4fe4cbd1",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5620ea1a-778b-4a2b-8717-ccae03b6cbdc"
        },
        "item": {
          "id": "f80bafd6-b6a2-4d2b-9ff6-f63858616fb1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6830b3e0-140d-4fb6-aff3-dce3b3f1c12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c13ac51-45d1-4b16-bf34-5a9135709456",
        "cursor": {
          "ref": "490162d7-816f-4605-80e5-d8be40a73480",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6542d77a-c41b-41e5-a7b1-3424b72c2a34"
        },
        "item": {
          "id": "3c13ac51-45d1-4b16-bf34-5a9135709456",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "97d12fab-dd7a-4b55-bbcb-b3f13f8df380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92214f11-82cc-4874-be49-a3babae19d43",
        "cursor": {
          "ref": "15d0edc9-940b-41ae-b3c6-10b0d089ffa1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1afa3a3b-b4e0-4cd7-80c5-c76ad8d1b765"
        },
        "item": {
          "id": "92214f11-82cc-4874-be49-a3babae19d43",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "110190fb-d433-4a77-a5a9-4e424d7546f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f06bf3-609c-484b-8f59-2676d5a569b5",
        "cursor": {
          "ref": "0987337f-0a0c-462d-9676-145ec8d7ade7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "54702840-0f0c-4157-8b90-c47ea22fe9d3"
        },
        "item": {
          "id": "17f06bf3-609c-484b-8f59-2676d5a569b5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d4d9c787-d6e8-4996-a609-c03e86af437f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1a856e-c00c-49b2-8632-d677bfd8b827",
        "cursor": {
          "ref": "01b2bc63-4fab-471c-94d9-d0ff5a59dbb3",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "39bfe3f2-a7d8-4800-8fda-931f6c34767f"
        },
        "item": {
          "id": "7b1a856e-c00c-49b2-8632-d677bfd8b827",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0fd5d58a-f2a3-4b2a-9b96-fdef46c1a9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87209a8b-31c6-4ecc-a501-a1a77918e5a0",
        "cursor": {
          "ref": "d7905854-6469-4f2f-83e6-ca9bad195ee4",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "66748697-f316-46af-ab29-acb3d7718148"
        },
        "item": {
          "id": "87209a8b-31c6-4ecc-a501-a1a77918e5a0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a1f73d0a-b2a7-4dd5-854d-784fe29db65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d1b269-50b1-466e-b065-89e1475a34d9",
        "cursor": {
          "ref": "cd63bdd8-afc0-4f73-bdc4-1cb6be90231b",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a136d313-9f00-44f6-936c-b98a93bc0f49"
        },
        "item": {
          "id": "82d1b269-50b1-466e-b065-89e1475a34d9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "317ce29a-3d2c-44bc-89b2-63fa516abf7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0031db8-411a-4ae3-89a5-b5e0f51baadf",
        "cursor": {
          "ref": "390b56b5-66f6-47b7-84f5-7a2470c7b6e5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b7fc035e-63ec-481d-b6d3-56ffc118b8de"
        },
        "item": {
          "id": "f0031db8-411a-4ae3-89a5-b5e0f51baadf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3eb52f07-ff6e-4b8c-9251-7133ec6372ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ea34af-dd79-440e-9c52-8e1ec89a32cf",
        "cursor": {
          "ref": "23b478e2-7cc8-4967-b561-39f6ad0693c7",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6051998f-7759-486a-bce9-82b577a942e1"
        },
        "item": {
          "id": "86ea34af-dd79-440e-9c52-8e1ec89a32cf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "be473b58-92d1-4eb8-88a1-0d7246687f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1d8377-6d66-4600-b10b-35095a337fe8",
        "cursor": {
          "ref": "b88cf3e5-35ce-4254-855e-33dd24bb0cdb",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7d532989-bce4-4230-af9c-4752f4e9ada1"
        },
        "item": {
          "id": "ae1d8377-6d66-4600-b10b-35095a337fe8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "60790926-e971-407f-aa5b-ddafc1b24064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca58a440-f30b-4b00-ae73-30a9daf8a03f",
        "cursor": {
          "ref": "e2bafab8-fa5a-4d20-98d5-a7584d49f6bb",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2c499fdc-2a9d-4c27-a627-374d69e4e2b2"
        },
        "item": {
          "id": "ca58a440-f30b-4b00-ae73-30a9daf8a03f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9c0aed81-f08e-4835-99b6-c3690edc2dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2cb03f-27a9-435e-9ae9-c13cd39639a8",
        "cursor": {
          "ref": "5cca61fd-dc58-4089-8784-5588e8df0be1",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e0700f21-f6fb-47ae-aa26-16f35e35ad4f"
        },
        "item": {
          "id": "bb2cb03f-27a9-435e-9ae9-c13cd39639a8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "99325265-465a-4d6e-a82f-b7027a2d6dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98fb014-0783-4793-9ab6-104866e6a939",
        "cursor": {
          "ref": "96c6647a-ce63-4f35-9745-dcc2e681193b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b9f408c9-c451-4322-af5c-a81a9c324982"
        },
        "item": {
          "id": "b98fb014-0783-4793-9ab6-104866e6a939",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "12f8be46-cd34-4284-ad4e-e983c5dc8f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37bb860-5dd5-4dfd-a3f2-08dede7335f7",
        "cursor": {
          "ref": "00b27777-d5ab-4643-a4e8-6bd570352986",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "40298396-4c62-4239-8ed1-9a0491fe0358"
        },
        "item": {
          "id": "a37bb860-5dd5-4dfd-a3f2-08dede7335f7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "72d9cadb-c1d3-46db-a190-5c2962e2c6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee039e2-da59-4eca-9a0e-169cc46e3dec",
        "cursor": {
          "ref": "b3a9db7d-e697-4f71-8dca-5ac22ffb96c1",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "88288231-8538-4b88-b009-53223f0089fd"
        },
        "item": {
          "id": "bee039e2-da59-4eca-9a0e-169cc46e3dec",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6cc7301f-ca02-4578-9c5d-c29066dda074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b44cec-7dc3-4bd6-b5db-7785d8bfe103",
        "cursor": {
          "ref": "bcb49021-f5cc-473f-9034-f6b0d4763a0c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "454eef75-9a5d-4c65-99b9-e7de12a9707a"
        },
        "item": {
          "id": "38b44cec-7dc3-4bd6-b5db-7785d8bfe103",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "898263f0-e959-4b20-aad3-1d33cdf39329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2adb6dc-7a82-4ddc-a1b7-f34e94f822da",
        "cursor": {
          "ref": "d17ca730-98d4-4c9e-97ce-2d8f57e12efd",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6fdc0fd7-b4e6-42f6-af78-b843c85cc555"
        },
        "item": {
          "id": "e2adb6dc-7a82-4ddc-a1b7-f34e94f822da",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b33dbd23-88ea-4fbd-92aa-1a2d0fbfc7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b59f34e-fbc0-4162-a9b7-c2b77eeb3681",
        "cursor": {
          "ref": "a33ab294-d744-440a-8ad1-d4bd94368353",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f579fabf-a4a6-496a-a80d-ee037672ae58"
        },
        "item": {
          "id": "8b59f34e-fbc0-4162-a9b7-c2b77eeb3681",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b84f9b3e-316a-4b09-9ee5-9a2d2c32c742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf3945e-5216-472d-9f67-329e7a2dd917",
        "cursor": {
          "ref": "eb3e95f0-6997-45e2-a85a-324ad58965bb",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d0a14773-6cd7-4709-ac30-bbec2d1c6b60"
        },
        "item": {
          "id": "aaf3945e-5216-472d-9f67-329e7a2dd917",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "901820e0-bdfd-43be-be29-d5dbba417227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8fe866-142f-418c-979f-8171a1bb725b",
        "cursor": {
          "ref": "c414e2eb-e577-419c-845d-324f21a87a2b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "60e11988-7f99-4b14-883a-8fb0b1952db9"
        },
        "item": {
          "id": "cb8fe866-142f-418c-979f-8171a1bb725b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3743423e-572b-4259-a8a4-196e85c31f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba0f352-804d-4fd0-9a06-339baf695311",
        "cursor": {
          "ref": "0ccffd20-92a6-4d23-9bd9-852b7183c53b",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "34fa7c6d-d65d-4d7a-b4e6-abc2e33331ae"
        },
        "item": {
          "id": "5ba0f352-804d-4fd0-9a06-339baf695311",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "59630c55-d2c6-499e-aceb-648243d3e36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5630d77-a2ab-4a4c-80a2-40e70afdf631",
        "cursor": {
          "ref": "7a0deb85-6c8c-477e-a611-90dbfce33b2d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3dc47348-bec1-4016-909a-4b31c09569fe"
        },
        "item": {
          "id": "b5630d77-a2ab-4a4c-80a2-40e70afdf631",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d023970a-30a7-430d-bf95-6bcb97e5a59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63e8974-a579-440c-9490-c6a53e65b253",
        "cursor": {
          "ref": "0f76a81c-6b1d-437e-87a7-f30be414fe7c",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0a085ec4-46ba-4414-b68a-f245f7c48049"
        },
        "item": {
          "id": "e63e8974-a579-440c-9490-c6a53e65b253",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "74db92fd-7a45-46c2-ba37-a9bb7e3758de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e702e4b5-bf60-4023-bcb6-c9f82f295ec7",
        "cursor": {
          "ref": "822c14e2-93b6-490a-966b-66238ecdf4a7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0c6c94e4-4c10-4359-adc0-abac79f762f2"
        },
        "item": {
          "id": "e702e4b5-bf60-4023-bcb6-c9f82f295ec7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cbd7a249-7f1d-4cf4-9194-0dad6e06d3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53ea6e5-879a-4c44-bfbd-5e33045c8525",
        "cursor": {
          "ref": "16112a92-de6a-4fc7-baf5-4b8b27e23948",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "13aed36a-09d1-4d94-902c-5d478cc4fba3"
        },
        "item": {
          "id": "e53ea6e5-879a-4c44-bfbd-5e33045c8525",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "55347110-921f-43b5-a858-14a087391222",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "089ff8ce-740f-42e6-8137-19f5f6747c41",
        "cursor": {
          "ref": "f6310e8b-8de8-4126-903d-fd71192a67c7",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "048109ce-3a4b-48b7-b8d8-d7413e2f50df"
        },
        "item": {
          "id": "089ff8ce-740f-42e6-8137-19f5f6747c41",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "63dde1ac-3ec8-4ea3-8e84-ad6ee9e3980c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ff8a48-a4f2-4106-969a-5a6e2fdedbe8",
        "cursor": {
          "ref": "fa4ba550-14af-4ca4-ad79-4d140948d38f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "29b5aa21-0715-455f-ab8c-3631a070ea0f"
        },
        "item": {
          "id": "32ff8a48-a4f2-4106-969a-5a6e2fdedbe8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9de481b5-f2bf-4282-9a0e-b7c8662828e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dbd0da-9fa3-441b-8671-757f2adf20b0",
        "cursor": {
          "ref": "9261111c-a5fb-4fd7-9594-d66c796c43ae",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "478bc294-d32b-4a8e-9d18-d043036f6d64"
        },
        "item": {
          "id": "78dbd0da-9fa3-441b-8671-757f2adf20b0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3635d84c-9fa6-4f5d-888a-f08986434294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b94adb-faad-4d81-b5cc-4271cdc12332",
        "cursor": {
          "ref": "aca8a66a-24ab-4078-b15a-57f801e19ec0",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "358bf68a-1c65-4f3e-8c11-9250ee21bf53"
        },
        "item": {
          "id": "a6b94adb-faad-4d81-b5cc-4271cdc12332",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4e296d4a-d4ed-4faf-bee5-6a47f6e5fefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2449aa08-1b8f-4723-baa0-1e3b5f4499b9",
        "cursor": {
          "ref": "31460f9c-9f91-4658-b93c-b45c8028d880",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "44ba152c-e26a-4a18-8907-6384372ec7e3"
        },
        "item": {
          "id": "2449aa08-1b8f-4723-baa0-1e3b5f4499b9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f486c5be-c65c-4852-86d8-68f2cddf75a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f527a88-9132-4aff-bd54-bcbf62d9760e",
        "cursor": {
          "ref": "1952997a-0e2a-4afe-a730-1c20a32e4d1e",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3cad7e96-3f4f-48a7-88f1-13acff8d972a"
        },
        "item": {
          "id": "7f527a88-9132-4aff-bd54-bcbf62d9760e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "73b88714-d12f-4f3b-925c-01caf54d7300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119fca8a-dd73-4ffc-8953-f045020937ea",
        "cursor": {
          "ref": "aa2c9a2a-598e-49e5-aa8e-e61c22c96bde",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0bea3dc8-6406-4ba8-be39-38cf1eb62e35"
        },
        "item": {
          "id": "119fca8a-dd73-4ffc-8953-f045020937ea",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "39786952-a941-4be5-a279-c531af681a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96d4db4-1a8b-4569-b0f7-abb5b090149d",
        "cursor": {
          "ref": "51c5dbee-504b-4499-8102-53a3ddbd50b2",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "83d56358-e11c-4076-9d04-926b65995b3b"
        },
        "item": {
          "id": "f96d4db4-1a8b-4569-b0f7-abb5b090149d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bc2a8ad7-b107-4849-976d-cefdfd725f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18438a6e-1255-4a40-8545-92006eb99de6",
        "cursor": {
          "ref": "18e9b4e7-721b-4a83-afdb-f82901fd4852",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c1491b4f-6e31-4d10-8fe2-aab9dae4bee6"
        },
        "item": {
          "id": "18438a6e-1255-4a40-8545-92006eb99de6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5812b009-a8ac-4796-9276-2e3641f108fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09828107-8020-447d-9538-6f7e45d51f97",
        "cursor": {
          "ref": "53feb8d7-9f29-4ac6-8b8c-49d9c77ce4d3",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2a29a21a-955d-449b-b430-ce8741190f41"
        },
        "item": {
          "id": "09828107-8020-447d-9538-6f7e45d51f97",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1fa175e7-42e6-4031-a9ce-4b27f7848598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac01ad94-aa2d-4769-a064-520ea5e3b6dc",
        "cursor": {
          "ref": "9ea3e4ad-5487-4710-9e69-6fac022791bc",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6d449dff-6bdd-4d20-becb-6ec85d119ec0"
        },
        "item": {
          "id": "ac01ad94-aa2d-4769-a064-520ea5e3b6dc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "25aabdb3-3060-4d27-a02e-2b3355123220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8efc188-98b3-48db-8b04-9be3f372c4af",
        "cursor": {
          "ref": "44352faa-5a31-46d4-8eca-fcae95e8424f",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "edfe4214-ff03-4d7b-a9ed-f8130bada37b"
        },
        "item": {
          "id": "a8efc188-98b3-48db-8b04-9be3f372c4af",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7470025d-c7f4-4f80-ab86-5eede64aee75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a933f7-8ed0-4e9b-b2af-4c787042da20",
        "cursor": {
          "ref": "cf68202a-7e72-4d7a-b013-17911ea4f0be",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "951c591d-e78a-4bb8-9d30-10cfe4f2efa4"
        },
        "item": {
          "id": "46a933f7-8ed0-4e9b-b2af-4c787042da20",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "337147f9-d632-4b51-bb7a-3e7d1c73bceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96157a05-e817-4de5-a328-9fc96c05d7d6",
        "cursor": {
          "ref": "3997da8d-f260-426c-8689-b231b8da7e7a",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b6821622-4762-4405-be34-173e15f1f4b9"
        },
        "item": {
          "id": "96157a05-e817-4de5-a328-9fc96c05d7d6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "693411ec-2343-465d-af5f-f68397b2f5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237b5de1-52fb-4385-a32b-032331e506a2",
        "cursor": {
          "ref": "beaf7f99-081c-4abf-9d7a-7dcd9af1e7a7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "45cde073-87b7-448d-b541-b9d6e0da426e"
        },
        "item": {
          "id": "237b5de1-52fb-4385-a32b-032331e506a2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "98410447-53cf-44cd-909c-9de71161a7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4c3752-a4de-49f2-8a70-bc5c09d8bafb",
        "cursor": {
          "ref": "399b189a-604d-47db-a53b-d82e22de9839",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d75ff8df-4b85-47be-8a51-9ab71c15a21c"
        },
        "item": {
          "id": "cd4c3752-a4de-49f2-8a70-bc5c09d8bafb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3d8d7bcd-0e4a-486f-95f1-228c53bdd55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2563371-a511-4835-9847-97e908a46028",
        "cursor": {
          "ref": "ce216b38-bb5e-448e-baa5-2467e7b74d46",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "46a728ee-e04b-41bc-b8b3-20ba5b1d07da"
        },
        "item": {
          "id": "a2563371-a511-4835-9847-97e908a46028",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cafec174-24c2-4123-9b4e-6738afe43d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba67b498-bdcf-4e37-9a0b-dfedfa1e0b8f",
        "cursor": {
          "ref": "e679aadc-d068-479e-aa2a-888a4bc2ea0f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c40fa959-a77a-499c-9849-7657a25aef61"
        },
        "item": {
          "id": "ba67b498-bdcf-4e37-9a0b-dfedfa1e0b8f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "37e74080-406c-4739-9569-e22928e21cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feea7749-7109-412a-99cb-a047b1016701",
        "cursor": {
          "ref": "8b9ae0b4-4a68-4080-b5cc-9d4bccbdff2f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fe5ee99c-e1e9-4a7b-8d0a-30d181ab27e9"
        },
        "item": {
          "id": "feea7749-7109-412a-99cb-a047b1016701",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "60114674-bc81-4216-bf84-dec260ad6a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc389145-7739-465a-8cf3-829d34cc763b",
        "cursor": {
          "ref": "7615f73e-635f-480b-80fa-99b58b7a976b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ccf902f5-b2af-4b79-a78e-868682398d03"
        },
        "item": {
          "id": "bc389145-7739-465a-8cf3-829d34cc763b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6cf05992-11e7-4238-961d-99842a7a9914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4997cc89-d292-455c-bcd4-73efb02b1f05",
        "cursor": {
          "ref": "3387aaf3-92aa-41cd-9317-f0fb569cdffe",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "514430fc-944a-46c1-913b-450ba6f4c7e6"
        },
        "item": {
          "id": "4997cc89-d292-455c-bcd4-73efb02b1f05",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9b0f3192-f0df-46ee-b308-2bd38e829944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb64696-23e7-40e7-8593-20a5aed160e1",
        "cursor": {
          "ref": "55435389-d0fd-4c89-852a-f973a668fb73",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3d0dbd22-365b-4bc3-b17b-23b6d56ee5ce"
        },
        "item": {
          "id": "8eb64696-23e7-40e7-8593-20a5aed160e1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "381cf989-f79a-4a83-a91e-2e5964471bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643dec24-fb9f-4d97-b7ea-df32f20af86f",
        "cursor": {
          "ref": "273b143a-9b1f-4ab6-a877-909812ca781d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dcd7477d-ae1d-4ec8-a7b6-5e8f869a531f"
        },
        "item": {
          "id": "643dec24-fb9f-4d97-b7ea-df32f20af86f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0d7d839c-d208-4336-b159-d663303f4f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac3ffd0-9409-4a50-96f3-6a8e8fbae9d7",
        "cursor": {
          "ref": "6a85fca7-6d5d-4841-aa59-23a1183cc199",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "77ca5125-36bc-4dde-959d-10d1ab6b1f75"
        },
        "item": {
          "id": "aac3ffd0-9409-4a50-96f3-6a8e8fbae9d7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f63f60d9-5d61-4eef-973b-93462ff78dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6121fb-d9df-4016-8fc1-583983bdd9b3",
        "cursor": {
          "ref": "59897f2b-2d35-43dc-9436-996a521a766f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "76aa5949-ef5e-44b5-8275-659c6d4fb9c6"
        },
        "item": {
          "id": "ee6121fb-d9df-4016-8fc1-583983bdd9b3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ae1755c0-8f37-4e94-a0c7-56b8ccff76cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e226a975-2a16-406f-b8c3-117c5295ff39",
        "cursor": {
          "ref": "533906f1-b1cc-4252-a308-a9d85d4a67dd",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "877c2732-feba-4ffe-bf71-a6b99a2a59f8"
        },
        "item": {
          "id": "e226a975-2a16-406f-b8c3-117c5295ff39",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1e5f9e11-aeec-45dc-866e-cc9c3d9578a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d7bdba-90d4-444a-a282-a2e87c72bd92",
        "cursor": {
          "ref": "35c8122e-b99a-406c-a3d7-46f6c3fa8ceb",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e3962db8-230a-4c99-8873-de5722998492"
        },
        "item": {
          "id": "f8d7bdba-90d4-444a-a282-a2e87c72bd92",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6156aa71-3011-4114-b85b-06d765923f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da76352-358c-4d5b-b36a-252b8ce40559",
        "cursor": {
          "ref": "e9ed6cb5-4418-4689-80e5-56d496d9a559",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a386bcba-3532-42fc-b2cf-8f3720a958ee"
        },
        "item": {
          "id": "6da76352-358c-4d5b-b36a-252b8ce40559",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8323e6cb-3db5-4764-a3cc-b55165c1a699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814a56d1-f9e0-40f0-a04a-7a87af0ac3af",
        "cursor": {
          "ref": "90286d07-01c3-40ba-84ec-01948c5595ac",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ed5cb1df-9576-40e6-adc6-150cc00b49d7"
        },
        "item": {
          "id": "814a56d1-f9e0-40f0-a04a-7a87af0ac3af",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b3817608-ca47-4009-a186-f873ad56369e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0367207d-a3cc-4e1a-a650-64bda5cb7030",
        "cursor": {
          "ref": "c04ed536-287d-4e72-a2ff-05829b56de4c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "54372160-e34b-4658-8018-71489d562047"
        },
        "item": {
          "id": "0367207d-a3cc-4e1a-a650-64bda5cb7030",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "381d9656-eaa1-4bd8-b64e-786548b04d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6648f91-21b1-4627-8a89-bbfb4ae54845",
        "cursor": {
          "ref": "5e39a19c-8fa7-4441-b1f8-5064b38ee73a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "557a61ac-b000-4439-8eb2-fd6ecd0b08f6"
        },
        "item": {
          "id": "b6648f91-21b1-4627-8a89-bbfb4ae54845",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bb1e9f49-2015-4ff8-bfdb-9d6adeae68eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7285b522-e97d-4ea0-80a4-7ea22753e491",
        "cursor": {
          "ref": "0a4e78cd-368a-4c8d-b65b-6be5d2d5568d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6b635bbb-b797-43f2-8d9d-21a0a1521c00"
        },
        "item": {
          "id": "7285b522-e97d-4ea0-80a4-7ea22753e491",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "574545b8-5a82-4785-867d-d1c85885aef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471fd960-e59c-4256-81e3-e1d0fe92d60e",
        "cursor": {
          "ref": "9b93f1e6-0a1a-4f36-92b1-d584ce358ac4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6ea4d12e-a17f-4ec0-a83b-ba2fca3e4d49"
        },
        "item": {
          "id": "471fd960-e59c-4256-81e3-e1d0fe92d60e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0987f301-183a-44d7-a9af-4ae0c2e36676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3c63f6-6e7d-486e-b32c-372c47528a29",
        "cursor": {
          "ref": "21711f2a-04dc-44bd-94e4-acccd6458624",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5b3fb07b-6a58-41fa-9901-8d5f193fcc97"
        },
        "item": {
          "id": "3b3c63f6-6e7d-486e-b32c-372c47528a29",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4cfaf041-aea0-49b5-84f2-2baa6dfa4f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffd116a-76fe-4ae5-8e29-3f30b25ebe10",
        "cursor": {
          "ref": "1b8c234b-ea8b-42f2-b276-e046aaf4126f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d56ec086-8ddf-4f21-8f39-7292c44d8069"
        },
        "item": {
          "id": "8ffd116a-76fe-4ae5-8e29-3f30b25ebe10",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c9e13c03-47cf-4ac2-9c2f-f63cafb6f601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b94902-e6df-4f3f-a96f-80fdad9b1878",
        "cursor": {
          "ref": "c3922e94-4448-49be-935a-a0d76829f538",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "579e0af5-f0fa-473f-90f2-b9693381b972"
        },
        "item": {
          "id": "b4b94902-e6df-4f3f-a96f-80fdad9b1878",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "60816704-d37a-4f57-97fd-9860868239ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ab756b-8ccb-4434-a27d-b6145c985e31",
        "cursor": {
          "ref": "104fd636-a8bc-436c-80c1-f3e64cae7b30",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c1c62586-5729-449c-891a-aae9355feb1c"
        },
        "item": {
          "id": "e6ab756b-8ccb-4434-a27d-b6145c985e31",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "461d7bd4-4368-4fd8-b3a9-bf64f8ef25cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e822b72e-daab-4b24-92b0-88e664185cdc",
        "cursor": {
          "ref": "b63d56c0-f9e1-4d7f-a6d2-9626a25d3531",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2488143e-dea7-4829-aab6-731592fa4abc"
        },
        "item": {
          "id": "e822b72e-daab-4b24-92b0-88e664185cdc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8ff2de3c-e9b6-4b45-affd-0a097957c876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bdcfbb-4471-4316-9131-b2412bb9a871",
        "cursor": {
          "ref": "e2f7eb82-e2e7-4a4f-864d-e43d8d89934b",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2102dc55-0944-455e-8540-bd1ab30dbfa1"
        },
        "item": {
          "id": "75bdcfbb-4471-4316-9131-b2412bb9a871",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5ae2aa18-cb2b-41de-9104-52671af5c01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65612c8d-eda0-4ba5-93b2-3eaf311b0726",
        "cursor": {
          "ref": "db501e1b-9ca4-43bc-81cf-94363f3c0ba1",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9099ebed-0f61-4e6c-85a1-a933c486acdf"
        },
        "item": {
          "id": "65612c8d-eda0-4ba5-93b2-3eaf311b0726",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "698a967c-4a54-4485-833f-2914602aec43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631d8ee6-ea7b-4b46-9298-eaa1bdf71d36",
        "cursor": {
          "ref": "47681ae7-b5d9-4657-9536-b40abcb0875f",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "711205ba-f31b-4d50-ae3e-efd0ca114382"
        },
        "item": {
          "id": "631d8ee6-ea7b-4b46-9298-eaa1bdf71d36",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "13704fc1-dd66-4838-bb78-0abb9fb7445a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055234bc-2e38-47de-9180-0f412b4ebde8",
        "cursor": {
          "ref": "a4505da0-5b3b-4be4-9f43-227db0afd5a2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a4544722-f119-4b37-b7bc-0ab55c7a104b"
        },
        "item": {
          "id": "055234bc-2e38-47de-9180-0f412b4ebde8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "61602432-9590-411b-b22e-dde790ec0f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9204f52-6e06-4760-b02f-085770d6774e",
        "cursor": {
          "ref": "6a6cb608-737a-4650-acac-7e46e363dfa0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "af99382f-e34e-4fc5-95d5-f7edae3ec3c4"
        },
        "item": {
          "id": "d9204f52-6e06-4760-b02f-085770d6774e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bd4a120c-3275-42a8-a66e-eff5e0591ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa674b3-081c-4cd1-b367-088533b48ea5",
        "cursor": {
          "ref": "4e8c8d46-35bb-4f33-b59b-e8bdc5c148f5",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "994824b3-b83f-4b36-9789-2c4de59381ae"
        },
        "item": {
          "id": "7fa674b3-081c-4cd1-b367-088533b48ea5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e8d81db6-7620-4067-a493-dbce91f660db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e432537-3dde-447f-86df-50ee78a8e6d9",
        "cursor": {
          "ref": "585f5997-bf2c-4c6a-a11b-c050422f8a36",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4ff6456e-039d-4af7-9ead-e4566dff1a87"
        },
        "item": {
          "id": "1e432537-3dde-447f-86df-50ee78a8e6d9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b8aa4052-d3c3-4d53-bdac-8097f660ab8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6132f72c-96d2-4129-a05f-b07491396998",
        "cursor": {
          "ref": "fd9ad5b9-4c87-4d38-a173-dd717854ff82",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cedccacf-07c6-46ed-ae2f-8ae2070391f0"
        },
        "item": {
          "id": "6132f72c-96d2-4129-a05f-b07491396998",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3776f1ab-6671-43b3-9a92-eff0859c296d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf96207-0351-42c5-ae71-73121e029e1e",
        "cursor": {
          "ref": "3d3b83ba-6994-4c81-b969-76f80407128e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f55f53bc-1d87-4187-b1d1-ce4b9acd5e9a"
        },
        "item": {
          "id": "5bf96207-0351-42c5-ae71-73121e029e1e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "94407726-a6f5-4d47-a418-e4be42f7fc15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2465272b-df68-4c29-b59b-24edd93985b1",
        "cursor": {
          "ref": "e138a2f4-b850-4c92-b5c4-2ce4502eb16f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "cc83968e-8127-4026-b92d-029a18f825c9"
        },
        "item": {
          "id": "2465272b-df68-4c29-b59b-24edd93985b1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "96b5d3ae-3659-46c3-96fb-6f2aca29468a",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "77499776-db03-47b1-a374-53fe4213ec90",
        "cursor": {
          "ref": "72dd6552-8a3d-483f-8655-d85376ed1aa7",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9c1cf006-cfa2-4b62-a25e-477e6dbac077"
        },
        "item": {
          "id": "77499776-db03-47b1-a374-53fe4213ec90",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c47d3647-ba37-470b-8abb-1bc5946ea671",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "618955ff-c306-4f2b-8bfa-075e59b86033",
        "cursor": {
          "ref": "5ee94739-e710-40b0-9b97-820b03defff2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "aa30382a-26f9-4ae8-9eae-88ef61172f39"
        },
        "item": {
          "id": "618955ff-c306-4f2b-8bfa-075e59b86033",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3f9c7213-2eea-48d8-88c9-218d8cedaba9",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d521698-4379-4c00-8878-1935b8a02f2d",
        "cursor": {
          "ref": "52d3933f-0dc5-49e1-a3c7-c4f2804d6176",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9a1ba2f3-0a1b-44bb-bd94-24b33063ec48"
        },
        "item": {
          "id": "1d521698-4379-4c00-8878-1935b8a02f2d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "859c178d-e1c9-49cb-8778-b07cf7447ecf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d521698-4379-4c00-8878-1935b8a02f2d",
        "cursor": {
          "ref": "52d3933f-0dc5-49e1-a3c7-c4f2804d6176",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9a1ba2f3-0a1b-44bb-bd94-24b33063ec48"
        },
        "item": {
          "id": "1d521698-4379-4c00-8878-1935b8a02f2d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "859c178d-e1c9-49cb-8778-b07cf7447ecf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98952a06-965b-49c2-800b-7fa8b3ea79fe",
        "cursor": {
          "ref": "ccf1b120-6e72-4828-8864-856a2b27ca7a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "df77d0c3-5730-4dc0-ad32-e0ac9acaac7d"
        },
        "item": {
          "id": "98952a06-965b-49c2-800b-7fa8b3ea79fe",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "21d6e6a6-9f43-4dbf-811b-1d398825f4ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabfd48c-c3d0-4834-9478-24b105ff1111",
        "cursor": {
          "ref": "5a72621b-4ea0-4301-b5b3-f67dbc99ea51",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "01d0d1b6-dd29-4071-b416-dff0f7dd894d"
        },
        "item": {
          "id": "aabfd48c-c3d0-4834-9478-24b105ff1111",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "43c4eb29-c543-48fb-9694-1d4b1940708a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}