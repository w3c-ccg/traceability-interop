{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "db276574-fe7e-4c7c-9002-3215ee3a7534",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5b20cc9b-22bc-4484-a2d1-84b4d872db33",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bcf2ec04-27fc-4166-9fd2-a262c234b486",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "29304f75-c054-4122-858f-df56ad4011ef"
                }
              }
            ]
          },
          {
            "id": "d20e5d12-84fe-488b-96ce-d58a028eaf32",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6940fea6-9829-4950-926d-b9e2432e3eea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a1e49529-4ab5-4e02-9165-83da2d569ff0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6bcd317d-7264-49c9-9f1a-0c9a6c842f37",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "968d2267-8a25-471f-8aa1-84128b5029d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c8dd5ad-347d-4c01-bb3a-3c02b881df99",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f56feb9-8639-4216-a55e-a619cfb8db85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e6c2b0f-6e2f-49dd-8d3d-541fb05f4a9e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "afff28d6-e66e-44ea-af70-94ced49620bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c4e2ce5-73f5-4500-9711-2b8ec50738b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9bff615-8290-4e88-8533-4d34d6030575",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7384615d-657c-472b-9587-1fd58f92d62d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebed7d92-7e5d-497f-9c1c-a5ac822f5994",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7a50f291-d8f3-416c-9a28-02b589fde0ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83c62e65-64f3-4cff-b36e-0e47abfe4769",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2413dedc-1249-4095-aed2-6009455360d0"
            }
          }
        ]
      },
      {
        "id": "8090278b-4720-47b6-8b21-e4f163d8418b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f8a68829-77a4-4a1a-8b3f-00b7fe0b5a01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8342e46d-f4ed-45ae-a36d-c096148fb325",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7acbcec6-13a1-43f9-a54f-1073c329e574",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed2e1e9-bc88-49fc-a3b7-393cb16f4f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02c4fced-b246-43c6-ae59-019fc4accde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4538a7d6-51a8-4447-8ca1-e8b68d2aa72c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92b4c25-83cc-4dbf-913f-7a4b26c975ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a23407c9-4b2b-4d4d-bdde-87a4495b0eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f90317-c871-4a6d-88ad-5edac720918a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32bb3de-62f1-4d16-916b-463872a4e6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6682cf4a-6e83-466b-af20-cb3972c14683"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "961da03e-87af-4ba9-944d-18c1b92188f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3fb6a6df-609c-4e00-9564-bfb9802b5b56",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9721884b-bef4-4eef-bf36-197147961179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9989dedf-b0b8-4bf9-b5cd-43f7262a1acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d5eb80-f792-4af1-95e7-7743731402a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc1ee0d-aa4f-4820-a2a0-2eb3219a6a16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cbc51c58-f8bd-4e3a-8485-9a24cad209e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9efe842a-d5c5-4936-aa62-b07e48b68e08",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef195e48-0c8a-4867-8fb0-8afeea5eae0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3d851e15-22a5-4273-a108-4b43b4635df1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7da2f13e-4e14-4894-81db-db4e7c311ecb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "01894ef9-63f0-49ee-8133-413c2d2e8845"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "493942b6-6935-4a6f-85aa-82bc2ed774d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8278a22e-967c-4fca-87f7-c4bba9064029"
            }
          }
        ]
      },
      {
        "id": "c18cf8bd-a664-4cff-863b-2c62581fc434",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "db54318e-d2b3-4e87-89e9-862a075c6656",
            "name": "Negative Testing",
            "item": [
              {
                "id": "008364aa-188b-4bd9-867e-6a1aad53d68c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b1dbded1-eef0-47ed-a5d2-eaaba352cdad",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcdc589-44dc-49ba-8c11-f03b6d6883aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02271227-d17c-43ba-b7f5-14462920b50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576e5139-fb2d-4eba-80cb-6bfd92150a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d38ec625-ac98-43dc-b6f6-af6cfede6db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edcfa70-8974-4511-8bce-24b5d6e87043",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb791e8-7310-49f7-9b4e-5eb3ff8c60c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a14d29-98da-4ef5-8328-bff4fe796ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b095cc-5217-4174-b0bd-39025a5f2612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b30b970-e292-4ebb-9834-aa51c8516fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6461949-ca53-4ab8-8d43-a79ca3a4f892",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11aa4149-c126-4b38-93d4-fab7ac12dcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a345cc2-7b93-4433-9efb-89aa6daeab0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9af5744-f50b-4ef6-a5f7-290a50810bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4b4ba90-e6b4-4b8b-9710-abd35cadf50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213450d4-b51f-40b5-b5e9-748809477266",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26214b9b-6ecc-4cd4-8d10-08262e296dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87511a2-6d6b-4ff1-b110-dced3d0f7c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924c9639-a425-4122-a44f-28c3ac7a6851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c9b4b76-744c-4654-aad2-45add61b17e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c95cf6-ff50-4f2f-aaba-f855bfeca01e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9c6201-c91d-4996-a7fc-2b0a5774e26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d53c45-326b-4f0a-a42c-5dbd46ea0bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8001ca52-47a6-4301-8f8a-dc20f8117635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7ef4522-909f-48eb-ae20-1a5c4b86094c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86ee8c9-c986-47ad-a982-a7daa4386267",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac184bf-5502-4e2d-b8ae-81157ae40b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24fcd5b-4171-41e8-a8d9-73dd4983adcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afffaf8f-effb-4acf-8db6-1acf04a4e72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35a1fb37-09ee-449b-83c6-566229cd7a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a27397-e7fb-4e35-a951-3db16efac4d2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe51672-8844-41c0-99a2-7390dcb12ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d685f3-18bc-4a13-9514-f82c74abdad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d46919-d045-49fa-8579-2a73e0b48d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5d5a869-59a2-4cd6-969f-6456943e87f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27310f07-4ff2-4b4a-9df0-0edd8c3ba4fd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fef30b-d69c-44b3-89e7-343aebe0c38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b12a6d1-08bd-4c5b-b828-afd375901e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f975b7-d65c-4c32-a816-0f00c7a36f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfb635a0-74ea-405c-867e-66b4608ed11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38601d45-f78b-4c3b-ab4b-ac4a84ea8fdd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e6b669-4d51-4f4c-92d9-c83954b07bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1660433-b5a4-45d4-9c4b-7f5b643a32cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd8869c-2747-4060-afc0-4722b1f5877d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab96b389-73aa-4bde-9603-cedb472f8800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bf79a2-4e54-4c33-abae-bf7395c07f35",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a8e62a-d98b-4fbb-acee-1a99d861aecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d79bf6-6155-4225-aea2-78d11147b926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1300ba-4023-49bf-9d2e-dfa9f0e7b120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8814721b-5fd5-417e-bc36-873b1bccf3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab12522-b9ba-4468-8170-dff59c088515",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f523e09a-851b-4677-b9fb-3dff83432f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bead6b-bf0f-4cd8-bd7f-ab7a613b2745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafcf593-63aa-4b6a-a239-310f1b87cab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "827d0e01-af7e-4ade-81b1-2f061f5eef62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adcb51e-8cfc-4a6c-bf86-07c3f52bf1f9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ea3d24-2861-448d-a89b-eec3d44f4478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26dc4ea-5390-45bb-9ecc-36f03223e1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c63cf7-69bf-4a5b-80c5-e7e66eb3e9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1cb242e-c43d-4c6f-bd53-864f248ba0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2b61be-2189-4adf-80df-255c59f2f781",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78eb4f92-ff35-4f6d-b059-54878e040a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dcf5cce-2353-4d44-9b1c-5285601bcd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6788ad-9c67-4114-bfd9-8c24de553ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1246faf2-cef4-440f-bd99-8a3254131e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd74f432-d593-4c67-ab56-d98e4690a76c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ea3069-a540-4631-bfad-d03927539ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b25ced-8f9a-4589-889f-16e07f5991cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d33489-b708-49f9-b645-221a5d2ccb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a4b650a-bbc7-47d4-8ccd-9bac41882187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037bda64-6ee6-44e8-9063-6edd1b72ed90",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91c3f27-6279-462f-aab2-aeba7a08b0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c111d4b-dae4-4c98-908f-2f043b449827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0982c6c9-d865-4b8c-ac4d-8453cae938fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17c8ccd0-e231-418d-9c4d-2d507c6d7693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05ebd60-15ed-41dc-a235-adaaed3a7859",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ca79d9-4331-40c8-8eac-4122c8543f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3704c7-99ca-48b1-adac-b876bbb0e888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c2657d-3d2e-42ad-9260-23f5bd074566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14c7313b-e797-464d-b4d0-02b66de3340b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d95b33-b777-4ced-9aa4-b43bb431c789",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8807a9c-bc9c-4d3e-a60b-fb5ceceb3aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799db074-5236-4549-9272-4779a89d5e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da205d4-a021-4724-a171-529819b15eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62f59e5e-e0c3-4cf6-ae01-51728a701161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9071c4-d5ba-44f1-9ff1-c9eb56fc59e0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9124648f-a50e-4ea2-b3ab-f9b473dbf556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e1f92d-152d-42de-930f-2c229f152894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d7ecb6-cedc-4017-bb60-c6b577fafcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a5d460-22ed-416e-b78a-2241526579eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a74e5e1-6002-45ea-a0f8-a8cdcf177a58",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccf7991-1a44-4c8a-bbf2-39596bee6c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d160b54-12db-4cea-965e-4fea64845195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa10500a-ee55-46ee-b5a4-64b5352283c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59a743c9-740e-4e58-92d0-6e9c2c13402c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3def5ef-a2b1-44eb-a3c4-08b515d41138",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061044c2-7e17-4ad0-8f56-7f0648b84789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4970233-aac9-4fa8-aec5-b85b5ef024b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bc6e42-40fa-4e1b-8f1a-f68cdb6d74ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb7b24c-322a-4b47-a6dd-20e40d68a57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c53be9-e237-4b07-ad6d-5519b3f1e77a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044a3c40-1814-4ba9-9ed6-5e556431e292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcfeb8d-1a6e-4d54-8924-11914bead340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06dee57b-aac2-404f-9321-1496f43e0371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86250639-c0ed-4ee0-a3de-d273d30fb6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f1d4ce-7828-46a8-967e-a387abdc47f0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1246de5-92fb-4935-9a4b-02e5e110c97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5a2299-77ec-470d-8ad9-ed2eaf40fec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8103db83-efda-4179-979a-27622c398f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4573630-f3a8-4fe7-95a9-483512d1eadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf11bc8-1f9e-40dd-94ea-924c2d3400f4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8137fa-09cd-4c71-986f-62e812477477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea54b5e5-fa57-4611-879e-fe7eeea6bf80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fd22a3-5340-400b-ac2d-4579b5b866a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "893f8115-9b58-4ffb-8be3-7fee21d01c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427cf0bf-8619-419d-a5db-d8932f7c04e8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbbab63-fb7a-441d-b67b-0b03697f2b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182f79a4-6e09-4146-851f-d552011fe2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc395d7-c001-4132-ac60-f4a62889d70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7b0650-bae6-4a94-b646-b1dd7bfbbf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d10af4f-7214-4976-b5d8-9d4faca17a64",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24eea2b-9a0d-4e94-ae47-d2e9e949f132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc490eb-e1a8-4adc-9933-9cff768ee613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8149bc-a302-419f-b9c1-09518558f7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "150def0e-832e-463f-a4b0-42a71d3acab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1380c658-9ea0-4423-8ed2-d296f83c41b5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9634481d-eeef-41be-8630-bff63960f62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4605ecc2-0d62-4f6e-8e37-5258e937ee3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dbafce-2579-47e4-a621-5e40f44346cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "264ab637-cd04-4443-9c7a-061394dd1a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9f024f-c11c-402f-90a1-9aac8e823144",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe43e98c-ea67-44f4-b245-fb4694586e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a1b0d0-9f67-4e28-ba20-8b77a123c22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e668636-6c8e-4268-83fb-f69b8d87511b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "439accae-f022-499c-a8a2-324ac5c93cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d039f3-8fb7-4241-9e08-dd7e65d68c16",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d97db3c-566e-4d25-8fa3-cc567057f4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36ecf5c-de92-4cfb-b65d-4b9c268859f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd4a0cd-3843-4924-a5c9-031deb6ce160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab9a04b-dde6-4552-905d-1285b14df4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f284c5-713a-426c-94e6-d16ad49af750",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3af488-0211-4dde-83aa-07caf86485ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f90e06b-4eec-4794-9825-20fe1e557de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec4a651-6a3b-4a7d-99d1-7862d3a66a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f4ee9c-edad-40cd-934d-24d80fda6924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd85189-4e59-4b65-a5b7-a5b3120a2b1a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f5a325-10f0-48f3-a5b4-feb8938995c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f23826-c429-4fc1-8f4c-fc8a95678f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0815e6c-a2b5-48ac-8839-63b7ee951dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2950a7-4762-4a17-816c-68f68da07d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465377d5-be72-46b1-8182-b5336c7efddd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13803a60-2d6a-4262-92e7-4930710db274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47911f33-efe7-477f-b89d-ebcfdaab2373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315a15b5-ac28-4a39-8325-20762203d233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a420c759-e508-4854-93cd-32df2492cb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9b64a0-f967-456e-aeff-3e4092d7e3f8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3431334-e5ee-4048-bb6d-367de88fb3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5ac72c-24a9-44ca-bdc4-c3448119fcf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28eda07b-5730-42d0-8215-8e38f29d145f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb73f2d4-53c6-4ff4-bb59-3085ccb39732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77e5dd2-1b93-4261-bcd4-4ff08c23e32d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2420018f-e387-4a38-9278-c5636aebe158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648dbe1d-6f00-4827-b962-5d9df9fb0205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c49c38-1f36-49d0-ad4e-2e77f97d7eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a06c6bf-449a-474a-b428-b0051b28b556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d816f4-1806-4fde-b450-87ea968f32e9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b8008e-c9b3-420d-b4e6-6ca176cb1041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a00d9f4-841d-4cc2-af76-d2fa7ec38b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48b580b-132f-4052-88ea-01415bf4de58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "947a6395-3ff3-47f9-92fb-40d3386ed96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2534e828-21e3-4e0f-b121-d96c4da81680",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c982bb3f-7abc-414d-a5a6-89f592b6d8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7d33ca-cadb-4706-b80a-368a5cb7bf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542d7f42-c6b3-41b4-99a8-d0f062a91a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "192d7631-e693-424c-995d-afaa358c2cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f47d262-25f9-43b1-9ed4-587746155c24",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9bc44a-af55-4be5-8c1c-a57bb7ba2dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ee68c87-71aa-4376-8531-5c53778fb4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012f8709-022d-48ea-a391-e3cfa948c270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6110b38c-106e-429f-bed3-b69340dd573c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74a83d6-24a8-4be7-a84d-8a8652cf606c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1759ac-0e84-4b27-ba54-9fd1df7db008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3be8bfd-31b8-41b8-974f-23683a606933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfbed3e-7f75-4e61-a832-0a03efe50429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2dcee8-502e-4a5c-8afc-17eff3a7bf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2f6c08-ef08-4115-aa9e-38b1aa86bf18",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32f32db-0e02-4470-a3ad-c9d3e8cf42f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc54a8b-401b-403b-b69f-0852815a807d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd458b0-d401-4f1d-a71d-db1edb79709d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fef8bc-90a6-4d3d-b17f-620264c3eea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03677b09-a301-4771-a5f6-f4c290fb2276",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd308b6-75f1-4921-a104-408cb81db13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1b6f2d-66d5-44e1-9993-416591871494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b7df3d-bb48-49a2-b0d7-f8dc882f8dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec81545d-1256-4d13-9c73-fcdf73dd8bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5963c330-9c02-4900-b3da-f852dc76af2c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835e9fe8-fd0f-40cd-ba6a-3c851753554f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1132ac44-ede2-4482-83f5-fd2261016764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ac76e0-dd3e-44b7-999a-cdd3421660b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "45332228-62b4-4cc5-8eb5-c28cc818f636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab26229-4f4f-4315-b9b7-36c9d565b024",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555b18f7-8de8-4761-a066-c7bea97654ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b164583f-4c44-4f97-bb94-3d23bc918a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481eeb7f-27f5-41cb-9458-5a7d2ce51ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5a8afa-8588-4343-b8b2-ec4d4d991b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049bb198-ad2d-4112-be34-ebd85c69c19a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a756302-12a6-4158-b571-92ed7bf3b600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31aabbdf-2e21-4de8-ae5b-024a432a4ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba4eed0-e699-4f94-b6d0-add5a3187a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "adebb67d-2c91-4e6a-aa87-82028b087252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb754cd-8b88-48b4-9a64-1b7c1e5ec60f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebf7500-7f0b-4630-98ee-9289c277a195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d0c51e-d688-4411-9b22-d8cbd43fbdf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6bb14a-3123-4072-a500-ec8480eb9df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eee4973a-581a-456d-a959-ecf9878a0fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92f4ad5-4560-43fc-92f9-9f37edf2b1e7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a75c52-b903-4826-a04d-d5267c064008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c048f39-97f8-4fc2-9a58-2a3bc8865955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a0e85e-5018-4ccb-b480-aaa22a28f9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3562473-2306-4bd7-b1b3-fcce4172b918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d772d3-9a10-4b82-9b24-52136bb12295",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600d0fcd-61b5-4e0b-894e-8f6f037756f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423732e8-478c-43e3-9157-69195574c773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9ff00a-0443-4010-b5cd-c05b5121ee37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc3e64e-d9b8-47a9-bbbb-d7a96d06e5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cd8248-848c-4985-8f94-deb877857850",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1cd404-12a6-43cd-94ee-9d9024233229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdd7e26-5678-40dd-a772-5eb1460df1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87f4a61-7681-4f2f-b9ba-3ba82bc775eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a2be1d-e4fa-44b5-b9db-47de0c4dc959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219094b7-134b-4c25-b396-769a17728d7f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6021484f-5b21-42b1-9e85-65c2f71d796f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b10d431-37be-4619-852c-8984a5d4f0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9aa09e-b394-4b9c-b7d6-713de204e120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad7a0f4-c30b-4bd6-a856-1d09890d4aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8b7664-7aa7-4fef-bab0-6932aad36b96",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e83aff5-1f2d-4fbf-8351-65782f64783f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f02e458-028f-4e65-92d5-4565510805ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b033d08f-ff5d-459c-9f9e-ad32c2ed41b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "252b76f9-68b6-440b-92a1-844ae6c11fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654e1501-b9a1-4b09-a5b6-921150aa7260",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c5ea6e-211f-4c5c-8e2f-68acaf9369b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d9d514-bb5d-4959-81fe-70f5798c34a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b444421a-adb4-4797-9ffe-ae6b47f11917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c86d4fa2-83e6-429d-8fa0-5115cfdbb58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260b4090-a2b4-4db6-a6f8-af704ad2e9c9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adb9ed0-cd77-4d0f-af67-e55e52b28170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9499a94-eb35-4433-b8f8-173ee7b46826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9144b8-e05b-4fe8-a23a-243941b4413a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9687d22-f837-4652-ba89-2b57665bad8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c74b952-e1ac-4f13-96cb-83cd808e6b47",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c65e29d-fea5-4659-ac68-bb07f044658a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2b9c39-7c22-4ac5-896c-7521344cd879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dbce1c-c800-453d-803a-bbd4e11ab4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "066c108a-e511-4553-abbb-2e80eff713c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cae346-09bc-4fbc-9a3f-e62d8fa41283",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9ed2ab-b5e1-4ff6-a7fb-1ba95e932056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76985eb9-b274-45b1-97e4-d6d66992236a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7a4d0d-f5e7-43c8-acd6-829b9e1a1cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e9727e-c48c-4457-9579-63a721f7c3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b588d414-8f94-428d-b2bc-2439aebc3e8e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad68d4ea-2986-4ee6-b8dc-65861d06ebfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f588ef-5b6c-4bf5-8daf-ed5d4de3be4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a9117b-aa3a-45ad-b84d-59149ec57b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5519d9b4-5244-4693-ad60-62157d8b9172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81f5e6c-662c-4879-86a0-c5506f592125",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94fbfac-ae7b-4ff1-9c2b-da6bd34dd27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962f0df3-4824-4e5b-a601-a1d1856a4805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c73d02f-1254-4587-8f5e-94f7c240c191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e567ca58-5392-4425-8c26-80430df5bbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2dc545-9c0b-43a5-aef3-d03601990817",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b87ff2-1fab-4d22-a7f4-3735d132d3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73f34a5-deff-492a-b991-c76987d12044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69c321a-3db4-4fe4-b046-6eb8530e8e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b39c68-6eea-497e-83a7-27a4150e8d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9374f23b-e49b-457f-908c-b93a23388d8e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e847b7f-e856-48af-bd81-c9fa09f12437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3c21d9-0ec7-49d7-ba12-dc04620f0545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de004a5-fcc4-4bc2-8e4d-391f78829d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "04666316-55f4-4df9-8a8d-c452b6ab3e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2080141-de09-402e-ba0f-34b753668e4b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51ec699-d20f-441a-b511-44e16e688d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5ee5c9-a48b-40d8-8a52-8049d9bfa68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d4a22c-13e8-4973-8773-f5633415424c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6c50bc-812e-4a58-83d6-631a22120d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249bfa74-0bdd-4e84-a070-4a903c1f5cb3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266eb490-c9ba-47ac-aefd-85c5977fe447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42849bc2-4c04-4b3d-9da0-3a355018508b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cd9050-4928-41e9-8403-a82da66de88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f781da-5568-463d-8af6-c9024723627a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2634829-5b64-4e50-8191-584845292fe5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6eb1a3b-47c4-4abc-a2d6-ec0124199c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15801b93-d550-4ac3-8323-5e4ad7d1e02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c827dab6-7ddf-495c-bdfb-a8b4e022be94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "04816894-e463-45df-949f-f15aea7d8486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca931dd-538e-4f4f-b8d1-5157e757898c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba78a4a-6966-42d9-941a-da28b643d4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d15c555-1f96-4e11-a226-6b638a755389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30a2ac6-7541-416d-9a41-149c6f5a06ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b48c261-f8c4-425a-8e15-6f55cd262ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013cc02b-0dfc-4287-a305-efc4865bfa64",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e12d789-fe33-4c32-a027-0c9ede17622a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe77134-26ba-42b7-8f47-c87027bdaeb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb1df9d-3730-4511-8aff-53028dc62709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "71f62863-1a83-4e91-b5b0-351760c24a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d839f58a-802d-4a68-9843-5b821a0eaa26",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3916a6ca-5bdd-46d8-8852-cbd75aef0455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd90dc76-ba08-4721-a2b9-cfe446179caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f92231-a966-470c-a808-0710a029dfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "37428738-d80f-44df-8049-7cf3a2970c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0baeeec3-56de-4574-8e5d-599fabe44716",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a007838f-b405-4632-ae3a-e6b61a438dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b051611-c366-4f96-9cd2-965e805ba7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f46118-b411-4ed1-b388-09d5fa28b8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "687c9f48-b950-4b4e-b536-1b25598d3d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed6314d-518d-44b5-a844-4255ee74b76f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4792db-be65-4b48-b0bc-3dcb326bf800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e0663b-9295-49f5-ade0-c651098c9876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a92768-6e6e-4da3-bb4b-dca6402a9e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcee0070-29d8-423f-9c39-df1a09ce6efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbc28ec-2fa8-41b9-9b92-42e43b3c4a82",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b0fa6d-72a8-4ea4-bfe8-df3546b48b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de0da21-1416-4ef8-861e-d266acd9fceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d173e7f-58ed-4b92-b96f-dfb9d1d6e6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df68f887-4978-4aa5-8cdf-7a812183f5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f6bf7c-bd7d-44c5-b8d8-8e630c683203",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d115da-dac9-4169-88f0-67b6ebf324a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b34439-4a75-4dde-8a94-d44a8cac8a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c83eb34-553b-485d-b38a-9228d90ca096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac5eb6d-496a-4b4a-b99c-08a30118827d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61716a20-3494-4911-8d5e-4583c905bf3b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28850727-72ac-44c5-961d-443f3217707b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f494da97-036e-4f0f-b14c-1d6b8a229fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4192abf-c927-4786-9fb7-820628292af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4edb5b-6bbc-4d22-b508-9a582ffd9106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e115404-b169-4670-b36b-36c9824025c1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552d30e1-5345-4a1b-b066-8f03acdcdf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7baf0851-f893-482c-8816-82a1feb86bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260cf7a4-8ab1-44fa-ab65-15a9d311b453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "548210ee-d3f6-4b3b-84b8-bd77cfa14e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dd3abe-24bd-4a60-a338-b1f616ec2936",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822ff277-77da-47fc-b38c-dbf2c074c605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5a06ae-3a18-4e22-baee-90d83faefdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360b7993-3f5a-4f64-b537-cd438309e22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "049cb56b-966c-40c1-a363-f7fc38a20a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7402742-c029-4810-ae69-ff14b32a50a1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fca4a4-4d79-47ba-b963-5f06ddf31ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a6e96a-f11b-46b7-9134-7a5c47647e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0856fa20-7906-4890-ba10-6b1ee75beecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72e6c4f9-ce4f-40c8-a3c0-149880094754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5525ee-eaed-43a3-885d-ee7ec64f02e4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cda28e3-39d0-4f48-be5f-b8a19868e369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58581ba1-fb38-48e4-8850-d4a18a0e4c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f6e8dd-3597-4a97-8f98-ada3ac3c5067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a34c33a4-b2d1-469e-a500-02f81db37bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14235c20-c186-4317-a128-cfaeeab311ed",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acd2b57-16b6-424a-898d-132db704c234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1699791d-6a7a-4cc8-af17-a236123640a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328b8cce-eec8-4151-89b1-466ff70db537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "915fd4e3-3915-4055-af74-c2e78d674edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba738313-b252-4b7a-91d7-a8a8abe6da7c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4c688d-da34-4a9f-baaf-c1e346feb5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667d880c-4c5e-4962-9aba-365f5c25402c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b232e4-a161-48cf-abae-6ca28480ef5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e71432-a054-4b53-b180-3574582acb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5bb7d9-8a21-433c-816f-ea86e2cd8457",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8bb413-85cd-4ec5-bbdb-3956a03f7732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bdc9b9-de89-45e8-977b-133e15270027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa9f930-1376-4476-9851-04a0c51f4210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd05563-c159-477f-a725-42dd7927d02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03eee662-da6d-497f-94af-ef40d6c613ca",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f072ca-f0c5-40b5-a8d3-3cb353c8d0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922c97d5-9cec-4781-9e29-c597aa548deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5519ccd2-4264-4f31-aed1-1507b6c3997b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30987c56-b815-4903-81ec-0e0135baf42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b35c539-8259-4227-8293-8cc40419a6ff",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdaeb3f-b22f-484c-b22a-4780b241abbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7463636d-7d90-4e22-b4ad-07984c66bbf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f55af6d-130c-4485-9a3c-261198d8d2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe9bb1b-7c3f-427e-a3d0-47563ce3acad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83265eb6-c5ea-4fd9-a1ba-8f0d80e4ac94",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5510b1-063e-453a-b993-5228dcde0d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcb9824-b28c-4880-8380-9ebf2fd19ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a75a32a-7f9e-4242-a4ce-a5612fbbcb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15264ea4-5f70-4dcd-9741-d904238bf573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caabbc71-db03-4a8d-a49e-881722efdfe9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3d1b18-c265-4094-8af4-e8bae67b5500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc01b1f-49c7-4819-8aac-c51ffc34b1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcba000-a528-49bf-a20c-48badb5d55e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46e66e3f-3447-47bc-b275-bffa6ffdd659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42dcae12-493f-43b6-bb4a-36114bf82f89",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f262fa-1331-4a23-b346-e1e812704337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fd589a-f543-4668-ad11-bacd3f8c1e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9da07fd-4be3-4cfe-8465-d0fa1ca5aaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b254d535-d339-4daa-9d53-274f67c4fdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a752ec-045e-4517-82f4-26de39d84a8c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb389ca5-1521-44b9-9498-cabd87fef0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e7d3e0-542b-4297-a8e7-1312633faf82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f53e548-ceec-4f23-9006-acd536069e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb5ae34-de7a-4ead-a030-b260f562be4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e180fb3d-2ee1-4b91-8952-73f5aa2c783c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa9ffb6-5bf1-4c34-8557-cc31af88fd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5c2b4d-0313-4560-b846-1fcd5d5fdce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b56d777-85ec-4d6c-954e-5aed633273c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20b160cd-1adc-4a80-8e5e-45e3c5d84335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d220066-008f-4a68-9c70-93e0a20ba35a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b11eae-360f-40d3-bc8c-002aa8afdfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53d533e-8fe2-445a-895f-935ed070ddbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e54d6d-afa1-4952-a334-0ac4dd6b43f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae356fcb-e16a-48dd-ac60-dee141a05e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c37e67a-d0ae-4319-9c1d-072a7e396c18",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9538fc91-e211-4701-bf78-44cb28dda53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b65e4ee-2788-4af0-a6b3-c7f65d13225b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac438b84-33d0-4631-ba7c-c11dbf58b855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0d5c50-3cc8-4e2e-9610-176388ecc769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744000a1-06e1-409f-b9a8-9e6ffeccd115",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15018749-3e8f-47fd-b0d1-d433e5680f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4d4f1a-5a4a-4e13-b047-dd5b46c12f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9134a7be-b354-422c-85f4-878556382707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5de087db-5818-48fd-945b-5ecb0dfc4852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b29865-df20-40fa-8c65-44a7e7942491",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b34338-9b9d-4bf7-b7e6-bca1128429ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9ff472-488e-4da2-a8f7-c14251a98a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597ccfef-ffa6-4a4c-af8c-acf068d51a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "edf29fe1-17ea-4e85-b88b-ab720dd1946f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f7779f-2651-427b-9dc7-5db50ed97d76",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e074729-4d62-4aa7-917d-26400337196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7717ba12-21bd-4948-a85b-b0477cbaaa52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd1c9d9-cbf1-49bd-bc79-674d45c74a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a135071-9131-4224-a0bd-e93681990b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a8e321-defa-4623-9f4e-f7eaadaaf216",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd710c0-7808-421d-b283-d3c3d45e6520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030798a9-430d-420f-a220-2cc5677d94c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2890ef97-4c5b-4979-b8fb-d7b2cb018216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "516c06bb-3371-4912-9a50-5116874d95ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf87ac76-d7ba-4851-8f28-42ef9f658514",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00022188-7b2f-4f76-a2af-b9b424e90d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458f68ed-4fc2-4eff-b00e-e84594a9e969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a45b8e7-21dd-4f99-a343-769a4d215b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "381bcd67-3c54-49b4-abd8-636c454677aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521f88a1-3049-402b-957e-03b0b7b34e33",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33602325-82d0-4dc0-93fe-60c9e1b298ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf064cde-9dde-407a-9161-17277d6a45e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd5240a-d27c-4f13-ad22-07fb35908d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e28c282-a914-44db-b10d-81a5f875bf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b118f4-17b3-4494-951b-905abaad6682",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc49ef39-8e07-44c3-a3b3-2e22e8ec0adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74dc81a1-93ab-4562-82b0-6785dd6bffe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d31ec30-c92d-44cb-8bb4-db28ec8c2856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "db028976-dea4-4909-bc5b-b251f583c731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c43c65-b2e3-48f8-959b-ebd7bfbf13bd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6667c7-8f40-43d1-929d-17953c6d26b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef423c5-c8a1-4c32-a2ad-f036ee620163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286c19be-5308-4860-bb79-c3bd3d04c8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb5fd6f-5aee-4ecd-b40f-a73f0f2c4b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c63e09c-8194-4cc0-bafc-7f89c8e25eb2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fae0378-d9ac-4710-9fed-1fca841e93b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c73b6c52-c089-4dc1-80e4-0987953007cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a19e76-220e-417f-89fe-42f9f1f5cda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "637106db-bafd-4413-b487-71caab948f85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17e7f75e-79ae-42c8-920a-e293c910c3f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f6f63c2-a0f4-4dc6-a249-0c7118d7bc81",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68321c99-9fd3-45ab-8292-7a5946ebe1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef52f7b3-b4ad-47ff-b071-4f40ec23733b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bd2c97-36f7-414c-80e2-a8421ffc95b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef49a5b3-2c64-48bf-b1f0-ca8b8d74b34b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba74936a-511f-4b39-95f2-b7b12637c291",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ebac72d-a9ff-4f49-ae79-dbab06d8fb52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8dbbae7-513d-4dd7-a159-dc55737b91a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5245ed4-394b-43eb-9633-0637ae8f826a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f0698c4-2287-4d23-8f6f-7479dd39a8ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "179fc0cd-cb9b-408e-93f6-1cd5dace0025"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a77257f3-c267-4f68-9d1b-5826479309c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba7ab5a4-8b92-4b87-a8f6-13ccda9d6457"
                }
              }
            ]
          },
          {
            "id": "de448576-f914-4946-85b4-79c05b2ee521",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b39b31c-99a4-44cb-90a4-1f324ab49caa",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3a3e3159-6d4e-43d7-8176-d2a02e3821f0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f473cae-48e5-4144-9f67-41c34d4aac1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1dadbd09-4602-41b9-9cd6-f398c5c31eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed75e27-d57f-4ad3-b918-ffbd6441485f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b5c331-49c3-44c5-b4c2-c0928919192b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b61092f-540b-4c9a-b19d-41835ef3e0aa",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d23bcb38-65a7-4525-85c0-24fd5b7fe79f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "428b294e-26bb-424d-aa74-2c287e47fa57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc282d9c-f66a-4498-a15e-8fed6eee5e63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53399287-e5cf-4837-aa81-8ecd99043752"
                    }
                  }
                ]
              },
              {
                "id": "12cc080b-5ad3-4f4c-b27b-78f91ae4c7ff",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0506d8ea-d78d-4807-9eb3-b1bb32778dcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35b6b606-3591-4e71-a3e6-bfd4bd7f370d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22ef218d-af8d-45fb-8b9f-33903a43450c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77c545e1-12a8-4f18-83cc-7b6ac674039d"
                    }
                  }
                ]
              },
              {
                "id": "7c80beeb-908b-4060-9941-087499073013",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68ad05fc-4366-4650-a3ce-94518dca705e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab619e39-b861-44fc-87a8-69e983d56886"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87594259-5ae4-4e7a-b21c-b100e193a7b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5849752-339c-435e-98d5-f12b89fa189d"
                    }
                  }
                ]
              },
              {
                "id": "698e5723-699a-44d7-a03b-0bc51a7fe14b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df01cb3e-012e-40c2-9f66-e06c696db9f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52580d0c-019d-468a-bd7a-4df3c1114a24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fea5527b-0687-4378-87dc-6f56e8e620a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "64673436-192f-406f-ac6e-bfab515c011d"
                    }
                  }
                ]
              },
              {
                "id": "23741988-6400-4024-b40e-4303dfd454b5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8221ece1-43be-428d-a7d3-7319dcdf6352",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b530558b-7082-4a36-b537-ece2e0aad6c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33527c2a-676f-4d50-8586-cc63370efafa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9d2c8af5-8dac-46ef-b476-f1469c27b536"
                    }
                  }
                ]
              },
              {
                "id": "4ad2ee34-d93d-4956-bae8-971edf2512c7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a73659dc-17a1-44b5-9456-449216c1e8f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5667154-cb04-445d-bf0b-39f3df343652"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "064f463b-f802-4c21-9f3e-57d1384e2a27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6cc4a6e6-71b0-4582-920b-61708211e864"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c5783a9-8b5b-4b8c-bd3c-726dc3c062b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b8d2777-d2dc-4961-95d1-607abf90e0fd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e57ccab6-4697-430e-bd88-84521cdf0616",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "858dcc82-90fd-475b-94c0-18f3d5d3f368"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "665cd117-f04c-4954-834d-bf50e26f4ea7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fc54c219-c8d8-4ced-9119-758fb74aa78e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54eaef6d-38db-462c-a4ca-e62e8a606e7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "569f9ec3-a296-4682-b7f3-d6d51d6c9439"
            }
          }
        ]
      },
      {
        "id": "2207807d-8e49-4d11-85f9-50bc76ef88d7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "80660ca5-68c5-4649-87f6-ff18c098e376",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43d4f7c5-767b-4af8-a055-d4a0d90dc003",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "390b0552-2d7c-4d7c-9d15-c9e754ac4760",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7961fa-fb73-417a-a007-dc64503566b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1917432f-cc85-4eae-a0bb-faab6bb56e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcf5aab-ed92-466c-9f74-13114d568665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "73e06092-76d3-4938-a5f4-b7833cbd4d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63abafa6-be67-43f7-a8ac-7ce691b8890c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641b63b7-3be3-489e-a3cc-e65c6512dd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd16482-8c56-4d9f-a5fa-e3c2e92da41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee05a3b-9c88-4aa7-baa2-881e9c758620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a329fd-0004-402a-8947-d2e6d19ec9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9045ad92-72e1-45b2-b0d5-ffa588417a6f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52438546-6f21-42a8-9633-021d8438472e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d500d8-fc48-4136-bd87-0ee33aadc57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bded065-0079-4792-ba44-0c662c1fe31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bb3b78-8b32-46b3-b7c4-fd79f5f78a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b78463-ff04-4a2c-b068-fd8c25a6d53c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d739588d-3d56-4422-bd68-4e6b3fbf5fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c57e92-061e-4c0c-8703-7d7fa6cff1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78463903-e207-496b-a284-609088265e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0545ddf4-bca2-4dfa-8427-e0285f43cce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47dafd5-93d7-4be6-aa3c-94facd9687ee",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5226ac-a4d0-44a8-ac5e-3908091fc778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187f8ec1-6461-4cff-8101-8b4ba6a7d8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157189fd-c899-4fcc-8d02-01708f83b543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f1f129-00f9-4e0e-a369-482ae44f335b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f535342a-1ffc-4960-a95e-ae6d44e85bb6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d94834c-1658-4a44-a044-923557399d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44749a9-c396-41b5-bb5f-affd2a76286f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e3acbb-23e9-4411-93d8-9cdebcfca883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41c451f9-9076-44a4-a26a-00c2e755016e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bc791c-a349-4f04-b57d-d460eab90459",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351be965-2df5-4555-959e-151488909cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0650a82b-0e8b-4c30-afb2-862db4b01f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d2b8a6-33ff-420f-87e2-c06ae689a0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "67179e77-7591-4f23-ae33-fc3b26bc9813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7894b5c9-f9c0-42b1-9bd1-342ffdddbd2e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5058a944-6308-4a3c-95f3-0c745ae2dab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607609b6-f700-46b3-b8f2-f6bdcd8e1def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3f9f4f-c297-4808-9562-0c02f8becffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "830ed910-f347-4d74-96d1-4c0b27207d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175e3dfd-81d9-4061-8ffe-b5f576b65809",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017b200a-510e-4576-8e19-196a195d73fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa9ad51-3677-4d8b-8b00-2c455a3dde41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84a2b55-db4b-4700-85ec-ded4880820fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aed4eadc-2e3b-4fdd-95d0-f3779a145eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265cc440-27a4-4b46-b2d1-dacef371278d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe747b3e-b788-481f-8e7d-761ac9df8e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c724703e-1f4a-43e0-9ffe-e772e003161b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f6574b-d407-43d9-b9f0-d65e2815ddc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f840110-a0cf-4f30-990c-15300d8a1d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82421918-c9b0-45a5-a929-89f4524799f5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970daa1e-946e-4a54-bf87-a6edbf44ca4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd069048-e46e-48c4-9738-a994a9e0368a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bbedd2-cbb2-49e5-a510-e3e8327515cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "58dd3a52-c4bb-443a-877f-7065a76d2f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829f6253-d7d3-4bef-9985-1970090e12c3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf08da04-e71c-465b-9dd6-1b95dce0e94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f7ae08-fe93-4246-886c-2e788918dc30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99c8d8c-200e-4eec-95af-5555680c22b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d26ff3e0-4af5-4c0f-a8e3-2868dde3b02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cb6323-6ce3-4876-8e0c-dab5e8a5e1e5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b717b53-292f-4e97-9868-75d5a0f771d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a328c4-bf2c-43d8-b8e0-9211e98cab14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80fa239-31e5-4f2d-b32a-3b5563de82e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3476284c-f39d-46cb-b438-80f84a54bf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422e85a1-a644-4c11-a7c0-8166a61f0377",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b9559d-62a7-4005-89fe-c663c35c24b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03a3817-14d0-4eed-bc04-1f888a393472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb2b5ab-d4b4-4625-9694-38371cc3bde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f306d5f3-a194-4731-ac9d-f563b6e286e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad516c39-29e0-4945-bb6b-b23ca2476d20",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edf35af-3023-49d3-86a5-fa01a74cad51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a179d5c-c581-4239-8b61-26553b5581f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91fdae8-7cef-40d9-a250-44634b729553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1dea0f-2582-461e-b24a-1eca9b44657d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dee7ec6-80bb-4e2c-9662-1e860c201eb0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b31bdb-2c36-4292-93c9-0d8b6d7b0046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db171e0-26a3-47eb-b311-3521e4e13ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d4fc1e-ba5a-4970-aa91-d2e5ef37df57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b54e44ab-8f9d-4abf-aafa-376b034ede3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510f85d5-336e-420f-9a91-34c646655097",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85c9fb9-7e1d-463a-9deb-ca866e262661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b98952e-d6f6-4fe4-a3d7-4d8794412506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa54aff-38d6-4e0c-af55-56080748ea23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da886d0-c83a-4b53-b4c5-125f6347e8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7525f2fc-be6b-47e8-bee7-5173f033ea33",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f03e87-198a-41d6-b456-d7c71296a9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e78fb40-63df-4c48-89d7-67150943a5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0288e5-d771-44fa-a707-d704762a3c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "65742c98-d634-4982-ac39-de8701c02623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed56fa5-9145-4995-95d8-53b8bcce9f6d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddafc58-5394-4787-be15-0bd5fcff1537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10f2219-a49c-4057-95dd-82ae6e915f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f9cac4-dbf9-4bd4-82e2-84a73b9c1de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8377612-8e93-43e4-af26-bfac800496c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6425c86-d1d3-4439-9edd-06f63074b656",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa00018-6faa-4b47-872b-0027b9d00b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33d74c9-9629-4357-8295-f2b126ddb159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef8439a-4929-4bf8-837f-94a7de60d6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5a22a1-f2f5-45d6-8b75-7c6e2b59f1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a4c10a-2e4e-4f39-b70e-271b7855eca8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a9f32a-1f18-4d5c-b86b-e879884a6c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f8eee0-4678-451d-8763-627880bacc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472af11a-3dc8-43c8-8b9e-9aa8904858f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "529339c3-a29d-414a-8438-3d73ade482ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d0d28b-93f1-4f94-aff8-42f43ac8086d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7311fe6-5207-46ff-a627-5b53d4138f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5434b5e9-1fa1-4581-a398-b2ddae2afc6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44be403-fe42-4f67-b5f6-a154767ccc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "982882c4-4e20-4aae-b7ad-54f1941bf04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9d6bd0-864d-42b4-bace-3b009e8bb3fb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae23678-8303-4b43-97c2-999f2cd66520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8081936-f70b-48ff-93a1-47507a49b8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa703787-b257-47df-85e2-524eac1a020c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc65151f-3bb1-49ff-968e-891aeb9a05ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085b5ba4-ad7e-4858-b7bd-20fdf142ff68",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3b65eb-6e95-44c6-897c-ca93f04194d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75510545-64db-462e-9d3d-8f09bd92f970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed5df79-400e-43b1-adda-253bdbf42162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6198675f-36b4-45f2-9118-f53c48cbb533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d626cce0-3488-44ac-a90c-f74a76dc5d6a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27cc3c3-8a2b-4d62-9c80-f0f4e5369515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed633426-4545-4c52-b53c-ec5ba19f53c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4987710d-c256-4167-8127-327e944b85bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e89e75-4478-46e1-8a70-acc80d337521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c2dc59-f89a-417f-868c-d3d2bd5927f6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226c7bbf-fd43-45eb-b870-c16edebb3cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194f2685-ef13-4501-99d1-9f7df32e9e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308b0184-6b06-4faf-bc57-cf5374d21608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21fa6024-1f8a-468a-b2cb-b466591534fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19266ecd-0116-4634-af9e-ed35e6b43dce",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406067bf-8e35-4f96-b1f8-21fa920b672d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d53a376-ae14-4186-a2e9-04a2cf7f025b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6a71d7-9ea6-4710-a273-e82b5259e4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f49ab10c-1293-43a1-a86b-1f8bcb2f685b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df23b721-2195-4a53-8fba-3dc1c5be41fc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f78323-1aee-4316-ab81-b3476d3d87b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c98d49-c978-43b0-8cfa-d50e79c9629e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b5acfd-9929-4033-a7fa-6468e62b7876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e340cc6f-0bf6-4174-8acf-6f98ebbfbd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4539b2-4d49-4204-8381-0fe09d99b674",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f51053-2e57-41c5-8a21-c522fcf1af0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d162e4db-bc81-46cb-8495-6ef4271052fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3405a8-b8c0-4a91-bef0-36509c684ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4107ebcd-8dbb-4a45-b977-c7ef67071ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47b404e-f0eb-48c5-b087-f7a40267e12c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f24ddff-cd4c-4383-9a7a-3b50f5384f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81be41eb-b31f-4bdc-8268-5c2dca80d813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e217b1f3-bb40-4387-8d70-349ae7c0570f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9177ba1-8376-4290-bcf2-bf72593756f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906c5e04-a5ec-4d1f-bde0-2b6213238594",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0419200a-402e-41e5-9348-4fc89bb3a090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6260ba8-5e93-49f7-a59a-2aaf336f543f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1168fd40-0d02-4b98-bb99-a21b277963a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0773ac-79d2-4a9c-b8ee-7b186ca9613d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3970fd-e808-4e21-8e3f-531a08953c5f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726cf64e-3a0c-45f9-925f-33820915adbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7513f605-3b4c-44df-9db7-59000e46c52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9465bcec-fe55-4952-a8ea-6cf7a9dca742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dccf5bac-d184-493c-96e8-dcf9b4ae5e2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6599ecf1-f4b5-476b-b637-25caf5b7efeb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9353c571-d81d-4be4-a834-ca4bb1f46e63",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9ff222-d19a-45c7-bb64-c64b10ef5808",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "30d4a09a-b86f-4986-b97e-ba7a5eee201e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bd8349-dcf6-4817-8abc-64ab03870dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1d72445-ea5a-48c1-a012-2ad7afb3fe47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76d8da33-cab3-408e-bbf2-2bdd05d8df8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edfa4d81-6bf5-4252-8481-0eab30fa881f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee118bc4-17b8-4237-878e-1b16ed675ae5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "297e2243-fee0-40ba-ab43-e1f727dde1f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86a0e877-b883-4a4d-976a-786097481de7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bab1d298-d8cd-4df5-878b-f965cbbcab77"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c97dbac2-8599-4a61-87c1-06931a25f4f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "184dab25-840a-45bc-9c4b-8d85005b043b"
            }
          }
        ]
      },
      {
        "id": "afd749a2-4382-460f-b1a8-4623a2d102fd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "90e3272b-6f9a-416f-9265-96c6164c4642",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76cc48da-9e3d-409a-9641-e8af9bf1f6d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6dd2a34e-d586-418e-a4e3-4fbe10fffc1d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1009e3aa-99a6-42cc-acca-e0e17a251874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e761aef-802d-4c9d-bb07-f1706bfe4c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6359195-d7c5-42b2-9c3a-3839ca01a09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "33db3c64-23f4-44b9-a0a6-932422d6784a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4ed5ff-8212-485c-ac25-45784f569ddc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730a4950-810e-46db-8af0-c813e4a66f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cf007f-31b7-45e8-aea9-b5049db31bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dc500a-7b33-40f7-9109-8893cfbe7ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb03094-8e35-4b1b-a841-33990877f4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfa3a5e-0ba9-4db6-9131-5b37b2d24e15",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b23bd3-bfd8-4d04-b0ef-447b16f7d413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1e0fca-4902-4c96-af66-e252b96a8b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401f3222-851d-4e55-9f2c-bb735c242800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e6e795-66dd-4f86-87cc-0f8f75cb88ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80e601f-632c-40d4-a419-74c156cddc0e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7081a3b-bfa8-4122-b59f-1235716ca143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082fd136-3147-4e02-94ac-9960ab086896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6407c9d-d492-476c-93f6-0793acbcb009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1459040-9b9e-4bb2-b27b-650a5ceb3af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0059a1-84f9-435e-ab31-155d8c2eddb1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b14db09-b5cc-4c7a-a420-ff67fa477460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefa8ebd-c915-4970-8f26-ad8e154508e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8cd4d3-6459-40a3-bd54-5e4ac401e3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5759da23-f27e-406f-a708-7540c0ae569d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b8bef5-ff90-45d5-afe1-5ae88982e041",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf5eec0-8eb8-4892-9921-a3a4a3e95d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4bbaad-a5ee-4b17-b173-d0ce42944ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082a4cee-9e7d-4e42-9b6c-d688a963e6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ae62c8-148b-4596-9fb2-c6faeaed3350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9753a16-bc75-4152-9dc7-dac855ce2ff4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0595357-d3af-4ec8-bdc2-f6dc0f89f10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724180fe-de35-4c1d-b404-fee9ab836f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd57c40-7225-49b1-b745-b01382195bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "71eddc73-b36e-4e09-9c29-1b333f46dc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0235d8-da06-442a-a3b2-351e1ab825b8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48476d0-5e13-40bd-aa6d-ab045e7510f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfb1708-888e-4026-8bfe-dcedc578c51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98b7eef-0fbd-487a-a926-17c7eb0ca8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c96d752d-788f-4cbd-a43c-f40dbe8d8cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d174fdb-d2a5-4ba0-9b95-ece602ecd17d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b497d7-4407-435b-a224-c4290a7f63b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee0f191-3bf1-4a3a-b9b0-46f22fe0f916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7d95ea-71a7-462b-bd5b-ec0c10539b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1fe490-0eb1-4b1f-823b-a5d40d3520f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85be8c25-090d-4d0c-bf0f-152092d83f1d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec2ff09-e4c7-4a6e-8346-8d12fa9743ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65150b22-23eb-4338-8310-cdb77343f3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9584c88b-0730-4e20-a253-c8a2208ffd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e43287c7-f324-4ef1-9ae2-2844d77bd5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade68c9c-ae3b-4f03-b058-5a08ba801975",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a105c7f-a0ff-447c-a76c-4195a771585b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b571ba10-b8a2-42d8-bd31-8a88ff8f50ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c626db60-af36-48ef-80a9-99e1225425c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a47bb1c5-0d23-4d7d-9d39-b146b2c04e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3861765-de47-49c4-b239-bbc966c69ab4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c305e5-420e-4f40-ac4b-6bd13453c589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d5b3b5-0dce-4b35-982c-a86b4432f1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f866f352-9a1c-41ad-8545-58cef15444c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d31ea49-9d74-4258-bb19-b3d0de721df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb7313b-0661-47fd-8a89-36302c8132ae",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc123f1-8c8e-41d2-9f75-7452bc2a4e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4eaf66-3d5b-4b57-baa7-e5081fe1a3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309906cb-50c2-4851-b617-d99dd84a7c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e01e5aef-5f57-4a8a-a882-520c823ccd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d5ff7b-f9fa-4be3-80c8-8642f64f2ad3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11a6fbe-481e-461a-9c39-8e7908cf39af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c435e2b7-140e-4baf-b1ae-d0ef83147ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12a5cdb-0bb8-4004-af40-c8899a665105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c55d920-aba7-48da-b3b7-4bbc5c5c1938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce728f9-6950-4040-8a46-34ec964197b8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df9c60e-9e10-4044-8c50-8330849077d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19f56d5-7585-4bd7-9fa2-1c42c4029ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac350692-53c0-48e9-9bda-8999aefa89db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc742300-d8c2-4c22-8872-1dbf661f6846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cae2a6-2ac4-4a3f-b2c0-a7a21b501afc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb84d31-edd1-4317-8dfd-06480269fd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c6f1e2-fdc8-4f43-af84-095e6d18b695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf40e30d-76f8-45c8-b209-938319149cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce263426-5b89-4ac1-ac63-6adaf9f559df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1c4ce6-9472-42e1-8b01-6ae5733d5993",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba222cf-348f-4024-9b7e-e6bd6591c0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2902ca-099a-4999-939c-4cd78af5f7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdb0761-3822-48c6-b3f3-da2ca9450b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "98e794d3-0c80-4c61-b547-02f10b521e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8905d23-4a23-4b5f-ba8e-3365fa1e8e61",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048d7f3b-d396-4f0d-af93-3d02ffa3aa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41145f99-2581-44d4-9bd6-db9a91379082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7defa214-4232-493a-9ca0-d1915aab1320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de901e58-e4fd-4a56-8b4d-8da552227e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b12c401-4720-4f6e-9a7b-29269f19f0b8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e130b1-69ea-47b4-a80a-bd19397b572f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf4baa9-77c0-4f9f-ba90-8edd2efaff5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3668bd5-6ec0-432c-9b0d-c1d0e4aa12d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "601cdc1d-0da6-477c-9f28-5d20824afd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e41d17-5462-482a-981c-31b69aff1e03",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae81974-d273-4918-8751-62f16db68999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385a96bc-9c58-4ce6-a146-275f1d02c56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077e8936-34fe-4e31-b600-10489c52ec14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d3f11a-2e4a-4bab-b0f6-64b70896dfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74480c3-f5fe-4da3-ac73-64f7a3fbfd1d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc57381e-3302-4734-b710-7aaf558ca12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6341f4a-7280-4f20-a870-1662fcf95a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e9c7fa-4613-41a2-aece-733bcd3fdde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a614e3c-bd3a-429f-9a07-c9b2225c3288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0733c1b-5675-4594-81fe-0be110feb7fa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02995030-b099-4562-9c8f-168cc35dea5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f2b71b-c4c3-4d77-b624-8f280b0142fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f66b32-edcf-44df-aa9d-2f80909cdd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd745992-c839-416b-b870-0d3ae93ef2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf85120-3267-4bb8-8bc7-cd2636d1c199",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4256fe44-1530-4bbf-8739-2628b9c86e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd08193-de9b-48ff-b46a-f60ab366d7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dd35e2-8b0a-4bb2-9d52-6b0c821a1156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ce5f07-0e56-480c-9f64-22e0449719f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdff125-6b32-4a4d-8530-0d781461c2d9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec09cac-eeec-464c-a120-f6da4db0399b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5f70f3-85bb-4fa3-9cbd-315cc18c8530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411f441b-9b02-4242-9109-430793094d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf598b3-6fa3-41ac-b52b-16ce692b42c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212eb1b3-05b7-4440-aef8-ae82a2d8f11b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da8465c-c9d6-403d-8b2b-74838414941f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7aa9535-1649-42dc-9583-13c0a8c10c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47c9232-16e8-458c-8eb4-e56e90afb566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a315d39-e958-407d-b4e0-0f9c13de7b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b51148-5d5a-4e6a-9d5f-b24186bc4979",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e8c3c2-fc22-45d4-85d9-ae43c06d5dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358918be-f2d3-4e57-814f-47e5ebf9dbab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7dfcbb-d6f2-4aed-a039-7014c482ae9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3f6c55-9f98-45a2-b3f5-1b582668df5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4a9406-5f08-4179-8f82-f05682fdcefe",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075a1977-04b7-4bb1-9ef0-5f888a1a3671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af60ac8-de64-494d-874c-6dd9c4befb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5f9b5c-d953-470e-a79d-b9c478325b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "961f915f-8c99-473f-b4e1-15c4a5e0812f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f27a58-f3fc-418b-ace9-49fa0a717d04",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4227a2-ef95-4077-b304-36d80b67c867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38de676-06e7-4743-8384-c846e68d2c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2293ad9e-9c4f-423a-aa49-8dfa7787208e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45e327dd-a110-4d65-9737-e2d97df8fe9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a71339-d038-4330-931a-a1a6e4d860d6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6419ddc-61d4-4ac9-860d-4bf13a7530fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97efca3-e480-4bd7-9500-2756df3aea58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20262d1-e72e-43fb-824e-ae7832b2fdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c997d6-2944-4fd4-9299-83fb81e056f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9502d820-f534-4142-be4d-8545518a6c02",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47a752c-524d-46bd-82c7-361dcf3445df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74b02e9-e6b9-4906-9a5a-20f6cd6cdf31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a5b91c-6bf0-4fe6-a7f4-600af4ff31d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5032e1-6430-49ae-a54d-d9dc84b2e90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b08648a-0ada-4c21-a2ad-4ddb55eb32c5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf80d63-9b69-4249-8ad9-4ec19c0dadfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64a57fd-47c2-49b3-aa00-436b1ecf1b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4731a67-ade2-4dc1-8926-a9715cee00b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4ebb00-b211-4ee6-b620-d4c23525a4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90995a4b-3423-43e2-884f-8ced94366dfa",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08e30b5-8557-4413-a401-a6b50fca5b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1afdb3-2e93-4f3b-9972-cf6a2be70ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548618b2-a7a0-47e8-8002-b0f94c6e7eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66e419fc-af6b-4dfe-833b-d48d95bf456b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044224d2-16cd-487a-a62b-3702b10ff976",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47adf329-98f2-48aa-97e8-9b213f2e9fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059fa391-b761-4a8b-ab05-30b959890185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6467b884-b865-4524-ae7c-ba6e7b20d965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4282b0d-d5b4-4bb5-9d53-af8205c491a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69df9bb2-e9c3-4146-ba06-792eeda9b7cd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06c5153-5570-4777-a560-df7d08bfb277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8828fc-d0ef-4e02-9b2d-6038d21f912d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bea347-f20d-404e-9c3c-412ebb83c7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77ceeef2-7dc8-4286-a518-d40560b59b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2cacf8-d0f5-4a75-a1f9-5af2c95d7012",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a5a8bf-393d-4cf2-8d81-e17ae35f280d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62588dd-eb62-44bd-9657-94e86f763174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6748e8-82bc-456f-a372-bc546aa8adcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "374f5dd3-0964-40a1-96bd-0acbe1fc08f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fd652e-f217-4042-a12d-98ee7c2b45f3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a802497-ca5d-4805-8ddf-7a2de65bdeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a83297-be7c-4eda-92fa-b62349dcd925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a71302-93d0-4ec2-83e6-e922c4097c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c779a90-e7c2-4d2b-b78e-a28fb37fd227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6b5a51-a0f8-4e13-b452-da63c0f11d61",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94482be7-b434-4d2a-9073-3f55a7c7dddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1466cb8e-168b-4d2f-8f6c-ec9b3eb7ebf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a090d893-6aec-4129-858c-b67437dd61f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4be2f556-3b9e-4634-a532-a282e5b879ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4184d2e6-32f7-4bc2-905b-1ec7a6060bbf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c843b0d-45c8-4f38-bac6-33001fc78fbf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160ad3ba-4f2b-4ab4-9283-4dd9aa54de86",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "81604026-5949-456a-af3e-fbb22c16641f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40955bc9-1f9d-44e7-9d13-339114042288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa753abb-a75c-4c79-a8ab-5d312ab70888"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81732023-3568-416c-9076-12f66087af8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b2f455c-ce13-49f0-8d8d-9854a7d2e7de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "394147e6-cd95-4dc9-b12b-69f96f564b05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d54d838b-847c-47fd-87ab-2c287c628dab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46c3a268-7fdc-4e3a-99ba-00aacb491f7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f6be5660-287a-4a65-b9f7-2f465728b897"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e175c55b-bdf7-40e0-a605-dbfd9fa55d62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c75f7c3-3227-49dc-9371-41a3102a9e18"
            }
          }
        ]
      },
      {
        "id": "d6c642bf-43ea-4276-bda0-f0093f8cd3e0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "40dae09f-d239-4e1a-9e66-a8d93c6ad53b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f27d87f8-8dd4-4277-941f-d87f77156c9c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7c5c05fe-1779-40fd-84d2-0307a5805da4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdb5810-8080-4253-9575-2e615a9fee98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdf549b-f114-4ede-868a-c62fc4dedb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1303a8-ba94-42cd-8b37-33840bab3866",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce972669-17fd-4069-9106-b66a3b86f1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899562ac-0c99-4d05-a05d-4b2ee16821da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0b27ba-98fd-47d8-a72f-ed9ee0c2d1c2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc153d61-09e5-4ee6-bfa8-330b6bd2c488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a82d8c-5f09-4bb9-885c-e8c0163ad8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a85e2c-0ae4-4c13-b435-66caf8bb9178",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a117dc-5784-4ca1-a835-cf2de2166065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbfb5f0-ee3d-471e-82dd-69e7b5a79ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b470838-692a-42fd-8747-ba037d13656c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51d3ebd-b426-405b-a648-ceeb508a2068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e5c135-6554-42c7-8fc9-4c85fa15dd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af127cc-5bf3-4425-8577-edb96d3be82f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c531532-e7b9-420c-aa69-15aedb1255a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465865b5-f67e-48b6-86fd-236f7f2b1a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b1d5ae-d0af-42ed-8f2b-3d991c27d517",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6711767b-8cd5-424d-972a-220af15e952c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0ee5c7-0339-4a93-9b20-d3b54f33e4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51685bb-2d36-47ae-b331-1cb43f9b3f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947208a7-9ff7-49ed-94da-bdc920b441e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f6c8d8-ca1b-4a4d-b259-e278baf12475",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c42973-512c-4972-9a6f-179743bdbc7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf4ae55-f93a-462f-bd15-91e01b9927a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f46400-150a-4d5f-b129-91ef2d6ca7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addf97a7-8ae9-4d28-b5e2-f824fb15595d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd7afe7-0df1-46c7-a14d-d177cfd8c67e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfdb234-d46c-489a-8b66-15a552e48bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f8392f-1e24-4813-8b3d-3bd8f596ec49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc1509a-d25e-43be-bb4d-5b29908e1508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7003b7a5-b649-45e0-99b6-88b60b638afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b492df3c-f06d-48dc-9be9-735ed0d030b6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bb9ad4-3414-4c4b-b3ad-5c8e87ce3853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "698439ce-670d-4d2a-a8d1-09e26573e7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2ec516-36ba-47be-a9ac-bb79a0b91540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5ede8b-0031-4ec7-a1ae-8d7bdf09c855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74da774c-b16f-4fbf-815a-e4ba61121c81",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5aa2e2-40c5-4098-b30d-f9bc9fba02d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d32f2e6-9afb-4ae0-88a1-eb30e9076517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad92c987-b91e-40cc-a80e-0481019710dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ea154c-ec96-44ba-b678-4601a77012e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2a2b43-4b5e-4b9a-bad8-7e416b9eb581",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233c2c61-f652-484c-af50-4daf479892e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36a5788-2840-455e-af02-40da51d4f9c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b8c0f9-a35c-46d8-9eb2-8304143fa030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f66537-f4da-45bc-82e6-0eb2b998d021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef46c40-3f71-4eb9-8277-cdf56ea238e8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc04b61-d6db-430b-8c0b-0abe2401b28b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6540182b-6d74-4ddd-9318-930877b5a535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45491f7-e6d2-4099-9f5c-6c1ff2611f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e2266c-c9ad-43e0-ae2d-7fdc99d35d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3e038a-2e6b-42d7-a466-413a881377e0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f458e2-3e75-4c43-87e6-b5817f93a483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28c099e8-79a9-4daa-b67e-e38f8e25c58d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4447d0dd-562f-44b3-a679-46d857c567c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb4fa4d-cb3a-43a2-ad1e-058944371c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7d492a-f4bc-4560-b64a-947f3223167c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25079e07-d47b-4ba9-8638-7867e0bd73fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "000c5741-5d00-4966-9986-327d853994f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2fe111-02f4-4e89-82ba-74d00403dcbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3bbe12-3ac4-4902-bf86-4c48d29bba81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bf38dc-8b96-4210-87cc-3b90d9ea371a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1d7d81-6aec-438a-8932-c5acf0d6298f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a74f99-ea2f-40be-bcb2-685ff112d9de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a56a66c-bdba-4258-a7e5-7fdf221094c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78bdebe-74b1-42d3-809c-f30bbaaefa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532044bf-c9ae-4845-8f70-ba0b57356a33",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f770105b-7234-474a-9f9e-e0a1fd8e60eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b06ee2-9741-44f5-b7ad-24eaad672ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79874e9a-cb6c-4f69-80af-130204324c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f03f85-074f-4206-8cfa-0b22148b883b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8417e41d-df93-4907-baf5-398eaabbe0f0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b1c2c9-372b-4d38-b70a-baa4093c32e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de1ed8b-3ea7-41b5-8bc8-16cd8cce1375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6555e3-a97e-4503-a55d-c89a9a4a5cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f6ffe0-4b44-4932-b907-7b3e7ff02494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eaaf936-8cec-45c1-9032-2626717785d5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d65f13-6842-4991-8b6e-9c434ebdfeb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a058d728-49a8-4d49-8677-a36431d54ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cd055c-6e30-49d6-83ea-ca3088680a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdfd82a-72c9-44d5-aab4-9fb433dce35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caed44fb-fa53-461a-9135-ebd674fa03c2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e254d7be-c409-481b-9bcd-77584dc0bcd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d6358e-7ef9-4c4d-afb9-da9c0febf550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d910425-ac42-4b31-9a31-caf485c7f0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f734f0-621e-4e25-9f16-26b6416047cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecde588f-5c7c-4fed-9484-499a02974b45",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5ddbd8-8ca8-4428-a14e-4fd57eea9704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94c83be-ea43-4252-bdb6-23008fb4a604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74768d2b-057b-4609-905c-87e916435eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00cc2c5b-bb5c-45db-ad80-67a78114299e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5caad17e-d2d7-44ff-98ee-9e4fffa403bf",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accaeba5-dd11-4d52-8058-412c9bb34b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04481cac-405e-4b63-b623-bc1dee90fb01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f26a59-f374-4dab-953b-995a5a839adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af23a08-2068-4577-922b-7be14ab7e3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cef2da-e5e8-4876-9e10-4b7995648e57",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe4e313-86ec-4602-a650-2ae79d4fff4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6e1945-8cb8-4057-8050-262c003b1602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a28cf55-2bb9-43ff-8ffc-6628082add26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293a6ecf-5e15-4145-a5b6-a6668d74e54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717c071e-bfc1-4abd-88cc-04153586a4ce",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277a79e6-da56-43b6-b678-970efc22b3e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12fb0f07-6043-4588-9e1d-d454bb71a647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cec7aaa-d70a-4fed-af4f-55f3c2762abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8dbeb2-4b50-42a8-8a2b-7b56d0baf2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aad09f7-31d4-40e1-8220-b5fd9e7517bd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7397527e-6c1f-413c-af31-1d9125a04dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73247d85-5850-41a2-a108-15aa62ac5614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0938fc0-ecc5-4395-8e07-24bbedae8c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282bead4-542d-45a7-bd3b-d5d03e0c59c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae02036f-a864-436b-a669-0c212ad875ea",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91659c6b-4c21-4396-9bdf-518c83c53162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba9e56fa-18b0-4c7c-b9fd-e047b860fa80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30951049-72ea-4fde-b03a-e0ca430ecc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4938e19f-d660-4443-a26d-80079f8b04c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18951ec6-cb67-41af-9769-d8ce55d0a131",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a0b015-bb27-42ac-ada2-bf827fffc178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd56e738-4af6-4a1d-aef5-e2256a47811b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84d76e8-dbbb-4433-9806-023177de1f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251d75d3-24a7-4635-a8da-08665d415ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f7aa19-7a64-4903-b893-4fbe4c84ab16",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bfd171-274c-4f7a-8ee7-213024ecaf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c51ae9-6758-4e0b-aed7-7a6db3783ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea48d83c-d03e-433f-b46a-4d51ae007baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e13f77d-6c77-4db0-8192-00031336dfb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caabd962-936c-440a-8a7c-13907c4a2996",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfba2b1-d4a0-4503-82fb-b8b28f89912a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a667f92-1975-457e-8649-9c271500662d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f8bb22-a111-4193-8a53-8b4385fceae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2466acf5-007a-4ace-af6a-fd9f2cac9b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786c234b-7d9b-42c8-8a93-7efbb5191b43",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af69b5e0-b726-462b-a4be-20d339571405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8365f7a-c2ee-44b4-b1b0-eaaa83a418ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b0d56b-6c32-43c7-9ff3-513414a5f1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77962825-df47-4fb7-8239-6d36e56639df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d59610-4a62-4c13-a121-608bbf77dfc0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae2aa41-75d2-43e6-aa7b-42bd326a3d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7038ae10-1f33-44fc-9e13-6544d0ae95af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3249151-846d-49a7-8218-1e0a03222ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d8e52c-ae84-46c6-bab8-db883e2a5281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60e6381-b839-454d-b480-20bae5eb649e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1aa324-1ec1-4ef9-b6b3-9ee14d147d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe572c1-6c35-4b80-bcab-87a92dd728e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eae6d42-d217-4279-b34b-b9598e4585de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e70e6f2-64fd-41bf-8609-78d2b5761a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36eab835-d234-46bb-b44f-8b3251dd627e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6a6beb-ccc6-4e43-8fb1-d9c3fb44267b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b537c86-ef8a-4bef-be20-88fd0fb6ae7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b926ef2a-06a0-4bfd-b62d-921a5434dcd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5883ead-3843-4bc6-8a4a-62f39d7f2ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb70ba96-cc0a-4ca1-901f-92d9924b3b89",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716e9de3-c345-4cdb-8e81-b6453048aa14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd3cce10-58aa-436b-9dcc-03888d6ef083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe145a1-12dc-4060-b5d6-0b56cf37800b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b34bf8-7165-494c-9d45-6424efa7fc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8daf8162-4aaf-4459-9934-926643eccfed",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233477ed-fefb-4cc6-87f4-f60e0195b65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47620672-c6cb-46c1-bd25-c03e651f5cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2733b6e3-f024-438c-91b0-4ff8600710ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8c767e-e23b-4cda-b281-da275dae8b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84621ff0-e6e1-4958-9713-d14ac2e56bff",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875970ae-8651-4cdd-b7fc-3a3fa9cbf3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf25291-6200-4cae-a752-a56312ffe9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e48a32c-f64a-41ee-9b9a-8e075204ffb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b27e9f-9625-432a-b8a6-b6b44c4b10bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2daa2fa8-1c41-46af-8356-7c06b6d7df91",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafa6aef-9fff-4159-92e0-f50e130fe18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b7abb3-50c9-4496-8870-349a3ab99102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a32e23-b2bd-44e5-a2a2-5dd6c6ec84f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59208ebe-87c3-401a-b685-b91554f16103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9a7ef3-0a2e-4bd3-8397-5440e88f4113",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3e6b3e-4710-4b62-a1d7-a83d708311c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769020c4-84e6-4f5c-b6b1-5e9b0dcc6571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5f4e40-4b36-47b9-82f6-ec7bfca1a6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f608c6-72b1-4e0d-8e60-a2b63e37ac3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49db2aa9-0549-49bc-9d5d-2f54fd295417",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a40c2f-077e-4704-baa4-8aaf8d4559d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f62bb16-f0db-41e8-91c2-68115dd76052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a393b22d-86db-41fb-819e-1a3c4de2f440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528d9ebe-8296-485b-8893-8f372a735b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6b39be-1015-4d38-92b4-59bb347ec3d2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b033484-fb72-4bb8-9fa6-e170c641458a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5349101d-98af-404c-ad93-2ddb3fed59d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b27f50-4352-45a8-b565-bd15bd6cddde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3b9285-04cd-482d-b46d-c2778e694814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcaf718-1d3e-4701-addf-8f234d70d70b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19b05fd-29eb-4d90-830a-6e5e65b0834b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f58e1c-879f-455a-a750-7883ca02ba7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18e21c5-5e03-4be6-b824-7405a672d275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffd1847-65d1-489d-8b9b-ac0425f51a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649c67aa-cfc5-447b-9dcc-e92c66f31b88",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f370d440-505b-4019-b6c5-eb7b5a615e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ccf88ff-3d67-4e50-9007-5b4ca88c8b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021e0243-f767-402b-9572-e52e87743e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194beac4-7d82-47e1-910a-b459f0cab043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedd166a-16a4-4b7f-b3ff-aae3491a9813",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be32e7f-9da9-4c89-94b8-55e2008b3b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4229d3bd-50d1-460e-a0bc-1c2c4d2689b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52553d0e-7f83-4c86-9421-4e63938348b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1b3a7f-e727-4566-b99a-cd761ebf5859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4db84f8-b2ae-431b-99e2-1ffb749f7653",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6c0f9d-7f08-4e88-afe3-405b703fda7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a64bf5a-3c4d-404a-be9e-798f4604045c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10933d1b-a892-4a2c-b067-55125a29835c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3046f497-3194-48da-a996-f0bf82f33dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db3b4c1-7444-4e56-b9f7-f1a803e53305",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6fb19c-f0ee-4b91-be7f-6bb255722d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2d6e29-a483-41fc-9ba0-042c723484fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "365d4c6e-3fdf-4760-aefb-c70609a1f5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11595016-6b41-4fcf-9b35-600c4fc79569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0c3b2c-0069-4062-9731-084bd8620f61",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5031b3f8-7e9d-4068-9257-63d28c7223db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c112aa-05f7-4b39-a274-e6e218db6ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c1cd72-0990-4983-bb1a-b51ef2e2708d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf42f9b-26f4-4ab7-bc75-28472e5ac3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75a6ec5-86b5-4cd3-90b6-4d6c988e6a63",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b50f2b9-722d-4291-b024-10242c9109ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b250e42b-d719-4923-bc9a-5d61eb2ad15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bd9c96-76ea-433b-8bb3-a765c3f6fb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a72b07c-b7a4-42e2-94f7-571da57bf1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db669143-9b14-4611-957a-6304abde645f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d386a8d-c214-4ba5-8194-c6bcdf6a6bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44058baa-6a9c-43fc-a031-aa04ee821cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a4b9e1-01b5-4dc5-9d1c-7722058b757f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8fc4a9-6cae-4063-b29f-ea2bf0843ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a40a9c-9fa8-42ee-a5d2-99aeeea74e0b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba643406-67ce-4191-90a2-ae8d5730aee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdf2dc4-c536-42b6-a644-ac46e8a75093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efe9b55-09d6-4b4d-92ec-27dd76a460ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd159d72-4c67-4674-9cd6-b2d2ffa50823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0872979-2723-4801-99b8-fc9774c0d85a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e635d46b-0cb6-4450-9ede-e0477f277bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a8864e-bfd3-4456-82c6-6e31009a32d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605e79bb-f8b1-4eee-9c03-97beff5041e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf3ecf1-a917-49c7-875b-531f432c638f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafe86cd-b009-4fcb-872b-9aee11cad845",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3e562c-cbec-4e19-93e5-081f903882c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00a84c9-22c3-4e99-8ed2-64f8747295cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310f465e-8b58-4040-a52d-91010a8cdb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155de263-bd20-4cbb-a7fe-895b472a64a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2773c6ab-6a64-4861-9da4-24fd47ba43ab",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6661488-66ef-4f93-82db-bfff94af5bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035fe7d5-3fe2-4b21-ba82-f97b465f05d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d9a256-c93c-4d34-bec4-789025c2d6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb68262-e23f-4f5f-8482-5cf8c2794e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7284bb25-f9ed-423d-a24c-1de4c27d5f5a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117ce9bb-dc02-4202-b640-e95ea226b94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709251ad-10d3-4658-8aac-8296660a8a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9f91e4-dd09-46cc-b35b-f414051e39c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e476d6a6-050b-4b99-a7db-762317aa73bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96374278-c7ff-4c9c-8985-bcb07b118672",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cebedd-a84b-4315-b029-94c1c499dac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c42b42-f9e0-4360-9734-edaf5a048b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4a3814-8b22-4792-9b2f-b65fa2453e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b914f7-5e9c-4125-a5f7-90d888842a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11acfb8a-2a30-458c-b716-f6b60b52666d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29729b02-82b2-4363-b901-cd27b3964cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2affce-b99a-435b-b4e3-5a5ba247aaf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c236b0ed-b3ab-4b29-a32e-e4bda9eba340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c48100-35d4-47d6-a7c1-4fa6fa872264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24298da6-7c59-41d9-a317-499cf62d00b8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6071d001-24fe-49b7-a367-9e1af0b40448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab44b501-ef76-4851-af0d-c702de1d0b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584388b1-21f6-4103-b5fe-05087d401c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c939d70-6458-4060-80cb-e0ee45105521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff1d22f-1160-4d3f-b6bb-181f7ebba259",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d11ad2-538c-46b2-a947-e9b662046bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb59589c-1acd-4d17-a061-eb3926e4a9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d07a5fa-ac55-4abb-8fba-c307cb257e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4feb35c-687c-44f6-baf6-1efff1b64354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb07b44-6ae9-4286-bd50-6dc42e5e51f2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e480d87-9b3c-418a-86d4-158a017d65a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09389002-9fb9-4138-be24-fe3e6a19d6dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429c8f2e-93b2-46eb-b1ee-35f3c71b1843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb6ec83-e2ce-4b1c-9b87-e9128316acad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee542bae-f2dd-4e49-98c9-dd076d8b48a9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d080549-e6a9-4584-b03a-de2cdcb42ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ece10ec-e612-46c7-a1a8-1dfc1c880053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdfbb66-304d-4bd1-b59e-043c8d8090f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edff9fa-0675-49e7-8a34-c027e873f9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5daeeef-276a-45ef-851e-570d3ce4a97c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908283a6-6f48-45ec-88b5-900d9028aecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a6b904-6e38-4e1c-94dc-85cbe745456e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bdd6fc-4fb6-4951-8058-0b5e140c5bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad176ce4-6021-4beb-9c33-dfa232998e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ba3dce-197e-46c5-8e81-4412577e8377",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef8b1dd-5d9e-49e2-a24b-32fdc2092cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a79d3a-cb13-46f5-9b73-eddc4a4c9920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0573d4f-7bbd-4575-812d-4246701f8bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01aa211d-8909-4f05-b940-3357a2deb3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a99121-1ed4-4b16-9ffe-24213e84e268",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa77c54e-72aa-448c-8198-ac24bdd2ad32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb36f8b-e9d4-43cb-8e7b-e87bf0425885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45938758-7da2-40e6-9d85-dbbef934736b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b485c9-fa63-4d82-91f8-331adee7552f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621aa834-3ce7-4e9c-a850-768aadfa3377",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e1cc75-3e17-4167-95d9-4cd6f6ee32f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7935efd-01cb-4b3a-af73-fc5f7ceabfa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca96a4b6-9de9-4fa5-a23a-079c9cd12922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51231566-cfe0-49f6-984a-375c0046e70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0309b22-4b39-40e3-952e-7d0df2bd06d5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1f0b0e-bda5-4ccb-aaa9-471e25e9b25f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "487e857f-3488-42ff-b053-55fec21ca4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5044c6f5-e423-4f13-9a49-982996218141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d815c3c-734d-44a5-b4da-93a3fae8a5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4941bc69-b645-41c3-9bcc-d16b070502bf",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69923634-0b03-40d8-a71b-8ad6f1ed7d37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92575c10-64b2-465d-97d8-e0a1ce492606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93140d01-9be1-4e97-89b5-e68623c5ddda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5d51c0-68b3-46bd-8d21-88465ec0bf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f61b4d-3438-4302-a899-416b5a5979c4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cd32a7-ce64-45b8-9507-42dccbf0c499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8aecf25-873c-4044-aa5e-752e59b0bb23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c103ac1e-066f-4154-8e35-e105c26ee2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c9b3e3-c0fa-4c55-9ca6-ade3eb96caae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78be60f6-024a-4f0a-996d-faa2966c1c65",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b54baa-90ec-4b30-a4e4-001ea7a8226f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54f77c57-5078-47e3-9e78-f627f1d660ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d127c4-b1bb-4b44-9fa0-b545288fdf25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76057854-c9cd-402f-be05-2f34b6687006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360bccea-b36b-41c1-854c-bb1fa3130a0a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30ed3b4-f106-49f1-8ffc-54c770418f98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1254f343-19b8-4fd7-ab5b-fd239772a872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5f5b6e-d4b3-4b4c-a664-5b480ea698b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d77f9a-0e0e-4587-a70d-efdb2f4002ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9ad15c-5107-4aa9-956e-11b80340bc3d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec1f1df-7215-4da7-bc56-5411d2ca75b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af42f633-3917-47ec-b57e-699c6b815cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24887cf-0880-4141-bd11-8ea4078640a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b32b66-9e4a-4f76-a005-43a835c31aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff55acf4-b2ba-4aee-bc1d-a570b9bd3e11",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057c4fb0-48c8-4979-8599-6e14f0e68adc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94c893a8-9ad8-4025-bcfa-e14515014e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83489aa5-9fe1-4376-bf14-a21fec1a3be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fbc004-33e8-498c-b374-2800e9231f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4157f558-c64c-4bc3-97df-5491c09c8bcd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9fb361-4c4d-4033-a714-134f295d9ad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f03430ca-fb79-4adf-94ab-7b8c412ae8a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843c94e9-57a5-4ce5-a48f-b0333b97823c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002d4945-e72c-4943-b2ab-8d4a0df7888e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94741cce-8f09-406a-bf2f-c96bd3c4a925",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89f7eff-044a-4f4e-b354-37f242ab9f1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50b1d3d6-2b31-4613-9a10-eeb183ec80c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14fdc48-ff5b-4683-b086-adf406cf7308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65ea19a-5f31-46f1-9a34-123bbac723a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43233f4-b2ea-4271-b7d9-90915e9a03e1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba63018-5839-4930-bc47-7681ee8477c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd59b98-3763-4d05-b68f-5036b1ab938e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3601b7-791d-4316-bcf1-d418e0fdfe55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd9555d-2c3f-4e7b-9bde-669ec278cb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d2e6c0-020e-406d-b998-46b1cac5ac8f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be26298f-ad7f-4451-b3e5-9e8e1f2e5336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b502647-e1ae-4571-a3ea-ed4a776526d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8ce545-30c9-45b9-8082-929b6aa00150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203d0556-ec18-4858-b401-d55d493fe5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed6ca52-6098-4d7f-91f2-051a029bad9a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2191f16e-0c38-418b-b55b-f92e1e03cdcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6494a89a-b1a4-4ef9-9aaf-41149c7e8733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d514b7-520a-417f-adbe-a650fa35f228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5403333f-6b26-4b8d-83e4-8b52af4740a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700b3c5c-4a3a-47c9-ab5d-2bcb488e98b8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087f241f-d00c-4159-8247-62e10166221f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a359ad-4aff-4ff0-91a9-a29d6f5534a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6232600-fc42-418d-8708-7471f4903cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5b0b90-aeeb-4946-b0b1-da612ef98de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bfcd6a-f206-49f4-b3fb-e73ace99fdfd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613529a5-23c2-4371-877e-57c8cc742aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab097590-a5d7-4854-a9f1-c6e33ceb7467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc169d4-df37-4d5f-8f1e-30ffa1ce06f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99f25fa-e99a-4489-a10e-f56f6cf93e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700c8dad-3eb1-4fb3-a004-f5995e8af5a6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb07b074-3f15-43dd-a039-fa94789a1adb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dddf8b6-b1e9-4c5d-953a-4fcf1d51a023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22613dc7-427d-49ac-aaa8-e61abd19c1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2daf0629-8c50-4d03-a70f-4394c794c957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e466384-6a2a-43e7-97a2-fb09243b715f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e8712e-6d7f-4de9-b2de-daf2c00b1933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a80b8b9b-18a0-45c2-a497-71fb0e5128d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4dd5661-7be8-4d91-9b06-6250397fe7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ac8d23-07bc-439c-98ed-4b4931c96c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bceb72a-e000-4ea4-91e1-f715feccd2ab",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2787e591-9107-4cb3-bd4c-c03761de73a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afe6c371-a81f-4c33-966f-09df2b2953d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a772ca2b-50fa-4ef9-a308-b74bc29e15c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518d2dac-286b-49b0-933f-5cd3462d1222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f78a246-a09a-47bd-9c4f-910faf0d5030",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359c74d0-57aa-47c7-bcdb-0d91325b3ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "852a54f9-8af0-4a47-95ae-f1d92d67c4b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4af6be1-1558-4658-b19d-dd3aacaccabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a42bb8-fced-464b-a801-1638b7168d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d86dbf-4217-4a2f-9d38-fc044eb08e43",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7eecb7-1214-4428-8040-6abf1aff94b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d48e96ef-28ea-4903-9269-1bc668ece32f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090a1a27-7beb-40b8-ad10-36f8db1bef7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c92666-0265-49c2-9fce-132ee280a23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd19535a-bf9d-4f01-bf9a-2460b0b529fa",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7118121-5faa-4aa0-9744-4cf613f5f522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aa76c61-80d4-4d63-af28-c7e5ebf9f452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378a0f0a-786e-43bf-bcc7-60957cadcf04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473de0b7-67e4-4366-a718-e6388e167787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9a3cfd-c1f2-4245-accb-01cf8f6e266b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dc073b-d970-4e44-99c1-20d01e098fa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "390a4ae8-558d-4468-85d6-24c9c1565f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc046611-964e-4b29-86e1-09df7a598943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89132cfb-86a6-4778-ad9e-e691731ada86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e7c0e7-95c3-48ed-9d17-2f46bb8d2ed0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192e3c4e-abde-48fa-afee-e97208b33880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a7fefc2-7922-46bb-8e6a-44d734c41ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cbb094-715c-497f-8a6b-135e8fa48982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa87ca4b-8080-493c-8df7-cb5c52f8eb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e95b05-2832-4489-a922-23cc7e89c705",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227d9cc3-0c41-4977-b2ab-4a3077d43956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50b6b4c8-5f38-4722-902c-007289eea079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845bc579-da7c-484f-9e33-f0a6bb67edb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff8c03a-7cb1-44ee-bd79-9f8227e4d76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05970644-5b55-4232-babb-6ddfa937940a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bef7e0-0d00-4d2a-ae4f-92306cc93f15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f0fc22-82e7-4d37-ab85-636422b3ab01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839d2312-a7d1-4e1c-8aae-5d7e75618916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b095c8c1-7e86-4e84-abf8-5b3140ff3a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2ae5e3-ddb7-4264-b663-526525f21e23",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57efc589-f829-4ba6-8c9a-874fc127ca1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51bf4f84-9c11-41a4-b359-647ea9beba38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6f43f6-839c-4573-90d3-1db4c74e7733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712da92f-cca2-4345-adb3-f26223d4de59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45478724-5bec-4113-a77c-11ba4ac65cd8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b22642f-6aac-4be5-9ccf-92a74c28899d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df89eab6-2629-4f93-a53c-8687e38934e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e164ae6c-48f0-4c73-ab82-385b6cf20692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebee87d7-8134-494f-b782-14ed7543829f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d624e0f7-e47b-4402-8146-9911173bb22e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721ae1a3-e177-4535-8de4-d6ed3b7b6d4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0aa19f0-5686-454d-bcce-c58a53bfcfc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aeb5cc-84b1-4370-83dc-5ac9579f4efc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2281bf1-c96c-41d5-af79-509795061c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb40eb90-42c5-4ab5-b522-9d582bf8b185",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf67997-85dc-4fc3-a366-57e642889da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838882b4-026f-4683-b161-a28fcbba15de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e38c39f-63be-45e4-a62a-a52436a50b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3eae6a-b02b-44b4-9918-4e3a5584f873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338a545c-4ce0-406b-b636-eebbb5e48a86",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41f21da-f8fd-482b-afe0-d478dea94a37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36bed7b5-44b6-48f6-b401-caf223c4d19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886dc5fa-32a2-4be8-8099-eb59a8c34a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350f295d-b59c-43bd-ae58-7f5d116b6c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b0ef83-7f02-4208-abce-af5eb5788714",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca908a4e-ef37-45e4-afe8-c13bfa5117e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8c479db-1d95-4705-b665-a3e03621a71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39385c6c-af44-4e7e-a675-f02cb58a0397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27ef1e8-50fa-4ac9-ab77-879767103565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6de00d-4769-4182-89c2-7f6b5f708550",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b96ea0a-3a7b-4308-bcfc-030a0db53809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e5efa4b-6a8e-4c4d-b956-586acc2aebc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f90587b-c0ab-4ec3-ac17-963529a4c57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be05923-cf7c-40f0-a57b-544e99f74e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4f646e-6e4c-4ee6-aab6-e980daf33baa",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75225642-e4b9-4fc3-83a8-be7843ece85f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edd57902-74ca-48eb-ae93-8af304674a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d414c491-28d9-4947-a031-032a08fc5f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f0ede0-fe92-4bf2-8adc-e86dff2b9bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac4d5d7-7e4e-41df-a4f7-25a919d9beeb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7921816-3992-4894-bfae-d159f631d86a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e997582e-0a3f-407e-9628-62509fd3b77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d466df3-c37f-4b85-9d8c-442a5867a68e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce88fc64-1d71-4d97-9a56-3eb6a4b0b14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf6e84d-b43f-47ec-8904-a9859693b3cd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a240f40-4edc-4fc4-b90b-cff5f71b5242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32eb2cf0-642c-4211-85e7-4dd6dca5b920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f964e2-9411-4b91-b2c8-ce7070aa318a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea30f3f-5ba4-469c-b8f8-e1dd2c1a361b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "027505a6-ef3e-4c4b-8fa5-84977658c07d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "500d64a7-043a-4c03-8daa-6afff207b224"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5804520-4ce4-4796-b96a-ac7b9187480a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a79e0c0c-1fdb-4937-9fa2-1bda5173cf9b"
                    }
                  }
                ]
              },
              {
                "id": "e9c8daa8-400e-4cc2-8abf-b25221c53af0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3039ca92-11bd-4c1b-b3c7-0187fa449ce5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03b3a79-7493-4713-9eec-ce39dcb8dc9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bb3b4476-f27b-4fe5-9094-25ccc2f60cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cb4f77-1027-4373-a925-41f2791d8b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2447bae2-94c5-4ba7-8b41-8f8e98eddfdf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ebacce9-3aa2-49d6-ac62-a1c85538eecd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7b4c8ff-99e5-4e77-9479-e12a0dbd379f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6bacbb9-f2ca-4257-bc78-fda6d1beb976",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b4f2fa6-e8c4-42e1-b8ab-fe0ef86a8ede"
                    }
                  }
                ]
              },
              {
                "id": "8ef19520-6842-4d17-9825-9eeab45ec5be",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4588fbf5-aa22-4d36-ab99-efd4dc37445c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad45444-7627-4b00-8389-60a9ea93f260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "52ffd58d-d4c6-4be0-81ae-8a3881daaa3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614648e1-07d1-4787-934b-aa9224f4c77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f16c23c-bbe4-4c2b-81d8-5568ba7db911"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6ad5182d-aa04-46e2-835e-95e2f869ef92",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5fd863f4-da35-4c98-b07c-73bfc00ce9ce",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba582e91-7d89-430c-b662-2bf0e9811fae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "df0787db-e750-43da-bfaf-3166a0ec171f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb57b1e8-c06e-467a-8be0-89d17b458abc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb52687d-0750-421a-8013-d75c139fb624"
                    }
                  }
                ]
              },
              {
                "id": "d8bd6e15-36dc-4abc-b618-58f4c27a9615",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a9e516f-c348-4e65-beee-897f2ea3470b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fd19deb7-7771-4334-8cab-428fadc3c217"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73709052-d86d-40b2-8d7b-dbf9d86ad94e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a622ade3-8956-45a7-a0af-cbd5d0b958a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a664963-ed50-4854-b27d-f016874d28a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "958a477c-8078-440e-984e-6f5e6276bda5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f359f813-93c8-4a5c-ad8f-1c6648290bbb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5430155-7c10-423c-983d-e8f7a9102d1d"
            }
          }
        ]
      },
      {
        "id": "c950f32a-ee97-45b6-b75d-7be4bab85bab",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e4afae27-e5bd-48c0-bcbc-7482dcece3e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea70c4ae-1e4d-4914-baaa-f6586a58b7c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a14c8ed-10af-45ff-9f3a-0519155056c6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cd3bbb-ad78-4d3f-999b-566a31e9fa15",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "12bd89e4-6355-421f-ba2a-686af0f24146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1546d7d5-a864-48fe-9997-8259f240c1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c14f729-7499-46a2-8897-e507a58ad303"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1fdd22f-d6a7-4fa8-b61b-3f633493c266",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a643a9a8-0a54-4444-90e3-47abde35c017"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17aba5d7-f3ac-49d5-a426-d4c1d9b54ffa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba41cc21-de03-41c1-b8fb-6a660adee82f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2117ca11-091d-4dde-bfb3-e62dd4800360",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9e92934c-8621-4a62-9e87-814924317ef8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "641b290c-19f7-40d7-8bcc-0b19df0466b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc74a55f-a14e-4edb-9f00-e781c7c8055d"
            }
          }
        ]
      },
      {
        "id": "a0a490de-812b-4005-a25b-321e7ca9f331",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "afb8acaa-67f3-4ff4-b1de-54e8fdb489e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a6f2e88-db59-4c85-a6d6-5078ca55ddd0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ec0f9d6-6d68-40e5-a486-3d66e7fb3f6d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67212a88-6aba-4c47-9f1a-842a28417d0e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8626a848-5ba9-4258-a540-5993e57fb73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bacfbc-c6b9-4d1b-aa03-4d0f6af4c77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaa29dc7-e2ae-45cd-b93f-b93224c079b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f04cc64-43c1-4bcd-ba04-7960e193c83c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c2497ff-19c7-48a0-a1e4-e7ae6ebf7361"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb7a606d-64c9-409c-a9ab-253ec8d58e9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb88b378-592a-4676-aad0-9647b363509f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "212d080d-4865-4caf-805a-d7fc44195082",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "52f3465b-05ec-4c0f-9428-6cd51e301119"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9625390-de2a-4f56-9629-8f184f4f7560",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76a4d4c9-90e9-4f34-a6e4-55ebcf563c83"
            }
          }
        ]
      },
      {
        "id": "da1c1109-ec73-400b-8f52-bd3a0e882ac1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "863fdb5f-b038-40fe-baf4-386fdeef1c5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61c335e1-db0c-40be-8542-756f8d876d96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9b3249c-6ed3-4f2e-aa34-6d184ae41516",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692c54c9-312c-4da1-bc07-531c424f1878",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e7295f4-e96e-4aba-bfe3-5b0105d85e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670ab377-e82a-4dcc-8ad9-b24300664a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f4c2e44-89c9-4285-8649-e24e43a7899a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2898dc59-d3dc-4f6c-a904-208c0e7e54ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ffad6b6-885c-4fda-94fd-3795df957d99"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13bb0361-fbb5-4d87-a1a8-206717c923a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfac1f9f-e137-4c4b-ab5d-e453ee38c885"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1ddb39a-93e5-4f7e-8ec1-9c8fc5544603",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e70ff10-fd38-457b-a31d-339a2cb8b7b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3077670-475a-42af-8cfd-13dd36a1607b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7a25a79-5e9a-4f25-b3d6-ade5d0cf9c6f"
            }
          }
        ]
      },
      {
        "id": "0929b232-ea08-44bf-b8d0-2db3c6982005",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbdb1c99-56b2-4262-afd1-570b5fbfbd14",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7e83cff-b3eb-4eb8-a853-d56666d05d97",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "10844aa1-01f5-4fa5-b942-ecca90067c25",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3a23ff8-af5d-403d-943c-2ef890aae163",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc113535-cd09-43d3-8be8-e79e55ed2eaf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 52.83157894736842,
      "responseMin": 22,
      "responseMax": 273,
      "responseSd": 21.114384868712538,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698798969362,
      "completed": 1698798996059
    },
    "executions": [
      {
        "id": "5b20cc9b-22bc-4484-a2d1-84b4d872db33",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4bdb212e-a5bf-4fe2-b3d8-4f99dc082f58",
          "httpRequestId": "5eae9ba4-05cd-41c7-947d-43d7bc0882cf"
        },
        "item": {
          "id": "5b20cc9b-22bc-4484-a2d1-84b4d872db33",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c816f0fe-ce19-4b81-82e0-a57860fe50d8",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 0
        }
      },
      {
        "id": "d20e5d12-84fe-488b-96ce-d58a028eaf32",
        "cursor": {
          "ref": "1f44108e-dd18-43d5-b69a-911b6ed35f85",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "07501029-b217-494f-b62a-433bfbe2798b"
        },
        "item": {
          "id": "d20e5d12-84fe-488b-96ce-d58a028eaf32",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cc2dc5bf-e4ce-45db-979a-3e70ef0a8407",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "5c8dd5ad-347d-4c01-bb3a-3c02b881df99",
        "cursor": {
          "ref": "27184fe3-71f3-4b9f-a4bc-34f03844a274",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9e7096bf-2aa9-4a43-ae0b-495b6dd8ebae"
        },
        "item": {
          "id": "5c8dd5ad-347d-4c01-bb3a-3c02b881df99",
          "name": "did_json"
        },
        "response": {
          "id": "e80ce552-a000-4714-a34b-12a536754530",
          "status": "OK",
          "code": 200,
          "responseTime": 193,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acbcec6-13a1-43f9-a54f-1073c329e574",
        "cursor": {
          "ref": "4f6a677d-2a75-44f1-a1e7-d0fa1f3c8ca8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ad791161-874d-4654-9981-60a230c582d7"
        },
        "item": {
          "id": "7acbcec6-13a1-43f9-a54f-1073c329e574",
          "name": "did:invalid"
        },
        "response": {
          "id": "5ec8b85c-3de8-4afd-a3f1-097c03c9cf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acbcec6-13a1-43f9-a54f-1073c329e574",
        "cursor": {
          "ref": "4f6a677d-2a75-44f1-a1e7-d0fa1f3c8ca8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ad791161-874d-4654-9981-60a230c582d7"
        },
        "item": {
          "id": "7acbcec6-13a1-43f9-a54f-1073c329e574",
          "name": "did:invalid"
        },
        "response": {
          "id": "5ec8b85c-3de8-4afd-a3f1-097c03c9cf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4538a7d6-51a8-4447-8ca1-e8b68d2aa72c",
        "cursor": {
          "ref": "e2aac393-c9eb-4f7e-851d-2cd7ea51d840",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8356687e-e8e4-458b-8f20-964cf611306e"
        },
        "item": {
          "id": "4538a7d6-51a8-4447-8ca1-e8b68d2aa72c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "15db84ff-da99-4cd2-9602-39315608945a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 163,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f90317-c871-4a6d-88ad-5edac720918a",
        "cursor": {
          "ref": "6ed0f1e8-9e75-4a11-87d7-e2d240ffc85c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bed394a1-0e3b-4001-9cf4-36d360e9799e"
        },
        "item": {
          "id": "63f90317-c871-4a6d-88ad-5edac720918a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "40abc581-11d1-46b4-a038-634ea0fff805",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb6a6df-609c-4e00-9564-bfb9802b5b56",
        "cursor": {
          "ref": "0f732b44-f474-475b-85a1-ff629de492ca",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4c5aa4ef-37c3-4e72-a5d8-73ba32bbb8fa"
        },
        "item": {
          "id": "3fb6a6df-609c-4e00-9564-bfb9802b5b56",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d221119f-fe64-481b-8870-91f9d04cb953",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efe842a-d5c5-4936-aa62-b07e48b68e08",
        "cursor": {
          "ref": "9b3f2ccd-ac08-44d0-99af-516981c777d2",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6d7eb6ae-7ed5-46e1-a99f-66b88926b403"
        },
        "item": {
          "id": "9efe842a-d5c5-4936-aa62-b07e48b68e08",
          "name": "identifiers"
        },
        "response": {
          "id": "e08e59b9-ae71-4e38-9cb1-93521169f363",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dbded1-eef0-47ed-a5d2-eaaba352cdad",
        "cursor": {
          "ref": "8745298c-ea74-4126-818f-f64bffb0a158",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "79c4123e-38ca-4ba1-9828-19deb6dcfeab"
        },
        "item": {
          "id": "b1dbded1-eef0-47ed-a5d2-eaaba352cdad",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bdd6627d-15ce-4699-a005-62f5cb3ea355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edcfa70-8974-4511-8bce-24b5d6e87043",
        "cursor": {
          "ref": "5ba9f80f-6260-42a4-8da6-c8bd51dac772",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "351f8168-adad-42c5-af52-4f2a051cc2c3"
        },
        "item": {
          "id": "9edcfa70-8974-4511-8bce-24b5d6e87043",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7dd40b0c-2333-40f5-8fb9-7c61fd548458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6461949-ca53-4ab8-8d43-a79ca3a4f892",
        "cursor": {
          "ref": "d8a69c4f-1b62-4d94-974e-1f4df98ff083",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "26d8445c-d55a-4763-8f7e-dacae0a9aadc"
        },
        "item": {
          "id": "e6461949-ca53-4ab8-8d43-a79ca3a4f892",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0b933903-6ca7-42fe-9ee2-afb493e10987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213450d4-b51f-40b5-b5e9-748809477266",
        "cursor": {
          "ref": "a5e6db23-e8f7-4115-a0a8-36f408247c15",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "edf03342-80f2-486f-9454-fbc0680bb974"
        },
        "item": {
          "id": "213450d4-b51f-40b5-b5e9-748809477266",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "22a0037f-075c-40f6-9db6-d56af2bc3518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c95cf6-ff50-4f2f-aaba-f855bfeca01e",
        "cursor": {
          "ref": "61ffbd43-4d15-43d2-aa10-1ab08be2857c",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d5be713c-4a5d-44cb-9206-fa7ed8d1cdc4"
        },
        "item": {
          "id": "a0c95cf6-ff50-4f2f-aaba-f855bfeca01e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "932763df-1422-46ea-8ee3-5b86c3e9fa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86ee8c9-c986-47ad-a982-a7daa4386267",
        "cursor": {
          "ref": "7c008e90-d3f9-476c-a35b-adc0e55c157f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "573dac1a-c06a-49ab-a555-de99429952fa"
        },
        "item": {
          "id": "f86ee8c9-c986-47ad-a982-a7daa4386267",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5dee99b0-54bf-4cc2-8691-0c7fa3093cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a27397-e7fb-4e35-a951-3db16efac4d2",
        "cursor": {
          "ref": "5a75ef71-6f62-40b2-ab49-2d8bface752f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "752704ec-dafb-450b-b7f4-1ead9c7c83ab"
        },
        "item": {
          "id": "70a27397-e7fb-4e35-a951-3db16efac4d2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "01d4f4e3-f697-441e-9147-f5360fad74e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27310f07-4ff2-4b4a-9df0-0edd8c3ba4fd",
        "cursor": {
          "ref": "ec47f78e-68b2-41a1-8492-a04aa9b776ed",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "08937f82-f8ff-4747-ab66-52c6a4685075"
        },
        "item": {
          "id": "27310f07-4ff2-4b4a-9df0-0edd8c3ba4fd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "250add17-bf93-43c0-9693-70e29659c811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38601d45-f78b-4c3b-ab4b-ac4a84ea8fdd",
        "cursor": {
          "ref": "256cc3d8-eb6d-4a6a-88bf-089d1436779f",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "648c05d1-f1da-4251-868b-31799d924f02"
        },
        "item": {
          "id": "38601d45-f78b-4c3b-ab4b-ac4a84ea8fdd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "65b21f0f-3009-4dc2-8dc9-4de5ab1e7451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bf79a2-4e54-4c33-abae-bf7395c07f35",
        "cursor": {
          "ref": "3715d2d0-dac2-4b82-a714-9db4f5c6204f",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "54277d62-5516-4e8c-aa95-49b96609d0e3"
        },
        "item": {
          "id": "b1bf79a2-4e54-4c33-abae-bf7395c07f35",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5fbb3f61-c549-4479-a77f-efa4cd4ecd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab12522-b9ba-4468-8170-dff59c088515",
        "cursor": {
          "ref": "ca813873-bb84-4899-a293-f9468e5b69d4",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c2823433-c7d2-4dfd-a491-d6a8145d390b"
        },
        "item": {
          "id": "2ab12522-b9ba-4468-8170-dff59c088515",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f253640c-4b5c-40f7-a566-482ed0ad17f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adcb51e-8cfc-4a6c-bf86-07c3f52bf1f9",
        "cursor": {
          "ref": "e29958d6-3020-431d-a85e-9e068cd779a1",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5d09c568-c05a-4290-a7a1-e157163a843e"
        },
        "item": {
          "id": "8adcb51e-8cfc-4a6c-bf86-07c3f52bf1f9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "43e2397f-c0ed-49f4-945c-a728ffd4b149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2b61be-2189-4adf-80df-255c59f2f781",
        "cursor": {
          "ref": "243e95ac-8f92-49c9-8f86-576dcb1e4390",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fdb8f6d2-c625-4267-b197-98da20c6927d"
        },
        "item": {
          "id": "6e2b61be-2189-4adf-80df-255c59f2f781",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1a9fccba-e947-4ed2-8b65-c23603722f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd74f432-d593-4c67-ab56-d98e4690a76c",
        "cursor": {
          "ref": "bb62fdda-1f21-480b-b461-d63a04c38ad6",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4696c58b-59e2-48bf-9bf8-6b79b53406fd"
        },
        "item": {
          "id": "bd74f432-d593-4c67-ab56-d98e4690a76c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a80e4a7f-99a1-496c-b6fe-fe78f1cb5cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037bda64-6ee6-44e8-9063-6edd1b72ed90",
        "cursor": {
          "ref": "50c29f08-0148-44ed-92a1-8d46d7b395ed",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "562bba63-d02f-4493-acb8-4cf766c51ea0"
        },
        "item": {
          "id": "037bda64-6ee6-44e8-9063-6edd1b72ed90",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "00a426e0-f38f-4ac2-b854-61193431b971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05ebd60-15ed-41dc-a235-adaaed3a7859",
        "cursor": {
          "ref": "39dce6c7-9cb1-48d2-aacd-115eda51ffa1",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8520ba24-fd63-4494-9462-d57c9e20dd0f"
        },
        "item": {
          "id": "c05ebd60-15ed-41dc-a235-adaaed3a7859",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fa22c3f7-c3c9-40fe-bc82-65655cf484ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d95b33-b777-4ced-9aa4-b43bb431c789",
        "cursor": {
          "ref": "4a58678a-cfef-435a-b478-3b72c05eda31",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8e8563df-ef0e-40e0-b8a0-2656bfd25c39"
        },
        "item": {
          "id": "b5d95b33-b777-4ced-9aa4-b43bb431c789",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1dfb9fb3-3698-4483-ad87-f7d62127cda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9071c4-d5ba-44f1-9ff1-c9eb56fc59e0",
        "cursor": {
          "ref": "b2d1f0a8-9399-4974-89a2-45b984e74c32",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0d275dee-7c62-43bb-9d80-5227ef9ff869"
        },
        "item": {
          "id": "3a9071c4-d5ba-44f1-9ff1-c9eb56fc59e0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "da39dc40-f4c1-4aab-a368-d44a2990cda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a74e5e1-6002-45ea-a0f8-a8cdcf177a58",
        "cursor": {
          "ref": "45afc4ee-026f-4085-8104-3e8d5016a2af",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "561c86d3-2675-494a-8d40-51d820e684e9"
        },
        "item": {
          "id": "0a74e5e1-6002-45ea-a0f8-a8cdcf177a58",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8300ef69-6d93-40e7-a740-c000c7af3b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3def5ef-a2b1-44eb-a3c4-08b515d41138",
        "cursor": {
          "ref": "85ea2288-5a29-48df-a5ad-8ba969337f8b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "baff80e1-75e0-43ca-87f7-c290a9822d29"
        },
        "item": {
          "id": "c3def5ef-a2b1-44eb-a3c4-08b515d41138",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e377b95f-3317-45c6-97bc-3254f6fddda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c53be9-e237-4b07-ad6d-5519b3f1e77a",
        "cursor": {
          "ref": "68164fd6-e54f-40e3-854b-72827dc9dd69",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "afc7252f-f14a-41cd-a47a-2d0b4795884b"
        },
        "item": {
          "id": "01c53be9-e237-4b07-ad6d-5519b3f1e77a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "12c84e86-8dad-4201-bea6-05be433c458b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f1d4ce-7828-46a8-967e-a387abdc47f0",
        "cursor": {
          "ref": "21e52a2a-70b1-4488-8284-79719f48c35c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "95bf1194-2348-4862-8c30-068786718960"
        },
        "item": {
          "id": "e2f1d4ce-7828-46a8-967e-a387abdc47f0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "759b7b52-fe09-431d-a276-0e40216820cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf11bc8-1f9e-40dd-94ea-924c2d3400f4",
        "cursor": {
          "ref": "92272ef3-99e9-400b-9f76-86818bd25421",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0f1d989b-faab-46be-bf79-876deb0712c7"
        },
        "item": {
          "id": "baf11bc8-1f9e-40dd-94ea-924c2d3400f4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "410ba089-a5c2-423d-ba45-675f59a62abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427cf0bf-8619-419d-a5db-d8932f7c04e8",
        "cursor": {
          "ref": "781a0f72-c700-4f44-8e8d-a33a77088fae",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bb50fb04-bcf4-4841-a94a-9acd7d921cb0"
        },
        "item": {
          "id": "427cf0bf-8619-419d-a5db-d8932f7c04e8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6bbd5086-fc57-4da4-88e4-8199f541b7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d10af4f-7214-4976-b5d8-9d4faca17a64",
        "cursor": {
          "ref": "de5bb41b-30c3-45f1-9fa2-d45fa23bd739",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5d582c3d-b20e-448a-94f2-ec95846a915f"
        },
        "item": {
          "id": "1d10af4f-7214-4976-b5d8-9d4faca17a64",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ed830344-af32-4249-8c1d-c8a945e75ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1380c658-9ea0-4423-8ed2-d296f83c41b5",
        "cursor": {
          "ref": "8a88eb7f-76ae-4ed0-a7a4-ee4ec5edf88e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "41081f07-3601-4076-adc6-438a05628f01"
        },
        "item": {
          "id": "1380c658-9ea0-4423-8ed2-d296f83c41b5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0e880434-dd14-4852-a99b-225ab79baf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9f024f-c11c-402f-90a1-9aac8e823144",
        "cursor": {
          "ref": "1b42ef7b-063a-47e1-87b5-73009406705c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c03dabde-fc1e-42bc-8fb6-9aa448af9cdd"
        },
        "item": {
          "id": "9c9f024f-c11c-402f-90a1-9aac8e823144",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "52be1f2a-659c-4d96-868f-b2b81cbab4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d039f3-8fb7-4241-9e08-dd7e65d68c16",
        "cursor": {
          "ref": "b0bb3d5d-9b3f-48c3-991e-15ae59bf0b06",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c4aa845d-ca9a-4cf7-9343-a545c2f2554b"
        },
        "item": {
          "id": "32d039f3-8fb7-4241-9e08-dd7e65d68c16",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "079087a1-9ea9-4672-8f39-3094b07d919e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f284c5-713a-426c-94e6-d16ad49af750",
        "cursor": {
          "ref": "01e1cbed-c373-4b5f-b4b9-269e107edb94",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1fe2c5e6-ced8-4f02-aec1-471e8d9372fe"
        },
        "item": {
          "id": "b0f284c5-713a-426c-94e6-d16ad49af750",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "12c97c4f-c354-427c-a7a6-634af3432ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd85189-4e59-4b65-a5b7-a5b3120a2b1a",
        "cursor": {
          "ref": "a80050ba-845d-4e31-b38c-86bd57db3093",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b797eba0-ee1d-426f-9ccb-711b8cb51d22"
        },
        "item": {
          "id": "edd85189-4e59-4b65-a5b7-a5b3120a2b1a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "482597a0-bb4c-4905-aecf-03121880efaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465377d5-be72-46b1-8182-b5336c7efddd",
        "cursor": {
          "ref": "ac1fa8cb-9d8d-415b-91bb-7d1eabcf9abb",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "763aaf1b-59e0-42f1-a7ad-f64928ea12b6"
        },
        "item": {
          "id": "465377d5-be72-46b1-8182-b5336c7efddd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "44ebd567-f7e8-4d20-866d-ccef4d260184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9b64a0-f967-456e-aeff-3e4092d7e3f8",
        "cursor": {
          "ref": "b9a397fd-4b28-4972-8f9c-4e9cd8427687",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8c046be1-b290-4993-833f-94ad59e347c9"
        },
        "item": {
          "id": "8c9b64a0-f967-456e-aeff-3e4092d7e3f8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "33ad2ea1-f7d0-46d3-b7e3-582a1a35fa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77e5dd2-1b93-4261-bcd4-4ff08c23e32d",
        "cursor": {
          "ref": "91a077aa-bcc2-43fd-bb78-a8e5fe01aefb",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "05f3da08-98f1-4871-94aa-7e27434a14bb"
        },
        "item": {
          "id": "e77e5dd2-1b93-4261-bcd4-4ff08c23e32d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b396f2b1-5b3f-43d0-b32f-2f6fd4facd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d816f4-1806-4fde-b450-87ea968f32e9",
        "cursor": {
          "ref": "03dbab20-5112-48da-b92f-1827cb4ad542",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c90a9a56-0d65-40ae-9e8b-1d906f8cb289"
        },
        "item": {
          "id": "12d816f4-1806-4fde-b450-87ea968f32e9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3a8da5aa-8389-46e6-8981-856aab7415c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2534e828-21e3-4e0f-b121-d96c4da81680",
        "cursor": {
          "ref": "842f2455-03c0-4bb7-a938-9edfb2de1a26",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dfaccb9e-aaa6-4212-81e0-c3b0c33eb7e2"
        },
        "item": {
          "id": "2534e828-21e3-4e0f-b121-d96c4da81680",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "966a8955-1f17-4a98-afe5-100affa943b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f47d262-25f9-43b1-9ed4-587746155c24",
        "cursor": {
          "ref": "dde928c1-4535-4834-8a23-c79f5da60632",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e19bb856-b68d-4661-b49c-7073b8881dc2"
        },
        "item": {
          "id": "6f47d262-25f9-43b1-9ed4-587746155c24",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "037abfde-6822-4baa-8263-6f224e5d021e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 63,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74a83d6-24a8-4be7-a84d-8a8652cf606c",
        "cursor": {
          "ref": "2b5f50f4-6f85-4dd5-81c4-1fcecfb7ea34",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b78074fc-1b84-490b-bffe-ca44b8c7e1b7"
        },
        "item": {
          "id": "b74a83d6-24a8-4be7-a84d-8a8652cf606c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "24a69720-27a7-4881-a6ef-38bdd1000dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2f6c08-ef08-4115-aa9e-38b1aa86bf18",
        "cursor": {
          "ref": "210fe07f-5f32-4d8f-94f9-7f4bc035f653",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "49403fcc-fc05-4325-af3f-639712b8da55"
        },
        "item": {
          "id": "7d2f6c08-ef08-4115-aa9e-38b1aa86bf18",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b81faa35-eabe-4280-8211-bfa2b1267721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03677b09-a301-4771-a5f6-f4c290fb2276",
        "cursor": {
          "ref": "376dfd29-8819-4cad-86f1-fcc5c6ac22bb",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ee78aa6e-9004-41d7-a98c-8de396607241"
        },
        "item": {
          "id": "03677b09-a301-4771-a5f6-f4c290fb2276",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "19768cf2-6596-4ad6-8859-5a7a2e6628dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5963c330-9c02-4900-b3da-f852dc76af2c",
        "cursor": {
          "ref": "cf3cc781-d482-4174-bc37-f118664342e8",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ade43966-9a9e-4477-8dd3-68a365a70131"
        },
        "item": {
          "id": "5963c330-9c02-4900-b3da-f852dc76af2c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3a3a7711-5acb-421b-8551-ae3e37ce5684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab26229-4f4f-4315-b9b7-36c9d565b024",
        "cursor": {
          "ref": "64063bd6-c5f9-4a1d-934a-94beed2dfdb5",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0ac3bc76-b4cb-48ca-81a5-d4d9059fff39"
        },
        "item": {
          "id": "dab26229-4f4f-4315-b9b7-36c9d565b024",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5c01d5e0-506f-4e70-b06f-98880ea5ce93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049bb198-ad2d-4112-be34-ebd85c69c19a",
        "cursor": {
          "ref": "8d2d6941-3e43-4017-bafc-5661ac79e4d2",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "834f59bf-dfc1-4558-9384-39b489b514a3"
        },
        "item": {
          "id": "049bb198-ad2d-4112-be34-ebd85c69c19a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cff8c3b8-8b27-457d-80cd-feabbdeea734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb754cd-8b88-48b4-9a64-1b7c1e5ec60f",
        "cursor": {
          "ref": "cc2d3aa8-9314-47ed-ae37-c4f87a336ea4",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "005aa490-c155-4cde-a1d0-6224be108c0d"
        },
        "item": {
          "id": "0fb754cd-8b88-48b4-9a64-1b7c1e5ec60f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "91d459ea-ab28-4474-bd65-5e7a0dc534c0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 66,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92f4ad5-4560-43fc-92f9-9f37edf2b1e7",
        "cursor": {
          "ref": "908f1f2f-a177-46cb-b2f2-41c027c801a7",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7fb3b4e1-42b1-4fc4-9526-05de38020321"
        },
        "item": {
          "id": "e92f4ad5-4560-43fc-92f9-9f37edf2b1e7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c23e457b-5022-413d-8ed5-c80fd7ba9e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d772d3-9a10-4b82-9b24-52136bb12295",
        "cursor": {
          "ref": "58d0454d-55cb-48ad-862e-2859b07ecfbc",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3781aeee-9a2f-4bcf-bb2b-b423c8e47683"
        },
        "item": {
          "id": "b8d772d3-9a10-4b82-9b24-52136bb12295",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0b48adb4-9b0d-45ec-bd3e-21f9ffe2efc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cd8248-848c-4985-8f94-deb877857850",
        "cursor": {
          "ref": "487cbe08-6409-4d6e-aa64-dd97ec6f8c09",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8df1f7a9-4162-4bee-ac97-cf8647fb1ee9"
        },
        "item": {
          "id": "b2cd8248-848c-4985-8f94-deb877857850",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cf3047d9-eb8a-4191-93c2-3dbc0fbf9482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219094b7-134b-4c25-b396-769a17728d7f",
        "cursor": {
          "ref": "6d34bc9f-960e-41b3-bea3-bf90df86f8bd",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "93dd0d2c-ef03-4abd-837b-00a0f4685775"
        },
        "item": {
          "id": "219094b7-134b-4c25-b396-769a17728d7f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "358d69c6-2525-4f86-bee7-06eac13c3206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8b7664-7aa7-4fef-bab0-6932aad36b96",
        "cursor": {
          "ref": "1584bf13-20e9-4f8e-901e-445702a74e2c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "54099be6-33e5-476b-8733-8f8d31c2adb7"
        },
        "item": {
          "id": "6a8b7664-7aa7-4fef-bab0-6932aad36b96",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e1175e1b-da98-4ba4-82d9-49d071095941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654e1501-b9a1-4b09-a5b6-921150aa7260",
        "cursor": {
          "ref": "bad77667-40f9-4af9-b78e-e4ea49f0a061",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "05d1d364-06c1-4400-a4cb-225318178753"
        },
        "item": {
          "id": "654e1501-b9a1-4b09-a5b6-921150aa7260",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "47780bd4-c6ad-4903-880d-a7765d0e6ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260b4090-a2b4-4db6-a6f8-af704ad2e9c9",
        "cursor": {
          "ref": "8544a16a-f111-460e-a502-be10fedb7426",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "eeca450a-dc88-42e9-ac24-6e2acc46697d"
        },
        "item": {
          "id": "260b4090-a2b4-4db6-a6f8-af704ad2e9c9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6a337192-e80c-4d3b-b568-da5065a032b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c74b952-e1ac-4f13-96cb-83cd808e6b47",
        "cursor": {
          "ref": "e38d9466-7229-41d2-8ff1-b74969a4d9bc",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "92ffb481-ee8b-45c5-9020-d41d8878dfe7"
        },
        "item": {
          "id": "9c74b952-e1ac-4f13-96cb-83cd808e6b47",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "210b30f4-c9c4-4bed-8fcd-6c251ecf0943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cae346-09bc-4fbc-9a3f-e62d8fa41283",
        "cursor": {
          "ref": "0324c0ab-dcb3-4961-891c-ac785d38fa02",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c6f653f1-199a-4aba-9ac1-2f0cfa1377f0"
        },
        "item": {
          "id": "62cae346-09bc-4fbc-9a3f-e62d8fa41283",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1c8009c2-5e47-475a-a36f-be22da995e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b588d414-8f94-428d-b2bc-2439aebc3e8e",
        "cursor": {
          "ref": "547d07e2-1a3a-422b-9159-f879a2a992a0",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "644c2588-50be-4933-8ad6-0214f701e14c"
        },
        "item": {
          "id": "b588d414-8f94-428d-b2bc-2439aebc3e8e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "604431b3-6f7c-4288-868e-344e9931ea67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81f5e6c-662c-4879-86a0-c5506f592125",
        "cursor": {
          "ref": "9597e4ed-e48c-43d8-85eb-641473aed621",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5b61c328-7894-477d-82ba-9325e6a70ac2"
        },
        "item": {
          "id": "d81f5e6c-662c-4879-86a0-c5506f592125",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "35858970-1f22-403d-9c19-5076784a0d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2dc545-9c0b-43a5-aef3-d03601990817",
        "cursor": {
          "ref": "08c28378-9fdd-43f3-861c-c759024b88c9",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "275434fd-9534-4c88-9262-83bcffb23eab"
        },
        "item": {
          "id": "ea2dc545-9c0b-43a5-aef3-d03601990817",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "713b0a87-2717-4981-b5bf-e8fe4352f6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9374f23b-e49b-457f-908c-b93a23388d8e",
        "cursor": {
          "ref": "35a2ae82-54a3-4b3b-9d51-7f9dd7a4d02e",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8d2ca22b-98b7-458c-b52f-968f9f4560b0"
        },
        "item": {
          "id": "9374f23b-e49b-457f-908c-b93a23388d8e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "662443a7-52b7-4c6b-9eb0-7db6c4b7ebbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2080141-de09-402e-ba0f-34b753668e4b",
        "cursor": {
          "ref": "b4db2634-67e6-439f-89ba-128c4b16c31e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "09692a42-2043-459d-b3b3-59bb8d2b3bfb"
        },
        "item": {
          "id": "f2080141-de09-402e-ba0f-34b753668e4b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ded6c895-5442-40af-8db7-82c24c39d50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249bfa74-0bdd-4e84-a070-4a903c1f5cb3",
        "cursor": {
          "ref": "3c095a9f-4bbe-437e-94c3-dc34a264312b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "413b54c2-e0b3-4ebd-ac4e-aa3123984dda"
        },
        "item": {
          "id": "249bfa74-0bdd-4e84-a070-4a903c1f5cb3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "407f0c87-7fb1-4bd6-997e-84f021aee06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2634829-5b64-4e50-8191-584845292fe5",
        "cursor": {
          "ref": "aa9ed198-fddd-4fcd-b250-6bb75ae2edf1",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ff7a8c2e-7b0d-429c-a663-0409e88ef17c"
        },
        "item": {
          "id": "d2634829-5b64-4e50-8191-584845292fe5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d28cf91e-3c3e-412f-b951-aecaf9e2a215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca931dd-538e-4f4f-b8d1-5157e757898c",
        "cursor": {
          "ref": "5ceea73a-c754-4790-9a53-8261954fccfe",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f4935ddb-f514-4b68-8763-569d6a68438e"
        },
        "item": {
          "id": "eca931dd-538e-4f4f-b8d1-5157e757898c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4ddd45ae-c61a-45de-bdec-86c37151d861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013cc02b-0dfc-4287-a305-efc4865bfa64",
        "cursor": {
          "ref": "e7db1d1b-669b-4a0e-9aff-9540248fe736",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c7c05783-759d-4f37-9a1b-80614e892ab8"
        },
        "item": {
          "id": "013cc02b-0dfc-4287-a305-efc4865bfa64",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7b7f4de9-c021-4226-8764-f17b58b4062f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d839f58a-802d-4a68-9843-5b821a0eaa26",
        "cursor": {
          "ref": "011fc604-597b-42a7-beff-fef5fd9029e3",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f5aef2f0-0866-4859-9e52-9f0124d2c1cc"
        },
        "item": {
          "id": "d839f58a-802d-4a68-9843-5b821a0eaa26",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2f93f93b-43d2-4a96-8270-3fd0d933d14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0baeeec3-56de-4574-8e5d-599fabe44716",
        "cursor": {
          "ref": "71831e16-baeb-4aa0-bf45-d4e09e20ad89",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b9507b35-beb9-4866-a860-220b0835d0fe"
        },
        "item": {
          "id": "0baeeec3-56de-4574-8e5d-599fabe44716",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2900b957-98b7-4bad-993d-be9049921c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed6314d-518d-44b5-a844-4255ee74b76f",
        "cursor": {
          "ref": "be87ff33-cbf7-426a-bc73-47eb9e40e22e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "10619910-6314-4b58-af12-f3548b448a4e"
        },
        "item": {
          "id": "1ed6314d-518d-44b5-a844-4255ee74b76f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ac89bcaf-9979-4611-8d6c-be6ba822e3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbc28ec-2fa8-41b9-9b92-42e43b3c4a82",
        "cursor": {
          "ref": "b81c6b87-0cc8-45b0-8ae7-0ae56fe65cc4",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "25b5df89-c0a5-4fe4-b6a3-3480dab15cc6"
        },
        "item": {
          "id": "8fbc28ec-2fa8-41b9-9b92-42e43b3c4a82",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "932fef35-697a-4a11-aa8d-846f535c4959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f6bf7c-bd7d-44c5-b8d8-8e630c683203",
        "cursor": {
          "ref": "f213bdaf-4265-442c-8bfb-b31225c6697a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c13fdfb5-2aed-4612-b8c8-475cb454888c"
        },
        "item": {
          "id": "d7f6bf7c-bd7d-44c5-b8d8-8e630c683203",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bee12400-4cba-44ad-bbb4-c0a6905b2c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61716a20-3494-4911-8d5e-4583c905bf3b",
        "cursor": {
          "ref": "43c68c8e-f5ae-4dd0-9e0c-1efab1c80f6f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6fd05b63-f9a0-47e8-8684-8251fa6d48c4"
        },
        "item": {
          "id": "61716a20-3494-4911-8d5e-4583c905bf3b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "28a07b33-5f2f-4506-9695-0da98a696723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e115404-b169-4670-b36b-36c9824025c1",
        "cursor": {
          "ref": "f15176bd-e120-459d-bfd4-498368393a8b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8ecd6453-9742-486c-87fe-13e6b1d60bbb"
        },
        "item": {
          "id": "0e115404-b169-4670-b36b-36c9824025c1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ddcb6fa3-e192-471f-a798-f7e76b08287d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dd3abe-24bd-4a60-a338-b1f616ec2936",
        "cursor": {
          "ref": "7e896ed6-13c5-4f2c-a58c-31225a120630",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1418b89e-c847-4696-b11c-e0db0b6d5e28"
        },
        "item": {
          "id": "b3dd3abe-24bd-4a60-a338-b1f616ec2936",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "88895861-a9bb-4d6c-90a0-692d98475ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7402742-c029-4810-ae69-ff14b32a50a1",
        "cursor": {
          "ref": "317dada1-a1a8-46cb-b7cf-af333e2819ca",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "68708816-b286-41c2-b88e-6e7732f750e8"
        },
        "item": {
          "id": "d7402742-c029-4810-ae69-ff14b32a50a1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "02e04cd5-f1bc-410b-9026-13eaa28bae32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5525ee-eaed-43a3-885d-ee7ec64f02e4",
        "cursor": {
          "ref": "92158418-52ac-4c1b-84fe-1fda4b97b5e6",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "63d90aa5-ae6b-4178-9f99-0e0fdda46601"
        },
        "item": {
          "id": "7c5525ee-eaed-43a3-885d-ee7ec64f02e4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "69bdea64-7b6e-4673-a769-3394df5b1404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14235c20-c186-4317-a128-cfaeeab311ed",
        "cursor": {
          "ref": "cc9ec9c6-7afc-4341-9f85-119d1188db3d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bf16a7b0-7240-4457-a132-225533a2db4d"
        },
        "item": {
          "id": "14235c20-c186-4317-a128-cfaeeab311ed",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ea0b423a-18f0-48cf-bee4-2f8a55dac186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba738313-b252-4b7a-91d7-a8a8abe6da7c",
        "cursor": {
          "ref": "7d2e8828-e3a6-4785-8e03-9236ad2e3ea2",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "696f2614-e340-449e-9f6f-8f942f1fdc20"
        },
        "item": {
          "id": "ba738313-b252-4b7a-91d7-a8a8abe6da7c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d8650359-53d0-4a3b-b5f5-dc1b967e8325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5bb7d9-8a21-433c-816f-ea86e2cd8457",
        "cursor": {
          "ref": "c402983c-ce57-4562-a220-319729af80e6",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ff73289e-e085-4f4f-b570-dcb9b9954651"
        },
        "item": {
          "id": "7e5bb7d9-8a21-433c-816f-ea86e2cd8457",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2213a17d-6762-4408-b8d6-16d0045fdb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03eee662-da6d-497f-94af-ef40d6c613ca",
        "cursor": {
          "ref": "ddeed5cd-eaef-48e0-98c3-af3cce0251c7",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "14529b65-c0da-4d7e-a3ae-977794623404"
        },
        "item": {
          "id": "03eee662-da6d-497f-94af-ef40d6c613ca",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "53562dcd-40ea-4d26-9dc6-176f304d8503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b35c539-8259-4227-8293-8cc40419a6ff",
        "cursor": {
          "ref": "8420a80b-4bb2-42da-a02b-aa8d8d44942b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "875f0f9d-4977-48a6-b5a5-50dc536d6f78"
        },
        "item": {
          "id": "0b35c539-8259-4227-8293-8cc40419a6ff",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6ab79b57-10e8-4b68-b37d-e301875f7f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83265eb6-c5ea-4fd9-a1ba-8f0d80e4ac94",
        "cursor": {
          "ref": "258e2401-53cb-4aa7-b09e-08d9a078e7e9",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b78b490a-560f-4b3b-aba7-3bd51885f64d"
        },
        "item": {
          "id": "83265eb6-c5ea-4fd9-a1ba-8f0d80e4ac94",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "15616165-2967-461e-a67c-587a781dcf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caabbc71-db03-4a8d-a49e-881722efdfe9",
        "cursor": {
          "ref": "d1e87231-7ed3-4f32-b59f-736294e53552",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1e94629f-2d1d-4f6a-b08b-8f47d1d71520"
        },
        "item": {
          "id": "caabbc71-db03-4a8d-a49e-881722efdfe9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "847a3baa-f5fd-40e3-a7ea-b7c2aa6b8d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42dcae12-493f-43b6-bb4a-36114bf82f89",
        "cursor": {
          "ref": "85ce14bd-094a-4d48-b779-f895d41896e2",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "061cfa86-abd4-454a-ba6a-83b49b067bc7"
        },
        "item": {
          "id": "42dcae12-493f-43b6-bb4a-36114bf82f89",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "63225b51-4689-4d7e-b542-4a3c2c0b02b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a752ec-045e-4517-82f4-26de39d84a8c",
        "cursor": {
          "ref": "f399c281-430a-44be-84d8-d6231394db6f",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "142739d9-f434-41d1-88ce-fdeeb1d508db"
        },
        "item": {
          "id": "58a752ec-045e-4517-82f4-26de39d84a8c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "447fd7a5-5e54-465d-a057-d3acb0cca32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e180fb3d-2ee1-4b91-8952-73f5aa2c783c",
        "cursor": {
          "ref": "1e63c93f-f142-4dc7-a00c-69004f73fa09",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "65d3a1f3-858c-4e31-b937-6bd793604ee4"
        },
        "item": {
          "id": "e180fb3d-2ee1-4b91-8952-73f5aa2c783c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "baf7b8ab-bc33-4a54-a612-d1ee157ec0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d220066-008f-4a68-9c70-93e0a20ba35a",
        "cursor": {
          "ref": "b5fb0ea1-c654-4010-a82d-3fe8a24c2dea",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b04656aa-f381-49d7-9dc2-ba97f9b005f0"
        },
        "item": {
          "id": "2d220066-008f-4a68-9c70-93e0a20ba35a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "63d08e2a-6daf-4214-ab51-cb8d4f9a19f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c37e67a-d0ae-4319-9c1d-072a7e396c18",
        "cursor": {
          "ref": "3d3d6ffd-3301-4ba4-a8aa-2f45a43ea2c6",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b4513000-e472-4576-8a1a-923d76224ba9"
        },
        "item": {
          "id": "9c37e67a-d0ae-4319-9c1d-072a7e396c18",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bdb14379-8708-4a33-8433-224617e40f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744000a1-06e1-409f-b9a8-9e6ffeccd115",
        "cursor": {
          "ref": "6b4db4aa-fe13-45b0-99b1-cab370ff0404",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cac41223-d184-4172-9ec6-8322c9f250b4"
        },
        "item": {
          "id": "744000a1-06e1-409f-b9a8-9e6ffeccd115",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5dec3be0-d2a5-4db1-a96c-0df5cbea911d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b29865-df20-40fa-8c65-44a7e7942491",
        "cursor": {
          "ref": "bbf5d7af-cb99-467b-8bac-8ffd624e1e62",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0d6b9aea-359d-4884-9826-19d78652a708"
        },
        "item": {
          "id": "a1b29865-df20-40fa-8c65-44a7e7942491",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c62e3f1b-5046-4333-9fa8-56184ab32fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f7779f-2651-427b-9dc7-5db50ed97d76",
        "cursor": {
          "ref": "7bbc84f1-ca2a-475e-945a-b94b7761fafa",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7bd20c3b-45ed-4de5-87c7-a9ca279d3c55"
        },
        "item": {
          "id": "00f7779f-2651-427b-9dc7-5db50ed97d76",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ecdfcda7-686d-4cb0-8715-c19290faaa1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a8e321-defa-4623-9f4e-f7eaadaaf216",
        "cursor": {
          "ref": "afd54bfc-9b5a-4d54-8d71-9786e542927c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b9fc2531-937f-4674-b3e6-f3bf1ff3f8a2"
        },
        "item": {
          "id": "c0a8e321-defa-4623-9f4e-f7eaadaaf216",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a912150a-7573-4c85-8459-407d48813591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf87ac76-d7ba-4851-8f28-42ef9f658514",
        "cursor": {
          "ref": "f870dd2a-51bc-4f33-8159-76d811588f0c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "42cbd0cc-96de-421c-a959-3848738f0618"
        },
        "item": {
          "id": "bf87ac76-d7ba-4851-8f28-42ef9f658514",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6255893a-9ea5-4f65-8a02-dacb1f2aab0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521f88a1-3049-402b-957e-03b0b7b34e33",
        "cursor": {
          "ref": "5d1eb58f-04f3-4171-a7b8-5079acf6e8b3",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bd1dcedd-cf81-41f0-9bf5-c325ad8f2496"
        },
        "item": {
          "id": "521f88a1-3049-402b-957e-03b0b7b34e33",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "463af392-83cc-475e-a6f1-b1641c54f7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b118f4-17b3-4494-951b-905abaad6682",
        "cursor": {
          "ref": "5f20fe11-19f3-4c6c-8504-f0d2b67cbce6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7bdbc6d5-15d8-4fea-9e3d-7d4107f0f254"
        },
        "item": {
          "id": "08b118f4-17b3-4494-951b-905abaad6682",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8cc789de-63b7-44c3-afa9-8740e8e30b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c43c65-b2e3-48f8-959b-ebd7bfbf13bd",
        "cursor": {
          "ref": "945dedd8-b8f6-4307-9222-f8a3cf0cc49d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "477b5106-6b25-4319-bec4-daa101189b79"
        },
        "item": {
          "id": "91c43c65-b2e3-48f8-959b-ebd7bfbf13bd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1148abf1-6efb-484c-9942-548b0f3c0602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c63e09c-8194-4cc0-bafc-7f89c8e25eb2",
        "cursor": {
          "ref": "d5a0adfd-49ef-4c07-b0d9-7549b23804b0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c70934be-de6d-42c2-bf17-e8f0ff7d11d6"
        },
        "item": {
          "id": "7c63e09c-8194-4cc0-bafc-7f89c8e25eb2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "20138099-2f1c-4c9d-aaf2-4ab2190d73a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6f63c2-a0f4-4dc6-a249-0c7118d7bc81",
        "cursor": {
          "ref": "663992ee-b5e6-4c04-a7ed-abac85dd73cc",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "02921eaf-4187-4df3-ac7d-43fad15d4d5a"
        },
        "item": {
          "id": "7f6f63c2-a0f4-4dc6-a249-0c7118d7bc81",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cf6d49df-bf8e-4ec5-813f-d94b5ed3a08a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3e3159-6d4e-43d7-8176-d2a02e3821f0",
        "cursor": {
          "ref": "6fe15b45-10f7-47f3-a6ab-892cd0ca9919",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a785bbed-af20-431d-ad93-91474a31db35"
        },
        "item": {
          "id": "3a3e3159-6d4e-43d7-8176-d2a02e3821f0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "aca36efe-ef83-4e72-a1a1-b8f6394fb5f3",
          "status": "Created",
          "code": 201,
          "responseTime": 123,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b61092f-540b-4c9a-b19d-41835ef3e0aa",
        "cursor": {
          "ref": "8f924a25-9b64-4e83-8447-400960b6d4eb",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "060643a0-40be-49d5-9bce-3d751d43fec8"
        },
        "item": {
          "id": "8b61092f-540b-4c9a-b19d-41835ef3e0aa",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3f1f3d11-1160-407b-9b0b-ba5e53e3b6b7",
          "status": "Created",
          "code": 201,
          "responseTime": 180,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cc080b-5ad3-4f4c-b27b-78f91ae4c7ff",
        "cursor": {
          "ref": "5c10f62a-1e7f-417b-aeb0-c8398111e2d6",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "49a09f36-e46e-4cce-bb88-e1b4776a0e37"
        },
        "item": {
          "id": "12cc080b-5ad3-4f4c-b27b-78f91ae4c7ff",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ddf47c4a-4766-4655-a817-6b671dc9ea40",
          "status": "Created",
          "code": 201,
          "responseTime": 76,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c80beeb-908b-4060-9941-087499073013",
        "cursor": {
          "ref": "6067a395-508f-4f54-a6c4-d7060d0ffa80",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6640b2a2-f6fa-4d0f-b1e9-d774e54a58c1"
        },
        "item": {
          "id": "7c80beeb-908b-4060-9941-087499073013",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f8606bb9-d4e5-464e-a790-b486c88d1a85",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "698e5723-699a-44d7-a03b-0bc51a7fe14b",
        "cursor": {
          "ref": "2d83a710-217f-4876-b92a-52078fe788ef",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b715cea1-0534-4e4f-a960-592f0b599281"
        },
        "item": {
          "id": "698e5723-699a-44d7-a03b-0bc51a7fe14b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d1b75ca7-46f6-450b-a3e6-bfeef006b400",
          "status": "Created",
          "code": 201,
          "responseTime": 75,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "23741988-6400-4024-b40e-4303dfd454b5",
        "cursor": {
          "ref": "7c4a4bed-2662-44ff-9919-c24ccb218cc5",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "88a628ea-c974-441e-ae17-6f076f83a6ed"
        },
        "item": {
          "id": "23741988-6400-4024-b40e-4303dfd454b5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0b8a676f-0f98-41c7-b46f-f3f986679df5",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad2ee34-d93d-4956-bae8-971edf2512c7",
        "cursor": {
          "ref": "808578c6-9550-4b73-bdef-058bcf1dc0cb",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7fd16f0e-d97c-4ab1-ae4e-e411916fbb2f"
        },
        "item": {
          "id": "4ad2ee34-d93d-4956-bae8-971edf2512c7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a8d08d71-c194-44d1-8121-be8944541f9b",
          "status": "Created",
          "code": 201,
          "responseTime": 75,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390b0552-2d7c-4d7c-9d15-c9e754ac4760",
        "cursor": {
          "ref": "2637dd46-9656-457d-8cfa-60c63f059504",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "89b4f6b5-443c-42e7-b0db-06f8081e30ff"
        },
        "item": {
          "id": "390b0552-2d7c-4d7c-9d15-c9e754ac4760",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c694daba-26f1-43a2-9f5b-4eec6c49ca4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63abafa6-be67-43f7-a8ac-7ce691b8890c",
        "cursor": {
          "ref": "32b1abd6-bcfb-4405-82d0-75717da06b03",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fc15574d-53d3-45f4-9c6c-8903fe6fec74"
        },
        "item": {
          "id": "63abafa6-be67-43f7-a8ac-7ce691b8890c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e1231eeb-0241-442e-914f-8544b7b21f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9045ad92-72e1-45b2-b0d5-ffa588417a6f",
        "cursor": {
          "ref": "6b9f1715-2863-4ace-ad1f-b7f4590da7c0",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8989265e-187b-4551-944d-0002f830c2f0"
        },
        "item": {
          "id": "9045ad92-72e1-45b2-b0d5-ffa588417a6f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "32fecc63-9f59-4f8e-910f-c978a093c803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b78463-ff04-4a2c-b068-fd8c25a6d53c",
        "cursor": {
          "ref": "edcdef56-13ae-46f2-b6e4-4b037e67da7e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4722da0a-9bb8-4c59-a4ea-4ae84b6e6dd4"
        },
        "item": {
          "id": "35b78463-ff04-4a2c-b068-fd8c25a6d53c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "85e7def6-df9e-4571-995c-092030127814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47dafd5-93d7-4be6-aa3c-94facd9687ee",
        "cursor": {
          "ref": "ee8203b9-4a33-4667-bc4e-c82d58b5acf4",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f4380b53-7263-49bd-8e37-19b5421045ab"
        },
        "item": {
          "id": "d47dafd5-93d7-4be6-aa3c-94facd9687ee",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cf02e4d8-6c32-4f1c-8555-379752e0bc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f535342a-1ffc-4960-a95e-ae6d44e85bb6",
        "cursor": {
          "ref": "f943035e-98a1-40d4-a72a-396a893582e0",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9cb17f45-68cf-46d4-85e9-e5d81e558aef"
        },
        "item": {
          "id": "f535342a-1ffc-4960-a95e-ae6d44e85bb6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "55d73e3e-f8e9-4546-86f0-c93ae83e242d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bc791c-a349-4f04-b57d-d460eab90459",
        "cursor": {
          "ref": "827af3a0-5ab6-469c-b2ab-07a2204ccda4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c4966277-3d53-4ebf-95e5-6cd14fdcff05"
        },
        "item": {
          "id": "53bc791c-a349-4f04-b57d-d460eab90459",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0943149e-09fb-44d0-8f72-9ae2f19679ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7894b5c9-f9c0-42b1-9bd1-342ffdddbd2e",
        "cursor": {
          "ref": "39eaa9a4-3d9f-44bb-bfb8-dd9c781ff018",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "61e35ff4-cffb-4e4c-91fe-89143e9c6dd4"
        },
        "item": {
          "id": "7894b5c9-f9c0-42b1-9bd1-342ffdddbd2e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fe8e401e-5734-420c-8762-c13f014bab1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175e3dfd-81d9-4061-8ffe-b5f576b65809",
        "cursor": {
          "ref": "28f78418-1a9b-4958-b020-32f51b0f4f2e",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d0fa94b3-8032-4cc6-8dfc-f46b532aebad"
        },
        "item": {
          "id": "175e3dfd-81d9-4061-8ffe-b5f576b65809",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8409e40a-9f4d-4235-a98a-43be367f0b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265cc440-27a4-4b46-b2d1-dacef371278d",
        "cursor": {
          "ref": "552e1afd-ff1b-49e1-82f3-9a8e19f0101c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c92423a8-40c9-46a3-9981-2cabfc46d196"
        },
        "item": {
          "id": "265cc440-27a4-4b46-b2d1-dacef371278d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ab62362a-4a2c-4ce8-a512-1e89e1e889b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82421918-c9b0-45a5-a929-89f4524799f5",
        "cursor": {
          "ref": "2d18f163-73c1-4f5f-aaea-65bf80569c4b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ecbc6d4c-c122-4a02-bff8-49b59e79de8a"
        },
        "item": {
          "id": "82421918-c9b0-45a5-a929-89f4524799f5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1079a4fe-f17f-4b0b-a3a2-af59a0af21b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829f6253-d7d3-4bef-9985-1970090e12c3",
        "cursor": {
          "ref": "05de673f-3594-4b6c-bc48-c6d3fa641ccf",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7ad631be-d5ab-4358-b36d-a07bd18b3f23"
        },
        "item": {
          "id": "829f6253-d7d3-4bef-9985-1970090e12c3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7a295a26-8915-4bdd-9e99-780cfb85baaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cb6323-6ce3-4876-8e0c-dab5e8a5e1e5",
        "cursor": {
          "ref": "9ef901f9-0bce-4484-87c0-28230f0953d6",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2dc07afd-e4be-417d-bf77-3ed9ad1472c1"
        },
        "item": {
          "id": "60cb6323-6ce3-4876-8e0c-dab5e8a5e1e5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "34205d5f-0b06-4f2c-9384-333c1c344e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422e85a1-a644-4c11-a7c0-8166a61f0377",
        "cursor": {
          "ref": "3b4448d5-85ff-4532-9de0-867684433209",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "578f7114-9139-47c9-805a-be9995f07c7f"
        },
        "item": {
          "id": "422e85a1-a644-4c11-a7c0-8166a61f0377",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cb68c673-3871-4446-9e0d-21f10de10382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad516c39-29e0-4945-bb6b-b23ca2476d20",
        "cursor": {
          "ref": "761b2415-6809-46e1-9a69-796f8856082b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f9ffacf5-f38d-4004-9486-67284cc5d262"
        },
        "item": {
          "id": "ad516c39-29e0-4945-bb6b-b23ca2476d20",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ad23dad9-6d55-4d82-94ec-340b072f68d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dee7ec6-80bb-4e2c-9662-1e860c201eb0",
        "cursor": {
          "ref": "432c8982-0fec-46d7-8d95-1a4607caee20",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "57ab5006-7019-44a8-977e-944b04e5304d"
        },
        "item": {
          "id": "5dee7ec6-80bb-4e2c-9662-1e860c201eb0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "45084ac7-45dd-4b02-93e2-f57366c0e88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510f85d5-336e-420f-9a91-34c646655097",
        "cursor": {
          "ref": "04bad96d-7085-45c5-b3d4-fd92f4da625c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d07c727f-2c47-44b7-b9ed-eee30f762d56"
        },
        "item": {
          "id": "510f85d5-336e-420f-9a91-34c646655097",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7b8646c1-e0ef-4c34-be54-edbab24e0c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7525f2fc-be6b-47e8-bee7-5173f033ea33",
        "cursor": {
          "ref": "c06f5278-9c7a-477a-9f25-09c501e450d6",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f6a6b890-d520-4cc7-970e-be674ed72f12"
        },
        "item": {
          "id": "7525f2fc-be6b-47e8-bee7-5173f033ea33",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7e065c13-dd5c-4947-8965-f84fc3386057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed56fa5-9145-4995-95d8-53b8bcce9f6d",
        "cursor": {
          "ref": "d9668c7e-0d9f-473d-a7de-7173e33aa4e5",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e71a47d7-e49a-4fb1-9756-0230960be219"
        },
        "item": {
          "id": "0ed56fa5-9145-4995-95d8-53b8bcce9f6d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "08b73b5e-6ed9-411c-a6df-05eee725d2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6425c86-d1d3-4439-9edd-06f63074b656",
        "cursor": {
          "ref": "01022f20-ac7a-43f5-b4d0-9d4e93926f8a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "17681a0d-4e09-496c-8472-193c008f3529"
        },
        "item": {
          "id": "a6425c86-d1d3-4439-9edd-06f63074b656",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0a49b4e8-fbe1-4f05-b76d-34bf8524edf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a4c10a-2e4e-4f39-b70e-271b7855eca8",
        "cursor": {
          "ref": "69282bf5-1817-4bee-81e7-7ad50fbb342c",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9cf91de2-f925-4301-966e-ece9ab8923b1"
        },
        "item": {
          "id": "48a4c10a-2e4e-4f39-b70e-271b7855eca8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a7f9cb7d-3ab3-4651-8dc1-f09431f6e927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d0d28b-93f1-4f94-aff8-42f43ac8086d",
        "cursor": {
          "ref": "c1869bbf-5fc5-402a-871c-acabb3f194c9",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cf333ac7-81b6-4bd8-95ab-9b55a1b25767"
        },
        "item": {
          "id": "94d0d28b-93f1-4f94-aff8-42f43ac8086d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5045a911-fdbc-41b8-8639-c4bd38b0839e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9d6bd0-864d-42b4-bace-3b009e8bb3fb",
        "cursor": {
          "ref": "ace0a516-bc79-4658-a99c-bdbbe3a10b23",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5a37757a-ddb6-426e-82d9-baccbce589d5"
        },
        "item": {
          "id": "5b9d6bd0-864d-42b4-bace-3b009e8bb3fb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e809864d-f41e-44dd-abdd-361584e2a1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085b5ba4-ad7e-4858-b7bd-20fdf142ff68",
        "cursor": {
          "ref": "9b57088b-4e7f-427d-b9b5-171fcb217e4b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "57785e67-3464-4e43-92aa-14d6e7f7b879"
        },
        "item": {
          "id": "085b5ba4-ad7e-4858-b7bd-20fdf142ff68",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "269d6a5b-8cda-451c-9015-dfc2f0348c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d626cce0-3488-44ac-a90c-f74a76dc5d6a",
        "cursor": {
          "ref": "cc2b0da6-34a6-4248-9af5-a48a07754fda",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0538327b-dc4e-47b7-bf79-3793a432eb78"
        },
        "item": {
          "id": "d626cce0-3488-44ac-a90c-f74a76dc5d6a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c976c490-1a0c-4917-80c9-ea922f2f9f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c2dc59-f89a-417f-868c-d3d2bd5927f6",
        "cursor": {
          "ref": "3fda9466-1df4-40f1-b458-4c285b3a4941",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3c6a12a6-dd83-4e55-b4fa-f090df7b3471"
        },
        "item": {
          "id": "09c2dc59-f89a-417f-868c-d3d2bd5927f6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6053920a-ed3e-4611-8060-25230ab842eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19266ecd-0116-4634-af9e-ed35e6b43dce",
        "cursor": {
          "ref": "4d4e5e3f-0413-4248-9a3d-8c0c40a2eb9d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1d378c7a-7b50-4353-907f-7c3a7cea8671"
        },
        "item": {
          "id": "19266ecd-0116-4634-af9e-ed35e6b43dce",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "75cbfd70-c68f-4402-8ffe-6e406ee34bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df23b721-2195-4a53-8fba-3dc1c5be41fc",
        "cursor": {
          "ref": "4cb0609c-3e5a-497a-9ead-4311ba739fdd",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9e5a2c2a-77a0-40b2-b5d7-2c51ba31e650"
        },
        "item": {
          "id": "df23b721-2195-4a53-8fba-3dc1c5be41fc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3cfcd22a-c842-4be4-ba42-4378081f0a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4539b2-4d49-4204-8381-0fe09d99b674",
        "cursor": {
          "ref": "fe683860-79cd-4366-bda7-df6fb69bdf5b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "df54d6d3-99fb-49a9-98e7-a2750ef23312"
        },
        "item": {
          "id": "ea4539b2-4d49-4204-8381-0fe09d99b674",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "89ef438f-e096-4bf8-b115-4d67749e8774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47b404e-f0eb-48c5-b087-f7a40267e12c",
        "cursor": {
          "ref": "240aac92-9030-47bd-bd08-f3467de021a0",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "16b0cb64-6685-4046-8e6e-8834729fcb1c"
        },
        "item": {
          "id": "b47b404e-f0eb-48c5-b087-f7a40267e12c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "27b1c981-14df-4e65-ae64-19d8545b1b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906c5e04-a5ec-4d1f-bde0-2b6213238594",
        "cursor": {
          "ref": "93198470-186a-4f1b-afbd-588e70f70f8b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0663f666-eb92-4c92-a927-f1480ca858ed"
        },
        "item": {
          "id": "906c5e04-a5ec-4d1f-bde0-2b6213238594",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "29500a0d-5949-4af1-b345-894db6b88f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3970fd-e808-4e21-8e3f-531a08953c5f",
        "cursor": {
          "ref": "86d5a96e-ce8f-4066-8cdc-e60870b28944",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f3cbf35f-55b8-4454-989f-4711a64a4ad4"
        },
        "item": {
          "id": "4d3970fd-e808-4e21-8e3f-531a08953c5f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5d2afa9d-81d1-4f85-92ee-1f0f878e020a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9353c571-d81d-4be4-a834-ca4bb1f46e63",
        "cursor": {
          "ref": "b0990321-5b4b-4515-842f-8bcf8d5172c3",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bd59e34f-a0a6-45bc-90ef-c0a4e8e1c9cf"
        },
        "item": {
          "id": "9353c571-d81d-4be4-a834-ca4bb1f46e63",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d728885e-4437-4f82-86a5-55566bc5e543",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd2a34e-d586-418e-a4e3-4fbe10fffc1d",
        "cursor": {
          "ref": "e1c84259-afd1-4ad8-8492-105023ae32b4",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c094c36e-9b18-47d2-8ec4-ea1dfd32d270"
        },
        "item": {
          "id": "6dd2a34e-d586-418e-a4e3-4fbe10fffc1d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4133f34f-a4da-4337-8428-da600ba501af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4ed5ff-8212-485c-ac25-45784f569ddc",
        "cursor": {
          "ref": "f9176bee-f649-4b92-9c85-b8db05dd3eb3",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "88b9cf47-b240-4e47-bdac-4ab5ebcfda7f"
        },
        "item": {
          "id": "db4ed5ff-8212-485c-ac25-45784f569ddc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bd3e19fa-7915-41b6-b1bb-554af11fd612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfa3a5e-0ba9-4db6-9131-5b37b2d24e15",
        "cursor": {
          "ref": "00b41244-b754-483c-ab49-4e82c588dee4",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "55b3d71e-a504-4816-ad16-71f8b666f548"
        },
        "item": {
          "id": "6bfa3a5e-0ba9-4db6-9131-5b37b2d24e15",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a8157a36-b54a-433f-a49a-4b853aaf21ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80e601f-632c-40d4-a419-74c156cddc0e",
        "cursor": {
          "ref": "02480900-088f-47eb-ada1-a4ea583fa4e8",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4226951c-3b61-44b4-abc2-f2f43f8ce870"
        },
        "item": {
          "id": "b80e601f-632c-40d4-a419-74c156cddc0e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e606b90a-cbe7-469e-902f-b40328780ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0059a1-84f9-435e-ab31-155d8c2eddb1",
        "cursor": {
          "ref": "a419cf2d-6429-4c3c-a09b-24edd182cd27",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fe14ad25-6fa8-42ad-9376-30db6a3fb852"
        },
        "item": {
          "id": "bb0059a1-84f9-435e-ab31-155d8c2eddb1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9649edcd-547e-4cb3-b568-d86a6f47588b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b8bef5-ff90-45d5-afe1-5ae88982e041",
        "cursor": {
          "ref": "04a45da2-fdf7-46e1-a4fb-504c4143965d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d40cc78b-0919-4b5c-a653-98b7519d3d16"
        },
        "item": {
          "id": "08b8bef5-ff90-45d5-afe1-5ae88982e041",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "87fe5eeb-169b-4e9e-833f-5ad7aee976d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9753a16-bc75-4152-9dc7-dac855ce2ff4",
        "cursor": {
          "ref": "beee6341-3cae-48a3-9ba5-e7afcca0f0c8",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ec911053-4790-4784-b343-e7318f97f5ef"
        },
        "item": {
          "id": "b9753a16-bc75-4152-9dc7-dac855ce2ff4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e5ce1fd9-3d9d-406f-bacd-aee3bd57f786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0235d8-da06-442a-a3b2-351e1ab825b8",
        "cursor": {
          "ref": "016bad89-7496-4221-a18e-7bb51767ad0c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f3779660-8a36-41eb-83eb-d59c9a80bfdb"
        },
        "item": {
          "id": "3d0235d8-da06-442a-a3b2-351e1ab825b8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "34bc853d-85b8-4007-8b3b-95db018a3ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d174fdb-d2a5-4ba0-9b95-ece602ecd17d",
        "cursor": {
          "ref": "e1b8f094-217a-4d77-a681-c4b11739a7ac",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2e45c92d-1acf-4d27-a17a-ad36780a31c0"
        },
        "item": {
          "id": "7d174fdb-d2a5-4ba0-9b95-ece602ecd17d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d52ba00d-0a18-4ec6-96c5-c5d16d11cf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85be8c25-090d-4d0c-bf0f-152092d83f1d",
        "cursor": {
          "ref": "f737eb8b-a1cf-4d48-a641-91ed71bf453c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "73205f2f-4508-48d4-aefb-7a55b243b0ae"
        },
        "item": {
          "id": "85be8c25-090d-4d0c-bf0f-152092d83f1d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2021947d-43bf-4a5b-9e1f-7c580126f5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade68c9c-ae3b-4f03-b058-5a08ba801975",
        "cursor": {
          "ref": "2b3922e5-d88f-4db1-a4c6-f00db4f970eb",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f8f007cd-afd5-43db-bc51-d16f5cd2d4c3"
        },
        "item": {
          "id": "ade68c9c-ae3b-4f03-b058-5a08ba801975",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "79b43956-0bb5-466b-a370-b79599881bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3861765-de47-49c4-b239-bbc966c69ab4",
        "cursor": {
          "ref": "3bc4a006-0ad2-4495-8d51-e6ef1f04625e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d32a1502-4cf2-44bb-84f7-29de549eca64"
        },
        "item": {
          "id": "a3861765-de47-49c4-b239-bbc966c69ab4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d27ad4d2-8ec1-4cdf-9df3-ebb67e227768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb7313b-0661-47fd-8a89-36302c8132ae",
        "cursor": {
          "ref": "ebf1fe93-7ef7-4df5-9c1a-1f904ae129b0",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3ab4a36a-4a29-4cf1-a501-73d880eb9aee"
        },
        "item": {
          "id": "acb7313b-0661-47fd-8a89-36302c8132ae",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c860e41e-8232-44ad-bd43-e312ca424def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d5ff7b-f9fa-4be3-80c8-8642f64f2ad3",
        "cursor": {
          "ref": "049c04a7-b751-44a8-8b6c-418579e8da09",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e5f221b6-eede-426f-b71d-02a229e5e58d"
        },
        "item": {
          "id": "83d5ff7b-f9fa-4be3-80c8-8642f64f2ad3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ee2bfaad-5af0-4277-a23b-26bdfc084564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce728f9-6950-4040-8a46-34ec964197b8",
        "cursor": {
          "ref": "b834d13e-6b40-4463-b35f-473d547eb32b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "385befbd-19de-4e56-8ef9-7971fa4ddf9a"
        },
        "item": {
          "id": "cce728f9-6950-4040-8a46-34ec964197b8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4be90b91-fce8-4516-8d6a-0b0fb7cfccb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cae2a6-2ac4-4a3f-b2c0-a7a21b501afc",
        "cursor": {
          "ref": "f2b278a9-a1f9-44e3-847f-b31571e415d8",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3d83a299-84de-419d-9a64-afb5a845db32"
        },
        "item": {
          "id": "78cae2a6-2ac4-4a3f-b2c0-a7a21b501afc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c45a9cd3-e73b-4822-8985-46b32a179e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1c4ce6-9472-42e1-8b01-6ae5733d5993",
        "cursor": {
          "ref": "7689cc1f-fa7c-4c9c-b815-186c7b2bad71",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cef5d929-41d8-4b6d-9d7f-f0e45cfc52cc"
        },
        "item": {
          "id": "1a1c4ce6-9472-42e1-8b01-6ae5733d5993",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9b4b4edc-a2cb-44cd-866a-325a8dd256b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8905d23-4a23-4b5f-ba8e-3365fa1e8e61",
        "cursor": {
          "ref": "256ff3b8-89ab-459f-8830-1e3bc7a467cf",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8e7efa40-01cb-4ff0-811c-910cddf05240"
        },
        "item": {
          "id": "b8905d23-4a23-4b5f-ba8e-3365fa1e8e61",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "83261b46-80b3-4da8-a1c3-f4b2d449ef19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b12c401-4720-4f6e-9a7b-29269f19f0b8",
        "cursor": {
          "ref": "7c21da0f-e0f3-4e96-aa0c-648da0cabc09",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "20f59d6f-0553-4423-a44d-f8d51fe24e2f"
        },
        "item": {
          "id": "3b12c401-4720-4f6e-9a7b-29269f19f0b8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "205c261d-a942-4f96-883b-8cc175aa1643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e41d17-5462-482a-981c-31b69aff1e03",
        "cursor": {
          "ref": "85bbddeb-b10e-4c31-b852-cbf4e65e98cd",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8a8fcec6-8ce6-4546-a863-89a9d4167c1d"
        },
        "item": {
          "id": "d1e41d17-5462-482a-981c-31b69aff1e03",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fa31461f-bca6-4346-a23f-7fa27bb65cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74480c3-f5fe-4da3-ac73-64f7a3fbfd1d",
        "cursor": {
          "ref": "bf202b8d-2977-4be3-90f7-961c849a2dd2",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b589ab98-aba2-4cdc-b180-33b34f635f55"
        },
        "item": {
          "id": "d74480c3-f5fe-4da3-ac73-64f7a3fbfd1d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d1652e31-a9d8-4446-bab6-317d77df4315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0733c1b-5675-4594-81fe-0be110feb7fa",
        "cursor": {
          "ref": "c380082e-147a-49bf-983e-36fe1911cb70",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0ff1dbc6-8a21-4e28-988a-032e81e7685e"
        },
        "item": {
          "id": "e0733c1b-5675-4594-81fe-0be110feb7fa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d26fd189-c9a1-4952-ba87-8de08f62d9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf85120-3267-4bb8-8bc7-cd2636d1c199",
        "cursor": {
          "ref": "adff6c5c-9a2a-4e81-94e7-2856a8ba26ec",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c831db0e-ca7e-48e0-a23a-e627316f7560"
        },
        "item": {
          "id": "6cf85120-3267-4bb8-8bc7-cd2636d1c199",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4b9567e4-17a0-4432-9071-82bc10f7bc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdff125-6b32-4a4d-8530-0d781461c2d9",
        "cursor": {
          "ref": "0c97af56-8ef9-492f-af20-770386c6f9b7",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5c95b28a-0380-4527-b2e4-ff843264645e"
        },
        "item": {
          "id": "7cdff125-6b32-4a4d-8530-0d781461c2d9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f0b2c235-3515-4b4a-8189-4c09840a4031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212eb1b3-05b7-4440-aef8-ae82a2d8f11b",
        "cursor": {
          "ref": "ae0f6be3-147a-41c4-b4f1-1823010a2268",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d9110b2d-2274-4e2c-8ca5-b2dc74aa559e"
        },
        "item": {
          "id": "212eb1b3-05b7-4440-aef8-ae82a2d8f11b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e605333d-cf63-4c5c-ac04-46738a6d71e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b51148-5d5a-4e6a-9d5f-b24186bc4979",
        "cursor": {
          "ref": "f9b52fc1-3d21-4750-8a2e-4afc75edcf7e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6a5083c2-f044-407b-87db-435d10cac263"
        },
        "item": {
          "id": "21b51148-5d5a-4e6a-9d5f-b24186bc4979",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4f725612-2ca0-4aaf-8cb7-202c8a993e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4a9406-5f08-4179-8f82-f05682fdcefe",
        "cursor": {
          "ref": "499f5bc7-9990-4cc7-b051-c028a7326446",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ab113adc-3759-417b-8bc1-78dba09119d0"
        },
        "item": {
          "id": "3f4a9406-5f08-4179-8f82-f05682fdcefe",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "48f871f6-140e-45e6-a9b8-5e3035a432b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f27a58-f3fc-418b-ace9-49fa0a717d04",
        "cursor": {
          "ref": "fc9eb3b4-d29e-4af6-ae50-b1c10aedee40",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "302f8004-7d93-4321-bc6a-5666a22f3a5b"
        },
        "item": {
          "id": "49f27a58-f3fc-418b-ace9-49fa0a717d04",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4ba6a92d-75ff-4ca7-afea-bd0b92f23998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a71339-d038-4330-931a-a1a6e4d860d6",
        "cursor": {
          "ref": "ac4405e6-82d4-4a87-ac32-01e1453afdc2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "22f9d406-db8a-4cb9-8eb8-6eb5c5d174f7"
        },
        "item": {
          "id": "e6a71339-d038-4330-931a-a1a6e4d860d6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "12d9aaa8-77a5-4880-ae81-9252abe240a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9502d820-f534-4142-be4d-8545518a6c02",
        "cursor": {
          "ref": "d086daa0-91f6-48a1-ad86-011af74b19f6",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8aea3911-ca14-4810-a190-ebee313f4052"
        },
        "item": {
          "id": "9502d820-f534-4142-be4d-8545518a6c02",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "171c3155-3df8-448c-87dc-3743d3198244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b08648a-0ada-4c21-a2ad-4ddb55eb32c5",
        "cursor": {
          "ref": "f38b9eef-154f-4998-a9d6-fe22505ad5c2",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8e300386-770e-4a1d-bfc5-153dd7b853c7"
        },
        "item": {
          "id": "0b08648a-0ada-4c21-a2ad-4ddb55eb32c5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d02b0764-f9e5-4001-a8a3-457a332369ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90995a4b-3423-43e2-884f-8ced94366dfa",
        "cursor": {
          "ref": "7b879595-0266-4288-80bb-3da1a6159ae3",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e1dae491-ee91-44fb-8a78-5be51b2ed261"
        },
        "item": {
          "id": "90995a4b-3423-43e2-884f-8ced94366dfa",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a8435dbe-f911-49fe-bfa0-8949784c39db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044224d2-16cd-487a-a62b-3702b10ff976",
        "cursor": {
          "ref": "f8022f4f-ac5b-476d-a73b-8cb0475b512d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ab2160b8-39da-48e0-9ba5-adf48d15b313"
        },
        "item": {
          "id": "044224d2-16cd-487a-a62b-3702b10ff976",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2f96fa84-108f-4576-9000-e95226020f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69df9bb2-e9c3-4146-ba06-792eeda9b7cd",
        "cursor": {
          "ref": "beba95d5-e34a-4c85-afce-9ea037fb6fc4",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a6e81915-d915-4e65-baf5-0c8262515f57"
        },
        "item": {
          "id": "69df9bb2-e9c3-4146-ba06-792eeda9b7cd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e8ae029c-f5f5-425a-8b56-b4eea7665383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2cacf8-d0f5-4a75-a1f9-5af2c95d7012",
        "cursor": {
          "ref": "fa0ded7b-d1f8-4cf3-95ba-59900d5394f6",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9f3855f7-01e3-4f43-a043-5118d1edf7c5"
        },
        "item": {
          "id": "ea2cacf8-d0f5-4a75-a1f9-5af2c95d7012",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9bce9b0e-c69d-45ef-8a91-6e00804cffba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fd652e-f217-4042-a12d-98ee7c2b45f3",
        "cursor": {
          "ref": "62f56235-a59a-4b68-904e-d5050a66a760",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "85c425e5-c82e-47c4-acf3-59c6d9135d9e"
        },
        "item": {
          "id": "85fd652e-f217-4042-a12d-98ee7c2b45f3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "235882a3-ce8c-4ba4-bd41-becfa2285f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6b5a51-a0f8-4e13-b452-da63c0f11d61",
        "cursor": {
          "ref": "4d817f88-9214-44b6-acec-dc2ecd8c5cc1",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "63223f17-e129-4f02-84be-28a47d075731"
        },
        "item": {
          "id": "7f6b5a51-a0f8-4e13-b452-da63c0f11d61",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6e428b42-85d6-4d9c-872c-4bc6f2fbfe5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c843b0d-45c8-4f38-bac6-33001fc78fbf",
        "cursor": {
          "ref": "63c5d216-77c4-4c24-b14d-958556985cad",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0d33530e-3697-4298-ab86-2d92fb51bef7"
        },
        "item": {
          "id": "5c843b0d-45c8-4f38-bac6-33001fc78fbf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3d969513-b33c-4244-b904-0d778a5affcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5c05fe-1779-40fd-84d2-0307a5805da4",
        "cursor": {
          "ref": "b906c017-30f4-474d-8381-b3e3c4dba5a1",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fe13069c-f2a1-4e61-8164-f2ac49c2b9cc"
        },
        "item": {
          "id": "7c5c05fe-1779-40fd-84d2-0307a5805da4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5056b147-f9d6-4903-ab62-895bc8347e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1303a8-ba94-42cd-8b37-33840bab3866",
        "cursor": {
          "ref": "00e7a910-9425-42a5-89b8-d9405f308a7f",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "367705a0-0b30-4283-ac99-ad2665ae6e24"
        },
        "item": {
          "id": "ea1303a8-ba94-42cd-8b37-33840bab3866",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "354e506e-a7ec-448a-b8a9-7e06c64e32e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0b27ba-98fd-47d8-a72f-ed9ee0c2d1c2",
        "cursor": {
          "ref": "5c39a063-06bf-48f1-b106-e196329ee6f7",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7ef945eb-28c0-4a44-995c-6f6a9c20876b"
        },
        "item": {
          "id": "da0b27ba-98fd-47d8-a72f-ed9ee0c2d1c2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a6c83656-e289-4979-a8f3-6a261dc9ed3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a85e2c-0ae4-4c13-b435-66caf8bb9178",
        "cursor": {
          "ref": "b6b378db-fc81-40b1-9e76-31f2d2570ff2",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "19622930-93e5-4c4b-9621-524c94fc5555"
        },
        "item": {
          "id": "a0a85e2c-0ae4-4c13-b435-66caf8bb9178",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d5954d82-89bd-49d4-b475-8edc8c9e718c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b470838-692a-42fd-8747-ba037d13656c",
        "cursor": {
          "ref": "729404b6-0bdd-4295-b4eb-ad523b184229",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a0cbd6ad-87aa-431b-a4e0-e77fdd23fecf"
        },
        "item": {
          "id": "3b470838-692a-42fd-8747-ba037d13656c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bea27a10-cae4-4cad-9e66-146c92dcf591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af127cc-5bf3-4425-8577-edb96d3be82f",
        "cursor": {
          "ref": "6924570f-a723-47a1-9d83-a86dc42b4edf",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "19419206-92be-4767-9d52-318723ce0bc8"
        },
        "item": {
          "id": "8af127cc-5bf3-4425-8577-edb96d3be82f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d538be0e-984e-4608-93e5-e756aa40688c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b1d5ae-d0af-42ed-8f2b-3d991c27d517",
        "cursor": {
          "ref": "90ea0aeb-d970-4d41-89d7-58d3138af7e5",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "038c61e3-5ea1-4413-8dfa-b8c0c2c6d7d6"
        },
        "item": {
          "id": "70b1d5ae-d0af-42ed-8f2b-3d991c27d517",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "820abc4a-8efd-4173-97e0-8b3bfde1f5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f6c8d8-ca1b-4a4d-b259-e278baf12475",
        "cursor": {
          "ref": "54457001-f1ca-4270-a82b-9a0c3dd163bd",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "142c328a-1e39-415f-8223-579bc8221020"
        },
        "item": {
          "id": "a0f6c8d8-ca1b-4a4d-b259-e278baf12475",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "189e655c-3e34-4e99-9ac8-b28a4dedba42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd7afe7-0df1-46c7-a14d-d177cfd8c67e",
        "cursor": {
          "ref": "5c58127f-0ee8-41f9-b2b4-8aea4301ee53",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7112a097-df3f-4eb2-bbf0-acfead1a0689"
        },
        "item": {
          "id": "5cd7afe7-0df1-46c7-a14d-d177cfd8c67e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bd8818f4-abf7-4b1b-b280-284f93203181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b492df3c-f06d-48dc-9be9-735ed0d030b6",
        "cursor": {
          "ref": "0c9daaaf-be04-407d-ab84-a0d67d6e8f4a",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5966b234-c43b-4a36-b90e-2f39c0e1c215"
        },
        "item": {
          "id": "b492df3c-f06d-48dc-9be9-735ed0d030b6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "54588d0d-0867-4764-8cde-10d58bf88d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74da774c-b16f-4fbf-815a-e4ba61121c81",
        "cursor": {
          "ref": "afc81194-6a6c-40cd-b3b6-514a2594bee9",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f40cd5f2-1223-41cb-9859-48cd1ab1a2af"
        },
        "item": {
          "id": "74da774c-b16f-4fbf-815a-e4ba61121c81",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e1bf7276-d398-43e4-854f-adfbf6924c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2a2b43-4b5e-4b9a-bad8-7e416b9eb581",
        "cursor": {
          "ref": "76d8cad6-00cc-4181-8893-d0760d9d40b6",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e460a32d-9a23-40e6-9f0f-7907dc46e9fb"
        },
        "item": {
          "id": "7c2a2b43-4b5e-4b9a-bad8-7e416b9eb581",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7619036a-1d7d-4b5c-b113-3179d96310c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef46c40-3f71-4eb9-8277-cdf56ea238e8",
        "cursor": {
          "ref": "79d6fee1-0fe7-44a8-845a-9f4f51c5733f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ee651012-d5a8-4a5c-904b-08f5ef99b73a"
        },
        "item": {
          "id": "2ef46c40-3f71-4eb9-8277-cdf56ea238e8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eff95b0f-4910-4ffb-bb6d-0374513f6c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3e038a-2e6b-42d7-a466-413a881377e0",
        "cursor": {
          "ref": "a0c8ea31-f836-4ecc-b072-8097dd78c049",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d3b00091-46b8-4389-b8a9-9925df414dd2"
        },
        "item": {
          "id": "7b3e038a-2e6b-42d7-a466-413a881377e0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "81334952-1989-4846-8903-10ac90ecdbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7d492a-f4bc-4560-b64a-947f3223167c",
        "cursor": {
          "ref": "52aa74df-6d55-4ade-a3fa-d320a0c48fc6",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "33c72438-1806-4a40-a0d4-417ae9829487"
        },
        "item": {
          "id": "ee7d492a-f4bc-4560-b64a-947f3223167c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "50b5f3ed-7689-4006-bf86-93ae2f87d354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bf38dc-8b96-4210-87cc-3b90d9ea371a",
        "cursor": {
          "ref": "fed56541-13e9-418c-909b-7adb06c9885d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a726d41a-f15d-45c8-9b03-8c44268add7e"
        },
        "item": {
          "id": "61bf38dc-8b96-4210-87cc-3b90d9ea371a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5c86b76f-7b61-4bd8-b348-8e8fd8bc1472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532044bf-c9ae-4845-8f70-ba0b57356a33",
        "cursor": {
          "ref": "71e0aacd-06af-4ad8-a2d2-b16be4bfe143",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bab54bb0-6adf-4547-ac9b-9b548663f9e4"
        },
        "item": {
          "id": "532044bf-c9ae-4845-8f70-ba0b57356a33",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8f7add19-08ff-4a32-8a6a-c9ceaaf7836a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8417e41d-df93-4907-baf5-398eaabbe0f0",
        "cursor": {
          "ref": "cfab82b3-1827-4d64-9daf-7f07635a1ec5",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bcb97740-7415-4fc1-9131-ca41d6beafee"
        },
        "item": {
          "id": "8417e41d-df93-4907-baf5-398eaabbe0f0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f2b9932a-fabb-418c-af89-5f199d463ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eaaf936-8cec-45c1-9032-2626717785d5",
        "cursor": {
          "ref": "df72a2f8-82fd-4b62-af0f-83f4991aa900",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "40593ec1-a844-4da7-983d-b772148cc3a0"
        },
        "item": {
          "id": "8eaaf936-8cec-45c1-9032-2626717785d5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "49bf15cc-1eac-426a-bcf1-975351a125ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caed44fb-fa53-461a-9135-ebd674fa03c2",
        "cursor": {
          "ref": "c26b8acc-383f-485b-a14d-ba190e1945a6",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a284307b-bbea-4dde-a866-9e710ac4be71"
        },
        "item": {
          "id": "caed44fb-fa53-461a-9135-ebd674fa03c2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f7f1ca1a-84e7-4497-8476-b41264b0f303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecde588f-5c7c-4fed-9484-499a02974b45",
        "cursor": {
          "ref": "52b14759-19e5-475e-b373-73a270e12fc3",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "483f4a06-0159-4d40-af8b-691152e8ebf1"
        },
        "item": {
          "id": "ecde588f-5c7c-4fed-9484-499a02974b45",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "807c0c75-dbad-431b-8920-95226ae7f7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5caad17e-d2d7-44ff-98ee-9e4fffa403bf",
        "cursor": {
          "ref": "10a2fa2e-280e-49ee-9cf3-550e8929b17a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9dbf897a-3a3b-4c0b-ac9f-53e135341370"
        },
        "item": {
          "id": "5caad17e-d2d7-44ff-98ee-9e4fffa403bf",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3659d97e-318d-4905-82bc-859ba1147d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cef2da-e5e8-4876-9e10-4b7995648e57",
        "cursor": {
          "ref": "51afcffc-2bec-494e-977b-ef791701b7ed",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5cffdb2a-c303-4df4-a14d-840e51645885"
        },
        "item": {
          "id": "59cef2da-e5e8-4876-9e10-4b7995648e57",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b85142e4-efea-46c1-800a-a7495faf8c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717c071e-bfc1-4abd-88cc-04153586a4ce",
        "cursor": {
          "ref": "7b1603cf-8b47-4bb0-baff-f66a3f3fd038",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4d34c701-9ae4-47e3-80f6-5e41fe58aa09"
        },
        "item": {
          "id": "717c071e-bfc1-4abd-88cc-04153586a4ce",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6e324db3-1811-4c34-ab31-ca81c136ea38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aad09f7-31d4-40e1-8220-b5fd9e7517bd",
        "cursor": {
          "ref": "940ab29f-763d-4d2b-a56a-7afff7ba60ef",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b6d6e3a4-da12-40f5-ab74-78ad6e82dd25"
        },
        "item": {
          "id": "1aad09f7-31d4-40e1-8220-b5fd9e7517bd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4de3959c-509f-487c-ae07-f60b6351b7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae02036f-a864-436b-a669-0c212ad875ea",
        "cursor": {
          "ref": "ea45a232-0025-4a44-afcc-d3bf8f9f0e86",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8b703d1a-02f2-4ee8-9038-9664b0195cac"
        },
        "item": {
          "id": "ae02036f-a864-436b-a669-0c212ad875ea",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e39ce526-f35f-4ff5-ba4c-ec36f4d6856e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18951ec6-cb67-41af-9769-d8ce55d0a131",
        "cursor": {
          "ref": "e41ba4c4-9aea-4553-b170-cebd9ad2b8dd",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6791b945-ead4-4886-b88f-47577cfb41ad"
        },
        "item": {
          "id": "18951ec6-cb67-41af-9769-d8ce55d0a131",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c4919127-811b-490a-9a85-a830b7b86538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f7aa19-7a64-4903-b893-4fbe4c84ab16",
        "cursor": {
          "ref": "547000fe-bfb9-4926-bdfc-287a0e9ffb39",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a482c2b0-cd95-4abd-b630-ca7e970b7ec3"
        },
        "item": {
          "id": "85f7aa19-7a64-4903-b893-4fbe4c84ab16",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cbd44b49-5a93-4538-ab96-b99e30fc736c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caabd962-936c-440a-8a7c-13907c4a2996",
        "cursor": {
          "ref": "ec4e43c5-f8b1-43e7-ac1d-da81f6931e1b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "caf12c5e-a202-4e1d-a38a-ecc428a8a32f"
        },
        "item": {
          "id": "caabd962-936c-440a-8a7c-13907c4a2996",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "932a592a-88ca-4085-901a-d7382e696486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786c234b-7d9b-42c8-8a93-7efbb5191b43",
        "cursor": {
          "ref": "965f298e-aa81-4ff1-bd3b-0ae51c9a5175",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "18574c8c-67e3-4fb2-b4bd-380bfbd8e3c0"
        },
        "item": {
          "id": "786c234b-7d9b-42c8-8a93-7efbb5191b43",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5c15b204-d289-491d-8c36-ee3a593a4d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d59610-4a62-4c13-a121-608bbf77dfc0",
        "cursor": {
          "ref": "2cd9f69a-2e0b-46b0-9204-7f70dfdc1423",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "aad1fc00-825d-4146-9872-358f9aae1e3d"
        },
        "item": {
          "id": "c2d59610-4a62-4c13-a121-608bbf77dfc0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "518a9c0f-17e9-4215-9611-87bf390bc3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60e6381-b839-454d-b480-20bae5eb649e",
        "cursor": {
          "ref": "deceeb97-901c-492c-89a4-de6be4e97792",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "414e1182-8b89-44e8-b74f-140cb312a05d"
        },
        "item": {
          "id": "f60e6381-b839-454d-b480-20bae5eb649e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bc6ad70b-afc1-46ad-b356-b4f371b11e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36eab835-d234-46bb-b44f-8b3251dd627e",
        "cursor": {
          "ref": "16232c69-ac0c-46f3-bcbe-2c2b5b654c10",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a2ce5e13-9b24-4e97-ba02-e682985be202"
        },
        "item": {
          "id": "36eab835-d234-46bb-b44f-8b3251dd627e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d40bbfb3-f6ae-41e7-a2f4-830fea3abd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb70ba96-cc0a-4ca1-901f-92d9924b3b89",
        "cursor": {
          "ref": "84f8630a-cb72-4951-aef8-2348fd94cbaa",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4a3cacb7-327b-408c-963c-9a5f3e840245"
        },
        "item": {
          "id": "eb70ba96-cc0a-4ca1-901f-92d9924b3b89",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6a144e76-4eba-41cf-9646-d199c8345866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8daf8162-4aaf-4459-9934-926643eccfed",
        "cursor": {
          "ref": "cfd763d9-ed82-4fe1-9715-97b30c6b6f76",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "67a60436-88c4-4745-a7b8-2773d90fe69c"
        },
        "item": {
          "id": "8daf8162-4aaf-4459-9934-926643eccfed",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fa3a9287-20ee-4daa-a20b-9c8922f4f1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84621ff0-e6e1-4958-9713-d14ac2e56bff",
        "cursor": {
          "ref": "fe945238-81a4-41e9-9188-01ff179a54fd",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8370e12a-fb4d-4a6a-b726-c81cdf625b9f"
        },
        "item": {
          "id": "84621ff0-e6e1-4958-9713-d14ac2e56bff",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "644bdf22-53fe-4dde-a311-9dbf4d718b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daa2fa8-1c41-46af-8356-7c06b6d7df91",
        "cursor": {
          "ref": "c8ad232c-4904-4ad0-a5b3-4fcee15ae2eb",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a452e546-8824-48ed-aac3-67ac270296b3"
        },
        "item": {
          "id": "2daa2fa8-1c41-46af-8356-7c06b6d7df91",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6a58a092-4f12-4eed-992a-0fbef846051b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9a7ef3-0a2e-4bd3-8397-5440e88f4113",
        "cursor": {
          "ref": "08f6eea2-16cd-43ba-9472-055ecf72cf84",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "df586563-c9ea-460e-822f-0d8b245d02a3"
        },
        "item": {
          "id": "ce9a7ef3-0a2e-4bd3-8397-5440e88f4113",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0d10b340-ef2d-4e2c-a958-6e53732436f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49db2aa9-0549-49bc-9d5d-2f54fd295417",
        "cursor": {
          "ref": "e72e8cf5-5466-4889-9f4f-d66221ccc5f0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3d5f4c0f-6ad8-4622-bc6f-4f47344a90d4"
        },
        "item": {
          "id": "49db2aa9-0549-49bc-9d5d-2f54fd295417",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6f99b9f2-c005-499d-acf9-6d4eb9be5399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6b39be-1015-4d38-92b4-59bb347ec3d2",
        "cursor": {
          "ref": "420a14f1-feb3-4d94-952e-d9ee5d7af14f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8d98199a-fc2e-41fa-8aca-b30e55c624a7"
        },
        "item": {
          "id": "1f6b39be-1015-4d38-92b4-59bb347ec3d2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5495fbfc-03f4-4735-903a-deff7f84ec6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcaf718-1d3e-4701-addf-8f234d70d70b",
        "cursor": {
          "ref": "1a58b692-0105-45e7-a008-82e131c26dd6",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a2123ad9-76a8-4bfe-89ff-a1adf6a3406e"
        },
        "item": {
          "id": "8fcaf718-1d3e-4701-addf-8f234d70d70b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0e27d59f-4813-48b6-ae36-9a2ddb663e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649c67aa-cfc5-447b-9dcc-e92c66f31b88",
        "cursor": {
          "ref": "5285cf67-7e2a-4374-bf93-96ec1e3d193f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2a2c8d2a-685b-4823-9da9-4a668c748e68"
        },
        "item": {
          "id": "649c67aa-cfc5-447b-9dcc-e92c66f31b88",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "97b9fdf2-8d85-4c0d-93c9-f5cad4c2fc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedd166a-16a4-4b7f-b3ff-aae3491a9813",
        "cursor": {
          "ref": "e6ab3c22-50b8-4f85-8f00-43d7961dd030",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "988c931e-a9ce-48ce-a894-467347d06ad5"
        },
        "item": {
          "id": "bedd166a-16a4-4b7f-b3ff-aae3491a9813",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4d98131a-c684-4253-a9c6-e7a99eb30603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4db84f8-b2ae-431b-99e2-1ffb749f7653",
        "cursor": {
          "ref": "a2d6a92f-7d86-4d3d-bb85-fd719d9e6808",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e19f5e7d-82d7-47d1-9e97-89a1dc78ad34"
        },
        "item": {
          "id": "d4db84f8-b2ae-431b-99e2-1ffb749f7653",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d39860b2-cc9f-4a7c-9f0b-61f1bc18518b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db3b4c1-7444-4e56-b9f7-f1a803e53305",
        "cursor": {
          "ref": "0723c86f-834e-4295-80c0-9281ddaac237",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2cca431f-b78c-4a98-9f27-8b2ec5805e35"
        },
        "item": {
          "id": "2db3b4c1-7444-4e56-b9f7-f1a803e53305",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "25889d00-9b09-4386-9c2d-5b02bf2f04f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0c3b2c-0069-4062-9731-084bd8620f61",
        "cursor": {
          "ref": "a40df1d5-0768-4a87-950d-fe4754d03e58",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "46bfde05-8027-454f-a17b-da198a8b3638"
        },
        "item": {
          "id": "cb0c3b2c-0069-4062-9731-084bd8620f61",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "055ba842-f2d4-4363-9eb9-f04ef79071d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75a6ec5-86b5-4cd3-90b6-4d6c988e6a63",
        "cursor": {
          "ref": "657225ab-c891-48e1-802f-b89b13facdc2",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f18c4da5-4b1d-4df7-8e6d-49e85c678d6a"
        },
        "item": {
          "id": "f75a6ec5-86b5-4cd3-90b6-4d6c988e6a63",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8fee681e-2a98-4595-a6b4-13bb193490ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db669143-9b14-4611-957a-6304abde645f",
        "cursor": {
          "ref": "be50eba2-7eac-40b2-86c1-e0d902f5e430",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9db00fff-1ee6-476d-b92e-4b1af6a4d145"
        },
        "item": {
          "id": "db669143-9b14-4611-957a-6304abde645f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "51e921af-b277-4f86-9711-a163b6b8304e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a40a9c-9fa8-42ee-a5d2-99aeeea74e0b",
        "cursor": {
          "ref": "6b46077a-fa09-4a13-a826-cffa340c75a5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f65cfe76-f1c7-4760-a735-98a842a78714"
        },
        "item": {
          "id": "48a40a9c-9fa8-42ee-a5d2-99aeeea74e0b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "07b2e1f8-598c-4c9f-978a-18a6a55eb0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0872979-2723-4801-99b8-fc9774c0d85a",
        "cursor": {
          "ref": "e2903dc8-bbd5-41e4-acd1-43ac612f0681",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7605285e-3159-4cec-a23b-a53893a0944b"
        },
        "item": {
          "id": "e0872979-2723-4801-99b8-fc9774c0d85a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b7612046-3ae3-49ba-b402-48a008ccd9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafe86cd-b009-4fcb-872b-9aee11cad845",
        "cursor": {
          "ref": "e6303ea6-cd46-48b5-9eab-b54cb69d3ebb",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1bcd33aa-fe74-4b7f-99d0-ab618cdc2e18"
        },
        "item": {
          "id": "fafe86cd-b009-4fcb-872b-9aee11cad845",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "31d47556-1fc4-4dc9-ab7c-2bcf72e52503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2773c6ab-6a64-4861-9da4-24fd47ba43ab",
        "cursor": {
          "ref": "5061d15d-3a9d-47fe-b318-e8002d00d48b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fdbf5e00-9108-404b-a1a7-42e8a84e5a2c"
        },
        "item": {
          "id": "2773c6ab-6a64-4861-9da4-24fd47ba43ab",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1d4a31ad-27c0-406f-aede-7b8eabbe7690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7284bb25-f9ed-423d-a24c-1de4c27d5f5a",
        "cursor": {
          "ref": "f75bdb01-f468-4c58-9c55-10d50a64fea8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e2ff06cd-3e40-4470-af62-346bf0af8167"
        },
        "item": {
          "id": "7284bb25-f9ed-423d-a24c-1de4c27d5f5a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "10b8f031-f98a-499c-97e0-e9cb7cb86d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96374278-c7ff-4c9c-8985-bcb07b118672",
        "cursor": {
          "ref": "733c445c-4a43-4762-b77b-c938931144e0",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d032c8e6-20f0-4b74-a58f-9e0e77b6821a"
        },
        "item": {
          "id": "96374278-c7ff-4c9c-8985-bcb07b118672",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1a9bf697-6bcd-4416-9664-04b225771f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11acfb8a-2a30-458c-b716-f6b60b52666d",
        "cursor": {
          "ref": "1ae8f450-6b13-4f60-a71c-1cd11492146a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4fec58a7-a42e-4e01-8054-623d10e2ce16"
        },
        "item": {
          "id": "11acfb8a-2a30-458c-b716-f6b60b52666d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b01ae04a-d665-43c4-a34e-b31e1aa57081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24298da6-7c59-41d9-a317-499cf62d00b8",
        "cursor": {
          "ref": "5fecdc96-436f-4564-8560-3739b9a25593",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a095f2c0-646a-4242-81bc-1c2e153d0a1d"
        },
        "item": {
          "id": "24298da6-7c59-41d9-a317-499cf62d00b8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "79f53eab-9aca-41e3-bdaa-9e694cf65b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff1d22f-1160-4d3f-b6bb-181f7ebba259",
        "cursor": {
          "ref": "e8271463-b596-401e-8193-5cef51e7f6a8",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d8c91b60-d0e4-4450-a003-b766d6d53dca"
        },
        "item": {
          "id": "7ff1d22f-1160-4d3f-b6bb-181f7ebba259",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f8a00955-d6c9-41ae-95c0-7da24fb9c0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb07b44-6ae9-4286-bd50-6dc42e5e51f2",
        "cursor": {
          "ref": "1fef2c45-29a3-413d-9108-ccc6221146c1",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c05ac3ae-aa1c-4305-adfd-b11e2f87e92b"
        },
        "item": {
          "id": "ffb07b44-6ae9-4286-bd50-6dc42e5e51f2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4485d13e-6d5c-4fc5-895d-615cd45b256f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee542bae-f2dd-4e49-98c9-dd076d8b48a9",
        "cursor": {
          "ref": "915cbdfd-0acc-45bd-b1e6-1f794c7bfa5b",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "83da04ce-9b0c-46db-9f44-aed0c9ff82b6"
        },
        "item": {
          "id": "ee542bae-f2dd-4e49-98c9-dd076d8b48a9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2542c151-d6ca-4d4f-8f6d-ddefeab2a65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5daeeef-276a-45ef-851e-570d3ce4a97c",
        "cursor": {
          "ref": "be04d494-2fec-475a-a0e2-5006c4627d91",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "93a87312-77a8-4482-8d9a-21842588dff4"
        },
        "item": {
          "id": "b5daeeef-276a-45ef-851e-570d3ce4a97c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "91926a3c-e89d-4d2b-aedf-81dd74d6e640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ba3dce-197e-46c5-8e81-4412577e8377",
        "cursor": {
          "ref": "39a4586f-c694-4949-ba7d-b7cb8e5d91fd",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "24cc7458-d832-44d0-949a-d71c6fb978cc"
        },
        "item": {
          "id": "26ba3dce-197e-46c5-8e81-4412577e8377",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fd716446-5959-4638-85d7-d00a9bab16b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a99121-1ed4-4b16-9ffe-24213e84e268",
        "cursor": {
          "ref": "6289d1bc-1805-46b2-89b5-09a64a3887ce",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "59ee76f1-54d8-418a-9d9a-e9e33e631116"
        },
        "item": {
          "id": "91a99121-1ed4-4b16-9ffe-24213e84e268",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a4043880-a28f-4523-bb77-54dc6d4a4eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621aa834-3ce7-4e9c-a850-768aadfa3377",
        "cursor": {
          "ref": "8e0d4001-961a-4217-97eb-96366d48ead5",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4a2f28d7-d81a-4310-a606-76b89ac98d6b"
        },
        "item": {
          "id": "621aa834-3ce7-4e9c-a850-768aadfa3377",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "35468d10-d486-45dc-acab-809a2b75299c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0309b22-4b39-40e3-952e-7d0df2bd06d5",
        "cursor": {
          "ref": "a828aa4b-70c3-4b69-a309-3deac2adab56",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a6f100c6-ae0a-4938-80ce-b88622245523"
        },
        "item": {
          "id": "b0309b22-4b39-40e3-952e-7d0df2bd06d5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0ee000f2-1a1c-4ef8-802c-33b2f2ad398e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4941bc69-b645-41c3-9bcc-d16b070502bf",
        "cursor": {
          "ref": "bc903955-164b-425a-ac4b-fde2b52752ae",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ae3ab7df-8e78-4ef0-9cec-ed717753815a"
        },
        "item": {
          "id": "4941bc69-b645-41c3-9bcc-d16b070502bf",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6d9f5ec1-3bb9-48db-8922-651c706b0573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f61b4d-3438-4302-a899-416b5a5979c4",
        "cursor": {
          "ref": "5475460d-3a0f-4215-b4f9-00c25ba9cefd",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "268d1811-0efc-4e85-84c3-dd75dc8f1af5"
        },
        "item": {
          "id": "d9f61b4d-3438-4302-a899-416b5a5979c4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "61986129-337f-44c8-b576-f5391825c163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78be60f6-024a-4f0a-996d-faa2966c1c65",
        "cursor": {
          "ref": "46517adc-dc2e-4725-b178-ad097bd19844",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3b82bcba-0baa-4ab6-b292-59915088307b"
        },
        "item": {
          "id": "78be60f6-024a-4f0a-996d-faa2966c1c65",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "64c50112-9a6b-4b3a-b7de-b3c735d002e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360bccea-b36b-41c1-854c-bb1fa3130a0a",
        "cursor": {
          "ref": "3ba40898-1ed8-4503-b965-375418d3e400",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6cfb261d-2f89-48e4-bae2-eaef40b13bae"
        },
        "item": {
          "id": "360bccea-b36b-41c1-854c-bb1fa3130a0a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "abcd8de3-b6fb-4208-933c-df4ea5806be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9ad15c-5107-4aa9-956e-11b80340bc3d",
        "cursor": {
          "ref": "83959a42-8f11-4b13-bf58-9c4e0b32695a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8cb78759-95f0-49e7-8cd3-a4a69cbacb49"
        },
        "item": {
          "id": "0f9ad15c-5107-4aa9-956e-11b80340bc3d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d6bccf83-58e8-4dee-ae41-bbc5c81c0a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff55acf4-b2ba-4aee-bc1d-a570b9bd3e11",
        "cursor": {
          "ref": "5c957a1a-5619-4756-8f5b-da6e1fa7bf6b",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "30140a42-ba51-4d1e-8d3c-3070ef846326"
        },
        "item": {
          "id": "ff55acf4-b2ba-4aee-bc1d-a570b9bd3e11",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0d35e26a-3239-4c12-9c0a-c719fd551ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4157f558-c64c-4bc3-97df-5491c09c8bcd",
        "cursor": {
          "ref": "a785601c-daed-406c-801e-ea50d212e041",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9eea57a1-d020-47e8-b41b-6a015a9f6fbf"
        },
        "item": {
          "id": "4157f558-c64c-4bc3-97df-5491c09c8bcd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "18a0cbee-59b4-46dc-9d9d-76564293e164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94741cce-8f09-406a-bf2f-c96bd3c4a925",
        "cursor": {
          "ref": "8950b0fb-706e-4159-9d93-8e6806b93a06",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "82f3234d-39ae-4251-8628-ccaf29c8af2f"
        },
        "item": {
          "id": "94741cce-8f09-406a-bf2f-c96bd3c4a925",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3f013b38-5b0c-4404-ab96-9aed5f37828b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43233f4-b2ea-4271-b7d9-90915e9a03e1",
        "cursor": {
          "ref": "ea0b2f21-f247-41eb-b8b2-0428bd63f62d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a6717854-8c58-46c6-acdd-8886d1070c2f"
        },
        "item": {
          "id": "b43233f4-b2ea-4271-b7d9-90915e9a03e1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0427d4a9-d7eb-4ad5-a816-cc073e82b1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d2e6c0-020e-406d-b998-46b1cac5ac8f",
        "cursor": {
          "ref": "c10fc2e7-90ad-4afe-84b0-70c03f3c8830",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "66942fe1-a292-4721-9d9e-e54e78fc69b4"
        },
        "item": {
          "id": "f7d2e6c0-020e-406d-b998-46b1cac5ac8f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a6793eed-967c-4927-b004-5d3ba5fddfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed6ca52-6098-4d7f-91f2-051a029bad9a",
        "cursor": {
          "ref": "d4c6ab25-16ae-42c8-9779-cf2debd1952a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c8af26ab-8939-4f34-ae3d-e51554a6e71a"
        },
        "item": {
          "id": "2ed6ca52-6098-4d7f-91f2-051a029bad9a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a2052c04-3fff-4cf5-9f59-5b06b573cf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700b3c5c-4a3a-47c9-ab5d-2bcb488e98b8",
        "cursor": {
          "ref": "a390bd65-6932-422f-8cb0-827c9ff84a2d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "064d8384-db1a-41ec-afbf-b06c0328ffc1"
        },
        "item": {
          "id": "700b3c5c-4a3a-47c9-ab5d-2bcb488e98b8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "eaca3ca8-2da0-4567-ae97-b8aa1d3c8bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bfcd6a-f206-49f4-b3fb-e73ace99fdfd",
        "cursor": {
          "ref": "db921a78-31d2-4911-8e0d-93476683f9f7",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5e796f25-8319-4d89-9b9d-203a0a1bb78d"
        },
        "item": {
          "id": "f3bfcd6a-f206-49f4-b3fb-e73ace99fdfd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "36e15bdd-8f6e-4c50-9fd5-e2abb96e7fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700c8dad-3eb1-4fb3-a004-f5995e8af5a6",
        "cursor": {
          "ref": "32dc2541-8a41-45a5-8332-e80a35d4de6f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d3bb6805-7f03-4dea-b686-949c8ae1c1ad"
        },
        "item": {
          "id": "700c8dad-3eb1-4fb3-a004-f5995e8af5a6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ace047b4-f840-4cdc-b28e-b1c62a938394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e466384-6a2a-43e7-97a2-fb09243b715f",
        "cursor": {
          "ref": "ca93cfd6-0500-43d6-9da6-ee40cbd00991",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "cc6369d1-7037-448d-a411-7057d82e0017"
        },
        "item": {
          "id": "5e466384-6a2a-43e7-97a2-fb09243b715f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "135ef187-3988-429b-a959-eb5965ca01f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bceb72a-e000-4ea4-91e1-f715feccd2ab",
        "cursor": {
          "ref": "c91a403f-62f9-4e5f-b8c3-a505f07788ee",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "64da10d1-e6cf-4d67-ac3e-f2af4bf76f72"
        },
        "item": {
          "id": "1bceb72a-e000-4ea4-91e1-f715feccd2ab",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ab1e592d-5ce8-4966-8f67-e53a8d257c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f78a246-a09a-47bd-9c4f-910faf0d5030",
        "cursor": {
          "ref": "31c5fc53-3a85-4128-ba04-b93157534a51",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f8281af0-b5e0-4b2f-949b-dc8b661c2eab"
        },
        "item": {
          "id": "3f78a246-a09a-47bd-9c4f-910faf0d5030",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9c455ed3-2b69-4525-b382-c4f297ae56c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d86dbf-4217-4a2f-9d38-fc044eb08e43",
        "cursor": {
          "ref": "f22d6e6a-188d-4197-8e3a-83d5cde9fee8",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5aaa8f55-d047-45b5-8c8e-ce27711821d4"
        },
        "item": {
          "id": "47d86dbf-4217-4a2f-9d38-fc044eb08e43",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e87dd308-6b06-4ec5-9a41-557cee8125f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd19535a-bf9d-4f01-bf9a-2460b0b529fa",
        "cursor": {
          "ref": "5b91d92b-2fc6-4294-af4a-72959b3d93d8",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "da5fb073-cd20-4976-a46f-b6f6ff8e1947"
        },
        "item": {
          "id": "cd19535a-bf9d-4f01-bf9a-2460b0b529fa",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2e7facf8-4ef7-4143-831e-a8f5c5b4b835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9a3cfd-c1f2-4245-accb-01cf8f6e266b",
        "cursor": {
          "ref": "fcfc9461-34da-426b-849b-dd855c58341d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3c6fcbae-c789-4576-a713-39086d867f32"
        },
        "item": {
          "id": "4c9a3cfd-c1f2-4245-accb-01cf8f6e266b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a909ead0-178d-4bee-a9d8-c0bb25fcc6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e7c0e7-95c3-48ed-9d17-2f46bb8d2ed0",
        "cursor": {
          "ref": "586a61c1-50a8-461b-ac1b-f4de29d3346f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b0519810-0604-4cc9-b621-f68a1f70278a"
        },
        "item": {
          "id": "89e7c0e7-95c3-48ed-9d17-2f46bb8d2ed0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a2f2a809-8b1f-4f68-af67-1a6193dce35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e95b05-2832-4489-a922-23cc7e89c705",
        "cursor": {
          "ref": "a5782536-de32-4321-a8cc-750314705309",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5db5c6e4-7dbd-4ec4-971e-012ce0e7372f"
        },
        "item": {
          "id": "c1e95b05-2832-4489-a922-23cc7e89c705",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e4ffb409-4690-4317-884e-4ec55360b98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05970644-5b55-4232-babb-6ddfa937940a",
        "cursor": {
          "ref": "c7fffcba-62b4-452f-ba83-785d0631bb8c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "14bf9149-bb6c-4a13-840b-78306d58b1c7"
        },
        "item": {
          "id": "05970644-5b55-4232-babb-6ddfa937940a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "42dd7b9b-a712-423a-bd57-7bc7cc4a9d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2ae5e3-ddb7-4264-b663-526525f21e23",
        "cursor": {
          "ref": "46c2bf78-a82f-40b7-98e5-d0d51a08fecc",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bd46f435-1677-40ab-993d-9cef8a3f619e"
        },
        "item": {
          "id": "4e2ae5e3-ddb7-4264-b663-526525f21e23",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9440c01d-ca16-4749-bf40-49a6271ac1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45478724-5bec-4113-a77c-11ba4ac65cd8",
        "cursor": {
          "ref": "3b38f3c2-7b8b-47e8-acf0-32664fccbb5d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "cd581474-45c3-4b24-b5ae-dcabd2c17e70"
        },
        "item": {
          "id": "45478724-5bec-4113-a77c-11ba4ac65cd8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "52f72f43-4324-46de-886c-69928fe3987a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d624e0f7-e47b-4402-8146-9911173bb22e",
        "cursor": {
          "ref": "7f8657ec-5bdc-4774-8ab9-d38b75c9d617",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "fe313cb9-ee9c-441d-8437-b35da6b8953f"
        },
        "item": {
          "id": "d624e0f7-e47b-4402-8146-9911173bb22e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e62d990f-ffd5-4361-91cc-757d950383f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb40eb90-42c5-4ab5-b522-9d582bf8b185",
        "cursor": {
          "ref": "b759d30a-b182-42a7-ab83-f2c46bab666a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3295d07f-c4e5-4422-85a7-00f2e01b97d5"
        },
        "item": {
          "id": "cb40eb90-42c5-4ab5-b522-9d582bf8b185",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "62c429f4-ee0f-48a6-bb88-566e392b15d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338a545c-4ce0-406b-b636-eebbb5e48a86",
        "cursor": {
          "ref": "0172e7c8-002f-4ee1-b6ec-9368b66f7048",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "23d44770-7277-42e4-a4c8-b3e49bd5205f"
        },
        "item": {
          "id": "338a545c-4ce0-406b-b636-eebbb5e48a86",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ce8cf9e0-d159-4521-b3a7-84dcb9186c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b0ef83-7f02-4208-abce-af5eb5788714",
        "cursor": {
          "ref": "8beb02a6-c964-42df-b0b4-c4b3c32ad97c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "861e696d-4711-4ae9-95b0-f4409b68cc74"
        },
        "item": {
          "id": "10b0ef83-7f02-4208-abce-af5eb5788714",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fb36b320-ec93-44ac-a951-a0b0340a19a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6de00d-4769-4182-89c2-7f6b5f708550",
        "cursor": {
          "ref": "9c6b4300-d49f-4cd6-a2e1-e938066cd3aa",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "47a337a4-8726-497c-92b7-75d7ca4d6e07"
        },
        "item": {
          "id": "4c6de00d-4769-4182-89c2-7f6b5f708550",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "415b80d6-9265-4149-a102-0874445e10e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4f646e-6e4c-4ee6-aab6-e980daf33baa",
        "cursor": {
          "ref": "d1382b63-9b37-416b-8219-66aef7f6174d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5a6ab898-2627-4159-90cb-1d62bf714140"
        },
        "item": {
          "id": "5a4f646e-6e4c-4ee6-aab6-e980daf33baa",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "64895166-22e7-429b-9487-61404f0bbb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac4d5d7-7e4e-41df-a4f7-25a919d9beeb",
        "cursor": {
          "ref": "282fe4b5-8d3c-4841-98ae-49ca55341b97",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "818c3624-6172-4c4c-a119-868ca739260f"
        },
        "item": {
          "id": "1ac4d5d7-7e4e-41df-a4f7-25a919d9beeb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "184ac908-8d90-4f2f-a6da-08431bc0df8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf6e84d-b43f-47ec-8904-a9859693b3cd",
        "cursor": {
          "ref": "ec3348de-69d8-4e80-a3ea-2b7249bb4b2e",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "70b4057a-53a4-4c9f-80da-6c807a88b1ea"
        },
        "item": {
          "id": "ebf6e84d-b43f-47ec-8904-a9859693b3cd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fb9d4e35-1816-4294-af86-744045ded711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3039ca92-11bd-4c1b-b3c7-0187fa449ce5",
        "cursor": {
          "ref": "807f12ea-8cf0-4069-94f8-db86d9edaf37",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "bde4e58d-eeb5-44c1-be06-3ab2649badf4"
        },
        "item": {
          "id": "3039ca92-11bd-4c1b-b3c7-0187fa449ce5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2108deb4-6440-49dd-b282-6fc60a5d7cf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4588fbf5-aa22-4d36-ab99-efd4dc37445c",
        "cursor": {
          "ref": "fcdaa710-f5e5-46b3-90d7-14f55ac9d279",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bcea38e7-5705-4859-adbe-a5df1a3de28d"
        },
        "item": {
          "id": "4588fbf5-aa22-4d36-ab99-efd4dc37445c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "64fe440d-6233-42d0-b669-5ad0c4f4dc0e",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd863f4-da35-4c98-b07c-73bfc00ce9ce",
        "cursor": {
          "ref": "dddb85d4-38e1-4b22-a977-a2b2a99d7c80",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "569a585b-d3b2-4ad3-97e8-9638cfe340ff"
        },
        "item": {
          "id": "5fd863f4-da35-4c98-b07c-73bfc00ce9ce",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4154efa0-61cc-472e-bf61-d516e99443df",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bd6e15-36dc-4abc-b618-58f4c27a9615",
        "cursor": {
          "ref": "b8ab878a-e22c-48e4-8680-0303f5fa0843",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "83be30b8-e37f-4271-ac2f-01d639b9f5e4"
        },
        "item": {
          "id": "d8bd6e15-36dc-4abc-b618-58f4c27a9615",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2b160081-863f-4bf1-a95d-9380ad9efc38",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a14c8ed-10af-45ff-9f3a-0519155056c6",
        "cursor": {
          "ref": "9092eb71-01af-4a2c-9c94-61ff9ed8362f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5f670f80-7036-4e60-9053-9f2a92ae8693"
        },
        "item": {
          "id": "5a14c8ed-10af-45ff-9f3a-0519155056c6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d0ec74ed-671b-4210-9dd9-b7ec9efe9116",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a14c8ed-10af-45ff-9f3a-0519155056c6",
        "cursor": {
          "ref": "9092eb71-01af-4a2c-9c94-61ff9ed8362f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5f670f80-7036-4e60-9053-9f2a92ae8693"
        },
        "item": {
          "id": "5a14c8ed-10af-45ff-9f3a-0519155056c6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d0ec74ed-671b-4210-9dd9-b7ec9efe9116",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec0f9d6-6d68-40e5-a486-3d66e7fb3f6d",
        "cursor": {
          "ref": "ed28fe9d-3575-411b-8d27-8b429f0ef1e9",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a9b8b469-3243-4b37-b03d-d8f807da704b"
        },
        "item": {
          "id": "7ec0f9d6-6d68-40e5-a486-3d66e7fb3f6d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3adb75e4-bd1a-4e77-83d3-361a97347d6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b3249c-6ed3-4f2e-aa34-6d184ae41516",
        "cursor": {
          "ref": "07a9d528-4fd5-4b6d-8200-841edd7d06b6",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "81106598-071d-4c1c-ad73-b5f07fb6ef36"
        },
        "item": {
          "id": "d9b3249c-6ed3-4f2e-aa34-6d184ae41516",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "42ef18bc-eb43-45a2-9dde-d546182fdc6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}