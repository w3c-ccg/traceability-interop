{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f06e9ea0-0cdf-4ef2-9a89-b5f091740277",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eb554d13-6b6c-45f9-9855-872957a1b209",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97c1d714-58df-4acb-aeeb-9e1c99efb1c9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b04339c6-839b-41a9-848a-2f2ecb637788"
                }
              }
            ]
          },
          {
            "id": "90075f16-21d9-4f39-828a-c5cf485e1630",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb665233-eaea-47a9-ac6a-f4a8120677c8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5444098d-2ab5-4601-a447-90b69c7a46c1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a9368e49-4314-40d1-a17b-d6f77250c7fe",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fbecb815-a36e-4735-8ed1-241cbdd1f9fa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d1554490-4659-4069-9870-c427ea6f9657",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc2ab857-1859-4c49-9969-188552822b90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b95b263-7a93-486f-a40e-56e86556f937"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "609029fd-0770-4e60-8aa0-f657473d4cd0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da22a982-9360-40e2-a1cb-bf57e822c001"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4f772e01-d598-4bea-b3c9-5b51ad58cebe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "21638b6e-1385-454c-8c6a-d501dc553e2f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bea8ef9-14af-4418-bff1-4b11cf7a0629",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7748549a-18bb-436d-bc23-affe7102a9a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01707625-01f9-4812-a11e-192cfd1d5771",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac28038d-2fc8-4b52-9451-9781753060e9"
            }
          }
        ]
      },
      {
        "id": "986b3406-7648-494f-a4bb-792b9a6bf0ab",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0166e19e-01e4-4940-aac2-11f99f3957b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "722bd957-3a16-40e3-b855-f464916229a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a69d0610-6fe3-4074-abb5-1e153613a0c2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5ed853-6e4d-4d99-9093-3f4164f8b932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ea2adb9-9db6-43fa-8946-fb8a1ec34e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086c7bee-f8b1-4ce4-b8d7-4e295a52b97e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d8515d-a4a8-4b37-a145-36508e954319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4124d94c-939f-4cce-af53-532f3fc94caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa03007-bb55-4071-bd3c-3ccaa9a629ae",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307b4fd0-5d53-44a4-889e-37a01c6ef499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c54c397-e9df-4605-8907-d23785e8a391"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef924c6e-9aac-4b50-8962-821b3fb1357d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62258c42-882a-4799-9f43-a63712940903",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2db5c9-4a1f-4aab-8d7d-96dda35f2904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f2e95a4-0677-419f-bcf4-f3b026d2f640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898328f5-2201-4452-8d06-2641eb671da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba138b45-04ba-4980-8f13-4dd723df8b65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d2e6ba0f-d088-49e2-8743-913540f58c49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6753fc88-2e77-42cd-8893-5929d0a158ee",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7279ad72-0b11-414a-bada-85e9ef4f4af7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "469a3439-75d2-4384-ad55-49795682313c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80e89c3c-e5f8-4635-8316-1a70cf8f2187",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0b09f80c-1523-49de-9e53-e0e5a141e0be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fb6c1dd-c38c-4dec-abe6-ced59e1bc65d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49854705-8fbc-4f5a-9e68-fb8a562cf653"
            }
          }
        ]
      },
      {
        "id": "55718a32-cdd5-4720-86f6-23fb9cb5e380",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fd53820a-223b-4a4c-a89b-7991da3cd3cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb3c33f6-6a1f-4b00-85b3-ef877e58942a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3c1b7902-c431-427f-ad9f-b97daf27f1f7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b48c1a7-0cf3-4182-afb9-99109faa92e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07aa0a3c-f248-4828-b618-8db87c9e1e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e699d81-481c-43ec-a110-c4068969ad6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22bb6c89-20d5-436a-a503-a2c978eef29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688d050d-924d-4519-bd3e-4d304b414d43",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f222c36-2085-496b-9cef-d7e82e6aa99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004bf885-2045-4cc7-848f-8bc2876d66fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb672ba-533c-4c48-a677-e84c1a3b352a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9715f88-a2f0-4bcb-9bcb-06dcef0f4233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cd72d1-b74c-48c8-a296-e860bd445c62",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606b455e-00a3-4f10-bc1c-948fd18300df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652b858a-aa01-4bb3-abe3-c2b84300c63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba3f136-d028-433e-8f3a-4452cdb0007c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aecd4a22-875a-4b4a-8215-2b26277dfe4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f20a04-63e8-41ac-9945-9e795f782ad4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e774b8-c7f3-481e-9564-446de009ffac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d19252-9ed8-4287-9426-4b95cbd7a08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3ea898-1d08-4b57-8766-10ee8d1ba630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bb4a508-28a8-40e1-a508-5a98a6be004f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111da392-2d7c-4ad3-bdcf-8c85267c1e1f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ac24bf-ebba-4925-870c-5a7e1f1e9bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792f2413-ae30-439e-90c9-0a388dfc7a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc3fcab-5c5b-4aad-8c20-7308eb302a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45b358dd-da4e-4f54-ad69-d5c06eeba84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef22ba7d-4748-4e06-8ce4-97aa7bad4ff7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce789788-5da1-43f6-b4c1-eaf9cf30299b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9667d997-cb28-45db-b4bd-d5429a1d59c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e44d4b-8348-4757-9b33-16e61f9c5bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39eec667-1192-4f9e-bb33-6ea1865082e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0276f240-6a83-47e5-8743-af731c26192d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657d54f0-2a0d-4556-b3ae-a5fe32e9b44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5703650f-fea6-4408-8ce4-f103254c226d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347f5e3c-1977-4c24-a591-d37bec505eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51e259be-7491-422f-a0e1-4744ac68fef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb796e4-396d-4302-b7bb-929318d9f3c7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beeb81f8-5432-4c9d-bab2-848181ebd562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367d7c91-40b0-458c-9994-6ee8a90c59e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fda44b-0bcf-40b0-9909-bf34742f9238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4de3efd8-23af-481f-8b54-93019ad8ea3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49534729-1130-4d87-8e00-abca836f599a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf91700-b698-4c6b-8ae2-d257c58b1948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa564b0-d2e3-4119-8600-66f627338daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1384b476-58bf-48d5-86f9-e8152b8eb83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "926570f6-a0e3-4aba-ae21-7cbf9850e2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cfb276-938b-4d50-bb76-7a4d265e55ef",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60aa5b15-b000-4445-9ac2-153674aa7421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6414998-84ad-415d-9321-58ac5609307a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f464b603-e230-44e8-ab65-65f33b277b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67f36d8b-9386-4abc-8d23-f804e1ab63b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a7dba7-717b-4062-8dce-f5396e9342e8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c51c0f-9e25-4e24-9765-150eaae02e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb906e2d-a770-4e90-af49-ea6bf50f1e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e34507-8aba-4d88-bac0-3e3a7b36c1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f594a19-c6c3-4b24-966b-51cf01a32afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63353325-bae5-4213-9a23-9554befb87c7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c82c6d-57f1-4a51-99bd-d796bf976c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0db7d1d-98ba-4c16-a969-6d0ef9d88ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376964ae-3556-4f5b-940f-9a630ebd94f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a52f5cf-f5e3-45fa-8282-f8e06211aa9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93db1dff-ae18-4759-8dc9-196742833af8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db42211-8a83-4edb-81d8-2c955562982a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf6ce91-fa3b-4fbd-ad4a-abcf907930af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37388cdb-d819-4b57-8fc0-90a03a227e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84bad14e-ae86-47fc-bcf0-9588d7d2aa7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fe26f7-e3f4-4b6c-a524-c5f4c1b8ed6f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a031dd8-651d-4de7-b808-75ef47afbf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547438d8-9292-4ec6-a744-23c7853f4157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3942b957-e32c-4818-ae58-e3ed88a75377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bc14c66-21fe-4e02-af22-4493ad75c136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a52a36a-b2a1-4776-9ef1-dd7ccf9b39fb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b2e70a-11b4-4feb-8973-67bf57adfa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3a0971-7e09-4f06-bc68-13d92337f15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dad8f4-72f9-4b2b-b02c-73642f2bb89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "696fcdcd-3a4c-4ec0-ae68-823e54b5b8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd07462-f15c-427a-bc42-4a932278ada3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca06f707-3554-4dd0-a880-4a2d74d4229d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1625cd4-46b1-464d-9ab1-6f85f1640855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d69a125-6094-422f-aa03-d59bbcee10db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4b2df7b-4a83-48e2-b911-03af20c3d9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9546e2b-b432-4462-83fc-a4ace2e050d7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75313b91-dd22-4cb2-a930-4ad8464bf9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097dd6e0-32a8-4710-a1ff-af87b39adaaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5934b1-3140-4002-bc21-b63ea3fa8282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ec2ebfb-57ea-4db2-85b5-a2d1ecf21eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625efa85-9b84-4d01-94b8-76d2d39ffb75",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d738f36f-d915-4e82-a88c-3017b109f10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30ea0ab-4501-428b-9830-b9896d9d914a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72318b9-dfe9-468a-b60c-1ad4cccf7a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0fdbdfa-ff49-4e5b-b6b7-bb4c669d874d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814a2738-4324-47a1-8680-5bb1794059ae",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914f266e-6e67-4a93-9ff1-cc741e6eb26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dcd373-1720-4f8a-a6e5-f6701a016537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dedec03-a3e5-4d53-8efb-80b529c77f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f802ce-e9fe-4fbb-8e10-f0bd236201da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ecc3a5-f287-4797-b264-7b94d1dc3a69",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0916c36e-798d-458b-b9ef-d0ca73d5c9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0169b91c-a4f4-4d2d-8d61-4a84d0267dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f99473-9e33-4df5-88d0-27c2f5d8a10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e5e27e-d2f3-4f65-b589-07ddf87db51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db55f604-2fbc-478f-a5b8-dfd416a49c40",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b219f1d5-2eb7-4ef3-9b42-4278a97641f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb7adcd-6127-4e63-8d9c-a45d88a51517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15175573-bee7-4a86-a6a8-21f8dca26fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eab274d-981b-4d9e-9ddb-72ac6db68dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4af18e8-4e17-43c2-be27-c6836cea0b40",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9bd755-e5a0-4e55-b821-cffea51984ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfd6f49-23f4-4f32-ab3b-30591b9e300e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0beebb4-8a49-4072-91bb-ed1653759b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23ea4eca-f6c4-4837-b00f-323ed6e3cb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7054251-1128-4891-b783-05d8494c29fe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799b1952-a813-40d4-bcda-a7d24542923e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33f6682-2943-47bb-9a0e-ad60b1d387ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65368588-228d-4089-8085-042bb22045ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9051432b-84ce-4e0c-b338-8ba65f012806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6321cfd8-d532-46f2-9743-fb186b3d81d6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf8c6b6-d6eb-4acd-9574-dbace79011cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70646593-9d3c-4283-a5fa-5f3cc63fd7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a994f7-f973-4f0b-9363-cadd7a7d9294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "84b3ac85-50f4-4b2f-b1a6-649443bacda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757a1498-aeb0-4b90-9dd5-2a108a133b2e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c19efa0-6d70-403f-a00f-bc095f569303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46de5a05-4aea-4aa9-b5ab-99b2e2916580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ae8b6b-0285-426a-bc6b-94f73c729878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca99962d-56af-4b55-9a8e-e064a8fcb0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e66a19-4a7f-48bc-9059-cae2ca4a19d4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d486ae9-b971-4955-a49e-4e191c208d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927acd8e-3844-44be-a321-543654a09f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846102b2-f97d-4fd6-94a8-f96e19a83230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0eb7d3-cc18-45ab-8d45-39d5ecbdb0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880c86ae-4d3f-412e-b7aa-fe3e716b7446",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea04b247-60d8-48dc-9803-675633baa153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd103621-82ae-4814-b764-9ba611b7802f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710b116e-19f9-4cf9-bcba-33620167b812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65da57b6-c933-4c97-b738-2bf6261608fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13da5250-5437-4670-8f7a-3763381a70fc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445bb27f-6dfb-4f8b-85e1-2f395adc3ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6052419f-7af9-4662-bc8b-636b632990b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284c98e9-b0b5-4d7f-9cf3-883c67d5f9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "866ef8ab-bb9d-4eaf-bec2-7d2b5ec1ab14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e4ca43-3c65-4c9f-966f-82721e4cc16b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40e3082-0db3-4176-8072-90c71c891371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfeb73a4-c2f8-43dd-a377-f4fd55b9c725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254460c9-0f6e-4101-986c-179db5484ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8dfadf-1f32-4ac8-bb8d-9a35eca0907e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dd7c01-f601-41b7-bec4-469ca0af9c74",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ab67fe-0b9e-4a84-ab23-a0977c93b5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5999b8c5-cb34-45f4-a4bc-3aeaf25e15c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94ccc83-6f3b-46fd-8662-ef861a1b6544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "510580ab-74ab-47e3-bcee-1600e333468c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4faa1a5f-d1f8-418f-a70b-09799ea77d31",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccba71c1-c986-4074-a834-c7c00172e381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a89464-4dac-471e-a82f-59e4e13034fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0c32b1-c5e4-48d1-a411-8b391831d59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ef69b9-7637-437d-9102-710be052dfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91de8191-d751-43bb-ab07-16b224af02ba",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c8e342-7ebe-4870-9a25-dac8c1cf2dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d872a9e-344b-46c2-bebb-ebea98177b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05b8814-e061-4edb-901f-e2756079cf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8233d513-1914-4469-ac30-62461ba95e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b88846-dce0-49da-80b4-d24e43693364",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4960c5a-68f0-4172-9663-cf62013bc844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198a23f6-f12a-4d54-9994-3a279d918638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad63254a-7feb-4245-aa41-84bcd15999a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1e5569-1374-4c49-91a9-9463a4de3a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c4da24-8515-4257-92cb-b26ae5e37858",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0234e0-4111-4a92-9d40-fa3a4de5f981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a1c649-2752-4f28-bd86-e0b4940729cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3eac60-56a0-402c-a278-89c493c62d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9540ac-9cce-4b51-980e-8d40767790cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068fbea5-8929-48d4-bbf0-18d46800e354",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22155d1-4c46-4c40-869d-e5d74cb6225a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf7ac58-5a70-4b81-9473-baecae9c0026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8c9c9d-e845-489b-b102-fb4455e14bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ba76c914-78cc-413d-96cf-5a875b855c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1545f747-4989-4070-8467-a5eda33a55e1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25318464-c2ce-439f-ae9b-6ebea5cc6136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e2da786-b415-49d6-b8e3-09e382ad85d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d82a765-4ece-4579-91c8-36ee9d1e3e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da4e0816-a6fa-4e6f-8496-aa1be82b0c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f2fd04-c51b-443e-899a-a260d8b921ed",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00d9291-bb61-4643-8821-fdf57b6cb3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb4d1b7-c5ae-43be-991a-1ccc31249733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5004730-7aa6-4542-8b78-578e71351e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b958de35-674d-4e0b-8c88-f57ba3d57591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af49546b-8e7f-49be-a719-1ad815671f17",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e0d9e1-41e4-431e-b531-0133feb9a2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f95f5a1-d6cf-4e0b-b759-b9f38b27194f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa077dbf-837d-42a1-a227-f0492505f60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8002467-2062-4883-9611-a9e2bd8159a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d211a324-1e79-42c3-87c2-628f48269a74",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d834d86-2d72-4a5f-8d28-afb75db3f4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380f391c-ef47-4e87-97bb-b884ec9468c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136d0884-33b7-4291-b552-359f13200869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f010c373-ffe0-43d9-8e6f-86df48ff2618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce163f0d-979b-4260-bee6-e05385f7dd3d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8aa261-9452-4efb-a3a5-0ea4ef2dbb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f0fc24-8e1b-45e0-91e8-cc54a6a4da15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424a29c8-5a58-42d6-9929-acc3f03edd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef706bc-6995-4388-9f4d-c5766b1bbc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff8fc4b-317e-41bf-a8c6-cc048dbd8814",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7718357-b839-4a07-8585-b67e21abe8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0147db2e-b692-42c6-8966-6159a0b05623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0794fd7-b5e4-4dfa-8adf-3f62bbb978dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "37a8c270-9f40-4d59-b948-30065fe63148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be01d5ed-5b28-4fbc-8e94-daafc2ae9796",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b96667-45d8-4ce9-aac3-1a57b7e37087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de20af0d-2a3f-4d84-ba6e-0e897cc8cb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b74484-5bca-4cf8-b32e-f0c3c11f67b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb8bad8-2d4a-45e7-ad74-735ea1cc4bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e68cb24-82db-4504-a659-bafac8652978",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79c90ab-511e-415e-807c-ae47066bb1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a66e2b-9f3c-4f07-9f08-300dfd3c5187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f69deea-6c79-4310-af3a-893b66e6eb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcd4da8-4395-4596-8c4d-b154de4f74a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b95ff99-f7df-4a5a-9c08-91521d3a3979",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee96b4a-e129-4e18-8076-a11da8ce9158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab99efd-bffb-4044-a043-cf2418a76d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a65d48-e6fb-4786-b428-5f10cdda9f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e063f737-782a-41a9-aa00-6548816255af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4507b6-6e0b-4267-b7c3-86a143e3581e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f163b45-5e4a-4d06-b6fe-2565cb0ca6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74477ad4-d74d-43e4-b12d-8a3f64a6ceb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56d04b0-8f81-42ad-aa16-3b1803241fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa54a18-8fae-46db-8fc1-3f31cf581469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce748a5-450f-4906-886e-e40c35b0cd4b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569e04ea-cb6d-451a-b561-51a2b23aa043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96390a80-8cc8-4379-aec9-e8d985fdf058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b049ae3-4efc-498b-ae5f-616c440e067a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3746167-8ac3-4eaa-8518-408344995fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2928ba3-3bad-4a54-b97d-b89e3fbf88ec",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb28aec-a01b-420f-9d09-a46a65b0463a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1a35f8-bc00-45b5-a296-460d56999d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f83d4f4-4837-465f-8217-65cdeca5c519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aacf74a1-39a1-4cc7-b9d5-3b632a998458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e19de86-34f8-4283-8c3b-c220351ea389",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5345e558-82a2-462d-8d48-b3ba16a92a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae46b297-2bf0-46c9-b2c4-8ce0979084d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ebfc0d-f5b8-4917-a394-0138d4d2e7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db97d9a2-9dcc-40fb-88a4-63d8a4cf612e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a21e667-ed6b-46c1-aefc-ebc487d1e72c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5438be18-d69a-4147-aec7-ba6bec7fdf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ca564f-8428-4510-bd16-f718612cea62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548d0706-3d4f-4e4d-8274-0ab676245912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "300260c1-24ee-402a-89fc-1dd390651877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13148bdf-707a-4663-bf7e-4cb425d72ac6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82720600-7639-4506-b6ea-1aca4eee3ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833046de-6b20-4c05-9d00-c2e45144ad5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330697d3-81f6-47c6-bb5f-30b1109db372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2eb1d00-37bc-4684-876e-324ec25cc345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dc86a6-42c7-4e69-bec8-9fc9090558a7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bda60f-f81e-4529-81c7-bd70904783ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504aa7df-8972-44de-a0db-d1372bdc2dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c504ac8d-e761-4a11-b8cc-5b49fd93d255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e19e9c0f-b601-49cc-8d96-50b3e7b9b32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857ce53e-20df-4ccd-aeff-d19b7ea6c3b5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66d3056-0854-4fc6-9425-8e2b80d59632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0112580-1c78-47d2-a78d-a90053558f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c599c9a9-4a9d-4f6d-bd34-47273f13c804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b484753-3fc6-4558-a4a8-0f3242cb73d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0317812c-9d94-4f19-9921-a5e7f5b7d5a9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126b5443-b1c2-402a-b89e-00d723007fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ca654d-e258-433d-b49c-3611bd7251d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bb4299-0749-4b58-9389-78615ffd5113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d401bd5d-e80b-4427-808d-2b13ffcf882b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b110c0c3-f589-4695-a9fa-186961727462",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55020ff-3c16-463f-a269-a3fe40352952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cac682-473a-40ee-a317-897ef937399e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5348c1-2ce0-4dee-97b6-0e1d15e964cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4138b4dd-60d7-4559-8aa0-47f66eed2eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2050cd31-97d7-4c2b-a1d7-9d3761f7ba90",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9003ee7d-ec08-45f8-8a56-cae5e33e22e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f478990-a6ad-4b6d-8441-11bc3e3b0709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d0cd8e-a15b-4ca7-b80a-54d423a0a8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79cb1e57-638a-4506-9b04-5235ce7cce41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67602091-62ea-404e-9948-dc604c4b4854",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c293b8-2b86-4c76-8246-281a14dbc820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da215b8c-f974-443d-abc0-090a8c098c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be95537a-ee79-4358-ad29-f5cd74545027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3318d2-44a4-49ff-b6d0-d52711264148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77300ad2-2c88-4d41-b8cc-62a4830ea2e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91894e49-f946-4495-a7f4-5db4b0d27ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8555638-52a6-47a8-a92e-b211e142d767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac99203-e159-4dd8-8721-ccc60ddadab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "be3388cd-e8da-43ff-8743-ee8ad2810a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48aefc3e-f245-41e4-8dac-5104079e75f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6babe7dc-4923-4ad3-be26-784e969d0e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90286d00-cd44-4f8a-b4fe-5c7fec2229cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db490ae-a9a4-4e01-83fd-bd3b4bc2ffee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "39815bf4-a1a5-459f-a704-6babdc7d0fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9935b0fc-ef4e-461a-a1e7-3bcb00a48ca3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7854bd16-272f-4de0-b93e-c41f2b323746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b256f836-9139-4d8e-9c2e-03bb413b0cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19065a02-608c-4f94-afac-4fb008da7026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d25d6d-aea3-45f3-aa71-9ef02c1391fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db3b4f1-972b-448e-a931-27fca602ac9a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fc0ac4-89ae-487e-944a-746ba9dc93a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f54720-2be2-4765-88e2-9864b2147460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de922c0f-dcb5-4bb0-be19-a44ed8cc1a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc46dc0-d766-47ce-ad39-27b0d70ba9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787894b3-f5c5-4953-afe2-bcea60d9d31a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ae53ce-41fb-458b-b82b-7a35a6d732bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50643a8-82a4-4f48-8194-1c04ae790ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfa0b04-6fab-4e8c-8890-38dbd3f72437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "afac6c0f-4d18-491c-b7a5-c141b91b29ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08a9ac0-6aa3-4d68-ab85-3cf90204f1ca",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369ff9ce-c711-4e55-8e8e-9deabb5bd2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c257ac74-c49a-42f0-8aee-52d2686383a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e5db1f-6053-417f-af25-107703b6147b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "96a6d0de-3b9d-406a-bfe7-d01ae6e387bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d1e6a7-0d02-4e75-bfbf-8644cb23be5c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e112449-c45e-4c63-9be3-78cf5aacd796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22eb94a8-e913-406f-a5b2-a596b634acea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356c2ccb-5fee-43d0-bc3d-5143dde3351b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "203db6a6-9865-42fc-9b8f-b94137fc07a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a67d671-e7fd-408d-bfa7-707bfebf0b02",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873104ee-0a83-47e1-801c-94f7e69f022c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8181e0db-61e7-4599-8533-503f8c474168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab007c6-16e5-4f92-889b-c74be25aa530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c48e50c-9379-4b62-b674-7e2bbb9165a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f40d93-0464-414e-84c3-89e8ffd9d89e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9699b076-50cb-4d17-a085-cb5f80d0af11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f696c9e-3297-432e-807d-2684aa59e470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd8c0d1-9bf2-432b-9e2c-f4fddec01c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "724a29e3-dda2-4280-803e-c84b5386b915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792b3482-7017-426a-b668-c59a7633e1eb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70c68ec-8720-4113-83c8-fb3991742d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f085927-2524-4fe7-90dd-ac5fc37d0427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8cf1f8-0aed-42a1-af41-6cdc0a3559fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dff31fee-3897-4138-be07-19cdf84c6599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0534c6ea-822a-4311-9235-964fb6ece062",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0d3deb-a718-49cc-b18c-a06b5b19c389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677b4526-4325-46b3-84d2-298f430651b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e74275-ba3e-41ac-b12c-7b685426f4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ee8eac-1f95-41c9-aa69-d6efe3fa89e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5761a7c1-16d6-4c39-a8ac-e2b6a4cc6efc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc1cebf-2d54-4b70-bc3f-def2e3770e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d628ad-bfd5-40b3-bf91-a3db4fef42dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d8e5d2-c352-4a45-810f-046a24205e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "23fa9c80-280f-4cc6-94d0-70d6f4ce2e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae80c2b-6204-40d9-8b4d-db135efc593b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368bc60a-ff12-426a-8357-285af5c720b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fe7b5f-72a2-402c-a80d-333195205385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009351a4-0fde-425c-97c7-07cd73369f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5e432b-5028-4db0-bbfb-355da308cb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf4ad6a-2b88-4d72-98b0-79455816f7a8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7127fd-724e-4ab7-b6e8-565ac38f4bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd175ca-8f67-40f4-aa06-b4999e343508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62305157-5614-41eb-89af-9f0b8f686414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dac305ef-8688-4580-81ad-55a0cea47727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6fc244-b71c-48e5-b3ac-3b8840c12786",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62fda85-37ed-4597-a84a-ba73f625e5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4ef74a-2d96-4e49-b755-b28d72635b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9558a089-a07c-4ba1-8a1d-5982cbb3be15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb63563-bf74-4a69-8591-27d7b5d23e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc77d1c-5bc3-4717-b37d-6d6a0c198333",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a78ce18-c2d4-405e-b38e-109f53b51a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62c2750-3282-4880-b8a9-7185dd76963f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06c15d5-882d-4fa2-a1cd-ee68f22efcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "101ee495-ce37-4e82-ad14-5f522c7d10b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe887402-d52d-4628-ab5d-d655e21f1791",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c53206-f418-4d2e-8c42-598d7a3320bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ddc6333-21bc-455d-98b0-12b2ea4b8177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249bc3d2-0932-41ef-ac09-adcbc014a346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21096aef-7e75-48aa-b03a-c0e5c2cdc7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1aea2a-2f0f-4a8d-a51b-a1f4c5e5424c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5c28da-b01e-4454-bc70-a9e960f4e5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec552b6-889f-4ded-9908-264384045df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da56cf73-3e21-490c-bcec-59f5e122ccca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d11bfc6-85fa-486b-a4a8-eaa22ca92acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28a3c51-eac4-4ac6-823e-57ebddadddc6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a77d5b-69b9-4c00-9f9e-39027b20780b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb54b16-585f-4d5c-87eb-ab380461d48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bc126d-ebac-41a3-814d-31a3893eab33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20644f47-9e2e-4dd2-be7b-e299c3972409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eda851d-4cd4-44b7-8f29-4c720fa0c21c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1045940b-c9fe-4db2-b0c6-a48d492af5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cc142e-ba4e-42c1-93af-295771dd6639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc210a9-7620-4bb6-b7af-7aeae136cc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "feabca71-4456-49ce-bf65-07895d0f807c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1aad319-abb2-4e7d-8a76-a301b446a0d8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd2f0be-e96e-4d74-b216-681f2694daa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a36aadf-ccc1-4965-803d-64ef86adc453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d806061-cc99-4ca7-9a0a-3e5b31a90039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b78d27-c239-462c-becd-f637b370a3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dba27a-3023-4acd-a8a9-c913a2b26189",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1ab64e-5373-47b8-b370-8f2f7cc57288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9c1d51-14f3-46be-bbb6-5b83abb38798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d91aca3-024f-428e-8e1f-47cafb620c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f705e1d2-1fc2-41a8-aa39-53ef523391fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a41a03f-ddf0-480b-9a28-94fcaba5c8c1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6f5f08-353d-478d-b36f-d89585844b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2596139e-64fa-4508-9f16-ce7975f88f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dc32a9-6ddc-4eed-a7ce-c1a342999dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5795e16-e443-416e-a348-d79d97fc9ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fd8674-0638-4bf8-9674-9f703ec888e5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69d3c81-213e-4132-8a92-6cc7681eb04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4376067e-eb60-4b1f-8c64-cc413c7f1fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b4b37c-89e2-4c57-8dbc-59dc74de3e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c86712f-ac90-4ce2-962f-b8a5a14892c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fe9d20-e666-48ac-a3c2-3298ea2365cf",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c46c023-5da1-46e0-bfda-b262b98640f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444dbed1-8502-4570-81a8-1ce060e39876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b08cfea-a260-422f-ac2c-ddba92afc654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "401a357f-6326-4b95-a266-28003815978d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ae35e5-4d98-4838-a3cb-03bcb354107e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbcf495-2633-49f0-a647-33831296a7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e1dff1-1b6a-4871-afbd-a93cbcf1c481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e322c8f-c4c8-4140-b014-9dcba0b5fcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "325fb3ba-03d3-4b9d-90cf-3fc46e048346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826905ab-8ba9-48f1-a908-f079c875e49c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32dd664-e066-4fd0-b422-ffab5fbe583c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34ea440-47a7-440f-b439-9370ef849ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d433c3-3e10-4033-ba0f-88c70ea9f640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eec93e8e-c015-4db7-bf19-28429bce84a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a7a15a-95fb-409f-b481-14faf4430773",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0153d859-0ff7-42fe-8a6a-4fc1e36fcbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5015f9-5409-4c2a-8d02-670f60716e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23781b39-7afe-4799-b803-9fe55ee28f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d92ceee-ca2b-438d-80bc-a03ba842767e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68004684-908c-4be1-89cb-39077f486e0d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978b0b02-03c4-4aa3-ac84-9d9fe2b7459e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ff739b-5273-4094-bba2-78029a4d055e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32da11f-c5b8-42bf-9c5a-d9a4df7aaa82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fca55166-8720-4a1f-884a-548a0bbcc022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0537f1-736a-4f4c-9a99-ff21be330bc7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3626a6f9-677d-4765-a039-1379a19dca92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ddcb0d6-c4b4-4add-af9a-dbf5c59548e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1834e8a-f28c-4a84-8c75-74e3009578e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61b13a21-9a68-48d2-adf8-1889f81766fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ca54fa-ea1a-434e-9a8c-0fa26f5045f0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaaa04e8-a33e-4268-8549-a054769d795f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4efb285-dcc7-4a15-87a2-fedf7592a4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4807c8-c271-405b-9170-4990d10f4599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c020615b-bbc2-42ff-9a07-dd782f37a92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1e0fd2-6bb4-4061-9db5-d975f337b373",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08dc80e-673e-49f1-afe2-2607dcc0565e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbefb3a-100f-4dfa-9460-11fe72071a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a79d01a-65a1-485c-a96b-9753ce4fa699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d73c982a-d80f-4607-a395-1455ed4d521d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b8d245-5516-4ffd-a7a1-ffca1cda2f9e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0131ee-b9d1-4f4a-8d8f-6039892f3a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316525eb-b549-4cac-9f39-730a9ab9eca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0472c782-a651-4a67-a9ff-a6c0448cd4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "07a62ef0-9189-4378-a226-f7b877870dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20cc09d-55f7-4bfe-83ec-48a5ab014e8f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b038864-aeb5-4010-bf77-73a3a74dbf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6e7e52-d445-4018-9e3d-cd379e6e3772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0faede-0ae5-44de-a916-644283a82dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5581bd48-1304-4215-b025-39f8ca4766c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c557383-e8f0-4877-ae2e-f210ce95cc80",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a3acbd-187d-43ef-973c-61629b119d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459761fd-c893-4875-bd9a-b6e6cf782949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10817467-28bd-4fcb-8bc9-0611bbfbf8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b741c817-0560-4f52-84c9-23315682a4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2352082a-ac25-45a0-ad1b-46ba6b3c1217",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616332e1-aaa7-459b-a1aa-84d7c7fdf76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0e2bec7f-1d7f-4cb6-973d-d567891185d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f554d8-c6dc-4cc7-bced-5ed0b35140a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0a1068-15b8-4283-8d57-860fed3fe903"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8023fef7-1cc1-4862-84bf-ea64fae0a353",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7f908c8-e76e-43d2-8a34-49b1a9c93763",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba00987-3a2a-4d10-b7d7-029007624332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3edae367-8893-4eb4-9afc-0147b53f71a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be98e680-fb45-41ae-b487-e8b2809aa0b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa36057a-821f-4f21-82cd-bbffa772ea16"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a65c0b9-b066-41d7-a736-4803a0d962e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6622d6c-7874-4e61-80fb-93c7a4e1d191"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7cd61b9-e1df-410b-997a-003611a83d29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e4d12b5-2705-4eae-9520-600bb9b317e5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f9c51e1-cef6-473b-aff7-6be7dda75bd2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc122ac7-8b28-4c17-9069-6dba7ad94879"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef091807-b31f-41f3-9cb6-3fe1c3847fc0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fef5731c-11b0-4629-ae3c-5c16af9c930a"
                }
              }
            ]
          },
          {
            "id": "a7a42932-8902-4116-8c8a-8fa23cf648be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36969bdb-1d1b-4858-9954-db343564db83",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5069c7c9-4354-4b47-908e-a7080f30d156",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13749af3-a47b-433b-b0cf-753bb38679e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b143c9e-d74f-487c-b651-f79f4a748e5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "548d5d17-9e65-4b1b-993b-74d44aa56076"
                    }
                  }
                ]
              },
              {
                "id": "df3a3366-9461-4fb5-ac80-bc90da78e6e3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95e91c8e-849d-460e-b563-90cf43ea09dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a009a36-63b8-431f-8392-14335f283371"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62796a8e-be20-45ac-9b2c-0c13f5e0ea8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3c2a4f1-c55e-4835-a574-2b4c7489e56e"
                    }
                  }
                ]
              },
              {
                "id": "3bc0d7f8-cdeb-4fa9-985b-ae78291b2a3d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b30aeb39-c917-4d68-aca9-19eedfb88114",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "828817bd-be65-46c5-9ffd-0bdebbbc5986"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83fdcb74-5886-487e-b6ae-6ee954de1770",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01fa75d9-825b-41dd-84ac-ba2a63b538b7"
                    }
                  }
                ]
              },
              {
                "id": "7890ace9-a212-46be-8881-071e9a1b927e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2eb65b3e-d1bf-476e-8ad8-4fcfe6a144a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "773c1ae7-01c0-4669-b245-971f726f8471"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "935b99b0-818b-4e1a-a957-e92015308217",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7b2eaa57-7812-4ada-8ef8-a6436e5ed610"
                    }
                  }
                ]
              },
              {
                "id": "77043996-500c-4b61-be4f-7d7165ba40b5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa82ac79-fdf4-494d-ab11-5bb924ad027d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ad4ad1b-3b33-4b78-9230-b1dafd9ca02f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3a8242b-0c5d-4863-9ec9-8fa0c339af95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "50f6e2b2-bfb5-4a16-87df-3094ce1f6dc4"
                    }
                  }
                ]
              },
              {
                "id": "e970cbe3-2048-4f44-9160-927adf3d79fe",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6dcc756-e869-4fa6-9821-d30907003c05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "657ae027-69f4-4ec2-9c14-03fc98dbcbb7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21634815-fc31-462a-9429-470d2f84b45a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5d0b7328-28f4-44d4-9d6f-9ab27b2046d7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "794425cd-71fb-48f8-a435-5eb0b3eeda41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b074ee02-d2d4-4d49-94ea-a9871604fc94"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7885206f-a065-4179-be49-7b74d5c27e90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ef7f78c-4f34-4b38-a285-caae6c26f295"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13f6885f-788f-415f-80d4-77a7439d021a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e907267d-e503-4f32-ad46-783ca8844f46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d97646fb-38fe-48c9-ade4-dde5dc1becb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "806879f6-3933-4a76-92c5-d8af278c60b6"
            }
          }
        ]
      },
      {
        "id": "c7049f6a-77c6-433f-b0ee-282d56e41bde",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "df8b8385-5a1d-434d-8ddd-ba12ee75e37b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5a6f143-4950-48e3-8ca9-66a939683f9e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bf99e10b-3fff-4608-8c6e-e1e2ffed4644",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e367dec0-c42c-4ea3-8802-61ddba36d346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfdcfd7-68a0-48da-881b-808091e577bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a22f931-7016-4320-8162-28805eec5d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f612f0e1-bdd6-46eb-8049-823aec621741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d1769c-bb67-4df6-a698-fa1f00083a75",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec8ad08-25b7-4b04-99d7-4a0d8cdfeb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5081600-2612-459b-81f6-c8383cc1e682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db274d5c-6e6b-4490-b6d5-b9589e40bfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a27f63c0-b719-4be6-835e-5b2c1ff5474f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da28589-f5c8-4450-9a42-869906557526",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5109874f-21d2-488f-ad1f-38dadde4914d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7f8be0-568a-47fd-b8a9-73e9cc1c6eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4b62aa-a8f8-45d0-be00-924c7f7044fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d06ada-dc82-4964-bb47-3764b8f14033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f163fb7d-abf1-4bec-880a-bd4b7a096705",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c980e5b2-2946-4282-8851-fb27ae85a663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd54af4-d5e2-41de-b390-646f55007209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bfcfc0-ea57-4f71-9b9a-48f2c8384d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a11e217-81fd-4fdc-9ca3-2345df6485f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1fe2b8-94cf-49c5-a30e-5549c9fe8a7e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561fa76f-c69d-4c4b-8657-4c8f67b0d2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebf8839-5073-4579-bac8-ace5192f69f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a4c8d4-da58-49ee-892e-3084cdc5184c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0de95fb-d085-4a25-9206-8f0b2abf075a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90817118-0cb2-47e6-b76b-858ce9550651",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f623b17b-3afb-4a1c-8349-91a62bbc35e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83b00da-6135-4f40-bbdd-a5eaa41e571c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b8a373-92a3-48c0-a0a2-41ce8e3d6fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b01464cd-09fc-492c-a552-a6b8499fd21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6219644-a5eb-4ec2-95e1-54c4aa2b9589",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3984cf44-0a26-4f28-875c-970f2e9215b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d74dfd-9d70-4e85-805a-d22864ca659b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ded4408-a328-48a0-b354-baa85a6e17d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f59fef55-8c7f-435f-9656-a48f09e09244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9493627b-abe9-4fc3-82e2-3a7c1bc84e41",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4185a578-d044-4c7f-83a8-249f4814680e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d35716b-50be-41cd-9e26-fafb77cf9dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0d5d52-801a-4952-898e-00c5f439da2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dbd92ec-ee84-4a40-b238-b8ce71eaf9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ad6aa1-e1f0-4b4b-bb70-0bdcd5d9cdb7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bee07a-6071-4931-ad75-b257fb56211b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c858917b-f67d-4b1b-8664-bcc957ef2599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec42f28-b7a8-417c-86b1-4cc2bd7f70a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4328f56-5bfb-4a04-8eab-9cb3cd07902d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b96308-0c91-41f0-a56b-616c51501b63",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f517f78-4fb3-4a8d-8254-b468bdd2c12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f7a7a1-0686-4e68-a592-4261b7ee14da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb7616f-233a-4044-8aa4-f59cb6df70ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd56135-43f5-49be-beb6-16464deb3cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342ba9c9-29db-4196-80de-905e0504446c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185061a9-1569-47a5-9562-479b0052014b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96fdaa8b-99bd-4c2f-a82b-1dc1f86fe9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176d29d2-e7e8-4338-b5da-897f859d4c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "824ec4ea-c4e4-4002-b611-a3c86b1c6382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c9804e-b889-4898-9e31-a8cd235638a9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82290eff-037d-4f7f-953d-28043fc1a999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e204dee0-3131-4672-a9ca-9ed3cb88be07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f581fd0f-24f0-42bb-87cb-20abbce1ce0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a85dae-be89-4436-962c-81ccb9513129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0714df-fdb2-4002-85ee-b6c728412af7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfc801f-5032-4193-98be-76b2141965f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee8b79d-d69b-4737-bd8d-275772ddaaa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7299b6-0bf7-4505-a373-814717476699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b469e7a1-d921-458a-bcc4-7b3c0196b69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b6f219-f265-47dc-826a-1be9d54c1c9f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30049303-8187-410d-a294-7f3e12f81089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c83887-6f46-4499-adb9-9ecf4b65f8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084efd24-fef5-4b90-87ea-27d3235c51bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0e2e74-8c4d-4ece-a339-87ea5a8291ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c3ef9e-809a-48a2-9360-b9400979f6d9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39592eb0-95e2-482c-937e-a79f131e6699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e63886-d739-495e-bd20-7e8714412ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d795a47c-49f8-4229-b81f-a98870427256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4dc838-2a77-4f31-a996-9528b1cdac51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760e99b6-39b2-4af9-a321-de39cc34716b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160f58d7-3b64-4cb4-a15d-1c1921e10929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff5c0c6-dc34-402b-8279-8172ff740c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d19118-0dbc-42e9-b112-f0461028e34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "67cc2b87-8425-4cef-acb6-0ec7358b27c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdb65ba-f9bf-4abc-aee3-dbfde7e5836e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351a23a2-4db1-4e18-b0d0-9521cd3d97eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a94e7e1-0c01-450b-a79f-cc3e6118a9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db04283-6d5b-4bc9-947f-5f1d687cb060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb7c9e0-2c88-41cb-bb47-1136d002c8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f0219c-42e2-460b-b7f9-1fdd7bb81ac5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643eff3d-5e3e-4e41-910e-08ac9002aa4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4af91e-0959-4727-924c-e96401118d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94195d4-a3a8-4acc-ba91-465042f8f95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dbc220e-a67f-48d3-a372-baf43ef8f9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7a24af-c761-40e5-b5ec-d5c31f1b221f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0e7c74-5431-473d-90d7-067a721b47ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a512c713-3d34-4410-9124-2e1070bacca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7e8bb5-7af9-4116-b933-2b2eb10eb7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12dd94b1-7b8e-4daa-962c-edf941820f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8c6209-9203-4d6b-84c2-6b08b1e86cb1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33275b4-4ba6-442c-abf3-bc9a02dccf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee04936-808d-4417-8b3e-32fd0e94081c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789d7b0a-ce84-4177-8160-667761d36001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b35c3828-93fc-498d-a9db-0d3727cf07b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b54e7a-6d93-4a97-8a60-bebd2a344fb9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b5dce2-8e92-4d02-99d4-98827275e35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a01a662-ca7b-45b3-a3d3-6dea5ad3c77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb556980-1a4c-4dec-a1c4-e761f184fda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f533c2c-aa95-461a-9d71-ffe17a190710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6de4c7c-ac20-4e3c-8230-931d30e7a13d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2cfbc0-42fc-4f30-9ae1-6c4fd4c2e4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a386c3-4f72-4683-8466-7f51a7f6a135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5458734b-5fcc-40bd-afb4-7b539d42dcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43545254-d6b8-49d9-be9b-0ce36ec9277b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363812ce-e123-486c-a991-39c3ab959f27",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff6fc7f-3a01-46c9-b9d8-8b587d3e254a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deab5ca8-e075-4f15-9298-24e6e3720380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237871e1-ead9-40d8-954a-1148a46e02e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92f691c9-289d-4dc1-b2ca-4a5adfb7bd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ad3d63-c242-4cd8-8b29-09ee6b20794d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d26525-29e7-47f3-ad75-867c698bec01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18bacbf9-bdde-4f4f-9ac6-4e1bdafa4464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c9edac-55d7-4d85-9587-a86dff5ad0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad39eeab-3528-4f13-8f17-3bba3f1f909c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec0306f-0a1b-469f-80f0-e65bf0f1be72",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6fcb49-1447-4c18-b9be-2a5c226e6ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3037175f-0420-46c6-b320-beffc0088af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8753e8b9-d755-436c-a139-839c255d1f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "694d12a3-adf0-41e8-bb00-e22bd4e84fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2413992c-b164-4092-84ad-aded6743a228",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e1a037-5b5c-4ad5-b42c-84042ae9db16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61da897e-6023-437b-a630-e98203aaf3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038f9ea8-861e-4a22-a8ff-96e5c42d3a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12740f3-787f-4c5c-a881-c1508ac5ea8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed9e085-3238-48c0-9796-5cd2ce490546",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee42e3d0-1f61-4b98-8eb2-25d4fc776862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36f7c59-cef1-4a48-9e17-cbdace41127f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b154af3-63f0-4f3c-a8d3-b4134f2c3c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39b0d56b-5873-4303-8183-451a54a248fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaf8375-7573-4ad9-a849-44dcec2e05fa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b1bf9f-fab1-4449-9b5b-dd82fd265098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4804d5-02b0-4b62-a25e-59f114b032e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce69c078-9ca2-4ad9-ba52-6c7772ffcfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c663c033-3f71-449e-96c8-d193989e42e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02c5a71-2997-4101-9aac-208e9e4a18e6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2672f527-3173-433c-b8db-d6ed47675790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b382af0-9689-4149-894b-ce65e8d42747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217d7e16-1fae-4785-8ccb-ec6f280398a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f73cad4-c265-4bfb-8ed4-0aa6c2d25762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c4b50d-3500-4b9c-acdd-d8fb64c44d03",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d096b02-d89f-4f2b-9d62-2854f7ddee1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c030aaa-968b-4f85-8838-09ea33677381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4438c6c9-d354-44c5-837d-d3a90a326447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1a82bd-d979-43d6-ad54-da28be2ba106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8d9017-abb2-4265-b05b-64ac56a7d577",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ff6a75-43dc-456f-bde2-46398fe7e0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4160e40c-0509-4dc1-9857-ad10a0de2194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828ec677-b4b9-486c-86c4-e045b35d1bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76250e18-89f8-401f-9415-f804219d4fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a945bca-3b08-4d5a-8620-bd3745aa305b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e9c3d9-3782-4939-86e1-9ad590964682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562abce8-cd4c-474e-8d96-4646a4cd1b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18172f6-1dbc-4d00-ba0e-8b1e0f2db86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee12437-9fb2-454e-9f0a-30d7aa3c406e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db2c67cd-285a-4edc-9f11-5f5cd5596907",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "393ba98f-eb54-4310-aef9-4287b33b733f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842f2c13-bb1a-47ce-aca5-e9facd88c31b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4848156b-e1af-4846-8364-959329f8edfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b2ce37-da09-4422-95e7-7f6f91d43925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "478634d9-9ef3-409c-853c-4c62c14afebe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2c2baf6-28c2-4fea-b57b-7c58634c0950",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "875d58c0-53a7-4e43-be21-32b88e62f68a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "130c25c6-bbd1-419d-bc58-b509235d22f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d96a9817-c80a-4d11-9ef9-4688c22c5220"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "622fbd3d-4a28-4070-8d69-911d3c43f2c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b0b01ff2-b83e-464e-a70e-bc95ce871475"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "089d6aac-cd73-4733-83e9-af46f00a88ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9045255-6f1b-4ddc-a1c3-7b4bd10353e2"
            }
          }
        ]
      },
      {
        "id": "a8b8ed2e-57cf-444d-835b-14f9796a8e53",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6735c956-e82f-42a0-abbf-fe98c4eea012",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49af65d8-b88b-499a-a471-ee248c176c58",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8463a30f-43c4-4965-8875-919e5f22d1bb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7918397-dddd-4ada-a2b8-20d4ac8a34fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96c0cf1-81a5-42ef-a530-297ed2882c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6346d0ec-70e6-4a0b-a4e8-0080fd4ae7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "999f54c2-715e-4e77-b6df-7a670b496024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d57f9d-fbb7-40d3-b491-a8ce774b987f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a314038d-b8d6-4e9c-9092-8ea0a720fed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91468480-2142-45f0-bfce-a112360f58af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e124ed6-c7c1-4ab5-ab7c-dccb9be6c8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cdfa19d-d25e-4535-a3d7-385b4a888e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63426f6f-ef5c-4fd6-80fd-5b9e9a8cdec8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c765e7c3-bff8-4e3e-a320-93ae19181ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8351002d-0466-4f28-8373-f0262da4613e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04358521-bf88-4d6f-89db-894d025910ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc5dd8f-d9df-401b-bce0-b188d09e415d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bea4866-8a18-4f74-acc3-3579c1376d13",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390c07a6-414a-42c2-98d9-fec8429d6472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919b43e2-b568-470d-9bc1-8e9aff95ebfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20e0b9b-2ab3-4423-a927-b63c76dbc1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b40dbaa-aff7-493c-af36-e017791294fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df921c5-fc8e-4bb0-986d-4e077806fddb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f28bf6-c356-467f-ae44-52109f3bfce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ff4591-65a8-42bc-85ee-b89d420bdc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4336f4-e23d-439d-97dc-5b357e95a7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3fe2ca-86d3-4aba-b2a5-4d795d393753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34030ef1-0a35-44b4-93e6-0e21af6754e1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8f051c-ad45-4a05-935f-2488402f09be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd8d788-96ce-4953-b344-54921168c366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660c0bf7-b236-4263-98cc-2a77450fc3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d929b5c-960d-4508-bf4e-73e37018688e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc72030-1f8f-4bc5-875d-8c303052108f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35720e97-2f0f-477f-a159-3baa939d582d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71135c7c-a846-4efe-ba71-8000be286447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8dbcd86-d384-4cc0-9149-e4b5eb85d7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0453feae-5e02-40da-b007-1336ef1aa19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761e0d02-7c30-479a-850f-73c3195dec02",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a08480-0108-4c6f-b59c-13ad9ec5db37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da24a74-0e3f-4742-9849-cae8593a50c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc873d3-f7dd-4090-84d1-8ab6fda918c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6164c8e8-4453-4c9d-983a-3065e3e40de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b90feb-a52f-45d2-b6f1-15548d9ba81c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264737f3-ec85-4c6f-8723-a98b63d10192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7e6114-84a6-483b-b2a8-c06e39217f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9661c645-566a-4556-bab4-be87f6446fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8de1c103-e0e3-43cd-9374-4d9f6e40c623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ab67ca-559b-4928-a947-59cc0b4dea5b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf9acb2-562f-4ad5-a5b3-7ca853b23295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3673cfb9-5ae2-4053-b26a-57912c1d7943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40005aa-e157-45fa-a880-67f28721cf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a84b7da9-6901-48de-a5bb-668f8bc9419f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403e6a7d-095d-40e4-ae7c-d3deeefec5e1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4a3837-4fce-4ea2-9edb-37ce482b23d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe3ea90-8fd2-4d0b-adbb-5e9cb8b4f1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52e002a-c476-41e6-887c-def94d978245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "86cae848-aee9-4edf-84f7-2660c2149af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150aa9eb-baef-4797-9ebe-72cd10ac5937",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169cd265-b78d-40ff-a3c8-86184370a374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe79068-97e9-4165-9036-520b1ff4f000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d46ae40-c250-4a27-ae7b-2056ee37866c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "711a2f45-0089-47e6-b00a-b36a38fe177c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253a9366-e6db-4b77-b083-303ec3c6e872",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea75a5b7-1edc-4661-ac1e-ff7d3a7de7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db41de80-aaa3-4d63-9c5f-b0f9aadd6cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716979bb-6817-4c87-83bb-af03623ca83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef79a2b-e7f5-421a-9624-daa4a6fa852c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed15efd-60d4-43ab-a83b-822f68dd6f36",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1393e7-b657-465d-a6e9-93615d99e4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9386c70f-9291-4082-a956-bb64239f0abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d7b166-4edd-4799-8968-359456b8f76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e7bb7c-316f-4421-8a7f-0a551878b070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab2b7d4-7104-4389-9dbc-587e4ecaa9b2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d588aa9-f94c-46f6-9d58-52089cd216b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5edb6e1f-b15a-4ef5-ad91-d6bbafbe0461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64344e6f-1cbe-4c33-849e-b1d43db3544e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d28e2262-b473-479e-be20-c997a0e1c27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bf2eb3-6e4d-4825-b3a3-53fb08953563",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d076b9-93a2-48c8-a49e-b398eaedeadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572c7d0d-091c-4577-acea-47b45286c981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ef0a9e-2bcf-4db5-afc2-f9c5235b2c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a432771-6eea-4e1b-b573-19803b1d9378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66472e2d-ffa4-4e37-9f3f-69386c3c0319",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c89cc7a-aa46-45b8-8501-9e7af31ff5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69473063-45e3-4952-b609-761f73101138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0343c49c-3ce4-482e-ac59-f02cf566c0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac9813e-e6e3-498b-9a32-cd010506c835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a835057-8b58-4abf-8580-da2e92dd7e49",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3849ef-8718-447a-ba5d-6a8a5eceae61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a03440f-df90-473f-9c96-b599afbbf19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084a879a-c28a-4df6-ae11-6450760d6fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb6678d-d1c8-42ab-9c08-f93ab19acae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee20b4d2-95f9-42a0-933a-81f964dedd11",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348aa957-828a-4058-9c63-0b1ce25b9069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acdea949-f71d-4de0-824c-fa18cb13af50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a790e7ed-9fbf-4f55-ab0c-4e934d350b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "817cedb2-3da5-4dce-acf7-ec5ec96bf7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936f4762-497c-4eeb-a632-782ba763baa8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdbad4c-975e-48a1-a803-26b0702a4285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58adba97-8bc5-49ad-99a7-61d50ca0f93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc206ea-1b4a-48fd-bf81-12470f92a047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e70a5ab2-40f9-474f-aab4-91824fd33f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b5c435-09f5-426a-a312-e36748934b65",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049631b6-f74e-4ac5-915d-772560859a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90acd91-0aee-42a4-8403-bbae0747e83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5af43f-5087-4204-bfad-267f4a85f1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b08b8d-a068-475d-828f-c5f8a775aa55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291c5c61-aaf4-4176-ab7f-11a7c605cd59",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8b4a36-2a9f-425b-981c-6bd0275716d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b1fc1a-f436-4f76-b8f1-0a97bea5a20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20235d6-6708-45d1-9ff6-e9ab3901dbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42372901-3529-46c9-8b1d-7f65078df57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7049dcf4-3513-485a-a295-b091c1f4702e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd82453-c7a7-4055-ac65-7b1d5e1fb544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df863752-07bf-42e1-8ff0-d16028bae198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e9c7a8-3edb-4a98-87c2-25d7239c1018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "482f136e-cde0-49d8-b6ba-7e84933a97fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5afb5f1-ecfc-4b58-bcc6-878dfc04c827",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b573cd-1a80-49f9-93ca-6b17a0d2eb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5af134-8db7-4d2b-974e-2d1140961d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402b48a3-a724-4918-8727-71c3a7081a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8719da5c-9ba6-4d2f-ba78-487672578fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39911139-8d5a-4fb5-bb47-c1dce55ebcca",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f044542c-b3a6-4c53-b3c5-89a3f50909d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acca7470-9385-464f-ac7d-629fd1d3c321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3f7e73-40e0-4d32-856d-905b19c41be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00cae5cd-fb69-4ecb-9ec8-c0dfa2d0aad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a7c498-b4ab-4802-a5b4-981dbd1976eb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe5fc6b-ac12-4ecf-af36-579af8722643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8db8c6-c19f-4f0b-b0a2-56e54fda990b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5ed945-a344-48dc-a10f-bd3117ea983e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1250536c-ed98-41c8-9f6b-8bf14e2beb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04e0cdf-acc7-471f-817c-b4b0bb6ccb95",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d26a3de-502b-43d6-ae09-680156315ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269fb23f-23bc-4b50-bd31-485a8eca9b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51127d65-eddb-4715-930c-260918f04f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a90c61-8a17-4605-bbaa-8b4b094d9749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b622a98e-e37c-4daa-9375-2a4d2b41bcd7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dee129-09ba-4b87-8d1a-757210e176ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bd1a56-cd71-4c8b-862f-22b13bf2739b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39c9872-d050-40fb-b48a-1e4dedd0fdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d076e0f0-e007-4b12-829b-5d6e5ed59af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc5ca02-502c-4c67-b488-f14cc768c919",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f747b1f8-93c8-460a-a40d-36b16529c9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01db58b5-63b6-4d80-9821-4b99454714a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ba27b3-9c54-4554-99e0-06d4514ad459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20561195-c64e-4d94-8df8-26bb29c71c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2621075c-4a17-44e2-ab16-d9943e5d30cd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ff3c05-8d7f-4815-b8d4-046ba3437c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda87bb6-bf15-4ad3-b123-2dbea11b88dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee97e51-c6de-4ff6-a928-8f3b3c7ba62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e2e342-1a8b-4d46-aa80-64414cb98cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca3681f-9a6c-400f-857f-fdfcabd04473",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55569c2c-9e86-4771-bc57-c6bf7f31db87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9aae8c4-2c37-43e2-a03c-384eb4ccb76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4babdd81-0b93-4c1b-a647-9bbeb1a64bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a4273a-bce8-4a48-ba2f-acc28074a187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22d4793-db40-4aab-b157-e3fef53ec5d5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f3454c-0e2c-4db3-b3de-22c5ed1216c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d948e4-7884-44a3-891a-6ec065c11e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f378051-d158-4a16-8283-0120f2ba01a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0b9f1a-9395-458a-b556-638c2a34f974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de4efab-5d71-4070-976c-c0cb94a019b4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e563c8-2e05-4999-b0ab-29e8cde118ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d2bc6f-1584-4df7-83e4-4e27a6c64505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d842e3-b6c6-433c-93f0-3bdbacf6dd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f79ec91-bcc7-4b51-8935-a80da898589b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a974361-5cab-42f4-8741-0505586ba028",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5776560e-3468-4a74-b1eb-28ec304ec3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180623a1-b7cf-4b7e-ad62-e4a3de901d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b869ab3a-1f32-4766-8188-e15fec6dbf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7ab573-1bf9-4641-85c3-2fe52b77f9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5e684e-cc32-46a0-a9a4-7a97b8ca12fa",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105fea65-9ac0-42bc-b714-53d5308e5291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2997df5c-02b2-4e83-bcff-38e76da126b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3036bf-a07c-44c7-ba10-5fd8985f90da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "118548d7-b7b8-4b6e-9864-0ca51078d4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec51f0d-c3ce-42da-830c-224ab6a4a5e8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a421664-c994-45d8-9bc1-8d002231a2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9698a843-3d5a-48dc-b449-ba970f525629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e602c34-a889-42cf-88f7-d7f1346a6d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a205bc6-4d75-49e8-886d-7b5698c55a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b96f8b-3634-4a1e-bb4a-fb70abf5e5b5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c389fe4f-ca7a-41f4-9ab3-b439e75d1221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d679512f-6fb1-43f0-aecd-e86813112091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f398db4c-4a6c-4d7e-80f2-8d00d966c3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a273be5e-1308-412a-9e37-38265d13ff72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6836b81b-954e-4177-a4e2-f7cde72cc5dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa85ce71-33cb-4bb4-942f-d9782a493f2c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc046d72-5308-4842-986d-190ecf94f3a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "42b451a2-0941-4916-b98e-7c910aa8cbf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b71f3e5-8da7-4e53-86bf-de0cfe086e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f36ba171-1534-4814-b0c9-4b2e666aaa6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3759fa33-f3dc-439b-a88e-af7c24b175eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e328b10-7964-42cf-83ef-1fdc1063d436"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9342f360-1b37-49cc-9509-dd9c4b6ab60c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "100e881a-ae30-4918-85ea-291f5fe0155f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27cd54a5-9599-4b59-bcd8-70c73b31f539",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4df87bcb-79c1-4dd7-92b9-7c7aac3179fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19488f4d-e9b5-4619-a4ae-9c3a68fc8f7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bbca298-57cb-40ca-9909-ade16b9fdf01"
            }
          }
        ]
      },
      {
        "id": "653b89fe-66b6-4d7b-83de-81973b0d8ca2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1a11bd83-ec6b-4ad3-ac02-04d0edeb453d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebf460bd-defb-4d11-8fc8-03e79e453fb7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f5eddae0-21c5-4fa8-ab3a-816952847540",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917a7b63-d869-4eae-98d2-be8bfb862ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8820afdc-d142-4614-af7a-eb385c41b422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74061a8e-9723-4b38-8342-68d999461d26",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c713f970-6424-4ca6-9bef-66d17cd169a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24851b24-19bb-433f-9b35-de2927a3a136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b4e4e3-0894-4d8a-bb9a-46d9b0ddd86a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac3c686-10f0-4035-9857-f6c38ef91142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c935a7-1e13-4414-a8b0-3be57e243bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397d2201-56f2-40b5-851c-72e53756f8ba",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac380726-ff4f-4dee-b18e-d3050761e190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb52428-03e5-4efb-8431-848bac6ec772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50399bc5-d3e0-4e63-ad30-7d840da83e4a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ef1aaa-b834-4fbf-9ff1-a38fb0f7df4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca87271-d895-4204-8ea4-e20bdd36753b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05811843-bb1a-49dd-b11b-93941dedad74",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2dd9fa-e1ea-41db-a193-14e1bfda7036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab517e84-c68a-4b98-a1b7-f7cb8ad1425b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ca392a-7885-40fd-874c-7b868b4bc7a2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7107223-d168-4f18-8436-1be1af500e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a25eb94-d1b3-4947-8727-8e849c17cb4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c7c84e-aff9-4378-8fe9-410d707fa064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fe1c1f-26ac-404f-a119-b5970013b614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b753b8e8-51bf-45a4-9b89-60b4317d2154",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c391efd1-2586-4856-ab6c-58c64f019ab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3cf257d-b732-4754-b280-5a9b8d5e9ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d791ac4e-c878-4488-95e3-af7e2f180b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa7ca06-2539-401b-a7ad-fac39cd6a393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e8edbb-0163-4d2c-8855-b4e779e5b398",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c49c71-1bea-4d92-9a8c-7649c506fc2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e4c9c0b-64dc-48a5-9a0f-88c96f5b1be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9e59e5-ff3f-4a88-8c47-48cee3e07d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5b50ea-0ff3-4c40-84ef-eae6ede69301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebd8c1c-b7c2-473d-97bb-ea2db92a452a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3df532-f782-4cad-9b00-1dea0d3e8202",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f7ee5c7-67d3-4ef2-80a4-a7ffe240e831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77290b4-6b3c-490c-94db-74c43eb21049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804e3f3e-a018-48fd-b90d-fee51ec229a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ee996d-ae73-40a2-aea5-b4ddbfc33d06",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36641fd3-ab76-45d3-ab20-737ef9d1dfa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec15a964-3ea8-42aa-8a34-311d93d7cb37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee27e9f-781a-409b-9d94-f58625adfa39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c4c43e-6c06-46aa-983f-6180cd00b339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841d9a5f-dee7-405c-959b-b23bbb543de8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd09d18b-b9b3-4c63-bbfe-7f83f5e5a606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067bd6b1-c063-4ce4-b3ef-fa9dfbee382b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30eb532e-4caa-493b-9eaa-af8db33faa89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ae5f38-5490-4582-8faa-e61dc21d5789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75feb4e-5f96-4d03-bd17-398d7f5f7947",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b705428a-2222-4a6b-a456-1a265122af95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a33af254-51f3-4a82-8438-2914afa9672e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cb5938-ea95-43f3-9bf3-393f20cc9b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1316d408-ffdb-4400-adcc-c44ef12b8b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a561bf-f011-4c85-846c-d8601ba7610f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290aa9c0-54c7-4c20-8db6-4e8aff444d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c0e94e9-cc90-4ca7-a0d9-68c395bbf7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f71e94-5cf9-4984-af62-56ffede88ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e16c74e-1c88-433a-88c5-175b35911334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458eca07-a528-4c69-a3eb-1bf6c841e3bd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0cf031-aaad-4149-a481-93e53eeb87e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b213ee3-f005-49d0-844e-f25f8c21dbe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81a20d5-121b-4109-a063-1c72fd17ecb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de06384b-d625-4747-ba44-3e024bf22e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e808b1-d959-4412-9fcb-cbb54b5add42",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cac797-8831-4fab-b486-77123bbaa4d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e4a292-ab88-42a3-a56c-b48d63ae967a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298905c0-fef3-42d3-a14a-6563b7ec3837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad437d5-c714-4fcb-884a-13a35c75271d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760edf62-61d1-4886-ad42-4f146082dd40",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bb37f6-08da-4df7-b704-764d4424f0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad3e048-803d-45bb-aecc-bd5d612d3920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4526a1c-f8f1-40b1-ba9b-d8b4d63d2f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe212fe4-d2f7-43b3-939a-a1bcad9cb368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27b5cee-3a1b-4c07-874c-e9eea192610b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608bd9be-ee1d-4081-aa06-6ebc21ad4706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45216d79-6312-4ade-838b-9d1b34ef751b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ebcf09-f8ce-454a-845a-51669b3b8e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a84d973-d1c2-4c79-98f4-bc3adbcc858a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5faa1ce-54c7-483f-ada2-d6f310b767da",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2128469d-4e62-4a4f-8691-211c2ed76fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9699864-3ff5-43e0-b833-9e066c00949e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7256d6bb-4218-45b2-b36a-6881286d61d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbf79a2-20ae-4b1d-9c61-39fd8ebe6f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482534ec-855c-4ee3-adb5-c6658db6bc30",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceba5ed1-d474-401a-8873-7b736bf652f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07543a45-908e-4503-b0ed-9d07ab2a6009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "372f8997-72a4-4e15-902c-59aaf73950ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56f199f-45d5-4c37-b7b4-483d2f74fba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2458858-5c4c-4096-875f-f0b8f1f2c3a0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6244de6f-006d-49ca-b7f9-c134769562db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2c6572-2e58-407c-93e4-c3a5d8ca009a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca04409-a64f-4498-9500-bfa03e3d7d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f90704a-98ea-43ad-9694-777b1aba24c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e4736a-d6b0-4906-b98b-2fa15c771f08",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109be334-68c3-4485-b8c9-518df327a2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a49ace-9937-404e-aa74-6e459baabcaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30db19ef-35e8-45ba-9d2f-83077b212e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f357664-8d77-4bf8-b800-d57bfbd60a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4c0025-c086-450d-81f2-490fdd56b39c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ebbc61-0b5f-402d-94e5-20e4adec7baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c54f5f-1cd2-417d-a779-93535bad9e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f86eaf-e326-419a-8cde-784b863301ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7baaef07-153c-4d02-a9e4-8084993665b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b0f513-0ced-437c-9097-456813be192c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060b8f13-b186-4536-963f-c8029e3fa347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87ff44e3-669e-481a-a6e1-6228c0cb32c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8266ac0-57d0-45f9-a3ce-8dd4581e69ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e0833a-e76c-4d4b-bc77-afdca481ee90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b61847-562c-4dd9-a5b3-9b8f2b94f39a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77800acd-347a-47f4-b635-3a2500211f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10fa5cca-159e-4458-916a-3b41f5b1eed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417e98cb-f440-4aca-a282-64d68acde23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352637a3-f1ff-4ca1-a524-ca1c59d3fa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fb845c-b3d5-485c-b81d-e4a20406b407",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a87d0df-ebed-4acb-a505-636809d4f22d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b38afb2-77fa-475a-aa88-3706ce63c4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4db8ec-172d-4c16-8e93-7d85d0222732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17034a47-2f64-4860-a268-d338b79e7677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d96dbbf-18e5-425a-97a5-b0e4d987f189",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b02344-9550-4fc6-9eca-87cb99c04443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1eef9dd-ad4b-49be-af96-68f69ceeef1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ff768b-65e1-4f27-940b-56cbf0d7432b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f82b814-1754-4942-b0f6-477393a559c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259d95f3-df40-4cb7-9209-47ecfd3215aa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c9bd1e-384c-462c-bd82-9b27c206b12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7672b7f3-6b16-4f1a-a4bf-0e26df4b4888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8719ae69-ff7b-449d-a0e0-bdc60eb80463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93de05ba-1417-46db-a94f-5485985ee8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e7c599-7467-4f31-a5a1-1b226b010fba",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8a46c2-048e-4562-afa1-937f9c2ff278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7be86399-f2ff-49e0-98de-2fad77d70327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf82c05-bbea-41e1-b0bd-063235581002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a333c3d-390a-47a7-9d5c-dc5033986eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93216768-8da1-441b-9fdb-e995606a7cf0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50daf6b-015c-47c8-be00-1fde1370bd54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c999f385-2bec-4165-bed2-bcd37030bc69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb548df-290a-4ea3-9bbd-10ff5faae3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677051e4-3fe6-45f5-b7fc-6e01ea57ef61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c920c1-3d84-42ca-8323-3745b1378156",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cf7648-036d-4e14-90f0-2edf72f49e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62d6bb24-6106-4cb3-871c-f8614f46f49c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bc1566-0813-440d-938a-c1b62c509d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939f07fe-a7b0-4128-b7e8-aab08cb69ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad5fc4f-ceed-43d7-846e-541d2c391163",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530c1eef-cc60-4803-aefc-0a7580bc19be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be76371b-9ac0-4086-9bce-f4b3415d74b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cd5024-a3e3-4b54-a449-5bf2e57433ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5b1983-10f3-4f24-8720-846a0ad0c0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a32b2c-0589-49d5-92f9-c618822f6a72",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32a1b51-b21d-4300-92cb-6b7a3b7fc4fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdad12d7-0721-40a7-bfba-7e47648e0187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d295cc04-0a6e-4b19-87a1-d82824825a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e37fc23-1308-42d3-98a2-5dede2e6d814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fa8108-c303-4092-b41d-258347479fd4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bab117-34ff-4e5f-b411-3d11020e92d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db399ff-849b-417b-9e7b-eb471cfdda17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fada3b3-00df-4a7b-910f-d6f8dab2bd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbc310a-2875-4c6c-b9cc-da029765f8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a188595-7668-4de3-b319-d6871e022f54",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b00c4bc-ad70-4169-a09b-cbba94858a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4675dbe-5bca-450e-9d18-c087dd096e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1817c21-e792-4378-9d2e-08b7facbb129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350f5803-bcdc-4b7a-83f8-b474c4ead79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9479d38-0213-4848-ba97-512181784552",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3a6569-7df6-4a85-9c47-fdb2db3e0b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08a8cf6-65a0-4644-a1a7-5606dd1bb408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf1d60a-20de-4665-a6d9-30018f1f37f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772bc934-2ccd-41e2-854a-1229ce5e5731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ccc379-75d3-40cd-a40e-52fb11917bda",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d5c628-0e3a-4b62-a081-0fa8b30fb813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b11ccb-59b7-4b1e-9bb7-9bc7f303448c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b3f8a1-f9b6-4284-8def-7be3c17ec305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b830298e-8399-4819-8289-7bff983acd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17284524-f8c9-4b3e-b792-d6abb57e3a1d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce71be41-d774-4b66-a7e7-866a39eb6ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a857bf1b-c756-4dad-b4d8-530aeda89030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c8911c-5d2e-41b8-b63c-26a27c1fad45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48d81dc-09cf-48ff-bbfd-5e4cd9ef5c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d40a30e-6901-41f0-8e8a-bc122fa288fd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35277ec-e261-4e54-b9f4-b12d5b065204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0530f7-a392-4205-b17f-09bee25cf3fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad4d600-faff-497b-9c6b-e9013341d901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a59618-bb14-4380-b61c-5ae384218c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ce9016-6fb3-42b9-9d91-2063b176a1ef",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc402fa2-8e9a-4210-9c6c-122d0840102d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde761be-39bd-43f7-bc33-1d72062d5c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814f041a-95fa-446a-9f6e-bfb569a15842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8acff4-d04f-4804-b75c-ff8e4dfb8dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcd3704-1965-490f-8043-9ec42186b1f5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b948ed9b-30b6-4302-94e5-70dd43b3c758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25188be7-2f99-4126-98eb-e787a9aa261f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944e7d97-56a7-4032-9690-815db6e2e7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a90d464-73b5-4eb2-bf09-d6587ac68237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de09f94-19ba-4ad1-bab4-8fd335e8d9f7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e804ad-b8cc-4900-9ed1-8207fa28e318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a266640d-216b-4007-8c08-44de931d3de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983edfd2-6421-4756-9fe9-00d22cc67be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2b51f3-4f44-4d68-b134-99b7a2586007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46d4e50-446a-45af-b45f-7337cdb641b1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229ffc50-e822-4656-8347-9bff2acac9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf766fe-53b6-4ee2-9fc5-9e3893a8bf4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a65704f-3e61-4f13-afec-73d672427c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da317a90-67fa-401d-9f0a-897e8c6feea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04ae3bf-3843-44e0-98da-c51b04a66736",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef488401-e699-4ffa-9782-941f6a592c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280c33b4-ffe8-480e-9d18-42c4f90723b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c164bb6-e941-4c15-9dc7-ec3d59caafc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764e2801-82f6-440c-b9ef-7b392b5cee33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e803264a-2632-4fe7-9dea-3186754e1793",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd221f6a-8356-4b67-9f08-5aa6558e8d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ae6f73-1c38-4675-8fa7-168cd04629ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746dcdf1-14d7-4103-8a16-b0055949d72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9e8ac7-2000-4485-86af-114e9120ca0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e8a368-0e73-43a6-9342-c3d665f78a6c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52489150-29e7-4647-8ca5-a8a6b14fae46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a5ba57-b8ae-4a18-89f1-ac68c9ed91c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777c8547-ec03-46e4-9867-58477ea56e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bce4ace-67aa-4b12-b6ed-8bc4f6b83449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5d0482-ef45-49d5-8084-e4620444dc3b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a62b44d-f611-41e1-b112-69b9e5f9fcbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0ba927-ce40-4022-8f90-91247944c6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba1703b-dfd4-4cf9-b8be-5c6f8b9c33f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6016302f-94fd-4569-991c-a180d8fd80b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b35d7d2-11ed-4af9-871c-0211238d3776",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1a5065-aeb7-4dd6-85d5-dc0db12f8af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eae6c16-f6c6-41da-8252-f75c1a178f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2992a23a-159c-4e43-bbf1-59fd3d6600f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645b750f-8c41-4ed2-ac4f-8575726a0f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3503f4a-b780-4f76-bb53-8bb8d09fb431",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a65a356-1c73-455d-b141-a3234c67635b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03794fea-73c8-42b5-9f4f-bc00012b2cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf241c4-992b-4c76-9941-899de03a8023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1196dba7-f32b-4864-896b-5c61d9b689ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39deb14f-72c6-4ebb-bd94-f9bf53904568",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131c9ede-8b29-4d44-9580-34c74e4b508f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b94ab5-4cc1-41dc-b65c-3b420d321671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bffe1ea-28c9-42f0-a3ea-196538d43d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f2defb-7c42-41d3-bfa5-8ef3dc2854fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e3d4b0-4994-4525-87c6-a53f08d11000",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4cc132-651b-4953-bdb4-de68acb838b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba0fbef-0927-4692-8180-1486b55f7f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01975f90-e21f-401d-a18e-718aea923eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3197944b-e989-4ed9-8e24-b3f54aa4915e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd551a0-fd9a-40c4-a30e-b9901fc821cc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a65662-725e-410a-8b78-26109a431326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e028c46b-2a0b-405d-8e2e-dd216d29c7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bb716f-d0a7-4fb4-bd3d-83d7c0a79c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1172ad-5042-437a-bf9d-e75ad5d694d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bef1059-4571-47e5-b4be-214fd53d0db5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3182bde-3bb9-4e81-8abe-33b77bebff99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d509239-6e0a-4948-a04e-a9130837a1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc6b34f-1918-4435-ad82-e2da63f6233a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc0e675-5b43-4d00-8b8e-638544fb60a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9168d8-c11e-43cd-b436-557c08e2d97c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbb211c-70ba-421f-a87a-03df6d946ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da76873-0c00-475b-ab2e-e8f3a0151886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59eb247-292e-4cb6-a3b0-14293cbadaff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06ffda5-1cf4-4593-8638-bbe9d2a9bea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2116f3e5-e127-4599-b8f0-b73abb8324e4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54c2e9f-a122-4158-92fd-ea2db15c0622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f86f6e-640a-4240-826b-ba1532302698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16460315-8921-445a-8eed-45e1303e46f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b59b75-8c42-4957-b66f-7d86313fb16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf737c9-117e-4766-a42a-5d72da44729b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace35e94-8321-452f-b9ab-c636706f7a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c4eb51-f479-43d3-97fe-c612699062a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37301912-fa28-4563-ba57-68916cd3587a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d15fae8-77c5-450a-8618-960fda8c43af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7329780f-82ee-4356-b28f-a7007b3c5af6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de1274f-b7c3-4fdd-989a-80c0035f8f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7116fa3-ac52-4765-88d1-c2142d16eff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1e05b7-b002-43cc-aa48-5cde281f7297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e07836-d096-47bc-8857-f59962907635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9dada19-661c-4f0d-af89-555ac1d3da80",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b471f9af-f71b-4f65-bde2-88575e92b4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef63182-38aa-4fad-8843-02f8822689f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37466ac3-4d67-473c-a884-c36973306cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c498f2df-bb58-4456-8f06-7a710efd2f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd5acb1-a513-40da-8617-9a0af805f135",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9418332-ed89-4fcb-b393-1b195db92e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e5ce73-7f0f-4e3f-936c-bd5a982500fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc86bfa-a7c1-4ddf-a740-c8425d3a8292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa60349-ed6c-435c-845e-95f7f8733cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30267ef2-97ef-4c8c-93ba-7c072039f040",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5554ddc-5321-429e-a1b4-779be2969056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551bf296-e109-4858-86b3-decb14d66ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a601e4ea-5d03-493f-aa83-d06a420bf603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d536b86c-5adb-4da3-8c5b-d39840034972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee503143-1656-4ff8-bc43-c50c1ad9b531",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e47f66-5c11-4c48-a056-987ddbb9d93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6d68b4-497b-47c8-aa50-0a6866840ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aca3275-96ff-4681-87dc-eb14d4b1cdbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b15f72-f165-4fbe-8917-12633b97166d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989b9f57-f3ee-4786-bd67-3809a2bb465d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef60065-2863-4ff2-9f03-0954b7e58c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6646f785-0b6c-4749-a03e-9f223ad707ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40a302c-9387-4e8b-9647-f22f03f68cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e80b0c-745e-42e4-b46e-ce083c805206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d37cd0a-8dfd-45c0-b27e-8bf9a2f92aee",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd0bd3e-ca48-4735-a9d8-1cf4b48d0eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98080cef-5570-4ec3-82e7-6fc9a0b60985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "898289aa-3e48-4748-b09d-bbf03870c8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45a9e11-c0c7-43a6-b471-ec7538e1f2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbff1cf-0b5d-4e18-a945-eab4c76ecd97",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac4263b-5392-46e8-bb70-dfb330fff7e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15f310f3-5c26-495d-bd4f-bda948f4e1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee33abb-c674-4b83-a433-24a642fc6422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa88797d-86c5-4363-ba59-1165afbef602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98174f9b-30b3-44c8-bfa6-bc0c4722941c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a633bd58-315e-43d1-a5c1-b22313c2ce9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b63b7c5-98d8-4ade-beb3-c2cf5a7c3e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0d0d04-d8d9-434c-acb1-27b11d3b36e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9967f766-3120-4918-b722-f4e1bf41a01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fb6af3-771c-49da-9b4c-64af091473ed",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d508cf3d-34b7-4b7c-8c25-a0a5b00fd02d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7ac2c95-fb3d-4675-b96d-d8a3efb88a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9faaa0-b052-4202-ae83-5aacbc6bb279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af247260-61c0-46aa-99a8-1bd0e801fa41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680eae46-11ab-4eb7-9157-2fa77bd17fe5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd2a645-bd87-498f-a60a-9eb325a20edc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99975a5a-c8b0-44a7-b1ea-ad51676ba075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deac3b57-d15f-4e03-bdaf-7fb63f3b66cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9121b07e-47b2-4dc6-b9b7-dddb4aa05ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f623bc-7137-4dfb-9ed9-7b03d055a901",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e552164-e59d-4842-9d34-d4ddf32d5d84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36f4f529-0b68-4e38-88ae-03b0adbf8fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd4a8ce-ec01-4ed2-9163-39ba56ad77e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8afb59-ae38-4344-aee5-e41c7055f5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473d66cd-65fb-48d4-9211-3eaeea8fc96c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438e602d-1b8f-46bf-a865-8bd1931c82b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d26d000b-a65a-402a-9087-9bc6395578db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f689329-790b-4aa0-80b1-940e7459eb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b150d2f-0faa-4e4c-b593-994937411e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdaea5c-784f-4677-800a-5e9e7c214d2c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7890bfd2-4aa0-42c4-8f50-69118668f824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f723de1f-56de-4aa9-86f5-fbf16a2c173c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda7bbaa-7846-45c7-bdd0-a125a448e308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c8789a-7df4-4918-aca6-314ba5b6571f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c696923-006a-4c48-a7b5-4c3fdde80596",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fddbcea-f360-4dbe-a1c8-0a3fbdb11e70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f98c92f3-363b-4837-a4da-6e52fdb9ae41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5734b0-4bef-43e3-8f34-fce26c2b02d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf64b87b-1efd-4b04-9b6f-f13da029b740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8272350f-7418-4818-9030-a0b0c59b12b0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cf99d9-4760-4f06-be81-2bee0bc87b4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "029f9c5c-60b6-426e-902e-76e4390c10c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807e9f3c-3103-4420-acfe-6dfad5b2d533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9807c5-850b-4695-852b-2522f63f230c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8141e995-5074-495c-8b71-02e9df673d9b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfed43c-22f4-4642-a303-fbce462db217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09162e5e-fc64-4be4-8e9a-3b949156209e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da66913c-7e0c-4348-b080-15c65b845f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fabb40-4a88-4d02-bc3f-b93c1061aebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1173d3a-024d-474d-8d00-1581acaa476f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596fc65a-96e2-46dd-9ac1-6813cec1e5c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b37d9ca2-07b9-45a0-a71d-378c8d2d8b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d395b38a-7aff-4b09-8255-5f910af79618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1950826f-0616-45d4-b4e8-08b31a776ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e374d0ca-09f2-410c-a3f6-4f795b3167d3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74e2d4f-5170-4203-aa9e-2f2ac0e9395e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49b44853-3d1c-47f8-a974-6d82a59a5870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2545627-c819-45e2-a50f-e72c44652780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b3ec33-8942-492c-810c-cd80d5616246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e916eb3d-9eeb-4300-bc8b-0ec96ed6636d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d701fc21-64f1-4570-9bdc-a185ebd0a0ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e655c36-62fc-4a04-b2cb-17df69419cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2010f8-e53b-466c-a1cc-cd72e705173c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851d0833-0d18-46ff-a262-d61d2abc3168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c312826c-038f-4ac5-9efd-5f1d9d1d49b2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fe16b6-bc9d-46b6-bfa4-ad0977276862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c382a408-86f0-459c-88bf-dc0a7bb7dbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c821f4b1-6ae2-4c2a-8207-f0ab9f8ab57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7eace94-d704-401c-9783-1add24d70095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37b8595-bc6b-403e-b2e7-a5441bd6e31e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f150d4-0449-4ab4-ab3d-6e3d325ff194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9098bf0b-1ec3-45e4-9d7f-ffea26ce66a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bac9cb3-de7f-488e-8bc7-79898b161ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8165880-915b-4ee0-ae7f-4883da00e0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcb0b66-93d9-4c27-a27f-ffcd5bcf3530",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ae5cb2-63ee-44ca-9ea0-9bb462d3121e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e543655-df3e-4696-a62a-ae68c533840a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42699906-47d0-4060-9a9e-7904a550e804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e03775-29e1-4964-9ff2-9ada5fc9001d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394fb347-7f84-4ff0-8743-e164e8fb76cf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac488521-a409-48bd-85c2-f40e01105196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6920e159-1c12-41c2-bde2-a6079c6013a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f58341-c9e7-463c-9e17-e956a7a16b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4135fac4-90fe-4ead-9551-d9c3c096511d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47de082d-f226-48d8-bf31-19a2d896740d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010a15ff-f870-47ba-b791-a2db724c0162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d999365c-8e05-4c8d-8e0b-e414e36710cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8caddf9-bcd4-47bf-a111-ac343918d9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f5d3be-4f55-4f46-bcdf-5f400d54873c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e751d65-64fc-45f0-98f9-cd9243d30436",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8616c107-49f1-4de3-925b-9dc81b4a688b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f51c09c-85bf-4410-86d8-bf9b3497f475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5380f4f-6f6a-4c6c-9572-c9e82ca10af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7486ac3a-0d20-4353-8074-fed9b4dcd633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121ff40c-36f5-4fc2-bb13-54b18a30aaf9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36d1ac6-0b42-4af6-bd02-f3eb54e76568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92a611e2-fa5e-4e31-a1e7-15068dcb7686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c71c5a-d0df-42bc-8b0f-b84ae78305dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa288fa-245e-48c1-aaac-80e7284fea9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ac2277-a175-4631-8434-5450e114c377",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fb9656-e2b0-48ba-a478-e8bff577ad82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b25fc248-9182-4f68-b88d-7a24c231a67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc01ed2-1cbc-4503-9d8d-8f988e4bb49c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb4461f-c055-4d60-8fe5-1fa25cbdda0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29c51bd-6ac5-4002-8bd6-0f17bb8ae8ba",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083f6fe1-fe3a-4613-b9bf-a72bfce11994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d49628e6-f0f3-451f-b2d5-48794ac9cd67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2def17d-7fbc-45a1-823c-82752ea66a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5e0cd0-01f9-41fb-b94b-01d06381bf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90aacdeb-5789-454d-9878-01cb5535a954",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a791d68c-7687-4c4f-b73f-a15a8da8e8c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e952f1a-f5a8-424f-855b-8aa93e9cc24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d1ad30-e15f-4850-a708-99c8e52d996a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ed337d-fa93-41ef-b7e5-f4c8d4f942d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80ad5b6-dea5-482b-8053-50ff012c9008",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179bc76e-045f-4327-ab75-ec13d23b6fe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aea1197-4e01-440c-a91e-13467f011463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa13bdf0-0b9c-4770-b8bc-2b402874e647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61b8db0-4052-4860-94f0-0f5b48b47e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56425ecc-37af-43b1-8aad-cc6511751c1f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1334e1c-550c-407f-943e-c7302be67658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbbe944e-e393-43a7-9994-ba8680795951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa6f8f5-59bb-48ec-89bc-e73afb238c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13988743-396b-499f-bc90-43e3bebc9550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dab67d-009e-476f-a883-29cc8e67fed7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b002740c-4310-4dc8-b5ae-68c82e2d8a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18a6c88-85e8-4fec-b85a-be9aa9f2fb79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "496716b2-7185-4b49-a38d-8018cb8a3acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53cbc22-b2c6-48a9-87d3-d1a27d4efafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b472cc8-c61a-40d6-91a8-74e00df4b80c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7560e86f-9a9a-46d3-bcf2-4392fba7fa4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "300a883f-2ab4-493a-8dea-59d60f081988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb829e1-4d7b-4257-9d78-48de256e5e84",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b410e4-44b3-4baf-baae-c35d9ae17f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c40ac4-da90-44c2-868d-94d71a7105dc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62be072-a1f7-47eb-97f5-3de0468474c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a270c00b-ba69-4347-ac0b-abd3e1318f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efa594b-4963-40b5-8cd6-00c62e5e40a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8be03b2-661c-44c2-b6c4-37885bd1f136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c36333-b1aa-4145-b18f-f89613009a10",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09f648c-a340-495a-8dfa-2670acda6f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c392b8-9127-4a42-8b4a-dc0b1b325ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20492de2-09de-4deb-b938-15b03e6f0811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602ef2e9-f3d0-41e8-b53c-de62ad828256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318912f0-d603-40db-94d4-d6f0c6eba30c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2ac999-a471-4afc-9e6e-baf600f79ceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efa56068-2064-4c34-a230-744aecc37c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e8a170-6926-4b75-a956-296419e1cc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dab4e54-8fc4-4542-a387-355e62355d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bbdbea-a3a7-49e8-8e54-2491a7e3065d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc310737-dcd4-4c8e-b295-3eacfad1b103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0157ee9-d29f-4c88-aff6-1b2b35dd11b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68d6b28-75c9-4824-91a5-351fcfd8d62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24faccea-e489-443a-b00d-bf4a1f6f1129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db211645-2ccf-4de2-8fd1-2dfe1de8261e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4679b53-4af3-4879-9743-a2b235791e36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "302cf4cc-7a4c-4b0b-9a90-68e00dd32dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb97c6a-4c41-45db-9a8e-b0ccc3e9497e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14c48a4-d304-49ae-bd19-c615614c1113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f539091e-579e-4411-bb78-e3e5dd4d5e54",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e113f4c3-cd13-4f90-b0f7-760c3962ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fab0000-79e9-4da8-93e9-55055ce06b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb20a25d-f01c-4d93-a952-f71f8a4e4c25",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec19df5-e3c6-4803-9620-7e99c6e86c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7729f52-759e-4db1-a204-2d3af1c2f6bf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49594aa2-05d0-4955-9346-95c00c893c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c46feb-55b4-4b2d-8e7f-82bfc9c16592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1c95d8-7ec0-47be-9756-cf67fc69b92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fa1d67-379c-402e-944b-062f0ffd22e1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a978048e-c887-4587-98cb-4ae2f89b23a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5815d2de-40fc-482b-8c79-b2424459bb2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01c8202f-08f9-44b7-a03b-da078d36abe4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb402737-0734-47bc-9a6b-a6834058d9a6"
                    }
                  }
                ]
              },
              {
                "id": "335eb67d-d6c8-4d7e-8768-f2f639ccbd23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a314e37-4055-4e24-b32a-3a610965483a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c84cfea-f980-40c1-a54d-44388fa24616",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d5f59546-38ea-43f1-939b-e6e7d2aa939c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed93b766-a0f0-4a58-ba30-d41736c9276c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ecc9909-a2a2-4855-b321-10512dc628d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8de6fef7-47cd-4365-9f34-1bcb58e14bd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f323100-1a92-434f-9a2f-170c7836553b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96763be7-438f-4cb2-b86f-e97f5e5a823d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c8d4632-27c2-4783-943b-aa260c8560f9"
                    }
                  }
                ]
              },
              {
                "id": "483411d3-9a4f-46b0-b8df-ac9bb5e76c7d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4fe12545-58d8-4452-baf0-77d29442c174",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228725db-a644-4920-8dda-d65a4e96eef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e7b5ef16-087b-45ca-a8dc-4d02a58c556b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f88ff0-2df5-4489-a31c-fd6693c22deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d35156b-befa-4bc1-add7-12f02210054e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2e955df8-5548-4020-9244-cc23f24fd201",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e520d7a8-796f-462c-b760-6ba27a567d4f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbe75f0f-e10e-4ad3-8d99-8c1ff0dbcd0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "97d7e60e-d8f4-496e-840d-af1acd9888ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b3dc268-dc7f-4955-b560-82a3c2deb478",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "381583e0-6e26-4540-936a-76e74765e6c5"
                    }
                  }
                ]
              },
              {
                "id": "0d60b9ed-2023-4e4c-8fb3-847dd83ed98a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "866b9b1c-3d51-470d-8046-7f87fd2bb093",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "23a7bc4e-29b8-4e7f-a90c-c24f4289dde8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdb94aa5-7b33-41d9-88bb-814e99616169",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "122199ba-326f-41ab-8ba5-d9b905e8b378"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e796386a-9d53-41b1-b198-3160e15b780a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dfca7ab1-1f8e-4839-a6f6-a28ee0230063"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3492cb16-7cad-4acf-9460-ffad11f5a317",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb959f47-114e-472f-bbaf-7f1810568765"
            }
          }
        ]
      },
      {
        "id": "c806f21a-863b-4d6b-bfe8-39b9e97f8bc3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "aad482fb-d5d7-4f41-86a5-7e5e584df9ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e045cac6-41e0-4bb5-8c23-4c81503f2474",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8d5a324-539f-4c6f-a724-3b3bcc6698b7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4771cd9-38fa-40e3-9631-f9076f223f9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "73a5c236-6e1d-4dd4-8676-1487de5c99aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef93364-6bd5-40a8-95c6-05e2eaea1533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "398a1c50-24c5-4f8c-9321-3e8a3774c032"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "657f1f87-fb61-467b-ba39-a6d5d47dcc31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3eb6b7b6-e8cd-4322-8e3b-4f8043526310"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3c117f2-2902-4b7e-9d88-27a8c4645f73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b54243dd-6d46-4bd0-aa49-1235705a8404"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a390fa32-ddf2-4808-9c0c-09e672d5ee71",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e360ef71-5a37-472a-8281-ea453c594302"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13536ab4-d3b9-4b89-870e-282f3b4548a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca1b2af6-9f2b-47d1-a8f1-a946c1015926"
            }
          }
        ]
      },
      {
        "id": "e5b904e4-5c78-44e0-aa93-216a6d0229f6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "15401c93-5c23-45ec-8445-049f1ee18f2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff2d0fe6-2ef3-42fc-b38d-84aa7fd97f6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b83f3c4-a906-4ce8-a93c-1f7734449cef",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c490ba01-11d5-42dd-8e89-c6946bab959e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67800984-a6a8-45d2-8755-553254898d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360af6ed-28c2-4527-8070-8a38668524c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b9a16b4-80d6-4595-bb75-83d2dd3d6692"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed1e83b1-c037-439e-af0b-77514f04fdd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2801ee48-9e8b-4550-9cbd-3f2ec1f48308"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6684ad5f-b3c7-4566-97cb-d001d2775092",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57d993ec-503f-4919-b5bf-8c6276884283"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51370ed9-814f-41e7-9619-08bf6bb608b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b7b2ff4f-1d6b-4281-9024-42c6bf5d7fe9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2908e774-9687-4b63-9c3e-76351be75a98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "151e871b-04d0-4a75-9abe-7f533c15a150"
            }
          }
        ]
      },
      {
        "id": "16ae7f8e-c81c-45d6-ad81-c3687c175b1b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4eeb5252-6b15-48bd-afd3-b60e2d78fee2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b679076-6ebc-476d-931b-648a75b442c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d6a38c8-3ccb-4aa3-bd60-48be17af04c7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c45ce43-014e-492d-80e2-3860b1801f44",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40536ab7-a982-4c90-b060-3341e8d3b313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6734071a-b9af-4164-9b99-1e6f3ea78e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "510d6cbc-fd02-4af1-86c3-6004bc40ad56"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8221b62-0547-421c-bb23-915e7fef7d01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e17b93d-3317-4ac5-8d84-cdd6752459ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8e0d4fd-6dee-4844-9dad-85a3a84dc249",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b0c41cc-3560-43e6-9a7a-23e266d7cfcd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a78cbed-35a7-45cf-9ab8-6437cd92aa30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1275c0d3-ac2f-40c1-aba7-b60c763575ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7334a2f-e604-4c6d-ac9d-02756c807120",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abc57d34-7a53-4a9a-95da-3b348b126146"
            }
          }
        ]
      },
      {
        "id": "b1cb9082-c8be-48ba-be7e-66116a8bb03f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e257a91f-1aaf-4240-9e5a-648758289ca9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e892983f-01bf-47db-b6fa-2d372df00949",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2e3c7d98-9e80-42a5-8839-8ef9a0d7b1eb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f300b5fc-4905-45d2-8b19-a6a1070ee41c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32f22b5a-5873-4d34-83fe-6d0ecf96ddef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 216.9788732394367,
      "responseMin": 7,
      "responseMax": 6109,
      "responseSd": 405.01677879188594,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689209305172,
      "completed": 1689209380512
    },
    "executions": [
      {
        "id": "eb554d13-6b6c-45f9-9855-872957a1b209",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7dcb778a-2546-45a0-a575-f36c86ad8a41",
          "httpRequestId": "dcc6f5d9-34fc-4af4-aa4b-783c6794dbb3"
        },
        "item": {
          "id": "eb554d13-6b6c-45f9-9855-872957a1b209",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5b5b2891-cf54-4fa5-bcf0-21638389180b",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "90075f16-21d9-4f39-828a-c5cf485e1630",
        "cursor": {
          "ref": "5f6df113-b08f-4154-af8f-bd40ecbc6ba7",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4f28d15a-ab8a-430f-a4a8-5dfba5419128"
        },
        "item": {
          "id": "90075f16-21d9-4f39-828a-c5cf485e1630",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "89fa2eea-2b71-486e-b0a9-2dc1f6ec0d98",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "d1554490-4659-4069-9870-c427ea6f9657",
        "cursor": {
          "ref": "bf7fe19d-e86f-4960-984e-bc9d38240b60",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e63d60e3-de26-4e56-b2eb-e7d576e939f7"
        },
        "item": {
          "id": "d1554490-4659-4069-9870-c427ea6f9657",
          "name": "did_json"
        },
        "response": {
          "id": "ad6f1afc-a573-4045-8ef0-7f40a89af13f",
          "status": "OK",
          "code": 200,
          "responseTime": 1578,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69d0610-6fe3-4074-abb5-1e153613a0c2",
        "cursor": {
          "ref": "b5a3cba3-9c45-40bc-8c77-84f48fe9b695",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e2c78111-3b97-4a2e-9dbb-51e7b9e48971"
        },
        "item": {
          "id": "a69d0610-6fe3-4074-abb5-1e153613a0c2",
          "name": "did:invalid"
        },
        "response": {
          "id": "031fa854-1447-46a0-86ee-ce9615cb48a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69d0610-6fe3-4074-abb5-1e153613a0c2",
        "cursor": {
          "ref": "b5a3cba3-9c45-40bc-8c77-84f48fe9b695",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e2c78111-3b97-4a2e-9dbb-51e7b9e48971"
        },
        "item": {
          "id": "a69d0610-6fe3-4074-abb5-1e153613a0c2",
          "name": "did:invalid"
        },
        "response": {
          "id": "031fa854-1447-46a0-86ee-ce9615cb48a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086c7bee-f8b1-4ce4-b8d7-4e295a52b97e",
        "cursor": {
          "ref": "7377bab6-82e5-4475-a971-1a9cc414b6cd",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "94424fc5-14d2-43a6-a182-56c547ad0c6f"
        },
        "item": {
          "id": "086c7bee-f8b1-4ce4-b8d7-4e295a52b97e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c90ee37c-aea8-47df-a0e4-02148706a44a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 337,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa03007-bb55-4071-bd3c-3ccaa9a629ae",
        "cursor": {
          "ref": "909ac0c7-7cb9-4b35-950e-46d3a495b8cd",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "09baae10-63ab-4a4c-a442-5da784d274dd"
        },
        "item": {
          "id": "0aa03007-bb55-4071-bd3c-3ccaa9a629ae",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cbb51c5e-a860-4c1c-b410-4433f877f984",
          "status": "Not Found",
          "code": 404,
          "responseTime": 254,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62258c42-882a-4799-9f43-a63712940903",
        "cursor": {
          "ref": "d19e2041-127a-49fb-8dbf-141f52e7fa2e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f4407963-bb97-4396-a0b3-5ac7009d5274"
        },
        "item": {
          "id": "62258c42-882a-4799-9f43-a63712940903",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "23a3cf20-0334-4b2c-8a86-e513c1deacb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6753fc88-2e77-42cd-8893-5929d0a158ee",
        "cursor": {
          "ref": "c3efcf9c-58bf-4a0a-8503-9199fd028856",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bbc577e8-d295-4bb8-9aee-dd7a3751236c"
        },
        "item": {
          "id": "6753fc88-2e77-42cd-8893-5929d0a158ee",
          "name": "identifiers"
        },
        "response": {
          "id": "6c2d02bb-05e3-49c2-a0ce-5655a9621eb1",
          "status": "OK",
          "code": 200,
          "responseTime": 1239,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1b7902-c431-427f-ad9f-b97daf27f1f7",
        "cursor": {
          "ref": "36041624-ec04-49f4-afe8-219782dac284",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bb46a73c-4505-46d6-8f61-346b69d396da"
        },
        "item": {
          "id": "3c1b7902-c431-427f-ad9f-b97daf27f1f7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "48b84bb3-521b-49f6-96b0-be8d165710ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688d050d-924d-4519-bd3e-4d304b414d43",
        "cursor": {
          "ref": "eeedbe65-a1da-4a71-a669-ea7fdc2b8c25",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c5377c56-a7a4-4ad0-aaf5-939d5e6a2bf6"
        },
        "item": {
          "id": "688d050d-924d-4519-bd3e-4d304b414d43",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8afe9c02-6f37-473b-b53d-9dc4c49a19a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cd72d1-b74c-48c8-a296-e860bd445c62",
        "cursor": {
          "ref": "cb4792af-f65c-4da7-a170-09f0606d309f",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "51b890a5-e388-4270-8420-88568194c7e5"
        },
        "item": {
          "id": "d4cd72d1-b74c-48c8-a296-e860bd445c62",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c0d3ed65-f5c7-4954-bf08-a6597171f059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f20a04-63e8-41ac-9945-9e795f782ad4",
        "cursor": {
          "ref": "6d5ceaf3-532a-4351-952a-4ad56340f03f",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cede5c94-56db-4f08-a2d9-f785db988260"
        },
        "item": {
          "id": "e5f20a04-63e8-41ac-9945-9e795f782ad4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "85980845-e658-4404-ade2-020a5eb068c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111da392-2d7c-4ad3-bdcf-8c85267c1e1f",
        "cursor": {
          "ref": "09570f54-24b7-450a-8af0-2c858a7c0acf",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8ed3d532-ca13-4dda-a33d-701eda5d875a"
        },
        "item": {
          "id": "111da392-2d7c-4ad3-bdcf-8c85267c1e1f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d5b01dd8-a6de-4a7d-9fa5-7e539dc62536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef22ba7d-4748-4e06-8ce4-97aa7bad4ff7",
        "cursor": {
          "ref": "ab1165af-b373-4ca4-b805-742e6f73857a",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6ab9cc85-56d7-43f8-93ce-6034e469a620"
        },
        "item": {
          "id": "ef22ba7d-4748-4e06-8ce4-97aa7bad4ff7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "214dce0d-c1f5-440a-aa1e-8c0588ef83a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0276f240-6a83-47e5-8743-af731c26192d",
        "cursor": {
          "ref": "4c354cc1-3db1-41cc-950c-987f9e9e17e1",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b74dd15a-d1ac-4923-a528-94bf306aaee6"
        },
        "item": {
          "id": "0276f240-6a83-47e5-8743-af731c26192d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "965d855d-ca38-4c9f-bed8-ca1342d21c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb796e4-396d-4302-b7bb-929318d9f3c7",
        "cursor": {
          "ref": "926e6434-3115-4992-8972-b9e284a82c03",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b8cf5694-9f48-41b7-abde-bb5a0df18b7a"
        },
        "item": {
          "id": "acb796e4-396d-4302-b7bb-929318d9f3c7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "75c9fc2d-c37d-47b9-ae8e-2ceb342a9072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49534729-1130-4d87-8e00-abca836f599a",
        "cursor": {
          "ref": "120eee42-f1dd-40e0-b619-53a1cfeb8f6a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "738d0ac5-cd8e-466f-abf4-2aa745d8d899"
        },
        "item": {
          "id": "49534729-1130-4d87-8e00-abca836f599a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "eea5e933-2efb-44d8-97be-5feb42b52377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cfb276-938b-4d50-bb76-7a4d265e55ef",
        "cursor": {
          "ref": "8292c4b5-2782-494a-ae4b-0f8eb7b3a4cc",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "46c50fde-d6ff-4a8b-8657-985ef533bd8b"
        },
        "item": {
          "id": "53cfb276-938b-4d50-bb76-7a4d265e55ef",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "65c94f41-18cf-47a5-815a-6e329baaab0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a7dba7-717b-4062-8dce-f5396e9342e8",
        "cursor": {
          "ref": "1b03561d-23c3-4747-b973-137d8f869a10",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "81d6e246-1555-47e7-ad70-afd156f6555e"
        },
        "item": {
          "id": "23a7dba7-717b-4062-8dce-f5396e9342e8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "63d552de-5d94-431f-b681-2932e07389de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63353325-bae5-4213-9a23-9554befb87c7",
        "cursor": {
          "ref": "5dd7b978-d7dd-42eb-92a6-713fdb838c51",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cfe94d2b-9932-4225-8341-e5caf34ef874"
        },
        "item": {
          "id": "63353325-bae5-4213-9a23-9554befb87c7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a1a1451e-c3f5-4f8d-874f-f5ead9d93003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93db1dff-ae18-4759-8dc9-196742833af8",
        "cursor": {
          "ref": "f18caf03-56b0-4c00-82e4-5e12f21d7667",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "81f01a71-14a9-4af2-bed1-ffd64765a007"
        },
        "item": {
          "id": "93db1dff-ae18-4759-8dc9-196742833af8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2c786e22-df6c-45fd-89d9-d22e60732c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fe26f7-e3f4-4b6c-a524-c5f4c1b8ed6f",
        "cursor": {
          "ref": "dbe5f702-24c0-4549-8a02-4c4b3518fa7b",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e57bb984-93b2-42f4-be17-672d473d70d9"
        },
        "item": {
          "id": "f6fe26f7-e3f4-4b6c-a524-c5f4c1b8ed6f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6bb0c322-1b3f-45b9-91de-fee52e4d0f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a52a36a-b2a1-4776-9ef1-dd7ccf9b39fb",
        "cursor": {
          "ref": "b6d9c550-9527-4c29-a756-61a1639634e1",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e626c0d6-9ab7-4b12-af86-b4ce37357f7c"
        },
        "item": {
          "id": "1a52a36a-b2a1-4776-9ef1-dd7ccf9b39fb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0e82c682-10b1-4aa7-81a8-d1c69f32327e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd07462-f15c-427a-bc42-4a932278ada3",
        "cursor": {
          "ref": "fbda5453-2551-4f86-82ce-d1bb3932aa64",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0d846ddf-6af9-43e9-abf5-c0f96075bb95"
        },
        "item": {
          "id": "ddd07462-f15c-427a-bc42-4a932278ada3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "af3697b8-4bab-4206-a6c8-9b63f42dfebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9546e2b-b432-4462-83fc-a4ace2e050d7",
        "cursor": {
          "ref": "017a25d9-200f-4385-8430-0b7510f634a1",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bacfe519-7ceb-42b4-9fd2-ca6a2f3b53e6"
        },
        "item": {
          "id": "d9546e2b-b432-4462-83fc-a4ace2e050d7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "79a0b36f-6337-48b7-92b1-4cd118ef7f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625efa85-9b84-4d01-94b8-76d2d39ffb75",
        "cursor": {
          "ref": "ec0b6eee-eb78-44bf-b8b6-76616af16ff1",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d14d23dc-3da1-4a86-830d-2a1996050394"
        },
        "item": {
          "id": "625efa85-9b84-4d01-94b8-76d2d39ffb75",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8177bb51-d590-468a-9fec-21d31a98accb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814a2738-4324-47a1-8680-5bb1794059ae",
        "cursor": {
          "ref": "13d67d39-7db6-4c6e-8a99-619a03d37511",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "752c95cb-7048-4502-bc7f-ae4b6fbe6dea"
        },
        "item": {
          "id": "814a2738-4324-47a1-8680-5bb1794059ae",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "403d273b-ca1f-4887-9be3-ad4aac73caec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ecc3a5-f287-4797-b264-7b94d1dc3a69",
        "cursor": {
          "ref": "4f8ec532-9bf8-432a-91ae-226605017944",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a2b68816-d999-419f-bc63-fe1407f97f45"
        },
        "item": {
          "id": "48ecc3a5-f287-4797-b264-7b94d1dc3a69",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ebc38e73-193f-435c-87cf-d410f5522897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db55f604-2fbc-478f-a5b8-dfd416a49c40",
        "cursor": {
          "ref": "2798e077-69e8-4202-97ae-9c8feed6261a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "834fc490-1b06-4dc6-a963-760fc88d4066"
        },
        "item": {
          "id": "db55f604-2fbc-478f-a5b8-dfd416a49c40",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fde0093d-6e65-40f6-adc4-069021250c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4af18e8-4e17-43c2-be27-c6836cea0b40",
        "cursor": {
          "ref": "87dd77fd-db0f-482f-8723-66fbaaed4e18",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ee13eb94-08a8-4459-b273-c4b3862296e2"
        },
        "item": {
          "id": "b4af18e8-4e17-43c2-be27-c6836cea0b40",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2bb7c203-3c52-4f20-9c41-e5a58b1f56a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7054251-1128-4891-b783-05d8494c29fe",
        "cursor": {
          "ref": "1a8738b6-a398-4b60-a6b7-8f8d8aa9e7c0",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a1838fe1-5780-4b13-becf-71483cc202eb"
        },
        "item": {
          "id": "e7054251-1128-4891-b783-05d8494c29fe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "502df392-68c3-4d6e-8dd0-fa1b759404fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6321cfd8-d532-46f2-9743-fb186b3d81d6",
        "cursor": {
          "ref": "ee77222b-06f1-42d6-9395-4c32f91e2329",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b7a546d2-2992-45ed-b9c3-a5dc8fb97864"
        },
        "item": {
          "id": "6321cfd8-d532-46f2-9743-fb186b3d81d6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "941e7198-7221-4e18-82a8-52095279001d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757a1498-aeb0-4b90-9dd5-2a108a133b2e",
        "cursor": {
          "ref": "f52c6be0-c3bd-405e-8bbe-393766265d06",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "29f4e1ce-1cb7-4345-a61f-b00efe822d01"
        },
        "item": {
          "id": "757a1498-aeb0-4b90-9dd5-2a108a133b2e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6d4fe864-e8a8-4d4a-ba16-9f2a9cc8a047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e66a19-4a7f-48bc-9059-cae2ca4a19d4",
        "cursor": {
          "ref": "7e8c131b-6747-4021-bfbc-069c2745339d",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2fd979a4-1088-4a11-957d-33db49f72f44"
        },
        "item": {
          "id": "f0e66a19-4a7f-48bc-9059-cae2ca4a19d4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f7d743a8-7f0b-47c4-8ecf-e00e35904100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880c86ae-4d3f-412e-b7aa-fe3e716b7446",
        "cursor": {
          "ref": "739cfdae-ee50-421f-aeb6-143f7b1b216e",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f901f028-04b6-4623-87dc-737ec3bd004f"
        },
        "item": {
          "id": "880c86ae-4d3f-412e-b7aa-fe3e716b7446",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9a341261-49a4-46f7-baa9-6710ebdfd478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13da5250-5437-4670-8f7a-3763381a70fc",
        "cursor": {
          "ref": "61be8e0d-e071-43f3-93f3-07f09d99a4bd",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "277cb786-1002-4020-93bd-fecfaf3f4ead"
        },
        "item": {
          "id": "13da5250-5437-4670-8f7a-3763381a70fc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e97c9ad2-016a-4220-af7f-1b1585436412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e4ca43-3c65-4c9f-966f-82721e4cc16b",
        "cursor": {
          "ref": "bac6475a-3172-4b58-8423-6ed786647a9a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d005ab4d-f778-4168-a88e-8db419063258"
        },
        "item": {
          "id": "56e4ca43-3c65-4c9f-966f-82721e4cc16b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "821c6358-6149-43ff-869a-64a17dc7e3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dd7c01-f601-41b7-bec4-469ca0af9c74",
        "cursor": {
          "ref": "f8f43f63-63ab-49a5-895d-d4dd05fa41fe",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cb116485-0b41-4111-9e48-24d9b5832036"
        },
        "item": {
          "id": "f9dd7c01-f601-41b7-bec4-469ca0af9c74",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "51a9e4b3-d24b-4876-8d5e-42923272dfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4faa1a5f-d1f8-418f-a70b-09799ea77d31",
        "cursor": {
          "ref": "a3a0c802-1456-4049-b459-27fae8a37d77",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b910dba1-d989-4089-ac24-50428690a776"
        },
        "item": {
          "id": "4faa1a5f-d1f8-418f-a70b-09799ea77d31",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "93213c4b-6040-4427-b29c-e5090e35c2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91de8191-d751-43bb-ab07-16b224af02ba",
        "cursor": {
          "ref": "d3d3ce14-5132-47f6-8b33-ce917a5d0fd8",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9d4bf940-89db-4a4f-a7ae-42f14915bc2d"
        },
        "item": {
          "id": "91de8191-d751-43bb-ab07-16b224af02ba",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e9b101e5-d4a0-4de4-b769-2ea63bfa2441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b88846-dce0-49da-80b4-d24e43693364",
        "cursor": {
          "ref": "d5303727-db5e-4a3f-9e58-9d9b8ed9d2cb",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "26455558-8a2a-42ae-b25f-21abffc2d72f"
        },
        "item": {
          "id": "59b88846-dce0-49da-80b4-d24e43693364",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dee614f4-dce5-432d-bb28-d3828c057a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c4da24-8515-4257-92cb-b26ae5e37858",
        "cursor": {
          "ref": "e814dbb3-ee25-4804-ac6b-82b257b719ae",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f3ddff77-4b94-42b9-8ffa-65ea433c6e91"
        },
        "item": {
          "id": "72c4da24-8515-4257-92cb-b26ae5e37858",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "775453c7-936a-483d-a385-f2185651c20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068fbea5-8929-48d4-bbf0-18d46800e354",
        "cursor": {
          "ref": "edd0966b-8076-4ad4-a38f-483e4ec2ba5e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "71feaf60-eb0c-40bd-b933-bc6df67cfea5"
        },
        "item": {
          "id": "068fbea5-8929-48d4-bbf0-18d46800e354",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1baac273-580c-4f39-8251-91e532f12173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1545f747-4989-4070-8467-a5eda33a55e1",
        "cursor": {
          "ref": "dba9f360-6b0e-413a-aa83-c899d876f9b1",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2c4012fe-1a57-47d8-8355-c4d9dc56b393"
        },
        "item": {
          "id": "1545f747-4989-4070-8467-a5eda33a55e1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "978d55bd-6717-4a73-a023-c0bf97f80b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f2fd04-c51b-443e-899a-a260d8b921ed",
        "cursor": {
          "ref": "215315f3-667a-47e3-b2b9-1f2ccf161878",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "62ff008e-6a69-4414-b8f8-0ae12cde4d86"
        },
        "item": {
          "id": "d7f2fd04-c51b-443e-899a-a260d8b921ed",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "21af742f-fde8-4200-925e-a524984ffc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af49546b-8e7f-49be-a719-1ad815671f17",
        "cursor": {
          "ref": "c9317edf-20f7-48f3-aea2-1f73293c590a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c77d59c2-60e0-44d2-be54-4a2d55f68c6e"
        },
        "item": {
          "id": "af49546b-8e7f-49be-a719-1ad815671f17",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "28d49f13-37f0-4532-9789-19925c699408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d211a324-1e79-42c3-87c2-628f48269a74",
        "cursor": {
          "ref": "5a8f2d8d-9cd2-4371-81e1-499abedba69d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "507c04ae-04a4-40fa-8600-647596391a28"
        },
        "item": {
          "id": "d211a324-1e79-42c3-87c2-628f48269a74",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c45ee077-b32b-4e64-913e-3feb4da5d5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce163f0d-979b-4260-bee6-e05385f7dd3d",
        "cursor": {
          "ref": "b2b25ec2-594f-4933-8ff0-cf5d34a8b31d",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5f0fd41f-4a92-4fa2-8398-979514ced872"
        },
        "item": {
          "id": "ce163f0d-979b-4260-bee6-e05385f7dd3d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a0350d5b-dc20-4b27-be37-1df9d349c84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff8fc4b-317e-41bf-a8c6-cc048dbd8814",
        "cursor": {
          "ref": "292ce8b3-eb44-46df-b9e7-b15ebe2b43f8",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "12df83d2-0691-4dc7-9bd4-bf8b18154659"
        },
        "item": {
          "id": "4ff8fc4b-317e-41bf-a8c6-cc048dbd8814",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "27618af3-c0ba-4fbf-a445-1afe4ef803c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be01d5ed-5b28-4fbc-8e94-daafc2ae9796",
        "cursor": {
          "ref": "bbc82c9e-de78-4d6e-b785-069109c6ed2c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "45f25863-26d5-4e2c-86c0-a0d08dd85edb"
        },
        "item": {
          "id": "be01d5ed-5b28-4fbc-8e94-daafc2ae9796",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d9d81101-8751-4c68-8b01-afd53e507720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e68cb24-82db-4504-a659-bafac8652978",
        "cursor": {
          "ref": "120f614a-29cc-4b93-9b48-0b074653e0fb",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8ec7d225-085e-43fc-8128-fffd5eb17a00"
        },
        "item": {
          "id": "1e68cb24-82db-4504-a659-bafac8652978",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5f8cb8c8-0337-425e-90f1-4781474f3f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b95ff99-f7df-4a5a-9c08-91521d3a3979",
        "cursor": {
          "ref": "bb9f234b-e0e5-4f03-88b8-7bd56d6df74f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "679c2be9-d569-491a-9860-b0b05b4f1f13"
        },
        "item": {
          "id": "6b95ff99-f7df-4a5a-9c08-91521d3a3979",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e8189e96-bcd5-416e-91d7-fcdb5b19b219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4507b6-6e0b-4267-b7c3-86a143e3581e",
        "cursor": {
          "ref": "4cc942b5-7c7f-4951-9023-b57271c15292",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2de218ca-20e7-49bf-9c6c-f7af57024b83"
        },
        "item": {
          "id": "6f4507b6-6e0b-4267-b7c3-86a143e3581e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2ac01e73-cc01-46bc-a5aa-97160876ef56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce748a5-450f-4906-886e-e40c35b0cd4b",
        "cursor": {
          "ref": "2363b60e-40a3-4dc8-979c-b3dd4187080d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0d36b010-eb80-4a41-b587-8d415ca0e6c8"
        },
        "item": {
          "id": "bce748a5-450f-4906-886e-e40c35b0cd4b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "36c2cc38-29f5-49da-8831-104f0393e855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2928ba3-3bad-4a54-b97d-b89e3fbf88ec",
        "cursor": {
          "ref": "5359fa52-84d0-4872-affd-29f19f6ee4ce",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b1366be9-e3e1-49d4-8c52-f7735c18b44a"
        },
        "item": {
          "id": "f2928ba3-3bad-4a54-b97d-b89e3fbf88ec",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bd14c999-d18d-462c-8c1f-40b78e69fb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e19de86-34f8-4283-8c3b-c220351ea389",
        "cursor": {
          "ref": "5f2f945d-1e0a-4e72-9dbe-8d6ab5ff1ecf",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "21ce33ef-7907-4d25-9d6c-0be2860d304b"
        },
        "item": {
          "id": "7e19de86-34f8-4283-8c3b-c220351ea389",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b478cfc2-4ac2-409e-bffe-31e4706beb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a21e667-ed6b-46c1-aefc-ebc487d1e72c",
        "cursor": {
          "ref": "d4ccae4f-6d74-440f-84ae-0e00ce1f5af0",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bcf740ed-bd5c-4e84-a888-72c91dd25447"
        },
        "item": {
          "id": "0a21e667-ed6b-46c1-aefc-ebc487d1e72c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ef5dd31e-4216-4269-85df-ef3a29a9c892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13148bdf-707a-4663-bf7e-4cb425d72ac6",
        "cursor": {
          "ref": "65635109-d002-47e5-9165-920c2eababee",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "99250974-da7b-443d-b549-260ec17c7c65"
        },
        "item": {
          "id": "13148bdf-707a-4663-bf7e-4cb425d72ac6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bea102ef-0769-4705-bc8d-24e3dff270e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dc86a6-42c7-4e69-bec8-9fc9090558a7",
        "cursor": {
          "ref": "4f2aa948-7caf-409a-b06d-a4e3e4ee6cbf",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bd7af978-824e-497f-914a-3bdd92bae0d1"
        },
        "item": {
          "id": "f7dc86a6-42c7-4e69-bec8-9fc9090558a7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a9cc152c-0e4a-4742-8ea7-6084a3804bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857ce53e-20df-4ccd-aeff-d19b7ea6c3b5",
        "cursor": {
          "ref": "6b831a06-92c0-4b89-830d-f665ba982540",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "08c6f368-97b1-438f-9678-1747143370ed"
        },
        "item": {
          "id": "857ce53e-20df-4ccd-aeff-d19b7ea6c3b5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "147a25d2-c51a-4194-8f70-fce68efb133a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0317812c-9d94-4f19-9921-a5e7f5b7d5a9",
        "cursor": {
          "ref": "2d8d1892-87f1-46c6-99b6-a08f66c550b6",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1bfdc508-5fd3-4adc-90c8-21b1fc944d91"
        },
        "item": {
          "id": "0317812c-9d94-4f19-9921-a5e7f5b7d5a9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "97eeb064-5c5f-4ae1-8ece-c07e6248219b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b110c0c3-f589-4695-a9fa-186961727462",
        "cursor": {
          "ref": "33c108f3-7ccd-4fcb-a623-d860d683db3b",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0ed83205-3c39-4164-be7b-924ba1925618"
        },
        "item": {
          "id": "b110c0c3-f589-4695-a9fa-186961727462",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "86812e46-0849-4be0-b8e4-c2ba04312175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2050cd31-97d7-4c2b-a1d7-9d3761f7ba90",
        "cursor": {
          "ref": "6dc8fe31-fba1-4571-8853-e5acf66d95a3",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3ca4999f-ee36-4c28-982b-e6cce5a2e085"
        },
        "item": {
          "id": "2050cd31-97d7-4c2b-a1d7-9d3761f7ba90",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5f4e01f2-a908-469d-846f-552747326a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67602091-62ea-404e-9948-dc604c4b4854",
        "cursor": {
          "ref": "15bac15e-6e8c-4b29-a14b-68ea5c0ea4c8",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "26fadba0-5461-4994-bcc1-e61adfbb6165"
        },
        "item": {
          "id": "67602091-62ea-404e-9948-dc604c4b4854",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9642e023-3659-4f8f-bf70-be3638e1b3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77300ad2-2c88-4d41-b8cc-62a4830ea2e4",
        "cursor": {
          "ref": "7a748109-2bea-465a-921e-04675e29ba31",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b55de173-db22-404d-a0b7-f1b9bf69fd50"
        },
        "item": {
          "id": "77300ad2-2c88-4d41-b8cc-62a4830ea2e4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a382ddec-4d90-41be-a552-1d1fed55edb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48aefc3e-f245-41e4-8dac-5104079e75f1",
        "cursor": {
          "ref": "34a124f4-0cc2-436a-bc0c-2bb003171ca2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "42527455-2e43-4fc0-bba6-aea7577f1262"
        },
        "item": {
          "id": "48aefc3e-f245-41e4-8dac-5104079e75f1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c2eabf3f-048f-473b-a570-20b51f3e471b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9935b0fc-ef4e-461a-a1e7-3bcb00a48ca3",
        "cursor": {
          "ref": "b1f02b05-bb1a-4176-ad8a-7e6eb28f1794",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3d2cbdd6-b423-4a95-a60b-4a56ef22efd7"
        },
        "item": {
          "id": "9935b0fc-ef4e-461a-a1e7-3bcb00a48ca3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e738189c-7804-4014-8227-6fdef691ce6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db3b4f1-972b-448e-a931-27fca602ac9a",
        "cursor": {
          "ref": "5df6deaa-2b8d-493d-9765-c13d28760922",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f2eb5ddc-19cb-4e22-aafd-8f557941617c"
        },
        "item": {
          "id": "3db3b4f1-972b-448e-a931-27fca602ac9a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a7b79ce7-cd4f-48cb-81fa-717075411489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787894b3-f5c5-4953-afe2-bcea60d9d31a",
        "cursor": {
          "ref": "b61f6165-5aad-4316-a1bd-92694c654f0c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "48581fcf-5c22-4cad-8e8a-1247b6ceb957"
        },
        "item": {
          "id": "787894b3-f5c5-4953-afe2-bcea60d9d31a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f797c0af-1d05-4d3f-8c7c-6bc42d76ec4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08a9ac0-6aa3-4d68-ab85-3cf90204f1ca",
        "cursor": {
          "ref": "f694601a-d1b3-4e64-a595-00b536b2a4ef",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d45f44ee-fdf0-4f7f-b319-3681e3927cbf"
        },
        "item": {
          "id": "e08a9ac0-6aa3-4d68-ab85-3cf90204f1ca",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bdbe45ec-8aa0-4aaf-b0ba-d99ea519b917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d1e6a7-0d02-4e75-bfbf-8644cb23be5c",
        "cursor": {
          "ref": "16e56528-acaa-4023-8156-e233adb0acc8",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ce599650-1948-4e23-be51-aadf257bc9c2"
        },
        "item": {
          "id": "46d1e6a7-0d02-4e75-bfbf-8644cb23be5c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "09314714-38cb-464b-93b1-7dc4b26530a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a67d671-e7fd-408d-bfa7-707bfebf0b02",
        "cursor": {
          "ref": "f16a49e2-6406-40c2-9fb9-aa2b2490fc75",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "25575066-3d2a-4dea-ae1b-75db3ca59522"
        },
        "item": {
          "id": "0a67d671-e7fd-408d-bfa7-707bfebf0b02",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0507f532-23c5-4e4e-a907-7a89c7a62178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f40d93-0464-414e-84c3-89e8ffd9d89e",
        "cursor": {
          "ref": "dce30cf6-9890-418a-b2c3-9d5d5b1a66af",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "816db301-e95c-427f-bc0c-ee6847f26c38"
        },
        "item": {
          "id": "b5f40d93-0464-414e-84c3-89e8ffd9d89e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5ec4bef0-6b4d-4aa3-aade-59559a7ec41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792b3482-7017-426a-b668-c59a7633e1eb",
        "cursor": {
          "ref": "0fa66ada-0088-4cf0-a880-2c6912f9c989",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3c766ed0-7c66-4d37-b0fe-222b119ea85b"
        },
        "item": {
          "id": "792b3482-7017-426a-b668-c59a7633e1eb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "baa15225-5595-47bb-b534-3e7404535d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0534c6ea-822a-4311-9235-964fb6ece062",
        "cursor": {
          "ref": "bfda22e9-388c-4dee-a8af-c03fa4a3435c",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "76678cb9-1a8d-4604-9d71-8a6fc0dd4c59"
        },
        "item": {
          "id": "0534c6ea-822a-4311-9235-964fb6ece062",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e2e455d7-9e75-4b85-bb8f-652ffc9a71ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5761a7c1-16d6-4c39-a8ac-e2b6a4cc6efc",
        "cursor": {
          "ref": "620d7835-ccb1-494d-be1c-22f9f09565f5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "041236ee-67cb-422d-a740-6d98125b8060"
        },
        "item": {
          "id": "5761a7c1-16d6-4c39-a8ac-e2b6a4cc6efc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9b632bc0-2570-4ede-91c2-09bf613d25c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae80c2b-6204-40d9-8b4d-db135efc593b",
        "cursor": {
          "ref": "84158fb4-7e35-4502-9687-0a3c9207b357",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "68a273fe-edcb-420a-9e30-0e740c9b9d9c"
        },
        "item": {
          "id": "aae80c2b-6204-40d9-8b4d-db135efc593b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c38ff5f2-1cff-4c71-b101-c1a477d58641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf4ad6a-2b88-4d72-98b0-79455816f7a8",
        "cursor": {
          "ref": "c4a0b16c-8628-4c85-a003-4e0018a79c4f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7c7239e4-4bee-4f83-b315-3591a1b363ad"
        },
        "item": {
          "id": "5bf4ad6a-2b88-4d72-98b0-79455816f7a8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "13105c43-065f-4f41-888c-2c742c588353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6fc244-b71c-48e5-b3ac-3b8840c12786",
        "cursor": {
          "ref": "7d6752c5-f9c5-4815-b4b9-16bf0c17ba76",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "83b40f50-c52c-48fa-8851-a7b598622276"
        },
        "item": {
          "id": "3b6fc244-b71c-48e5-b3ac-3b8840c12786",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8c0a2ea9-950b-4324-8a75-610d95996837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc77d1c-5bc3-4717-b37d-6d6a0c198333",
        "cursor": {
          "ref": "2f5224d0-9001-48ba-8e1d-3a66ab7d84ed",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "52887f8b-adf9-4bef-9f21-e1d3e5e4bbd4"
        },
        "item": {
          "id": "ebc77d1c-5bc3-4717-b37d-6d6a0c198333",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "34424a33-2ee7-4552-90d2-94091d86d878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe887402-d52d-4628-ab5d-d655e21f1791",
        "cursor": {
          "ref": "0bbbb6d1-2629-47ad-879e-bad3ac2da93c",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0d8ad725-c3b4-4d73-ab49-71a66023001c"
        },
        "item": {
          "id": "fe887402-d52d-4628-ab5d-d655e21f1791",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "60c889ad-9a55-4f35-835a-be5acef0afd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1aea2a-2f0f-4a8d-a51b-a1f4c5e5424c",
        "cursor": {
          "ref": "d297a076-b2e3-414b-a7d8-50ef2f082eb9",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "107865dd-4039-4eb8-bafb-dd93008b9b0c"
        },
        "item": {
          "id": "cf1aea2a-2f0f-4a8d-a51b-a1f4c5e5424c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "348d77c4-a59c-410d-8bef-46a034082f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28a3c51-eac4-4ac6-823e-57ebddadddc6",
        "cursor": {
          "ref": "f8bbfec7-f5cf-4b84-8f96-3bc85a5a7c8d",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d1443920-a35e-42c2-89cf-e7eb748a2266"
        },
        "item": {
          "id": "b28a3c51-eac4-4ac6-823e-57ebddadddc6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3e60dffd-9340-41e8-976a-57361944dfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eda851d-4cd4-44b7-8f29-4c720fa0c21c",
        "cursor": {
          "ref": "7fdeae83-afb2-4702-bd47-0fb8d5d78732",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "75b8f956-dd2e-4f10-840f-b232679c1088"
        },
        "item": {
          "id": "2eda851d-4cd4-44b7-8f29-4c720fa0c21c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cb598d8a-5621-49e3-a85f-703aefaab59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1aad319-abb2-4e7d-8a76-a301b446a0d8",
        "cursor": {
          "ref": "07539cf2-2288-4fab-8ac9-05bc257582f2",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "79dc60e8-02ce-4895-a115-1ae07d3ebb73"
        },
        "item": {
          "id": "b1aad319-abb2-4e7d-8a76-a301b446a0d8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "30ebec9c-f8c2-4754-a3b7-3657383fdeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dba27a-3023-4acd-a8a9-c913a2b26189",
        "cursor": {
          "ref": "67cfb7d3-1a3c-4566-8ff8-8a0ffa4d81ea",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "be73ff4b-fdf8-4184-a1e2-b52c2689afdf"
        },
        "item": {
          "id": "50dba27a-3023-4acd-a8a9-c913a2b26189",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "38101bff-4ab0-40f1-83a3-bd4d3cc0d6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a41a03f-ddf0-480b-9a28-94fcaba5c8c1",
        "cursor": {
          "ref": "ce912ac1-7b20-4e29-b645-8bb5936e4daf",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d1ad7ab5-8135-4ba7-ba62-3724909c4922"
        },
        "item": {
          "id": "9a41a03f-ddf0-480b-9a28-94fcaba5c8c1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d59fa894-2223-4cfd-894f-e0f98684611f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fd8674-0638-4bf8-9674-9f703ec888e5",
        "cursor": {
          "ref": "81bf3650-1041-4cb9-8d76-b2e12f89ce1a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "47d686b9-aa86-4da3-a653-8419e528eed6"
        },
        "item": {
          "id": "e3fd8674-0638-4bf8-9674-9f703ec888e5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6f47cb85-3556-4423-b1f6-87277fc9c7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fe9d20-e666-48ac-a3c2-3298ea2365cf",
        "cursor": {
          "ref": "2d3e275f-fd5b-4b9d-894a-38837c5ddc92",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6ff25c93-fb99-4b57-b0fb-a96ffdb2e2ab"
        },
        "item": {
          "id": "33fe9d20-e666-48ac-a3c2-3298ea2365cf",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3390bdea-5c06-401c-aa6d-f88b59e1b192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ae35e5-4d98-4838-a3cb-03bcb354107e",
        "cursor": {
          "ref": "f922d4e9-6274-4992-a48f-554f68c1e274",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6bc67b9d-9ae5-4553-827f-8b776edcfc1c"
        },
        "item": {
          "id": "79ae35e5-4d98-4838-a3cb-03bcb354107e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3e24b9fe-8b1a-4b84-99b7-d4f62ac4e97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826905ab-8ba9-48f1-a908-f079c875e49c",
        "cursor": {
          "ref": "ec97438e-5a67-419d-a9e3-0e9b78b6becf",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7fbad373-1a6c-4258-9281-71da03e079c9"
        },
        "item": {
          "id": "826905ab-8ba9-48f1-a908-f079c875e49c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a9a3919e-515d-485f-af46-8f31b3572a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a7a15a-95fb-409f-b481-14faf4430773",
        "cursor": {
          "ref": "fb30a961-09d4-4fb2-8764-9a4618cebeec",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c5d9f775-4fcf-4a7d-a337-1530f725464c"
        },
        "item": {
          "id": "a4a7a15a-95fb-409f-b481-14faf4430773",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b8a1d757-80eb-4fa5-9555-d759ed79e53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68004684-908c-4be1-89cb-39077f486e0d",
        "cursor": {
          "ref": "971a0a70-0da1-4c9c-bb71-65c866aca8f9",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "10b93b83-e4eb-4b99-b6a3-9fa606d8e126"
        },
        "item": {
          "id": "68004684-908c-4be1-89cb-39077f486e0d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e191caa8-1b9b-40b5-8669-cda15909df1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0537f1-736a-4f4c-9a99-ff21be330bc7",
        "cursor": {
          "ref": "c7d9d264-6751-4f54-a8c5-b73e9f150dd9",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b9fd112d-4618-4713-965b-31b6d22cc34c"
        },
        "item": {
          "id": "1c0537f1-736a-4f4c-9a99-ff21be330bc7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3a4699ba-cdd1-4c8a-902f-e0d7aafba592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ca54fa-ea1a-434e-9a8c-0fa26f5045f0",
        "cursor": {
          "ref": "b86ae629-133f-42e2-aec8-7a186bdd5d04",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a692ef41-97fe-47d8-abbf-050eaf689d01"
        },
        "item": {
          "id": "44ca54fa-ea1a-434e-9a8c-0fa26f5045f0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "89ee6819-ff04-4bb2-85fc-7cd6751c29c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1e0fd2-6bb4-4061-9db5-d975f337b373",
        "cursor": {
          "ref": "689bcde4-630c-4f09-a919-2e1baecd2b69",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "971da878-d381-462e-b63b-05966849caa4"
        },
        "item": {
          "id": "ee1e0fd2-6bb4-4061-9db5-d975f337b373",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "105678ce-e8cd-43be-9347-8ecc2376f792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b8d245-5516-4ffd-a7a1-ffca1cda2f9e",
        "cursor": {
          "ref": "183fff87-f425-429a-88f1-134893334202",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2ceeab46-de0a-49b3-b929-7afa3d4d84de"
        },
        "item": {
          "id": "f4b8d245-5516-4ffd-a7a1-ffca1cda2f9e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c74a83ed-7a8c-4bd0-bef5-19e381ec01ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20cc09d-55f7-4bfe-83ec-48a5ab014e8f",
        "cursor": {
          "ref": "05edd750-7b8a-467d-9784-66e6c960cb65",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a99207b1-435c-44a8-abe7-2c533b302202"
        },
        "item": {
          "id": "b20cc09d-55f7-4bfe-83ec-48a5ab014e8f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6be6f7d0-5eb3-47ca-99a6-d9ea38b88226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c557383-e8f0-4877-ae2e-f210ce95cc80",
        "cursor": {
          "ref": "a452d71c-ad82-489b-9ce5-ebdc9bbecade",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d4ecd6a3-b91c-4fbf-a58f-7963f3d19a3a"
        },
        "item": {
          "id": "1c557383-e8f0-4877-ae2e-f210ce95cc80",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4ea5d619-3e92-4a65-be49-2b76e4469151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2352082a-ac25-45a0-ad1b-46ba6b3c1217",
        "cursor": {
          "ref": "398008cf-e04e-4986-b363-a2d7e1d68d15",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8d39d804-88b7-4cd0-941a-d7e26bb8f82e"
        },
        "item": {
          "id": "2352082a-ac25-45a0-ad1b-46ba6b3c1217",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "eb40b3fa-fc2c-4fd4-b192-6d6ecb455b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f908c8-e76e-43d2-8a34-49b1a9c93763",
        "cursor": {
          "ref": "c48f454b-3629-44c2-91b0-01dfeb707e1d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fd3bca85-bf3b-4d5c-9b60-48eec144cc8a"
        },
        "item": {
          "id": "f7f908c8-e76e-43d2-8a34-49b1a9c93763",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3eecbf61-d0c8-4877-ab7d-84758a123dcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36969bdb-1d1b-4858-9954-db343564db83",
        "cursor": {
          "ref": "b7e37e77-9e7f-46f9-a769-f652efffc38a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "37d28cbd-56e4-4f61-9af3-962c9eafbe45"
        },
        "item": {
          "id": "36969bdb-1d1b-4858-9954-db343564db83",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d2cae4b3-6f2d-401a-a284-7956b999ee8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "df3a3366-9461-4fb5-ac80-bc90da78e6e3",
        "cursor": {
          "ref": "53cfd395-1b05-4ee6-8dfe-ff7dec15b5c8",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "719d9d60-21f7-4fe9-a1bf-431e2dfc8493"
        },
        "item": {
          "id": "df3a3366-9461-4fb5-ac80-bc90da78e6e3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3ef18a7e-8261-45df-acee-60cc31c6456e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "3bc0d7f8-cdeb-4fa9-985b-ae78291b2a3d",
        "cursor": {
          "ref": "63f3f1be-0e41-4c7a-a5cc-0a13e513e210",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "df4d02bc-3e2f-4011-a226-61f790909739"
        },
        "item": {
          "id": "3bc0d7f8-cdeb-4fa9-985b-ae78291b2a3d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d9c71443-323b-44f1-aa98-cf41e441fe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7890ace9-a212-46be-8881-071e9a1b927e",
        "cursor": {
          "ref": "88d255cd-f83a-4b63-9e36-c6443a7a6a6a",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "715a57a6-3e18-4f74-9b09-78e16b337c59"
        },
        "item": {
          "id": "7890ace9-a212-46be-8881-071e9a1b927e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2395b3b6-e037-4e62-bfa9-ffec851ce83d",
          "status": "Created",
          "code": 201,
          "responseTime": 6109,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "77043996-500c-4b61-be4f-7d7165ba40b5",
        "cursor": {
          "ref": "a6919f65-8222-4cef-a998-abff0a51e7c9",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9c98e226-a669-4857-a76d-ddce8449c5ea"
        },
        "item": {
          "id": "77043996-500c-4b61-be4f-7d7165ba40b5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1780d0e2-9c02-4b9d-8fcc-1e442f20f874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e970cbe3-2048-4f44-9160-927adf3d79fe",
        "cursor": {
          "ref": "f8628e07-17fe-48e7-a38b-1fcfe3747c46",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7def503d-c63c-4631-ad23-4c7707569fe8"
        },
        "item": {
          "id": "e970cbe3-2048-4f44-9160-927adf3d79fe",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ce8680c1-5cba-411e-9a72-9957334769a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "bf99e10b-3fff-4608-8c6e-e1e2ffed4644",
        "cursor": {
          "ref": "60a2ae49-5335-40aa-af02-21a01b4fe717",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "acc27d7a-b73f-4aac-a3cc-1357c3bb581f"
        },
        "item": {
          "id": "bf99e10b-3fff-4608-8c6e-e1e2ffed4644",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ebb0222c-c671-49fe-89e4-70bb16e0402a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d1769c-bb67-4df6-a698-fa1f00083a75",
        "cursor": {
          "ref": "bf7d8881-f6fc-40ce-a0b2-4eba1704795b",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "92f53c20-f158-4eea-9a66-d91afee8d400"
        },
        "item": {
          "id": "e5d1769c-bb67-4df6-a698-fa1f00083a75",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0c20cd68-a5d9-47b7-894d-44f9c9a93beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da28589-f5c8-4450-9a42-869906557526",
        "cursor": {
          "ref": "1cef8a37-62cc-4f51-92e0-e587512e52ec",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "53da9dbc-5022-40f0-a570-e940c52e3e1c"
        },
        "item": {
          "id": "9da28589-f5c8-4450-9a42-869906557526",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f632fcf8-4e5c-4f7a-8f05-3afea301106b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f163fb7d-abf1-4bec-880a-bd4b7a096705",
        "cursor": {
          "ref": "5b744441-86e7-449a-9bb2-170a9edddd4c",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b9e46806-4c10-4cc7-8888-f749dd2306b4"
        },
        "item": {
          "id": "f163fb7d-abf1-4bec-880a-bd4b7a096705",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "43eb4751-46b8-4a3d-9a63-1b39b00a68b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1fe2b8-94cf-49c5-a30e-5549c9fe8a7e",
        "cursor": {
          "ref": "56796c4d-b024-439f-b38f-42be48515b64",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b91a8eca-2722-4cdb-a4ab-0bd873cd4839"
        },
        "item": {
          "id": "0b1fe2b8-94cf-49c5-a30e-5549c9fe8a7e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9b707e85-1e14-490b-a57d-e2281afa1e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90817118-0cb2-47e6-b76b-858ce9550651",
        "cursor": {
          "ref": "3ed8fdb5-4320-4b29-920c-f9cb34d5fdae",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7aaf3b18-d5f0-4c5f-a627-3dbbc7961685"
        },
        "item": {
          "id": "90817118-0cb2-47e6-b76b-858ce9550651",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d1d9d018-fc40-4389-978f-516299253ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6219644-a5eb-4ec2-95e1-54c4aa2b9589",
        "cursor": {
          "ref": "71c6dbb7-3c1f-48de-9f2e-d9b474016aa9",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "76cb4e8c-1894-4586-b610-c67604aae444"
        },
        "item": {
          "id": "b6219644-a5eb-4ec2-95e1-54c4aa2b9589",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "06ad312b-e04e-4a01-98c2-694b8d1342cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9493627b-abe9-4fc3-82e2-3a7c1bc84e41",
        "cursor": {
          "ref": "f5633cf5-1c07-40f5-9513-5c2950a88aa0",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ebc1e536-c369-43b8-9631-babfa10ec23e"
        },
        "item": {
          "id": "9493627b-abe9-4fc3-82e2-3a7c1bc84e41",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "43286e30-0685-4466-8be6-39973d53d786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ad6aa1-e1f0-4b4b-bb70-0bdcd5d9cdb7",
        "cursor": {
          "ref": "17aa9729-f182-4c99-b3d8-024efaed2281",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "be3da329-2cbf-4803-acee-b968ef1a26d8"
        },
        "item": {
          "id": "10ad6aa1-e1f0-4b4b-bb70-0bdcd5d9cdb7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f03a1a4a-a908-4557-94a1-ff671e8c03c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b96308-0c91-41f0-a56b-616c51501b63",
        "cursor": {
          "ref": "23724a30-94a1-4cc2-b8cd-a4d1c92c9b63",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6fa81da9-93a4-4100-bbe9-19d1d961d2ea"
        },
        "item": {
          "id": "03b96308-0c91-41f0-a56b-616c51501b63",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a858274d-d3a2-4341-a0b6-26d71b282aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342ba9c9-29db-4196-80de-905e0504446c",
        "cursor": {
          "ref": "1ae827b1-43be-4c66-80be-9a30b8581450",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0157cff5-beb4-41cf-9208-094d984c101a"
        },
        "item": {
          "id": "342ba9c9-29db-4196-80de-905e0504446c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8a1b605a-2888-4732-8c24-4563251e3860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c9804e-b889-4898-9e31-a8cd235638a9",
        "cursor": {
          "ref": "131bd31e-4213-490b-8a2f-91f3bd1a51e0",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fe79ee35-5fef-42c7-86e8-8b54143ab0ce"
        },
        "item": {
          "id": "09c9804e-b889-4898-9e31-a8cd235638a9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a51eb3af-e9d1-4098-b921-2077e3d6a67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0714df-fdb2-4002-85ee-b6c728412af7",
        "cursor": {
          "ref": "c1f7aec1-bd4e-4b6f-ba13-b21f66c2f1d4",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a17f27a4-8690-48ea-abf4-de0b8a0327b5"
        },
        "item": {
          "id": "fb0714df-fdb2-4002-85ee-b6c728412af7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f4f758c4-2e11-4b7a-972b-e32d39a1c993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b6f219-f265-47dc-826a-1be9d54c1c9f",
        "cursor": {
          "ref": "230f3892-6880-4507-ac2e-6a260aa21b7d",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d642386a-efa0-4a25-9915-c50b4e7e6795"
        },
        "item": {
          "id": "33b6f219-f265-47dc-826a-1be9d54c1c9f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "97a3ae67-8d78-4304-8ed7-5138f76c6c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c3ef9e-809a-48a2-9360-b9400979f6d9",
        "cursor": {
          "ref": "d2acb14f-59a2-42b7-976d-6587c8b0c8c0",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2c1538d2-0623-4b31-be7e-7e993f1dd3d6"
        },
        "item": {
          "id": "62c3ef9e-809a-48a2-9360-b9400979f6d9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0714c69c-6cc5-4f68-8f80-3496659311b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760e99b6-39b2-4af9-a321-de39cc34716b",
        "cursor": {
          "ref": "407ef713-e604-4d57-857c-e8924155e076",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "81ca94eb-f61c-411c-83ea-cee0b1d7424d"
        },
        "item": {
          "id": "760e99b6-39b2-4af9-a321-de39cc34716b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "52a9e63e-8413-40a9-b1e5-b5314ce6ecc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdb65ba-f9bf-4abc-aee3-dbfde7e5836e",
        "cursor": {
          "ref": "37f866e0-c581-4751-afb0-a37f5188e75d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1b703a34-d999-4554-8e38-f761370fae90"
        },
        "item": {
          "id": "dfdb65ba-f9bf-4abc-aee3-dbfde7e5836e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5ea49824-d31f-4064-8d6d-48a67d4aebcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f0219c-42e2-460b-b7f9-1fdd7bb81ac5",
        "cursor": {
          "ref": "1b1bc585-95b5-46ba-a3fd-624a0fef6299",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0f0e59d1-4178-493e-9b6b-1671728fdfd4"
        },
        "item": {
          "id": "48f0219c-42e2-460b-b7f9-1fdd7bb81ac5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "94747e3e-4c39-42bb-ac2a-6b08211c5267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7a24af-c761-40e5-b5ec-d5c31f1b221f",
        "cursor": {
          "ref": "fccc0c4e-b680-4551-b39b-4ec2713a25d2",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "337dfbe2-94f3-45d0-b7ae-2cd34e2dda05"
        },
        "item": {
          "id": "ea7a24af-c761-40e5-b5ec-d5c31f1b221f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "72b4b5f9-70d5-4976-a351-88716f37c01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8c6209-9203-4d6b-84c2-6b08b1e86cb1",
        "cursor": {
          "ref": "985f0ae1-542b-4809-a8d3-dc830bd25a3f",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0f215ace-2488-4368-b7df-fb21e4e40537"
        },
        "item": {
          "id": "1a8c6209-9203-4d6b-84c2-6b08b1e86cb1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "85065765-6eb7-4b08-a1d4-9b1b0ca908dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b54e7a-6d93-4a97-8a60-bebd2a344fb9",
        "cursor": {
          "ref": "11a2e084-5509-401e-b928-50409e278a6d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "113dc9c6-faa6-4cf0-8fc4-b31e4ce9a673"
        },
        "item": {
          "id": "a7b54e7a-6d93-4a97-8a60-bebd2a344fb9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "da788ef6-c7d6-4b89-b5c7-711f243c55d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6de4c7c-ac20-4e3c-8230-931d30e7a13d",
        "cursor": {
          "ref": "1a507525-29d3-410a-b646-8b404107964c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fdea66c9-c730-4325-9e25-0d427ec9cc0c"
        },
        "item": {
          "id": "b6de4c7c-ac20-4e3c-8230-931d30e7a13d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ad7721e4-cca1-4d34-b10d-774bb0277e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363812ce-e123-486c-a991-39c3ab959f27",
        "cursor": {
          "ref": "9a76d3e1-bea1-47a6-9a75-80f04e44d9f9",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7737d6ef-662c-44dc-b2f3-5aa8cc919f89"
        },
        "item": {
          "id": "363812ce-e123-486c-a991-39c3ab959f27",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a1568a2b-447b-4145-99dd-2a2eeddc2188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ad3d63-c242-4cd8-8b29-09ee6b20794d",
        "cursor": {
          "ref": "a6c391fc-d3b5-4f7f-8295-f707ac06a7f4",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "231fd500-5350-4ad2-8203-18d0b83d413c"
        },
        "item": {
          "id": "08ad3d63-c242-4cd8-8b29-09ee6b20794d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "17faefe0-cac2-4b14-b747-28a223f14964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec0306f-0a1b-469f-80f0-e65bf0f1be72",
        "cursor": {
          "ref": "ec1a52b6-f8f3-4e9f-9474-bc743382f643",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a8de1863-6af6-435b-b520-a26b8497ebee"
        },
        "item": {
          "id": "3ec0306f-0a1b-469f-80f0-e65bf0f1be72",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f9d1325e-8e79-475a-87ed-2ad3aa2d590b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2413992c-b164-4092-84ad-aded6743a228",
        "cursor": {
          "ref": "34f5de83-d1eb-4f1e-8106-c3cb7ff3c70d",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "61382ba6-24fe-4ade-b2ec-798bdcbce685"
        },
        "item": {
          "id": "2413992c-b164-4092-84ad-aded6743a228",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8b93ed83-b89c-4937-883b-1214bebcb438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed9e085-3238-48c0-9796-5cd2ce490546",
        "cursor": {
          "ref": "8a2566f1-973a-4926-802e-99dea5381d4d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d9cdc10b-fba7-44fd-8d8b-d8d08d219f3a"
        },
        "item": {
          "id": "2ed9e085-3238-48c0-9796-5cd2ce490546",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "62a1bd85-7402-4ede-9858-733d2f47e256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaf8375-7573-4ad9-a849-44dcec2e05fa",
        "cursor": {
          "ref": "1efda093-9977-4df5-b6f8-298a0e2dd6dc",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dc2ac83f-0207-4f52-8659-077c56df9158"
        },
        "item": {
          "id": "caaf8375-7573-4ad9-a849-44dcec2e05fa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "74635c1a-50be-4ac0-9799-0e8fcb9ac2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02c5a71-2997-4101-9aac-208e9e4a18e6",
        "cursor": {
          "ref": "6bd27b94-bbad-4af2-a49d-b4462c2d37de",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "532222a7-3155-412b-a630-719415d6baab"
        },
        "item": {
          "id": "c02c5a71-2997-4101-9aac-208e9e4a18e6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "354179cb-098c-4eab-8fbb-74e953a636b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c4b50d-3500-4b9c-acdd-d8fb64c44d03",
        "cursor": {
          "ref": "dfcf9578-2243-4aeb-84f6-1562a8bf6e72",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e696eeba-df50-4763-b26e-a26758026910"
        },
        "item": {
          "id": "46c4b50d-3500-4b9c-acdd-d8fb64c44d03",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "28515f6d-5051-4d94-978c-9d6a4f71ef06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8d9017-abb2-4265-b05b-64ac56a7d577",
        "cursor": {
          "ref": "31c8222a-3b53-4cbe-b15b-bbf6163ea20d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ba914c15-4039-4750-9f32-f0eed5379e6b"
        },
        "item": {
          "id": "fd8d9017-abb2-4265-b05b-64ac56a7d577",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e48f55fc-af2f-4a42-b8b8-b68bfd3ac93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a945bca-3b08-4d5a-8620-bd3745aa305b",
        "cursor": {
          "ref": "2235d591-9f6d-4a0f-ae08-79de980afe98",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8cf9a582-0833-40e6-a789-4dbec8843587"
        },
        "item": {
          "id": "1a945bca-3b08-4d5a-8620-bd3745aa305b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b0a8c374-2ded-45b3-8236-7f874a997fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393ba98f-eb54-4310-aef9-4287b33b733f",
        "cursor": {
          "ref": "97338def-8771-4697-9af8-7ff44d5336c3",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1136a256-12eb-4314-9e7a-fcea709c1436"
        },
        "item": {
          "id": "393ba98f-eb54-4310-aef9-4287b33b733f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "09d016c1-27a7-4f73-8e19-c54b51245d60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8463a30f-43c4-4965-8875-919e5f22d1bb",
        "cursor": {
          "ref": "79a2b6ba-b354-4486-b817-ebeb4c23fadc",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "74bb209d-9a21-46fb-a517-a2b50d2cfddb"
        },
        "item": {
          "id": "8463a30f-43c4-4965-8875-919e5f22d1bb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "97fa1d95-05cc-45b1-9d83-2cabb1df4805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d57f9d-fbb7-40d3-b491-a8ce774b987f",
        "cursor": {
          "ref": "b1bcf711-9515-4b18-9e5f-0dfeb2591a0f",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c11d8938-8277-4446-b64e-afd5d0fc6548"
        },
        "item": {
          "id": "40d57f9d-fbb7-40d3-b491-a8ce774b987f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b587f7d9-f0b2-49ac-b831-9a0a344c2e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63426f6f-ef5c-4fd6-80fd-5b9e9a8cdec8",
        "cursor": {
          "ref": "9754844a-0166-494d-b221-b2c2b5b64ee9",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1c16624e-9b9e-4bef-9827-6e2a86d20be5"
        },
        "item": {
          "id": "63426f6f-ef5c-4fd6-80fd-5b9e9a8cdec8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ce53d365-17f2-4eb8-b266-c6d66a5907ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bea4866-8a18-4f74-acc3-3579c1376d13",
        "cursor": {
          "ref": "342c94f7-e94e-4bf8-9735-62da571e18f8",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "80c70ab2-c5b7-463d-ba97-ee8570045c9a"
        },
        "item": {
          "id": "1bea4866-8a18-4f74-acc3-3579c1376d13",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f19bebb6-d642-4418-a799-f3c3004028ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df921c5-fc8e-4bb0-986d-4e077806fddb",
        "cursor": {
          "ref": "96e1fd84-7c03-42f4-a734-fe05fa250238",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "818d07a6-05a2-4a06-b02d-63f8123eab30"
        },
        "item": {
          "id": "3df921c5-fc8e-4bb0-986d-4e077806fddb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "114cd44e-4bdb-452e-b569-2b20c992e3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34030ef1-0a35-44b4-93e6-0e21af6754e1",
        "cursor": {
          "ref": "ffa57ace-0d4f-47c7-ac0c-c156e9954604",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b1b55dac-0aef-482c-bd65-2db10df7d00b"
        },
        "item": {
          "id": "34030ef1-0a35-44b4-93e6-0e21af6754e1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "55251307-109e-4871-82d9-2977e97c3d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc72030-1f8f-4bc5-875d-8c303052108f",
        "cursor": {
          "ref": "254dd3b6-2df0-498c-b2ff-41612683dad7",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "24eef1b0-e7f5-40e2-b0e0-3886584d688f"
        },
        "item": {
          "id": "1dc72030-1f8f-4bc5-875d-8c303052108f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f5b0393a-c1fb-4945-a3a9-a988290c2898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761e0d02-7c30-479a-850f-73c3195dec02",
        "cursor": {
          "ref": "49932857-38f1-4c67-949c-b8a586bc5f86",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "26df9aef-1463-4759-b08a-dea7bece8b68"
        },
        "item": {
          "id": "761e0d02-7c30-479a-850f-73c3195dec02",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f59ff86e-5cc1-487e-a76a-bae7ab8f944e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b90feb-a52f-45d2-b6f1-15548d9ba81c",
        "cursor": {
          "ref": "c467b463-6354-459a-9d0d-75a07995ae11",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "84468a81-5a9d-40dd-9167-da53d92659ab"
        },
        "item": {
          "id": "36b90feb-a52f-45d2-b6f1-15548d9ba81c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6df06ab7-09c9-484c-bea8-572d150ba718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ab67ca-559b-4928-a947-59cc0b4dea5b",
        "cursor": {
          "ref": "1d0e7619-0634-4523-8acf-807fd0c1cb5b",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9f663721-db4b-4dbc-8082-da37b27f9cca"
        },
        "item": {
          "id": "69ab67ca-559b-4928-a947-59cc0b4dea5b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "152faeef-39f6-418f-be1f-c2500911eb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403e6a7d-095d-40e4-ae7c-d3deeefec5e1",
        "cursor": {
          "ref": "a11f5d76-3d7e-485d-b5e4-a8c0ea2cf470",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "36f4fe6c-cf16-45c5-bff6-27b0664b926d"
        },
        "item": {
          "id": "403e6a7d-095d-40e4-ae7c-d3deeefec5e1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "64f48da9-34f6-48cd-85f4-84d7dde492a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150aa9eb-baef-4797-9ebe-72cd10ac5937",
        "cursor": {
          "ref": "72ce1679-8fa6-4cba-ab14-c8d59e9b63e1",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a3e3209d-8f28-4c1a-8644-adbbd8651c35"
        },
        "item": {
          "id": "150aa9eb-baef-4797-9ebe-72cd10ac5937",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9e63b6be-bfba-4b20-953a-8dff8487bf22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253a9366-e6db-4b77-b083-303ec3c6e872",
        "cursor": {
          "ref": "da28dcaa-43aa-477f-8682-8e1a4e5e46e6",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "49fd5de1-a19e-44d2-8850-d27725d49dfa"
        },
        "item": {
          "id": "253a9366-e6db-4b77-b083-303ec3c6e872",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "71c5558f-8e75-4f53-b8ba-7dd8a18f77fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed15efd-60d4-43ab-a83b-822f68dd6f36",
        "cursor": {
          "ref": "3dfcfe11-1280-4ed5-8696-3d4fc32463ca",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fe025d0b-6c5d-476a-bd8f-686d74589cef"
        },
        "item": {
          "id": "8ed15efd-60d4-43ab-a83b-822f68dd6f36",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a17f0661-abc2-4af7-8a66-a509521a1322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab2b7d4-7104-4389-9dbc-587e4ecaa9b2",
        "cursor": {
          "ref": "112d84e7-b30b-43df-b930-bbaa83f8a7e2",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "61104590-aa25-4ba1-a8ec-a46d4610ff00"
        },
        "item": {
          "id": "3ab2b7d4-7104-4389-9dbc-587e4ecaa9b2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7ecd603c-25f2-4f14-9166-8aad9da529a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bf2eb3-6e4d-4825-b3a3-53fb08953563",
        "cursor": {
          "ref": "e1271b43-783e-437a-b040-81d0be155252",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7be4506b-4d64-4dd1-a057-34583a004156"
        },
        "item": {
          "id": "f6bf2eb3-6e4d-4825-b3a3-53fb08953563",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cd4856b0-34bb-4ac3-a40e-1986ef7b5cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66472e2d-ffa4-4e37-9f3f-69386c3c0319",
        "cursor": {
          "ref": "301ddc48-4135-4993-8c69-dbc15e5fbbd5",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d25440b9-1147-433a-bfa0-c0d6f08a6347"
        },
        "item": {
          "id": "66472e2d-ffa4-4e37-9f3f-69386c3c0319",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "22732f03-2496-4acf-81d1-a1bae70b333f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a835057-8b58-4abf-8580-da2e92dd7e49",
        "cursor": {
          "ref": "1b7789f7-a5d4-4ed8-b6c2-ee95bb3b1f3c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4eddf012-d7ca-4678-8e8c-f1d588671217"
        },
        "item": {
          "id": "4a835057-8b58-4abf-8580-da2e92dd7e49",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ac7c1334-eaa6-40cc-b1c5-7a12426a1f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee20b4d2-95f9-42a0-933a-81f964dedd11",
        "cursor": {
          "ref": "6462a65c-0205-441b-8647-a49f5791d6b1",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f4744016-0ba7-455c-9d2b-db436c9ef3d1"
        },
        "item": {
          "id": "ee20b4d2-95f9-42a0-933a-81f964dedd11",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cf99c7f9-0384-4fef-a452-0c5050dc2441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936f4762-497c-4eeb-a632-782ba763baa8",
        "cursor": {
          "ref": "bc49aae6-d16b-405f-9749-754d32a3f413",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7fb27edd-f72f-4af5-aa44-c6486f855993"
        },
        "item": {
          "id": "936f4762-497c-4eeb-a632-782ba763baa8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "93ee0406-eea0-4b5d-95b8-1ef9e3bbdafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b5c435-09f5-426a-a312-e36748934b65",
        "cursor": {
          "ref": "0c7d9820-171f-4ced-9665-68fdf2ea4c70",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "636e3b9a-eed8-4a05-a703-5a20ae5da67d"
        },
        "item": {
          "id": "57b5c435-09f5-426a-a312-e36748934b65",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8c5cac17-767e-4525-a906-c3c37aa9001a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291c5c61-aaf4-4176-ab7f-11a7c605cd59",
        "cursor": {
          "ref": "05a0dfb2-3bcd-448d-9411-cfeb845712f5",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2e9a9f75-6723-4baf-988f-38baf1566084"
        },
        "item": {
          "id": "291c5c61-aaf4-4176-ab7f-11a7c605cd59",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "07db869e-97b2-4026-a1ec-98569b7455e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7049dcf4-3513-485a-a295-b091c1f4702e",
        "cursor": {
          "ref": "66d2a51b-baa6-4b40-8bef-c469ce7d255a",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d54848ae-4861-4988-a320-daacacff3f42"
        },
        "item": {
          "id": "7049dcf4-3513-485a-a295-b091c1f4702e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ebd6ebac-e34c-41ba-8b08-4aeee08042fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5afb5f1-ecfc-4b58-bcc6-878dfc04c827",
        "cursor": {
          "ref": "f504add3-6640-4e0e-ae8c-2f4350262818",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fc5a6094-5349-457f-ab78-46892ab2c61a"
        },
        "item": {
          "id": "d5afb5f1-ecfc-4b58-bcc6-878dfc04c827",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4364a983-ba8e-4a37-bd37-767ec7d42260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39911139-8d5a-4fb5-bb47-c1dce55ebcca",
        "cursor": {
          "ref": "82f698fa-5017-4bdb-80a5-150198d92b22",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f7f1bec7-afec-407b-9484-57faaa47d420"
        },
        "item": {
          "id": "39911139-8d5a-4fb5-bb47-c1dce55ebcca",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a82b633c-2c57-4d61-a48f-7f584902ab72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a7c498-b4ab-4802-a5b4-981dbd1976eb",
        "cursor": {
          "ref": "3cfe1dfc-ce05-405f-899b-a2e5ffe33bbc",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "86c38c89-a5a0-499c-b133-01078d055d84"
        },
        "item": {
          "id": "e1a7c498-b4ab-4802-a5b4-981dbd1976eb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c9518353-4649-4806-8814-e14e8e136416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04e0cdf-acc7-471f-817c-b4b0bb6ccb95",
        "cursor": {
          "ref": "56fd53dd-1ed5-4d52-bcf2-3efcb67dd1dd",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a5507621-f3cf-4348-858c-76f685410ca3"
        },
        "item": {
          "id": "e04e0cdf-acc7-471f-817c-b4b0bb6ccb95",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9e1fd56a-ebec-4ad1-8def-b988de0902da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b622a98e-e37c-4daa-9375-2a4d2b41bcd7",
        "cursor": {
          "ref": "bde1ccbe-33d9-40a6-af50-9cf066d53b0f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e6e1aa84-8a2f-4ffc-bd30-3faa0a5813c2"
        },
        "item": {
          "id": "b622a98e-e37c-4daa-9375-2a4d2b41bcd7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "099d8877-e09b-4ef3-9ede-7e008c68883b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc5ca02-502c-4c67-b488-f14cc768c919",
        "cursor": {
          "ref": "c19f39d3-6ab0-4ce5-8336-6e99c7efe1ef",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5fd5d2c2-8d95-45cc-a480-d31e8767880c"
        },
        "item": {
          "id": "0fc5ca02-502c-4c67-b488-f14cc768c919",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a4351342-423b-45e1-a21b-aff4d1e94a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2621075c-4a17-44e2-ab16-d9943e5d30cd",
        "cursor": {
          "ref": "39f302a2-31ad-475f-a1fb-c97f7ae524a5",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "13fb72c6-f842-442e-b2fa-583212ee26b4"
        },
        "item": {
          "id": "2621075c-4a17-44e2-ab16-d9943e5d30cd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c6fd5ebc-6d80-4236-8b7b-7ac451055438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca3681f-9a6c-400f-857f-fdfcabd04473",
        "cursor": {
          "ref": "612ac6a1-8ffe-4451-9020-1c25a1f386ea",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7707a4ce-aad4-4494-b051-f61f2fae563a"
        },
        "item": {
          "id": "4ca3681f-9a6c-400f-857f-fdfcabd04473",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "384a382c-408a-404f-b5a1-da4cbc7b6f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22d4793-db40-4aab-b157-e3fef53ec5d5",
        "cursor": {
          "ref": "029e34e6-6cb7-40ad-a77c-ce3ddc032e0e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "80d7c4ab-d8e6-42fe-8141-dabf3efc0c99"
        },
        "item": {
          "id": "d22d4793-db40-4aab-b157-e3fef53ec5d5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ea9cdb9b-d222-4bb5-8574-de3310974583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de4efab-5d71-4070-976c-c0cb94a019b4",
        "cursor": {
          "ref": "d8795f69-626c-44c1-a7ad-ac1f8a23fe13",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "87d1b6ac-7f01-4a16-a352-defa214351ca"
        },
        "item": {
          "id": "2de4efab-5d71-4070-976c-c0cb94a019b4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d4bc2e1a-b1c4-49c9-95de-59db5f5ee7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a974361-5cab-42f4-8741-0505586ba028",
        "cursor": {
          "ref": "f9b8b8fc-4d20-45d1-861f-c32745feb3cd",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3237d7ea-37e7-4ef8-a149-db1675218d0f"
        },
        "item": {
          "id": "3a974361-5cab-42f4-8741-0505586ba028",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "24e91b77-6feb-4371-a825-9a8d1db33cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5e684e-cc32-46a0-a9a4-7a97b8ca12fa",
        "cursor": {
          "ref": "bf9419a2-9e86-4c0c-8eb2-fe5f86099b61",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6bff10bc-c147-4892-b19c-49ff229b0ff8"
        },
        "item": {
          "id": "9d5e684e-cc32-46a0-a9a4-7a97b8ca12fa",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "37f0df22-6187-4d76-9b24-a3d4bae9cb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec51f0d-c3ce-42da-830c-224ab6a4a5e8",
        "cursor": {
          "ref": "8b6c7d50-4979-48c6-a509-34167668912b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "182128d0-bcb4-4327-a682-beeda7f6d76a"
        },
        "item": {
          "id": "eec51f0d-c3ce-42da-830c-224ab6a4a5e8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "89109a62-a0e1-4c27-ba40-915f40598c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b96f8b-3634-4a1e-bb4a-fb70abf5e5b5",
        "cursor": {
          "ref": "98803c4b-43f6-4df1-898e-d6a62c5028ac",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "626d6a22-d46a-42c4-bd8a-43aee41856b0"
        },
        "item": {
          "id": "75b96f8b-3634-4a1e-bb4a-fb70abf5e5b5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2b8b0c3e-b0c8-4383-ab9d-9aaa4e1c26f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa85ce71-33cb-4bb4-942f-d9782a493f2c",
        "cursor": {
          "ref": "49e3bffb-7255-4293-ad37-b058b8e9d60c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1421210d-235c-4726-85da-dd900e77e3fa"
        },
        "item": {
          "id": "fa85ce71-33cb-4bb4-942f-d9782a493f2c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9227e84f-ef91-4b21-b704-85355d215956",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5eddae0-21c5-4fa8-ab3a-816952847540",
        "cursor": {
          "ref": "e11ab487-4282-4bc0-ac15-6f828730d1c9",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "06c35b97-2b27-4beb-8fcb-7d1898498d8d"
        },
        "item": {
          "id": "f5eddae0-21c5-4fa8-ab3a-816952847540",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "88d5c667-dc48-495e-8653-b45db652eab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74061a8e-9723-4b38-8342-68d999461d26",
        "cursor": {
          "ref": "b877fd43-ad31-4297-a475-9da6ce0dac2f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5f586854-02ba-461a-852f-3aea4bb20223"
        },
        "item": {
          "id": "74061a8e-9723-4b38-8342-68d999461d26",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b6351f35-0c51-4571-9b16-2a3e627a131e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b4e4e3-0894-4d8a-bb9a-46d9b0ddd86a",
        "cursor": {
          "ref": "49543b0e-04e1-4603-87a8-6c3bd1bb3aed",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7dadfce1-5456-4357-9b60-43201a680252"
        },
        "item": {
          "id": "a1b4e4e3-0894-4d8a-bb9a-46d9b0ddd86a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0ed7eae4-5f2c-4882-b933-b3aa4d4499dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397d2201-56f2-40b5-851c-72e53756f8ba",
        "cursor": {
          "ref": "7bdd0e3c-16bb-4e3e-a3de-3e0aef76dc47",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6bf1bf17-c5af-4e19-b2a0-ad4eb3fdd594"
        },
        "item": {
          "id": "397d2201-56f2-40b5-851c-72e53756f8ba",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fcd189ac-16ac-4431-8e17-f61b14204a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50399bc5-d3e0-4e63-ad30-7d840da83e4a",
        "cursor": {
          "ref": "e43c4b9f-44c2-4118-9b8a-37adf950d010",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5b57f953-4562-4148-8691-dac2197b3b5c"
        },
        "item": {
          "id": "50399bc5-d3e0-4e63-ad30-7d840da83e4a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3e8589ba-2ca5-4792-8a46-177ed8f69d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05811843-bb1a-49dd-b11b-93941dedad74",
        "cursor": {
          "ref": "0362e75e-ad8f-41c4-935c-9adcacb73b78",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9da102cb-25c0-476d-98a0-fde6fc768555"
        },
        "item": {
          "id": "05811843-bb1a-49dd-b11b-93941dedad74",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f8dd2074-3314-4500-986d-9319082fefdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ca392a-7885-40fd-874c-7b868b4bc7a2",
        "cursor": {
          "ref": "d2bc9cf7-3bc9-4cf4-b10f-2c7e946cb7d6",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "301c8f6c-6e8f-430a-869c-738fd305ae10"
        },
        "item": {
          "id": "12ca392a-7885-40fd-874c-7b868b4bc7a2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ec42c09d-d554-406e-92bb-ac841bbc78bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b753b8e8-51bf-45a4-9b89-60b4317d2154",
        "cursor": {
          "ref": "b81b80c9-4067-4434-bc06-d71d4546e8df",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1900781e-20a9-4316-8a4b-762a03efd1a2"
        },
        "item": {
          "id": "b753b8e8-51bf-45a4-9b89-60b4317d2154",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "631c61f0-c6f1-45cd-8c72-aff8060ba38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e8edbb-0163-4d2c-8855-b4e779e5b398",
        "cursor": {
          "ref": "7055539f-a709-4ff5-a2f0-e332006a07bf",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bc1b1a83-c16b-4fbe-9514-aa3e99303dbb"
        },
        "item": {
          "id": "63e8edbb-0163-4d2c-8855-b4e779e5b398",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d5c4f2b9-5c96-46ea-9cbe-474402e1a496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebd8c1c-b7c2-473d-97bb-ea2db92a452a",
        "cursor": {
          "ref": "d5f5c645-aec5-4a5c-921c-931da6364953",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b7204c6b-e47a-4ca5-8d5e-006fe8acae27"
        },
        "item": {
          "id": "9ebd8c1c-b7c2-473d-97bb-ea2db92a452a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e4c8aba7-44a4-4851-a006-671f666b2587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ee996d-ae73-40a2-aea5-b4ddbfc33d06",
        "cursor": {
          "ref": "e9c68580-dc45-4642-bd7b-f928f9052662",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "99cab8c1-14ea-48c4-adac-3d92f9078362"
        },
        "item": {
          "id": "18ee996d-ae73-40a2-aea5-b4ddbfc33d06",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2692616c-4fbf-4c44-be32-8b54c7936f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841d9a5f-dee7-405c-959b-b23bbb543de8",
        "cursor": {
          "ref": "92196108-3483-4394-839d-c5e0e33d0e89",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "47975057-230c-4502-b5a5-f1f16bdc12c9"
        },
        "item": {
          "id": "841d9a5f-dee7-405c-959b-b23bbb543de8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ffe57a53-a817-46e7-b6f0-9d2596054580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75feb4e-5f96-4d03-bd17-398d7f5f7947",
        "cursor": {
          "ref": "13c0be7d-947b-480a-9abb-d605e507235f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4aa2a045-5b87-45a7-9617-1da7ba9ddddc"
        },
        "item": {
          "id": "c75feb4e-5f96-4d03-bd17-398d7f5f7947",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "73e9b28d-1304-49b7-9c5e-0c64682aacda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a561bf-f011-4c85-846c-d8601ba7610f",
        "cursor": {
          "ref": "9ba2beda-49dc-4604-9840-9bd4a5318450",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "46a03f5b-b91a-49a3-94d1-009d3da762d2"
        },
        "item": {
          "id": "c0a561bf-f011-4c85-846c-d8601ba7610f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3d73d7e8-4f57-4f1e-9b5f-50a3f4b80a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458eca07-a528-4c69-a3eb-1bf6c841e3bd",
        "cursor": {
          "ref": "c7cbd421-6143-4618-bae4-fe9cd2871683",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a13cfcf6-cb6a-43e1-ace6-8e433bae7380"
        },
        "item": {
          "id": "458eca07-a528-4c69-a3eb-1bf6c841e3bd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0ffe1e8a-8c56-413b-8b23-a81decd31461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e808b1-d959-4412-9fcb-cbb54b5add42",
        "cursor": {
          "ref": "dc03f192-5417-4dc3-8aec-2ec2b62a4c5f",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d6a4636c-652b-4a1c-a150-6b380bf614f2"
        },
        "item": {
          "id": "c7e808b1-d959-4412-9fcb-cbb54b5add42",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d8426b20-268e-4a9d-b9ec-c8fde3e55beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760edf62-61d1-4886-ad42-4f146082dd40",
        "cursor": {
          "ref": "44084c8c-9dd5-4ef7-bcd5-af0680fdf815",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0c6d389a-260e-48f5-89ec-c2a11e4994f7"
        },
        "item": {
          "id": "760edf62-61d1-4886-ad42-4f146082dd40",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ca8fb649-2897-4c9d-9384-83bf3f9f63a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27b5cee-3a1b-4c07-874c-e9eea192610b",
        "cursor": {
          "ref": "3a5880ea-2a69-4bcb-ab4c-95fd59bd4244",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c3e485de-747c-44d3-9738-eb85be814287"
        },
        "item": {
          "id": "f27b5cee-3a1b-4c07-874c-e9eea192610b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b1e97dc1-c35b-4a4d-82ff-c19d4b63a46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5faa1ce-54c7-483f-ada2-d6f310b767da",
        "cursor": {
          "ref": "f86de980-2427-433a-bfb7-bc5b3402ea0b",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ed7da583-ab61-4aca-a84c-9ac92e3ab46e"
        },
        "item": {
          "id": "d5faa1ce-54c7-483f-ada2-d6f310b767da",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b59c9290-3bcd-406c-bd70-31fffc6f36e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482534ec-855c-4ee3-adb5-c6658db6bc30",
        "cursor": {
          "ref": "46691757-5584-4063-83e7-136e9213a120",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "336b8562-e23d-4efe-9cb8-b126e2800028"
        },
        "item": {
          "id": "482534ec-855c-4ee3-adb5-c6658db6bc30",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8af6885a-3716-4aca-b8ab-d494adaba5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2458858-5c4c-4096-875f-f0b8f1f2c3a0",
        "cursor": {
          "ref": "8dc5c6be-e598-4aa1-8b9e-bfb522a742e8",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5bff2ea6-7e39-4fdd-a38b-d19007466b06"
        },
        "item": {
          "id": "b2458858-5c4c-4096-875f-f0b8f1f2c3a0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c6e4a1b8-0a9a-4f57-ac1d-1b5bae0bdfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e4736a-d6b0-4906-b98b-2fa15c771f08",
        "cursor": {
          "ref": "e4610aa9-0df4-4ff5-be47-e71948895c25",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0dbb46d4-cc69-45db-8dce-0d818e7cec55"
        },
        "item": {
          "id": "28e4736a-d6b0-4906-b98b-2fa15c771f08",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "895ac61b-525e-43af-8daa-78d66b1e9c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4c0025-c086-450d-81f2-490fdd56b39c",
        "cursor": {
          "ref": "2e0c945f-cdfa-40dc-b44c-1541548e6573",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b647f906-a112-4fc0-98bb-54027f102432"
        },
        "item": {
          "id": "5a4c0025-c086-450d-81f2-490fdd56b39c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5649c18c-4800-4c90-bb3b-dcc55edfad42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b0f513-0ced-437c-9097-456813be192c",
        "cursor": {
          "ref": "fce07c91-60b3-4617-83ea-2d8a5c1bde95",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "718baffe-9f42-4e4a-b247-b9483bb880e8"
        },
        "item": {
          "id": "09b0f513-0ced-437c-9097-456813be192c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9185bd58-18a0-4e18-8262-30281c719f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b61847-562c-4dd9-a5b3-9b8f2b94f39a",
        "cursor": {
          "ref": "855ac173-f256-4f7f-ac31-9f4d5595a47b",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3e64d995-99ac-46cb-bc5c-f1c6a3b3ac4f"
        },
        "item": {
          "id": "f3b61847-562c-4dd9-a5b3-9b8f2b94f39a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ecea08cf-1358-4bdf-826c-3a6cf9feede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fb845c-b3d5-485c-b81d-e4a20406b407",
        "cursor": {
          "ref": "09adf3e6-595b-45c9-ba76-72aceba437df",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "01ba2fc7-d5ef-4fed-a26d-f4b2c623ddf3"
        },
        "item": {
          "id": "84fb845c-b3d5-485c-b81d-e4a20406b407",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a419587d-73a5-4b21-8da4-c2a83fe090ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d96dbbf-18e5-425a-97a5-b0e4d987f189",
        "cursor": {
          "ref": "70afe8b4-48d4-448c-b4eb-99a3c03bdfce",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "379ff51c-14ca-4256-bc39-39d2da826ed7"
        },
        "item": {
          "id": "4d96dbbf-18e5-425a-97a5-b0e4d987f189",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "766d6b70-1383-4a2e-9743-4162f99bc317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259d95f3-df40-4cb7-9209-47ecfd3215aa",
        "cursor": {
          "ref": "efd1f246-6faa-45dd-a4cb-7c1f492ec008",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7e226d35-9bfc-4d5d-bc96-feba81990165"
        },
        "item": {
          "id": "259d95f3-df40-4cb7-9209-47ecfd3215aa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4335cc55-35e2-4b82-9e81-bf39ee392aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e7c599-7467-4f31-a5a1-1b226b010fba",
        "cursor": {
          "ref": "996d50ce-e930-4b59-978b-91628aef5d06",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "149bc214-c84a-4ebc-b6d4-4822ed845754"
        },
        "item": {
          "id": "26e7c599-7467-4f31-a5a1-1b226b010fba",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "81e961e4-7a9d-4689-9301-408d0f3edddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93216768-8da1-441b-9fdb-e995606a7cf0",
        "cursor": {
          "ref": "6be92e34-0ecf-46c6-9ff9-647a6b9dbea0",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8d333d25-058f-4bba-a88c-fa44bb08fdf0"
        },
        "item": {
          "id": "93216768-8da1-441b-9fdb-e995606a7cf0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d0342cb5-bd70-4a1c-b7f6-7492f7b6573b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c920c1-3d84-42ca-8323-3745b1378156",
        "cursor": {
          "ref": "b013e0b8-f245-4516-9652-b03bb3a72031",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "63d6c389-03b3-430a-b198-098b0bdb774f"
        },
        "item": {
          "id": "e0c920c1-3d84-42ca-8323-3745b1378156",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bf422922-261d-4e9e-9a1b-e11c3cc35068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad5fc4f-ceed-43d7-846e-541d2c391163",
        "cursor": {
          "ref": "8718cf5b-605d-49e5-acc4-a490262dda47",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "81f905b2-591a-455e-b64f-f1cd32eef1e5"
        },
        "item": {
          "id": "6ad5fc4f-ceed-43d7-846e-541d2c391163",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7bfa323f-fda1-4ecd-bcab-5f6e8422060a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a32b2c-0589-49d5-92f9-c618822f6a72",
        "cursor": {
          "ref": "d79ac087-16cb-4592-9732-a6954ff3e22f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9b89e1c1-ef9c-412a-af31-4a19fbbe9612"
        },
        "item": {
          "id": "32a32b2c-0589-49d5-92f9-c618822f6a72",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1afd1166-727a-4958-a293-356fbc219925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fa8108-c303-4092-b41d-258347479fd4",
        "cursor": {
          "ref": "182a509b-836c-457a-bf1c-362864f87e11",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "604c6575-03a3-4ef7-90f8-73df5cd49df7"
        },
        "item": {
          "id": "56fa8108-c303-4092-b41d-258347479fd4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a2caa943-955b-429f-8171-5099481ac64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a188595-7668-4de3-b319-d6871e022f54",
        "cursor": {
          "ref": "cc093173-f534-4a1f-a0fd-39512956e956",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b64aa8b7-f359-439b-952d-feeaa30f6d97"
        },
        "item": {
          "id": "6a188595-7668-4de3-b319-d6871e022f54",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "248813ba-2517-431c-8893-bbc2ee64d649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9479d38-0213-4848-ba97-512181784552",
        "cursor": {
          "ref": "02991e7d-1883-41f6-8416-5eeae96f0995",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "42db855d-824d-4b8a-a2f2-b40fa5009c33"
        },
        "item": {
          "id": "e9479d38-0213-4848-ba97-512181784552",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "17b6a5cb-bece-41a6-8342-ec65e573587d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ccc379-75d3-40cd-a40e-52fb11917bda",
        "cursor": {
          "ref": "9835aa0a-a4f3-42ce-9be7-f76ed766ead7",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4d1d5ca6-8265-409e-a033-17558d9019ea"
        },
        "item": {
          "id": "03ccc379-75d3-40cd-a40e-52fb11917bda",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5757ec46-834e-40fc-8aff-dbea10fd068c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17284524-f8c9-4b3e-b792-d6abb57e3a1d",
        "cursor": {
          "ref": "64293a0e-4bdc-41e1-bc45-22e765f37d1c",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cb9e361c-80b5-43a5-853b-f68738e6d982"
        },
        "item": {
          "id": "17284524-f8c9-4b3e-b792-d6abb57e3a1d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cd9534c8-1b0c-42d1-90ee-4c55ea1a76c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d40a30e-6901-41f0-8e8a-bc122fa288fd",
        "cursor": {
          "ref": "0dd863d2-b104-4f0d-9a2d-ade68c807ff7",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "47246889-1c32-4e2a-ab10-7047b91bf949"
        },
        "item": {
          "id": "9d40a30e-6901-41f0-8e8a-bc122fa288fd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2f54ce96-b7b8-4046-9bcc-2c956d3d7fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ce9016-6fb3-42b9-9d91-2063b176a1ef",
        "cursor": {
          "ref": "adef4901-5c25-4633-94ed-aefa7e687ea8",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "17346f60-1620-4339-a892-ab88846c6366"
        },
        "item": {
          "id": "f2ce9016-6fb3-42b9-9d91-2063b176a1ef",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a517ecbd-682f-4c0b-a1da-973c7f329160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcd3704-1965-490f-8043-9ec42186b1f5",
        "cursor": {
          "ref": "e8d746b9-06a2-4956-aaf1-0522bb765819",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "299c3d5c-28ac-4dbc-91c6-f2b9bc26f2a0"
        },
        "item": {
          "id": "4fcd3704-1965-490f-8043-9ec42186b1f5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7843dad3-7528-4796-a90e-60009727992d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de09f94-19ba-4ad1-bab4-8fd335e8d9f7",
        "cursor": {
          "ref": "36230fcc-1fb6-4f1d-bfd3-819b31cf5b8a",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "09956666-3437-4dec-aabd-2a308cf5f5a1"
        },
        "item": {
          "id": "4de09f94-19ba-4ad1-bab4-8fd335e8d9f7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ba780b6c-7520-4023-b160-97394bd57cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46d4e50-446a-45af-b45f-7337cdb641b1",
        "cursor": {
          "ref": "4fb77048-836f-4616-9639-52faee7468b5",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d1503d7f-3090-4985-9d00-4c0d16591132"
        },
        "item": {
          "id": "c46d4e50-446a-45af-b45f-7337cdb641b1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "38faca1e-c875-4ef7-a199-6776d8268fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04ae3bf-3843-44e0-98da-c51b04a66736",
        "cursor": {
          "ref": "63db3ce9-9df4-46f6-ab43-5760502c03ab",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "512f17fb-0545-4cac-9456-ebb4a9b2a134"
        },
        "item": {
          "id": "b04ae3bf-3843-44e0-98da-c51b04a66736",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "02a29448-093f-47de-9cea-ba044b3bd578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e803264a-2632-4fe7-9dea-3186754e1793",
        "cursor": {
          "ref": "285f86e5-3cda-4cfb-a649-0ad64a83b176",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b2b5a744-d49c-4808-80dc-e37a87d3dbc5"
        },
        "item": {
          "id": "e803264a-2632-4fe7-9dea-3186754e1793",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f63bca27-37db-4872-aa05-5be0063951bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e8a368-0e73-43a6-9342-c3d665f78a6c",
        "cursor": {
          "ref": "2740b9cf-e469-48c3-b4b9-f703237fe939",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "616cb05d-7de7-4473-9dfc-bd01085fa77e"
        },
        "item": {
          "id": "44e8a368-0e73-43a6-9342-c3d665f78a6c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d67c8d95-6279-4289-8ba2-0e43932734f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5d0482-ef45-49d5-8084-e4620444dc3b",
        "cursor": {
          "ref": "f0db19b1-0b11-45b6-a0bc-9b5a753ac5c1",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4e768465-c6df-49cc-8756-b80f72b16c3e"
        },
        "item": {
          "id": "8a5d0482-ef45-49d5-8084-e4620444dc3b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6896281a-b2e6-420e-b009-2cba7c40d771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b35d7d2-11ed-4af9-871c-0211238d3776",
        "cursor": {
          "ref": "449c618a-a0dc-4cc2-a686-8b11c3f4780f",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "de06e08d-a345-45e4-93c8-c3457716b0f5"
        },
        "item": {
          "id": "2b35d7d2-11ed-4af9-871c-0211238d3776",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1158e5a0-22fb-4663-8dd8-66472ceb5a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3503f4a-b780-4f76-bb53-8bb8d09fb431",
        "cursor": {
          "ref": "2faa3e8a-2579-4de5-92e5-0bd2d57211b8",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c44ba1c3-af67-4082-9f47-e88bab3e1747"
        },
        "item": {
          "id": "c3503f4a-b780-4f76-bb53-8bb8d09fb431",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "daccca57-d881-48f4-8b76-5c3cdd0ae9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39deb14f-72c6-4ebb-bd94-f9bf53904568",
        "cursor": {
          "ref": "4bb036b1-7f53-4be9-aa2e-278eb70a5e35",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b0e8db78-6e45-4ccc-9db3-095862169b66"
        },
        "item": {
          "id": "39deb14f-72c6-4ebb-bd94-f9bf53904568",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dc4d9987-7fe1-438b-970a-bd3e1e50603e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e3d4b0-4994-4525-87c6-a53f08d11000",
        "cursor": {
          "ref": "d7261b02-ed66-4e30-9ef8-7d5d8a211d9a",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "debb58f1-28c9-4e73-923b-f4dd5fb75d9f"
        },
        "item": {
          "id": "c0e3d4b0-4994-4525-87c6-a53f08d11000",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1356a072-c098-4a6f-bbb8-ac0368443e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd551a0-fd9a-40c4-a30e-b9901fc821cc",
        "cursor": {
          "ref": "684b6d28-45db-42b2-96a5-f708f45ab641",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bfb8a261-ed6d-484d-adf4-519d1bcc8869"
        },
        "item": {
          "id": "ffd551a0-fd9a-40c4-a30e-b9901fc821cc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f02e5a4e-8580-4004-adab-8e721acf782e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bef1059-4571-47e5-b4be-214fd53d0db5",
        "cursor": {
          "ref": "b0818dcf-fac0-4b3b-a3bc-3c27b0937638",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9d04a92f-c0ea-4616-a74b-53d8fe9bc88d"
        },
        "item": {
          "id": "7bef1059-4571-47e5-b4be-214fd53d0db5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "afdeb3e5-b6e2-4397-ba8a-d953dcdff577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9168d8-c11e-43cd-b436-557c08e2d97c",
        "cursor": {
          "ref": "37e79a17-7627-4e13-98dc-ffaba60269a7",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fb2f36a9-3cc8-4598-a1e2-21d6869b2c7f"
        },
        "item": {
          "id": "cb9168d8-c11e-43cd-b436-557c08e2d97c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "887910cb-4cd2-4365-819c-82bc677d0dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2116f3e5-e127-4599-b8f0-b73abb8324e4",
        "cursor": {
          "ref": "ac8d1fff-faf8-4704-a0cf-3e64d8b6c570",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e528d35d-4c74-4a09-9ebd-47f6d3bbfcf2"
        },
        "item": {
          "id": "2116f3e5-e127-4599-b8f0-b73abb8324e4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3a93d77d-90a3-449c-b2da-1713a9c73966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf737c9-117e-4766-a42a-5d72da44729b",
        "cursor": {
          "ref": "2442d4e3-7798-488e-a5fb-eade0c985218",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "03f1026f-de3b-4f83-8865-6fab56283b2f"
        },
        "item": {
          "id": "2bf737c9-117e-4766-a42a-5d72da44729b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1584e453-3f0c-40cc-ac10-f271c9d39501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7329780f-82ee-4356-b28f-a7007b3c5af6",
        "cursor": {
          "ref": "6fbb2f54-b52c-4319-8759-16e0c7f22c21",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "776ae19a-5fa2-4f23-93ce-51ba3d12d3a7"
        },
        "item": {
          "id": "7329780f-82ee-4356-b28f-a7007b3c5af6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a2996974-75fe-4c14-8882-c142e2cd1781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dada19-661c-4f0d-af89-555ac1d3da80",
        "cursor": {
          "ref": "7a20a49b-7aa8-4f5a-998e-7d079f656b9f",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "092e9933-3997-4b26-ad86-bc73bfac24cb"
        },
        "item": {
          "id": "e9dada19-661c-4f0d-af89-555ac1d3da80",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4358660c-86a0-4334-8798-e5dbd6404f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd5acb1-a513-40da-8617-9a0af805f135",
        "cursor": {
          "ref": "a4ed9738-0a55-4792-bce6-a9ff557bd2d7",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b8bc210a-e55f-4d4b-a1f6-1ddf798419a5"
        },
        "item": {
          "id": "cdd5acb1-a513-40da-8617-9a0af805f135",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b669f2ce-ae48-4216-908d-49c73f6b821f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30267ef2-97ef-4c8c-93ba-7c072039f040",
        "cursor": {
          "ref": "43ee71ee-915c-44c5-870e-49f353332d7f",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "66798510-992d-4be7-8938-d4ef0088e93a"
        },
        "item": {
          "id": "30267ef2-97ef-4c8c-93ba-7c072039f040",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "78778d02-3b13-480b-9e68-33ba86027d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee503143-1656-4ff8-bc43-c50c1ad9b531",
        "cursor": {
          "ref": "086ae318-e02f-441a-9c20-cd5785fb5f5d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0bbb4172-cae6-43b6-b90b-438699074e05"
        },
        "item": {
          "id": "ee503143-1656-4ff8-bc43-c50c1ad9b531",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e865803a-13d0-4a11-815f-c9ba36046a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989b9f57-f3ee-4786-bd67-3809a2bb465d",
        "cursor": {
          "ref": "b2749f83-16ef-47a4-89de-7ca7cf45d880",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ca6dc934-6941-4665-8f5e-e9d725c31ce9"
        },
        "item": {
          "id": "989b9f57-f3ee-4786-bd67-3809a2bb465d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0261de61-d5d0-4789-ac1a-28ae6b99d336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d37cd0a-8dfd-45c0-b27e-8bf9a2f92aee",
        "cursor": {
          "ref": "2a214aa5-0f85-4622-8c08-ef13190def37",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7c257181-16f9-4a6f-b294-4c4322cb2bc4"
        },
        "item": {
          "id": "8d37cd0a-8dfd-45c0-b27e-8bf9a2f92aee",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b381ac67-371d-4e7f-9b20-8536ee01721c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbff1cf-0b5d-4e18-a945-eab4c76ecd97",
        "cursor": {
          "ref": "0f81daf7-5ab3-49f9-99df-0d5b0ce47f81",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e0691543-038c-42d6-b013-05a947256d27"
        },
        "item": {
          "id": "cbbff1cf-0b5d-4e18-a945-eab4c76ecd97",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6f523960-336c-40a6-8161-0e342b769d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98174f9b-30b3-44c8-bfa6-bc0c4722941c",
        "cursor": {
          "ref": "58e76eeb-9fee-4440-8ba4-ded1ff2e8d3a",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f235ee08-d3dd-4845-81ea-7f2411dc44f9"
        },
        "item": {
          "id": "98174f9b-30b3-44c8-bfa6-bc0c4722941c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "41addc87-0f14-4c56-a7da-b13a3ebbb909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fb6af3-771c-49da-9b4c-64af091473ed",
        "cursor": {
          "ref": "2da9deea-76b4-44f2-8988-0e14f1b73877",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8f5df129-66c5-4c4d-8cb2-5f646ed5141a"
        },
        "item": {
          "id": "d5fb6af3-771c-49da-9b4c-64af091473ed",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "77e87d75-3252-420b-a062-8daf39a0238a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680eae46-11ab-4eb7-9157-2fa77bd17fe5",
        "cursor": {
          "ref": "ef63f7de-853e-4b08-bd05-34355ef14f01",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "77d21687-878b-4a14-bade-20c37b18bf27"
        },
        "item": {
          "id": "680eae46-11ab-4eb7-9157-2fa77bd17fe5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "eac8cc28-d23e-4a2a-96d6-4c15f21f077f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f623bc-7137-4dfb-9ed9-7b03d055a901",
        "cursor": {
          "ref": "6b1ff711-adc5-46d8-bf95-b6af90aa8b94",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6698dd79-2401-46b5-b1bb-889e5e1b9264"
        },
        "item": {
          "id": "f1f623bc-7137-4dfb-9ed9-7b03d055a901",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "57837a81-f3fd-4fba-a11d-c90d881e3b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473d66cd-65fb-48d4-9211-3eaeea8fc96c",
        "cursor": {
          "ref": "9bca87d6-e5af-4bbe-9d3e-65699f32cd63",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cc5f999e-9595-4f20-9465-ff02e672be07"
        },
        "item": {
          "id": "473d66cd-65fb-48d4-9211-3eaeea8fc96c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "38efba0a-5b1a-42cd-b8af-7e4e56a47699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdaea5c-784f-4677-800a-5e9e7c214d2c",
        "cursor": {
          "ref": "29da5b28-953f-4dde-8cb0-1a2520cd73d3",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6148854a-bba2-40bd-90b6-7c498b1a9ac5"
        },
        "item": {
          "id": "ebdaea5c-784f-4677-800a-5e9e7c214d2c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c5f3f1a7-c506-477f-9f11-dcc5e98edeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c696923-006a-4c48-a7b5-4c3fdde80596",
        "cursor": {
          "ref": "e29f0d0c-3431-4a5c-9d69-c72a5077b421",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "56a98234-e4a6-4655-a1a2-00e5acff3cd8"
        },
        "item": {
          "id": "5c696923-006a-4c48-a7b5-4c3fdde80596",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "123af18a-9a76-4c7c-9678-221f0d3b205a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8272350f-7418-4818-9030-a0b0c59b12b0",
        "cursor": {
          "ref": "abcf2460-1823-4c69-a9d7-aa04a7e2dd81",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eedecfd5-0dcb-4f1b-aa65-c2e3327971ea"
        },
        "item": {
          "id": "8272350f-7418-4818-9030-a0b0c59b12b0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "14fa201d-01dd-4019-85f5-1606e02c4678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8141e995-5074-495c-8b71-02e9df673d9b",
        "cursor": {
          "ref": "21688a9f-4143-4eae-bd73-bbf348fb206e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0e5c46b1-d313-4781-9173-a17fea26817b"
        },
        "item": {
          "id": "8141e995-5074-495c-8b71-02e9df673d9b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cfa68159-d72e-45a6-9061-676066e653f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1173d3a-024d-474d-8d00-1581acaa476f",
        "cursor": {
          "ref": "d7f7181a-ff27-49b5-aec2-9d94643ee4bc",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d232b599-86b4-46f7-9dad-c1a5c7037851"
        },
        "item": {
          "id": "e1173d3a-024d-474d-8d00-1581acaa476f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "75d7e675-fb31-4606-9b7b-b0d709ef748c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e374d0ca-09f2-410c-a3f6-4f795b3167d3",
        "cursor": {
          "ref": "463ee78a-42b6-4077-a29a-d28b7e114ad8",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "86c9696a-68ea-4672-8915-0a0b4a8e2e66"
        },
        "item": {
          "id": "e374d0ca-09f2-410c-a3f6-4f795b3167d3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6d1717b5-272d-421f-97fe-90fe5c454bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e916eb3d-9eeb-4300-bc8b-0ec96ed6636d",
        "cursor": {
          "ref": "a8df4ee9-12e4-4e3a-a5e9-54def6dc0df4",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "65b18cbd-9ec6-4eeb-8e73-2c7ab41cc3f7"
        },
        "item": {
          "id": "e916eb3d-9eeb-4300-bc8b-0ec96ed6636d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4ae34f28-793a-41b3-a6df-486f42b8af8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c312826c-038f-4ac5-9efd-5f1d9d1d49b2",
        "cursor": {
          "ref": "f8dba719-4af5-4d04-a257-fc00553139c0",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "851bfdfd-c25c-491f-aaff-4eada0003eb6"
        },
        "item": {
          "id": "c312826c-038f-4ac5-9efd-5f1d9d1d49b2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "42dd28ff-c37f-47ce-a3f8-8a03a511bcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37b8595-bc6b-403e-b2e7-a5441bd6e31e",
        "cursor": {
          "ref": "1dd03be0-c860-440c-8338-da9b0aaa1118",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "20878e2b-c71c-4983-9261-03d185a78bf1"
        },
        "item": {
          "id": "e37b8595-bc6b-403e-b2e7-a5441bd6e31e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8078ddd3-3541-4992-b8e0-7ae8c378e11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcb0b66-93d9-4c27-a27f-ffcd5bcf3530",
        "cursor": {
          "ref": "029cec71-7a55-4fad-b25c-3a590f2c615f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6c06d2c4-bb44-444e-bd3f-162962bb9f61"
        },
        "item": {
          "id": "6dcb0b66-93d9-4c27-a27f-ffcd5bcf3530",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d8c411d2-0557-4e8b-ab8a-3cdb43d4c874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394fb347-7f84-4ff0-8743-e164e8fb76cf",
        "cursor": {
          "ref": "46df1afe-d0cd-4508-b488-cac9af6b5879",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9cdeeb60-07fc-4c1c-85dd-d6a682410fae"
        },
        "item": {
          "id": "394fb347-7f84-4ff0-8743-e164e8fb76cf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "243946a4-284e-4fc6-9372-3ef78beb3474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47de082d-f226-48d8-bf31-19a2d896740d",
        "cursor": {
          "ref": "0b26bc7c-a045-4300-ae07-deeedb123d9c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2c41f729-509f-476f-84fc-d0ad520b7cd5"
        },
        "item": {
          "id": "47de082d-f226-48d8-bf31-19a2d896740d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e0c9dfc4-6160-40ad-b077-d5fb9e5252af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e751d65-64fc-45f0-98f9-cd9243d30436",
        "cursor": {
          "ref": "da1a446e-b303-4e1e-b3b2-83d1c6ea0b63",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9cfb58ec-7d82-4f3d-a4ce-3849f3a7c6a4"
        },
        "item": {
          "id": "2e751d65-64fc-45f0-98f9-cd9243d30436",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "db0320b0-b1e6-40ec-b153-4c5eb4531fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121ff40c-36f5-4fc2-bb13-54b18a30aaf9",
        "cursor": {
          "ref": "d1097200-4763-479b-bcf7-8fe1d0acba94",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "dc4ea943-7836-45fa-88d2-c2de5f1b21ad"
        },
        "item": {
          "id": "121ff40c-36f5-4fc2-bb13-54b18a30aaf9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0f7917dd-8fc0-4aea-b7f3-ceda35317da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ac2277-a175-4631-8434-5450e114c377",
        "cursor": {
          "ref": "9112d563-34bf-48ba-b120-e98df9ba6cf0",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "cddd34eb-bf34-4700-a791-1cf3a864c39d"
        },
        "item": {
          "id": "b0ac2277-a175-4631-8434-5450e114c377",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1ade97a1-b7d4-454a-bef6-29fbbc276650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29c51bd-6ac5-4002-8bd6-0f17bb8ae8ba",
        "cursor": {
          "ref": "8a2bacb3-c080-45d3-bc31-24a68e6a38ad",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5f2d9cc3-92db-4812-8aae-b3618c5dca1e"
        },
        "item": {
          "id": "a29c51bd-6ac5-4002-8bd6-0f17bb8ae8ba",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0be044b1-2be9-4e3b-b867-7160524d2247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90aacdeb-5789-454d-9878-01cb5535a954",
        "cursor": {
          "ref": "584530e4-8b91-4deb-8baa-a362fbdec789",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f191959b-6f91-4001-b400-a964a4e52cbf"
        },
        "item": {
          "id": "90aacdeb-5789-454d-9878-01cb5535a954",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e6b39ada-cb4f-46ec-a57f-6229870dcaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80ad5b6-dea5-482b-8053-50ff012c9008",
        "cursor": {
          "ref": "59632637-1c18-440b-8c73-57fec1ce817a",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "da2a65ef-b6a6-406e-8e1d-f6bff80aea94"
        },
        "item": {
          "id": "b80ad5b6-dea5-482b-8053-50ff012c9008",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9fe58e82-ee3f-42fd-b9bd-0534098593ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56425ecc-37af-43b1-8aad-cc6511751c1f",
        "cursor": {
          "ref": "bd1b1997-d678-4c33-9693-150dfb98f0a7",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d14ef673-17ec-4e9c-a183-3f54a5cd0727"
        },
        "item": {
          "id": "56425ecc-37af-43b1-8aad-cc6511751c1f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "41225017-f52b-4588-a76f-5ed6fee240d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dab67d-009e-476f-a883-29cc8e67fed7",
        "cursor": {
          "ref": "69797abf-d45b-4abe-a9a7-023e35ce503a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "db922971-d984-4617-86c1-772b3b9d960f"
        },
        "item": {
          "id": "d7dab67d-009e-476f-a883-29cc8e67fed7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6b548c54-7e37-43c2-a3f7-4c5cd072ceed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b472cc8-c61a-40d6-91a8-74e00df4b80c",
        "cursor": {
          "ref": "33221354-51f9-475c-ac89-361f398cabae",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8d79a8fb-3ee1-4c52-bf12-401249c83f3f"
        },
        "item": {
          "id": "7b472cc8-c61a-40d6-91a8-74e00df4b80c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e3e9640f-a4bb-4b13-b7a8-e379f097532f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c40ac4-da90-44c2-868d-94d71a7105dc",
        "cursor": {
          "ref": "c4776051-d09b-413d-b62d-8d88f9e70455",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a999390f-7027-46b9-a8b4-fd26e011ae86"
        },
        "item": {
          "id": "72c40ac4-da90-44c2-868d-94d71a7105dc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "aa94aaa4-2756-472b-ac53-e17fb95cc460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c36333-b1aa-4145-b18f-f89613009a10",
        "cursor": {
          "ref": "aac25596-53d4-471f-8edc-a2628548c48b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e220bb62-c5ea-4a3e-a644-dd17bfadfe83"
        },
        "item": {
          "id": "d5c36333-b1aa-4145-b18f-f89613009a10",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "82ac5724-6865-4e20-8707-c20c1b26a251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318912f0-d603-40db-94d4-d6f0c6eba30c",
        "cursor": {
          "ref": "a458f112-edc2-49f0-adfd-a88fd08b7184",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1907222b-0ab5-4772-af84-075af56f4596"
        },
        "item": {
          "id": "318912f0-d603-40db-94d4-d6f0c6eba30c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "367c6ac4-108c-4312-a1aa-87eb521e72b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bbdbea-a3a7-49e8-8e54-2491a7e3065d",
        "cursor": {
          "ref": "0610abcb-4a22-4b90-b813-8d7e1defecb8",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a251ee8f-2aa1-47d0-b554-9fbd2256626c"
        },
        "item": {
          "id": "05bbdbea-a3a7-49e8-8e54-2491a7e3065d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8499a6ad-b575-4c39-829c-dfa264baaf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db211645-2ccf-4de2-8fd1-2dfe1de8261e",
        "cursor": {
          "ref": "849ed8ac-b11b-4e44-ba90-9ccaa140390c",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "79e49308-8a38-4eb0-8165-b7a59dbaafe0"
        },
        "item": {
          "id": "db211645-2ccf-4de2-8fd1-2dfe1de8261e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dab3ed89-0ff3-496a-9f02-db7f30c225f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f539091e-579e-4411-bb78-e3e5dd4d5e54",
        "cursor": {
          "ref": "02ebdaf4-a4ef-4cb6-a5fe-32a3aebc5c37",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c294c7da-bd51-4c52-bb00-7ae053851599"
        },
        "item": {
          "id": "f539091e-579e-4411-bb78-e3e5dd4d5e54",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "54406182-f6af-4079-9a64-a21af050cd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7729f52-759e-4db1-a204-2d3af1c2f6bf",
        "cursor": {
          "ref": "99978d6d-6481-453c-9600-5f1718f5229a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "19820cc1-f87a-4852-bea7-efe7d4cc276a"
        },
        "item": {
          "id": "c7729f52-759e-4db1-a204-2d3af1c2f6bf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6085ae82-24f2-40e0-bae8-4caedb25fa1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a314e37-4055-4e24-b32a-3a610965483a",
        "cursor": {
          "ref": "6f724e6d-84be-4027-85e6-832354ac0761",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cff49333-d5c8-41b6-850e-1703cc0aaa5a"
        },
        "item": {
          "id": "3a314e37-4055-4e24-b32a-3a610965483a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fc28ee48-98f2-4552-adf5-8bb282e4d88b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe12545-58d8-4452-baf0-77d29442c174",
        "cursor": {
          "ref": "5df7c9c7-57e4-4691-ad47-36f97dc1d88f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "269a5759-a544-4be1-9f45-af777f44b2c8"
        },
        "item": {
          "id": "4fe12545-58d8-4452-baf0-77d29442c174",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c1e136b3-46ea-41a4-b3f0-ba3a3d857129",
          "status": "OK",
          "code": 200,
          "responseTime": 124,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e520d7a8-796f-462c-b760-6ba27a567d4f",
        "cursor": {
          "ref": "6756772d-6dc2-4179-b83b-efa8df145f0b",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6fc09316-c028-4fbc-8efe-610bfb995969"
        },
        "item": {
          "id": "e520d7a8-796f-462c-b760-6ba27a567d4f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2ddeec92-f7e1-4977-a537-b3d4d10d0527",
          "status": "OK",
          "code": 200,
          "responseTime": 2231,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d60b9ed-2023-4e4c-8fb3-847dd83ed98a",
        "cursor": {
          "ref": "b755a08d-dc2d-4d3e-9953-7cb2ed4c9e93",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e88ffb87-4eed-4292-894f-5a9c7d0dadee"
        },
        "item": {
          "id": "0d60b9ed-2023-4e4c-8fb3-847dd83ed98a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fa706f1c-38a4-44a6-b4ca-75918e083ba2",
          "status": "OK",
          "code": 200,
          "responseTime": 1335,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d5a324-539f-4c6f-a724-3b3bcc6698b7",
        "cursor": {
          "ref": "8d52e661-d435-42c6-aac7-17b268f71f77",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ad45677b-7eba-4c3b-b372-8e90bfc3317c"
        },
        "item": {
          "id": "e8d5a324-539f-4c6f-a724-3b3bcc6698b7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e906ef9-3964-46c8-99f3-c7abc1604f79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d5a324-539f-4c6f-a724-3b3bcc6698b7",
        "cursor": {
          "ref": "8d52e661-d435-42c6-aac7-17b268f71f77",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ad45677b-7eba-4c3b-b372-8e90bfc3317c"
        },
        "item": {
          "id": "e8d5a324-539f-4c6f-a724-3b3bcc6698b7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e906ef9-3964-46c8-99f3-c7abc1604f79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b83f3c4-a906-4ce8-a93c-1f7734449cef",
        "cursor": {
          "ref": "e90d3702-8789-47e6-aa8f-07e0f8b3531c",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0bbab331-a136-4334-b028-aaa3f329d8d6"
        },
        "item": {
          "id": "9b83f3c4-a906-4ce8-a93c-1f7734449cef",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "feea0f35-d21f-4291-834d-546d3b70f60f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6a38c8-3ccb-4aa3-bd60-48be17af04c7",
        "cursor": {
          "ref": "66a1f533-b9c1-4148-97dc-50c00f8d7ed0",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f4f54cda-91a9-418b-96d9-768449fd4a46"
        },
        "item": {
          "id": "2d6a38c8-3ccb-4aa3-bd60-48be17af04c7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6b62cd21-de33-4716-8fb0-1521d15b2d76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}