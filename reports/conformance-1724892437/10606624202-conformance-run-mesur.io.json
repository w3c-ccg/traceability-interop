{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b7390527-e7bf-4170-8cb0-53227dd8e84b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bb32dc12-a174-4610-bf53-8f89bd69eac8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d6c8790-f04b-466a-b7a9-857377d578b4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e3bab52a-f164-4236-8ec0-d58a2af3605d"
                }
              }
            ]
          },
          {
            "id": "b655c1c2-37f1-43bc-bbaf-de3fc5d54709",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88771207-6ce6-41be-8696-b62d4c2437cf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1957daba-40fa-4e4c-b204-fc05561c3e2d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6fe4259e-5ea3-437f-ad7d-82f6f620018b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "29744458-b267-405c-91df-03468ce769b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7306665f-814e-406e-8c07-43679cadee0f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19cdde5f-19de-4cdf-8f98-9e6d423bec80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6773c9f2-bfe5-44e9-a48b-1072e2b500dd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2884ea52-396f-416e-9036-b0d3c9e7652d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65cdd481-4a26-4b0b-b36e-75306e77befc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4e6721b8-6e53-4feb-b89a-fe451955ac41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96f35141-34c0-4e25-a111-f9090c2db568"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f83c8915-ccd7-4a6f-9aee-2645a9d9ee8d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bfdf6b61-8cb0-4a90-98e9-b97a2744232a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09bf6413-fb08-4661-8589-4ce250dc07d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f1744d3-4d2f-4121-9701-b5c357feeaba"
            }
          }
        ]
      },
      {
        "id": "2eefe2d7-a0f9-464f-8b6d-f0034d067e24",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a8374e70-13ea-437e-8581-80f30b82bc27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6274afb-888b-4154-a96f-6db4cb981e84",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "618c34c2-4042-4652-b432-4b5bfd8e37f6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d849a1-4025-4dec-b356-a9766189715c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "945a4fad-50a7-4258-9651-aaf9677e4f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72a35d2-4de9-46d5-8f97-380781af24a8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4feeb05-ad00-4640-a9f4-f84eb2c4446b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8176245f-c7f6-479d-8f38-a0873674a44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e13c11c-0af8-4bf5-8d45-a4296eeff6f7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba23522e-81e1-4bbf-a29b-ca7f5ecb5765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48e1ffa2-e050-4605-9c9c-3eff5c0bb84e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4f5fd31b-7b88-4d5f-b70a-834a41346f89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e49192c2-d1e7-4457-a90d-59270419f7de",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07818788-fe06-4910-94f5-7b45ed77170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "570b9179-1734-4823-adfd-4438ce0c96b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dcf4ea-bdd3-460d-8e73-29c26325b4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5306abb-e911-41c1-9f6d-5c9b92c87943"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7582799e-b5bb-4933-b445-8cbde94d9333",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06cec793-ad64-41cd-81f0-96e135d1e1c8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2ad7ba3-52a2-4f4f-8a6c-5ebc8de03745",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "638197d7-5130-487c-a63a-516ba3485575"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe53e286-ab8a-4c80-b5ac-137a6f85a26c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5c9062f7-b048-46d1-a249-eef28bf38b60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8870e6ad-ec06-4edf-bd43-86e4e1ec0918",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b8c37c5-ddf0-4c93-83a6-d512d16c1955"
            }
          }
        ]
      },
      {
        "id": "a2bb75d6-8a28-46ca-bedb-aca37edecab7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b8e52c68-dd44-4b8b-a396-f9a7210d6146",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00e02348-b99c-42a1-a56b-2fcab97a10b1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fca16b88-aaec-4f82-8f24-d859e45ee6df",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0cbd5d-fe2c-4475-afc8-a4df671f6ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54d63a6-1e15-48db-b762-c56fb3578ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33eaf7d0-45c0-472b-a324-79475366b5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3b47001-04da-434e-8ea3-14736b11fc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3d5d22-e448-4b72-a44a-637e3de86542",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14fd912-5a78-4022-bdcd-8e06a7065238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9edad9c2-30d8-4ff6-921d-a6881a9fa822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d4217b-2acc-422f-99d8-2891cda37533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9720e2b7-3e42-46f6-a96d-50b68e4fa047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fc10c0-b220-49ff-80a5-d27a9cebbc0c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16997e20-c33a-47bb-9c5d-f5edc41ff345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f321040e-c795-423f-b034-e14825c7b656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb40cdb-cc41-4c68-afc1-1fab17bdfdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beb37bff-7e78-4e91-92ba-5981ba93e2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d26542-f3a9-4a0f-a0c7-77bc2a845d1e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367e3674-7d17-47bd-a37e-ed62ba38ca9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55c77e8-359f-455d-a70a-65998b13e425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161fb047-61be-4321-b3e9-f1de2f92b19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b0586d9-e798-4297-aae5-744c7df9fe8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2f4557-5709-4a07-bfeb-7023dc08a7f1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30657ba-94b5-4f5a-bab0-550f32fe6292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428ebc39-b010-450f-a312-f2a1e2556af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffa1d82-d0b4-4f20-a46e-98283bf92eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16306208-9288-4f70-ab7b-9ec5b3e0c6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d69003d-3a34-4be0-b6ae-f53463731910",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554876ef-13ef-4c9c-bd20-25b29d34ef23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473c6ce0-9da5-492c-95b3-80f4c8133382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb8ae80-a6f8-4a90-8156-fbf1dc68c8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba17f0d6-b204-45f9-91fa-2621468349ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8aa4e2-c3cc-4290-ac6e-90a516f584cc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130d87d5-5e2e-489c-af18-2a89ab70de47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f00778a-8b58-4f1b-b1a0-33aadbae27a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa83de08-6707-4e36-b7dc-87d87fbcd118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78524403-22ea-4551-9705-9262cb68edb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba4f06e-bc79-4aca-bfbc-18fb29bc03b6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba739fbf-c202-4cfc-bed7-c07140c2b226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6a7376-cd4f-466c-9673-30dac1a5496d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471a9248-9153-4c26-b51e-cbe71c7b54c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5daa48f-3f45-4df8-b41c-5ab5ffe327a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c842e96-327f-4235-a95f-8fda1ab45a50",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdd58b8-b745-44ac-858f-5025e52bd4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3728b28a-0922-4554-8551-cc2a81c5355b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d392ba11-1e26-49c1-b188-aecb24365541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6614fa7a-73c1-40e6-b8d8-5bfa92597221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b33126e-6898-4bcb-ad06-882b76059983",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08768e2-f74e-4375-b182-c4968a95b814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399f2086-0bde-447e-8f8c-ab898d689aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5487a8-d6d5-416a-a2ea-6fab1f05f698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a80c5b3-f5ff-4f0a-ae11-9655f65b8a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e389fb64-eab2-41bd-9d68-374e9706ff11",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19484a3-2c4b-4c70-824f-c0ad789bf74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93e541d-bc28-49d1-8fc8-bd6b61fec140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ed9b29-b454-42d0-8664-252429cf1541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98ad1dc3-f2d4-4b37-a7b6-946f8cc4483c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef63bc6b-f9b3-4aca-85d4-045a8adf5b8f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c8a805-e217-4c9e-bcdd-a15d862c130a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804a5729-1ca3-4a20-9968-b7166e3bf3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d3761b-2032-4ce6-b06a-d817f21f07f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d595d259-138b-4f9e-8b11-f0ade946b436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda1d6bf-8102-4e99-b669-6cbf6a06a134",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c2250b-710b-46a9-bb57-e3f58754a2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3489c436-223c-47b1-a9da-661a89b7cb48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1111056b-acc7-4f35-b4d1-c21aab657739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51c8061c-b6ad-4353-9229-5a7be5b38360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358d5892-2459-4252-8ce2-2b576fce93f3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c78b87-b68c-4b1b-b0d7-885a9ef59a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877322b3-f663-49d1-8c86-fbed2e8ee6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da40997a-73af-46d2-a40e-17072c05e1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41b7fa15-0d95-4d37-b139-ddd4ccedcd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0157e9-0bc6-4d2e-8aef-09516dff57c7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e2ddf4-68b0-4377-b33c-ad1193641e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b26af7b-de62-4f38-8288-3cd0e7bd9398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c3bae6-2fa7-48e4-95a9-03ddc80772f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f9dddf1-5915-4101-a1cf-1943055085f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998585fd-d100-43a1-887b-31a0c076f5fe",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be205c9d-c53e-40da-87a7-c250f3178cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce680efe-cdf8-4d18-a8bd-529da084a8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d29f0a6-1253-4425-8488-5d963e7225bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc5b3b5c-a3d0-4193-a09a-e9335bd92e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d565793-5b2d-4cd1-9942-db4139586331",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b26b4a-8bfb-4e63-ab3f-155fd8eeeaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b516591-2b36-44f5-bc40-8584be9e544b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206b5cd8-d21f-4c8b-85c4-493915942a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02dbc466-e2e1-4276-b728-0d89a9b53637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde21238-597c-4e99-b51c-18971c4beac9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf183a8-7855-4fd4-88fd-99421b43c24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a58fc03-c830-446b-a614-701bd7b2e169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2214482-d683-4756-8360-a4a79a5c3063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9324cf-ab42-4b7c-b36b-47c97dbcf582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c295b112-e1a4-41d6-b1ce-ee397273d3f2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cef9ad0-60ce-4522-a76c-98e41c3d0635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08c8214-fb40-411d-aea5-795cb56520c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e969caa7-95e9-4841-95c1-e2797eddb0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f4b90a-5720-4b95-ba55-1a056609c1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67b7daa-59ad-4620-981a-c3279ca1c801",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0b1ef7-c96b-4d7f-b886-1ca5d27ca34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60163ed-e41a-4211-b223-da9699a4b6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458f24c7-d304-4d86-94aa-9cb7ea799446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8a7183-1a72-47c7-b94d-b5be6f1fc376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24379c7-f21a-415b-a2d5-d7f1738538e9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb37ce0-2770-44ef-8dc1-be01678a7c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6f4afe-ec67-40ca-9ec8-12436b6c90b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f74717d-7f5b-47d9-80ab-63c8cbdfa3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2548e96-f36b-4945-b9f3-a98c2272e1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef0fe7d-8f14-41d5-ae28-5339ece83e1d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3640dd-318b-48b2-9f23-adb5e0ad7431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88aa690b-6705-4c1b-8a41-d6b551831d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a424ba98-fe18-478d-9baa-2316ced8e2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cfbb60a-0d84-4c5a-aecc-3a4b8055cc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a79524-05e5-4cfb-8ac5-a0f3fb01fecc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42be6f39-4b33-45ee-902b-ea6eda67d93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38062d9-9c02-473a-a645-af39bfec2605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df16e7da-f49c-4d71-959c-1fd49b6970f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "673fc5c2-c8bc-4d9c-8afd-663b7ed649b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bdab69-2d3e-404f-8247-b747d258b689",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b934f5-5cc0-4fb7-8acc-a91c4e28d796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b069a851-917a-4ee9-a139-d928c6cce795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9d0c45-16da-448c-af7b-aac23b91237f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6b3d4f-7601-4825-82fa-8a54b8120b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77ecfb5-d779-4fc0-a207-9bd095b32edd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf48c6f3-4aa5-49f4-969e-a09173fbd70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80de5f8-a6ad-4f34-8b01-3ab48e1f7c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759f5edf-773e-44d3-aca4-3cf072e11730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6a7b90-6566-40b2-9e23-13e44c241c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6226024a-6f82-4717-bf6f-8b9aec150d1c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c29f4ac-dbe8-4264-a26e-b1c56c14ca21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f48455-f1a2-4458-9a9a-41083b73c2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f610cc9-7130-4f89-804d-60908ef6472a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f0f718-a68e-4f6f-a9d3-72600e38d1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd43541-859d-4a49-b478-4d61dd691316",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db7be8e-9a15-4e27-8515-316b898b6a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a06810-4833-4c55-a42b-ffa836739c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d7bfa7-f7e1-4a03-9337-a0877cba606f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "222f3c6c-6152-4167-823d-a5652f5cb68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8745e528-935d-4554-af27-11c07a778b24",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfc8b55-887e-454e-8917-4053deb91dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353a898d-a107-40dc-b401-ef4e3c64f8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde58b2b-51e2-4bf6-9851-58984be5354e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0824127-6f94-4844-a9b3-44f5dff1b54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1bcc59-3c07-4f4c-9aa0-452fa995f81b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa498727-4dfd-4658-85a6-af151de0724d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d75e5f-e938-4141-9f18-92207e0f1dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38e7c56-18f2-43c6-a666-9f2cfbec58f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c321a9-0fc2-4adf-a90c-7feaeb3c9df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c14e06-ecf7-4828-af53-4773f83ffc1d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c627c277-683e-4d0d-8074-b3caad0bca28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be122afd-3b9d-4f2a-8949-68b792778a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb418570-6499-47b6-b086-899f0b8ac6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9ae064-bf76-4279-a6b9-a5cfceffe3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32658e1b-6270-4321-a9d1-9fc559168c59",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f4a46b-7417-4513-a8a4-43b7b821c224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994576f4-3db2-4438-bf57-5a3dc2b61db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5e4d2b-c0b3-4bfc-9b13-6af05c94ce58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64894bab-fcba-41aa-bfff-cb11f9255b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3af7e2d-43f7-437a-b5ed-6354ba812756",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d188da42-5c12-4986-9ee3-c19fa444dfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858cd219-4d91-4c36-b033-5540360b979c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14839471-6edb-4bf3-a939-ba82e8771beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e4a62c-71aa-4f2c-aea0-b46cfdf35612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b26ea2-df01-4d4e-9e77-90c10a50e64f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72edbbaf-52b9-4c46-b580-b6a10e79bebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00048dda-8b15-47ab-9dc2-2c9f6909dfd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969a14be-934a-4be3-bc22-2c4a717cc191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fefefa09-4b0d-42cb-8395-4798935186cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b065b51f-6878-4b2f-a28c-123a3d0aa29f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78708fd-c948-4f7c-b4d9-eccca7373057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77163a03-7ebe-44ab-a60a-85065a31846a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228c1f46-d7b1-4d1f-8a8f-9bbd778e2465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "295935a0-c6e0-4d44-9962-0051b9bf19da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae781a13-f10d-49ad-82d3-532c61d8ef7c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ce2223-f34c-4572-a9db-eba9b062d20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae0d5fd-71ad-4acf-9c06-2b7d04b11b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e18968-248f-43c0-9fad-2e644e5e51c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5c81ab6f-1c22-4e0f-8b29-5674c134e2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2210089-0980-47a0-8e8e-c445eaae6651",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d10ad4-0ab0-4a1b-9c4c-9a06e5784c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b03e85f3-b656-4036-b35b-d50c3afd265b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc01de6-58a9-4836-a85c-c567de18b36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "820f3eb7-cee6-4a2b-80cb-437908898b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecafe295-7971-4c81-82ce-846ed54e4855",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0941d308-a084-4b7e-a113-bcb8314215cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448e0fca-692f-46a0-b642-7cb6878cc242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af932af8-c62e-48bc-acab-e4f8e546c303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6edd47-f903-49c4-b3e4-335a787cb11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8737eb18-be70-42d2-ba3e-8c74f4da513d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9de3d25-0598-445e-a2c3-5984336e4be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389ff66c-3e75-466d-a2d8-bcc0f52563cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a67e79c-d01b-42cc-a88d-475643af743b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7730371-1dbd-4813-8128-cf6bc80e3667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37687434-ef13-497b-bf11-cb8555b22d1a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1237616b-929f-4aae-b7e9-6d9425d0980a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9804dc8e-43b8-4065-af90-72b7b09acbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a892ad49-703a-444d-b360-a5cc5c0ccb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f245ba78-fc54-4106-80bb-87b46982f328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8c9c9c-4dd2-4d3f-8ef7-a17194631497",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a283df-62a7-48cb-8620-8f516508cf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fbb540-7004-4c2f-83f0-1e8ab5cbe4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac4d241-6242-43ad-ad1f-2b0e99539280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4cd2e4-d38d-475d-a7ab-95a9d394292c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e3c291-3717-4a40-b4c5-06614fb122cc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c01f0e-adc7-480d-bb1d-9dac6ba1a9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9eefeb2-5f2d-483e-a39c-bf8e98663339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ff38e3-881f-4d3c-b3d8-2530dd99903b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f996d77b-4ab4-4ee4-8800-fe99526dae19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080c220b-8bda-41a6-b657-69e12722db50",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dc85f7-5329-4ec8-9f9a-6fe6416f5d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5ac880-e086-42d4-8631-651b83055f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a02117-3ab8-4b98-9bf6-0237204d3a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f3011125-4618-4d4d-9abc-a220264960ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f143190-70e5-46b3-8270-c6596edb9c0f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adb6993-491e-49f4-8c75-99ad6d50d001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bada0baf-3104-418f-88fc-6329ec281a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c153eaa-bdcb-40ca-b1ca-3a04b1176485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad39942-e20b-41d2-aa47-6adb4c4eca24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31681d61-bd84-4be9-ac80-e0b685ac91ad",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321f33bd-35c4-4a2c-a793-b3e475afaf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e91ddf-9a70-4cdf-8e68-387e290d0d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb52a743-94ed-4644-8abf-063670427d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "36ecded6-4915-42a5-8099-6b18e69ddb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525031a9-07ab-4144-861b-6e04c1798d48",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0314c75f-12bc-4b2c-af31-0b9657dcfa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0520e0-2991-4ba4-a928-8fbb16b093f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9da54f7-6b1b-40cc-bd4d-24efba0ca204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2edf8d-55ee-44c5-a777-153d2ae08dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5630fde3-e3f4-49bf-8628-94d3d474ecd2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3899be9-5ed7-478d-bc0a-7d8d5c319252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bfa4199-c5cd-4e7e-9fa7-70f34e3e9d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b9657b-0b73-4eda-9e8f-b559a9bcd10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "314cf6ed-9bc0-40bc-b64d-737a1fa692b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacf2085-31a0-472d-8153-6a2f93f173bf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5150795-5469-41c4-a8d9-1fdffc25a966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4e086b-0276-47b1-b880-fec8bbfc4e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d58ecc-438d-4951-a108-4ba8e23fba38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "455f8aa7-86e8-4ffc-996f-f5ce8bb1d477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad7e695-7704-4a95-a30e-5b01284a942d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d29a8c2-51d6-4aee-b107-d0891a9f7a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0772309e-9268-4598-bd7c-71fb9c5e7dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1adafc-8bcb-4472-99c3-007e753f46d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f33ed41-b255-4e16-8814-a7bf354a1436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37a0e2b-0347-446b-b0db-65edcae0ac49",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44983374-b0d6-4138-80a2-afe0a9af9c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346a1ef0-9dcf-4290-8c18-1b2a13ec865e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3471ca0e-955b-4775-8569-7ce9373e7a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f46127cd-0d83-41aa-b7d0-b42f578b8583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1c02e3-544f-4f50-bb7b-367c050bc775",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adc909a-73d4-4de4-90fa-2ebfa6126b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6cdaaa-3606-45c9-a9e4-283d6242cd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799342d6-1a3d-4564-8858-823a77f1ee2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08e4da71-cab9-43a0-95d9-3632637c46be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610ed53e-c118-4144-b07f-b8bcdcd29e03",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74743c17-2c0a-405d-822f-450786157b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa039ab-ccf9-40a4-af70-9f628d296573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a948f22a-b05f-4cd3-9715-8d2fb3051e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd3ad17-5747-4781-8a01-24ca6ba68193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7205273e-7789-4bbf-8e6a-87cf53bd3121",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddae7a1-1b17-487a-8f48-aa9d5feb9729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acbf41a-f278-4569-a9b4-cef2b3e9ec88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af43784-5803-45e4-a72c-987a59f6a30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc531d3-5270-47fd-9a59-1397dafaa83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1469c8c1-d144-47c3-a73e-312023435fcb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911343e6-9220-4107-b7c8-df29a977c1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41fac9ae-2817-497b-9bae-3c06fca00747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558a63bf-92cf-48e9-a09b-b0f3738fadc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec63b77b-8c48-4916-a410-087b85abd605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cb1314-733e-4167-9c19-43cd024b0375",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a5d4b8-077f-4082-ae3a-95e049ebdc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d08ed75-b1d0-426c-b6d6-2416fd71286b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c76b67a-761f-44ce-9f30-94a804ae427a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62b70bef-9602-4b00-8b36-b999816e6083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e379ab96-9167-4631-b97e-0f2323da15a4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f0daaf-e990-4a31-933e-e99ddb24dbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406cfe31-3017-4e02-8566-5b5406ffa316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50609b4-0ff1-4db4-8f08-d478048e5178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d774816f-7a62-4dfd-a302-44edde1aa97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86270649-d06f-4cae-a7e0-601b47bf3d38",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7fdc89-8ba3-40cc-899d-a2d0792de20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec5bbe9-ae3d-408f-8c94-1ff6ddfc91f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567477c4-7092-4886-9e7c-e9cf1126ed18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "19990c0a-4646-432f-86b0-ad2160bf21b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869c9a18-4b28-4bfd-be0c-ca6f6db06004",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9dd252-84bc-4336-bd82-635a5fc458b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5fbbdc-5e0c-400e-8393-4999bf9560e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f2aea9-1be9-49ca-8203-4b47fc6ba9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "794e6b66-07a8-4acc-a80a-db3893e75e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8eeaaf-97bc-4b22-bff9-f28de7325347",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72fda82-bbc8-455a-bca9-7b5fc3ac0543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e11d82-33e6-4ce0-b01a-7d3f2f24165a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97eb0a6c-fe68-47fe-bf3d-f99eea43b6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1417af0-467b-47b7-bfbf-5b9bc8a7c0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f798274-7242-4517-89ed-acab95203105",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcf7c2b-be0a-4d78-8dfd-99d90c9e3ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b00a08-e700-4569-9379-5becf257690f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18559e8-a638-43e9-b4e3-bd6664a3f5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4a7836-ce57-4689-b755-1798c42ba33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc8c6fd-e5cf-454c-8409-0d98dcd3e4f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79869513-2b9e-41df-8535-308452f94231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e5166e-7042-4d47-a190-69de531544dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a83d8d-2e28-4c0d-a437-7272548b9cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b003ca7c-6cdf-4429-8188-844201a710e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe2344f-d971-405f-8758-27e8cd8e07af",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66aab3c-56c8-427e-ade7-571ff025d5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6c0768-c7d9-4b11-a7a3-27179e0f2c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c16115-e406-402a-b2c0-bfee2d374a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a301433-9849-4099-bade-189df5b747bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a8c831-1c56-4acd-a699-80cd1619f584",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae597ccf-f1f8-448e-ac28-bbf084bc2f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdf8e5e-4233-4152-a996-d1c6d7c38492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3da00a-9c8a-4301-aece-a0c2920c581b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4affa73d-cfcb-4d17-bed0-9c246cba5466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa54fbc8-b392-4538-bdcb-7e8cb2558832",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b28208-ee02-4de4-9633-9d7fa0245855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c621895-ec7e-47f5-9150-7c53b7dc40e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d254c32-3233-4288-aa08-acc690946ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8d8242-a25d-4bd3-9fc5-5dff473ffcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cae1184-e52f-4788-a93c-b8885c62b04e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713683a0-251e-4864-a9b6-6474fd477b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ad6b12-1603-482d-a7ff-6c0ebc3ab54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fb61bd-3dc9-422e-9c70-5305248bf489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4f9a9d-ba33-4c8e-8c2b-456e2d397bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f873b5ad-d521-498e-88e0-4fb528fe6457",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc72271-50f7-4579-b340-8776d9d55261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bf5607-8bba-4357-bd8b-c196e15b55bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c704d636-8cc1-4607-967e-8e9510eda9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e33dbe5-1c86-4dc2-8cb8-015fec0805b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4aed59-8c94-4a34-b1b5-babbe2f8cf8d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4467c6dc-8a91-494a-97f6-794f94f50044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1decf986-8150-494b-b4a5-5d914751d9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7c2f3b-9d2a-4d31-9a18-89fe199b62fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c669558-261e-4268-9ad4-ebc5a2524336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3141a18-a91f-4b89-907e-a7c57bb1c9b5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9326b53-d3e2-4c41-813b-61ae3b8610e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab4a495-0926-451d-b07c-91c64fafbc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f498da-fda0-438a-8a89-83e9a9907802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f25e32b-4f5f-4445-bb98-fe38230ee126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18212b85-1d07-4920-b7f8-3c956aad29fd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d002185d-10bc-485e-a977-ac145469ad5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e23f6d-806c-47dc-a7a7-b3504fb809fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a334b3-f5c0-4d23-8f9c-1e336a5a01e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e32e097-56fc-4bf6-a920-fb12a31f1998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6650e332-c5c6-4768-bf2c-976ebf345ebd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdeadc3-b2f3-415b-ba19-d3c157424f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb91456-d11e-4cbb-bda0-cc8312bc3450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbecb541-f3f6-4cfa-ab34-3983fb03de8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7aa6f5-4ba6-4dc8-93fa-15c7113abd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384a15f3-0007-486e-9ae7-0df690756047",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e32a31e-4464-49f5-b223-c1ec7ce8063b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e167ef0-cd83-4424-ba88-ca62feda343f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1aa83f-da85-439e-be8f-3b404c89fe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9489a317-31d4-4008-9ebe-305a3297cc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29d1d2d-9763-4467-820a-6d17c23e9056",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3acccb9-9a8d-4513-acaa-ad4dfb523be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1384c37e-f747-43f8-a99d-8146d3596575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ce8d93-e019-4252-8a56-78b28537a9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc9adef-4cdd-4c25-8a3c-91a9fee843cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01209e2-cee9-4542-a094-5a1c02c53593",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde52cda-518c-4544-a878-5de2cabdbf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c6bec4-c56e-4773-81b7-6f0b5a653f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2958a610-ffa1-4234-9ce0-d836af445a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e7048d-9739-457d-ad41-6126c844fcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b181950-f5b4-434d-b459-a482779c5a7c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0dbba7-69ee-40fd-9728-99122eb4c216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140094df-c79d-47af-b267-bb9159ad4421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb69fdc-c8cf-4782-b3c2-803c6ece144f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52ba363a-bea2-454d-b72a-33d34486ad82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b1ba80-fd69-47d2-bdc8-40188482c3a6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67f2952-b68e-47ee-bbd1-9789a6442692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e2c01b-aa42-46cd-ab8b-5411a78e5eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9bbea3-799e-4aa7-8d74-e9945982583b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9397a793-5c3f-4e52-a639-f426bd76de73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6430fa65-d060-4b47-83ea-f8e56cf9eaa7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4e9afd-7e57-44b2-b1d1-371a5d7c3245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278eb044-bcfb-4668-b5b3-8428d167a9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2251666-1fe6-47b9-b496-1047071cd9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d69cbc-2b9b-42e2-8c9b-b12caffec2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3404348-8749-4e9e-b766-b874ac1dfeb8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb65e81-2bb4-40bb-8910-f435d456a94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4176a169-d749-4626-88d9-ee86e0f475a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3ea632-c6a0-4d5c-b6c2-8030546b930d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2911f3-9fe7-4233-a1dd-f461f77c5790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e7f7a9-0c54-43e3-be1d-f13e5b417f81",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdcba93-8e3b-4575-b5b6-53c086758001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f3f52e-7677-4068-857a-ab3f0ed1057a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b13ab3d-7e00-4af0-8ca2-40a5bdc63a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfde8b2d-a948-4c30-bbae-e230632ce603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af04ce5-87e0-4f1c-8b5d-be8a3a384ce3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc3807d-c056-44b5-b788-a60bfa858edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1c340d-7054-4066-91e8-5f48a69c0f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68443580-a41b-411e-a192-3562a9875653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e12275fb-b0d2-40e2-bc92-ab5112927cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f74b0df-27ce-4f44-a09b-6a8f0ef0dd2c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3315d4-b524-487a-9775-651f059b59d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7613bdd1-c841-4f4e-9ad3-645d34d573c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d01a5d1-fdbc-4ba2-be10-de6d73ca9526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3002cb68-6564-4c2f-8478-c196bf7e9a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545bf3e3-bcb1-41b0-be33-b2b2f3993b1e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d49fb5-5b68-4e51-bed3-50c4630fa31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c11b239-aa81-4d53-b273-0d74a9f895a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e19ccb-c6da-44cb-814d-039d2e74e38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64312748-9a5a-4c26-a14a-39424420aa35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87abe8d-083d-4fb0-8c05-76eba098bdc4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525f405e-791b-4b5b-9307-7d4e88d1d9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce35b03-002d-4821-acc9-e3cafd6c02a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848bc4f3-314f-40e3-8a2e-057ce5d82c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93cd81f-afe3-4699-a9e2-b1d129c9f081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21368342-a7ac-4294-bf33-8048a8579665",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe739304-bb05-4e8c-8ae3-b06207d35da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c871ce10-8eb2-4458-8420-c4aec4fedd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f67058-1f90-4f2a-8e17-45e800d11c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d7d2bb-66e3-4e36-a235-77e094cf927f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0b2365-e6e7-4063-84d6-046ea3541acc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475beb3c-1ff4-4b98-beed-6eac40d13d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba0890e-b355-4969-b1ec-4fbf8ecd0f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d060698-b182-49fa-9ed3-3f7424d60e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6b133d-1f6f-4f25-9403-7270b05bd2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1299d8-37f0-462e-8bb2-37739bd83f8d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b87e732-45bc-48d5-b19d-8395bc4bd188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1532a1df-8f30-4026-93f3-99140604fa2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8d728d-ac74-41c8-8b1e-7c04100b48e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13600713-ce8c-47f0-b884-9876577e62eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a848e71e-c243-4c69-a857-591637ae7c9d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dfb34f-21d4-429b-9b82-7f1f925f5f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3f49a3-59ee-482a-8ec7-fdebd3e9e233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff648003-15b3-451c-b5c6-eb6d7407de89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bda33511-7c6b-4f01-8f9f-b004be2dbda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1727235-ba88-4ddf-aa62-b0340cf73158",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d9bb11-106c-407c-9414-2194d7a9bee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a8ecc2-fdb0-42ff-9e35-fb5d8d9fe133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69245363-8fe7-4a87-b858-2544fddc581b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca88bc2-58f6-4194-8f02-ec7ade508215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f8f63c-c847-4662-8449-808731e5aa5c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27e004b-ca49-43d6-a204-288875ef52e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92cb2ae-9eec-4073-bb73-445fd6544574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfb7957-40de-4cba-9b88-1373d472489f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a631f94c-ec12-4513-a222-33a4b7e28550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce0fac0-03ee-4d89-84ea-6da9d894b601",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ced5b2-d8fb-4182-9c91-955f95ca433b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b66b3d-295e-4c57-a20f-a7ead2229726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5953aafc-0e19-41de-9022-7113d2547bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "380d183a-4012-4d91-a115-051f126b1fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b791b9e-70c8-4a7a-ad92-f4885e004aa8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a82a3cc-1bc5-4813-9486-f1f98b4e2472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fddc0e56-b12b-4d10-ab1b-76e61ecc0652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a32a29-668f-4fb3-ae96-193c31d11151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7d3a5c-8810-42a1-8787-81a5172e86b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6f88f8-bdbd-48cc-a4d7-d70480bd4c58",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da428764-790c-4758-a256-aec9f2e906aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec38dec-cd25-4f7c-8e97-94264b5ef5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418fca3a-369e-4df4-aaf0-cd218cafc320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "19397847-b5bd-4035-9ef6-419f1064bd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cf6ad3-ea07-40d2-bbaa-677269733f0e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa639dfd-06f2-4fca-af06-0d05197da39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46817197-1ae5-4534-a74d-6fb9b5b856a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c521d37b-1cfe-4649-8dfd-8a62ba205868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "205e7298-1ce0-4764-9333-12d64cdf5475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb4ac97-7396-4cdb-9e21-93e158ac9221",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db27c3d-6a18-42d7-9d37-e827acf6a334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f73ea6ff-03a9-4985-8b15-6153a3401299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f53410-5379-46ca-a7e9-fa040072cae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "05859c28-f0e0-4e26-b980-d9b0f67904c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b7ae51fb-155f-432e-81a9-a01fedbe85be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7976d917-61fd-4eb1-8b8b-5dcdfeaa1895",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6488b5e1-0a81-4d24-8a7e-2e34632d07d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2808b57e-bf71-4572-a446-3145d5b90341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a515d1-6aee-4d8d-8dea-55d7e2e4c603",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c09e2d05-c52e-4b12-8161-f6864c490ed6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a4d59fd-ef3e-4a65-9dbd-691fc85ecb98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e821bc51-83e1-4191-b844-2a93ec8c0949"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f627ffa5-9359-41ec-b867-bafd9fd3f893",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7b346b8-9440-4590-9818-e3ece0397513"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0fe0f824-e869-480d-a127-5f904ecff3ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c187194f-828e-4f42-b6b9-456b7bf202fd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5e8770b4-cd00-41ad-aebd-585624573501",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4dbbfc63-903d-477b-a68e-6de98e5a4a80"
                }
              }
            ]
          },
          {
            "id": "a3ea0e02-e0cf-4f04-a88d-d76ee48deb12",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b1949d19-5adf-4cb3-a7a0-0a22bf8e3625",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e63499c2-68c2-455c-85fe-5baaa120a247",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5322405e-806c-4f7e-b5b2-13abae5f6e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3b7c8d09-23ba-44d1-8e92-a077756c0d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6af3808-499f-469d-b636-8328bcd09aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5ba6eb-8355-470d-9cf1-e2f06f7d4fd4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b217418d-5b28-4fa0-9248-c7d7c6b421c5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbf3c422-ffb2-4484-bda7-aa83ad310fdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cf5defb-4d14-4f94-a382-5b52b0764f16"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7289c9d5-c869-42d0-8707-271f6b0ddd82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "caf496fe-0b4e-428d-8d04-956cdeda5ecf"
                    }
                  }
                ]
              },
              {
                "id": "8e2c9e69-7de6-41ec-8b65-408554a5c5ff",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcea13a0-f465-448b-b875-665ad696779d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4a0ee98-365b-47c2-8deb-16a6e5dca52b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59117339-f070-4037-88e0-e436ccdaa25f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c09fc418-42b6-4fc1-8570-3da4f14d2c0c"
                    }
                  }
                ]
              },
              {
                "id": "442df722-562c-4674-9362-73c119459c72",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0ea396c-634b-4712-95aa-ec82fc2cc618",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2db06f1-8c68-43bd-ab09-0cb4be0e3eec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34ee1b35-a294-4f87-a2ff-27dc651a2f58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f78dc237-aeac-4cbf-aa4e-7ffaa2c8205c"
                    }
                  }
                ]
              },
              {
                "id": "c23d5718-6f55-4c40-93e8-f4f765ea352d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7a25820-1b19-40f8-9b8f-5b43f8a4969b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9589a97-d475-4631-98ae-0e99ddb3d223"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dacaf3b6-e5e9-42d6-b3f8-031654c1012f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3824cdff-ab6b-4f16-b711-8e936f9d8c9f"
                    }
                  }
                ]
              },
              {
                "id": "9610122c-11b6-4d4f-a0f6-73d2cf353a94",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ac7133c-0f46-4ac1-b640-d155fdf11912",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e65b016c-53d1-4835-b031-73a3b08856ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4cc0ca7-1b44-419c-9ca2-c24aba14cd66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d7e5531d-4fd6-45ae-acd1-406b24e3b42b"
                    }
                  }
                ]
              },
              {
                "id": "6d915410-16ce-4555-97fb-7b15022d280e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "063dfd61-74a2-4ed0-ba3f-e567e0c9a94b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58e93eaf-c390-4cb7-b978-ebf411817fb2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2722e069-ca04-4d40-a0e6-3cd853a4d042",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95f3bf02-f66d-48ca-9347-3a56cdd3c74a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf54a5db-0735-4639-92ff-29e7da017c08",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d70f91e-ba67-4892-b19d-655e6a951577"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b3a51126-0514-4dee-a084-49e513347aff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b5497d8-cae6-43ff-bf5f-c9b555a6b2bd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90d3c346-ee9e-405a-acdd-71b581b4833c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dcc87801-c27d-47da-a11f-99f52cad3b07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b101e22a-bcff-472b-a576-a7c6be2b10a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c95e645-c397-47f7-9218-13c4dfd3a46b"
            }
          }
        ]
      },
      {
        "id": "a280bec2-0b09-4bfb-9175-77a05de8f3d5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d8314bab-69f1-4f90-b548-4410091bce8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65bc6d2a-2add-429f-831d-6e13d63af6a0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "01b01566-3cf2-4a10-9109-702cc81b9b4b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fac1bf-b145-4da7-ae7a-eefed42655bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4d7394-ba90-42d6-8edb-1b97dd41d506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ec4ddb-b0d3-4428-ad60-51fc3d6efa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd61d0ed-a69a-47a5-b2e0-40ace8283ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199d43a7-d6ab-4c4d-9000-17382be5e79b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbe2e54-f2b9-4563-9ab2-06a80ad86d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0dd0d1-752e-46fd-81e6-68207332b78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb0915d-9f94-4dae-988e-21c6ac133701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f28df902-6438-42e2-86b5-01726b7c3b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bf3057-8ce1-4502-948e-7a610602a9bb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc8aa17-6c92-4c56-b9c6-8ce4468ddfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12678286-b03b-440e-83fd-3074f08d0b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a5b89f-28fb-4ca1-b5cf-d5015ff95634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be7901b7-287d-4e1c-9aba-e6e3bec78296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b85126-f802-49c5-b0c5-aea145fc7b9e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e0b4e0-06e6-48dc-9dce-15ab31acd316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90de8796-c070-4e61-9620-a36278b0ded7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48d3e49-e437-408c-8668-08daa305603f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8c5643-bde6-4cf8-8626-fbc379b2276c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7e2a64-c1da-42bd-92b3-c5db1c4ac1f7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318e7937-9c39-4e4c-9e83-a99ed8a94cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceec45ed-6536-4e9a-bd3b-752626dea467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e3a593-4bad-4154-9412-722417aeb681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a341be1-d936-449f-8f5b-b7add1a9ef32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb288f03-d839-4a2c-be23-e1dd5b15964c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdcf7d2-4c45-46a4-9f87-ee2a5acc0cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23599b67-586f-44c9-b9fb-0766ffceb7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d7f8f1-bc52-44f8-a287-9c7d32366421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa0fb30-bf2d-4244-842e-57166a9ec208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c80dcd-13f3-41b8-8be6-39efc7824856",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb423f17-07a6-4d5d-85d4-c1fff9ce49bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a28744-ba0f-4d0b-9b57-40bbd32edbce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3b1e13-ca1e-425d-aa2d-a658263f0663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "65171f6b-00b5-4d16-bf98-3c9d3c379de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37eda6b9-b188-43eb-be30-c65c663f057d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08b6a07-4b68-4dba-a171-a89e69f92e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac19014-a1f6-4299-a6df-04d210e0debe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f30482a-e9de-4cf9-9c25-e4091c2b987b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2daa3e-1896-496b-b22f-e019172748e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab583a92-b31b-4f46-bc46-e666d1fc876c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f97b40-7204-47d1-8aad-7a69a5ec71bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9fd9da8-6863-4ecc-8852-0f855c49b170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ed7a36-b1e7-4937-b737-3c53a56a0367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65adabcf-b265-4a33-8d84-147e9c783a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d682288-3e78-4e17-90e8-63590df1e746",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee71dec-4553-453b-8115-0b3aa8193409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc0fd6e-6213-4141-86cc-6b1404b26a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb90240-1447-4259-bc15-87f2659c0074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b93498db-0033-4cf0-b435-d69e4a6fa8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f202e93-9584-4668-afa6-73d92db4083a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce39c490-0277-4b92-964b-a328bf15fe4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4deb95c6-54ec-4e7d-9246-f0a8538dd232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6448774d-5538-4d98-95a7-0652d26c3610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "43ed06c1-ebe1-4164-b25f-6d70a9676fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84591c4b-099e-40d3-bcc5-a072572c28bf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2bf27c-4076-4292-be78-a26bdc22fb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34031703-0aa5-40f5-8f01-6e1704a51846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe895e75-1dec-4395-bf43-29cd2d771504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bde44df8-26b8-4605-8228-ed64063c31b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07301d4f-8bf4-4558-9cbc-dcbd75ee847e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33942119-1931-4754-8e48-afa251c5585e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99faaca3-1fa7-4513-9509-ad5a8fee99d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17eae4ed-474f-461c-a094-be23a424ccd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a99af62-4482-43a5-bb78-88f53e2899e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd61073-4f2d-46cb-a9e9-431087f8aab0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683e96bd-20e8-4bfa-b382-035f45d4a196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1514ad3c-1045-4bcc-9087-c94481f0ba72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99851b0f-b8be-4b13-bacb-06f3577f833e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b44e70-3bb7-49e0-8e61-90473f8973e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ecc464-a21a-4a6a-83d9-8f62d3943405",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1626c6e-1ed9-4d28-b653-717293917bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de99a7b6-09cc-4ce7-8c7a-c210fdf82f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e0bf3b-ecd8-476f-8d97-a3967fb4c2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea52507-48c3-490b-b285-2cc902702e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17c5def-f635-4ad3-a124-fc82fccab848",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e5c948-1748-4c25-b686-dcedf2de9f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae47208-494c-411f-a3cc-883076b73391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860002cf-5131-4557-85b6-3c84a87bd1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fefae5ac-9cb8-413b-b3c6-01b7b514ec9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9788f00e-b90f-4383-9ed3-1cf98a59f249",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dca1226-7f24-421f-9d81-7f92226567e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90cefd98-0f95-4ab2-9b3a-35cf273e9345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60654c79-6db2-4d50-a609-2d3fc375fbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1e0c0c-19d4-4532-8a4b-23bb47fc69c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f3dedf-6f0c-4f41-8690-2e4bce6eb402",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff55512-a93c-4c49-a034-2415f6515720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0f0cbb-ec55-4358-aff0-4c5f78a757b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979fa8bd-97f3-4ff0-b449-09c0c8ef8599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb8ade5b-7554-4d5e-9dec-73c0ddfb3fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba287d6f-2782-44aa-94ee-aba975b419eb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f484f88-eec0-467c-8c04-95d88fe46e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d758a81-8f6a-4e49-950e-578d1db77aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae163a74-b814-42d7-a661-8a98b54abc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af874d7e-fb55-494d-91b8-67f9784a5d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54571c4-452f-4a96-a444-8b590f89093c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0957d8ba-74a3-40e5-9c22-3110230cfea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc320dac-007a-43d5-b931-a1f0386b3796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a50df2-e58b-4bf7-b42f-943a7314c5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1607456f-c28e-4d4b-ba0f-3a3de7b5afaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33552c18-cd46-47f8-ad4d-31c24d1e6e3a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536e344f-ae9d-4579-8401-56cd2e0b7c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87b151b-3763-4e78-b5d4-0433c506a0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd824d7-e41b-4a46-9e07-d2c326cf8a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daface5e-9c96-497c-8acc-5afbbd0cc8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4731e0c9-bde5-4c18-8d63-4376bcac6352",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb50ef4b-984b-4b78-a58b-333ee8440c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803702d8-f1b0-43b7-9db3-76ecb4168b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c7087d-574e-4332-9a70-2d3105d048a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5e73f5-622c-4222-9279-7c6220b354d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8feba80e-4d5b-4f07-a873-5e2ff31f8c9d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c730a4-06a4-49b8-8d5e-b984d94b94fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe949e2-2818-4ae4-b315-3a9063601fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07977e9-84a2-42d2-9b00-c9c1266012cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bca4424a-646b-4911-a2f2-b02f5a799abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6a9ace-fc33-4d1c-b97f-36eb549c9f47",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dabaeb-7ee0-459d-8be5-c1042ba77a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ae7be8-4979-4d73-bbd6-bcf57f5480b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38a8963-917c-499a-a827-47c794a6b640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b01ac371-42fb-4fc0-9b6d-039e09992ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dff87a-65ba-434d-a606-139a36729a1e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcae7670-cda8-4d21-854f-24f11365c229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e04c1e-872c-43e8-a9d3-43707d538aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f4cba9-72c7-4e87-8db0-b4b4afe88565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3612b1-5183-4db6-b4f9-ed8e1bbe3cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8497a1-9db0-4888-a9bb-7e94779bc4f2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ace872-c0a7-4692-abd5-c911a8db763a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a21933d-9f59-4f27-b730-6734af3742bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7ffbb0-b7df-43a6-9a07-81e272d9e4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "536a5ec7-dd3f-4f12-acb5-fbe6ffb647bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b231c60-93a0-4992-b6cb-46a444eb6ae4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60037c1-909a-474d-92ee-4045734c916c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57efe27b-e636-4737-b741-a3c27f9776ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328d8dca-4845-4eab-a070-84ce89edb6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb3c142-bb08-423d-912b-0b984b16a891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf16e68-8c11-4a7a-9b2f-79322fa46c15",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a85daf4-a4d4-46d6-8d0c-444286b490d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba903ef5-4f1c-495a-8c78-65533bd38dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1a1df9-5815-4807-acfc-dcf12d5832b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "947877aa-54a4-440f-b018-9481be31fedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6aebeb-bb53-4342-b5fc-ff7c2428f7d0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb6dc6e-6223-41a8-9f1c-e1faeec18045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3648e7b-4814-4414-b540-26baaf666b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec737731-734d-4f79-b5d4-f5de21a1be4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1ce785-d36e-4f60-82db-780e1d178510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7405f575-1d60-4185-9f1d-120782eab436",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35c3b35-ca8e-4947-b804-2a6a03a11566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966642da-3aff-4cf9-a7fd-afe6d4848bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0b253a-8aa0-46cd-bd1f-e04b9ca497d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f206e97d-5737-4237-8cc4-7f19a1626bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ad5287-d1c9-4da0-927a-d909f123c346",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc77bc5-c5c4-4afe-ae69-b0263a6286e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30657e5b-69d6-403b-bbf0-11458c32e4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f0e367-9d17-495e-bf31-9c659f461d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c73735b-8c1f-45b3-ad00-8a99ecd20d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cec173-adb7-4e65-b0d5-b69c1724c18a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb36d90-3217-4847-970c-1c53ccaf6674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25b4ea9-8b93-4e74-a5b9-283e42ad9882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f194ccf8-e4bf-4679-a301-d4348e99f685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b029857b-f17d-4510-8f24-46044ed86dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53325d6d-27e5-4b40-90e3-4ca42df48c6a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762bb2c7-27b9-4458-bc99-43255104696c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5372d287-867f-48cf-92b0-44df851951c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9465c19-793d-4265-a1ca-03bf6a1078b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d22b180d-4f89-4efe-826d-b1b5e860a5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9c0231-f73f-4f3c-b1f1-f5dd0f6d37d8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4accb52c-13da-4184-b658-1593b10bd205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4739229-b811-4d18-b0c2-c47e9cafd193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7455eb-c31e-4bec-bf3f-91a2cfcff751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6679300e-97a4-4179-9caa-de42ebc9f0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a815b7c6-ff9a-400f-989e-ac7f924a1180",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45727e41-f2f9-4e44-9f9b-1ec34e8aba55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e20dd9-f186-4cf8-ace0-9e648d7a6523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed87b25-270f-4881-9a45-76c8033eed28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe85d8d-572e-403a-ba02-0341655de462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41517c57-df3f-425d-a17c-68f3cb988fb5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4432ac4d-7391-4dba-a58e-2ad0287394e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55dd9976-6bba-49f7-aef9-29bc8eb7956b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52a49f9-568b-4306-a667-1910a524b448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b7f553-6bd5-4d3f-944d-cd88669db92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3044cb-229e-4bd7-a049-2ee7b38c6ca9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563b56f6-bd6b-44d9-93ab-4a5149ea1ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c54cc07-69fc-4bef-9f98-0a759bdfe479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60c0ceb-89b8-4b3a-9538-2311290d6f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c089dcad-ae8d-46d2-979f-7c934f5870ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e68839a-4fe8-4aec-8028-95680cf75941",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20822982-307c-4081-9d81-ea7305192a3c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc66415-e0d8-4a15-ae17-e56e8eb3e1d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ea70ae7e-cee1-49e2-956e-9e20f8dbd95f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee39c989-a85c-46b9-9d6e-1fa387dc2283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65578e71-fa19-4b13-a4cc-0a7af1267ba8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95ea9051-37a4-4188-b33e-92824fea2757",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afcb6c4d-0bfe-4f02-9093-219ffdfa63a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06cd8c21-c363-47be-b143-c37a2ec19e95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c77232a-e9c7-4290-b3d8-f5eda8ad302c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29804071-5ff3-492f-8cc4-2c47402e7ef5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f113b41-5230-4b8a-a5aa-2bc13840daed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae0e04a0-feee-45d9-82fa-31949adc8eee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac905ee4-4063-40de-888e-f9d9097ac511"
            }
          }
        ]
      },
      {
        "id": "efa430e4-2562-4df7-8780-e19195c68ab4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "79572b9a-9902-468f-9751-c806758af043",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff1822e7-45e5-4967-9987-789c162d0cea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cda90cbb-ed9c-437e-b026-dcd7bd35ebf1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f453f89d-8d56-4dc5-ba15-d61dde66ec66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55cc12f8-b48d-4518-89a4-670e9182e719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794842d8-e079-48bb-8a5c-27888667a9fc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42a3a33-2c42-4866-aa74-f5647d473465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae20831-9762-47c9-b3b8-984f29bcdcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b7bdfa-2ae9-497a-9e4b-2723889f646b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bd76d8-def2-4d76-b8ab-3f22f4f854a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3973c5d4-d21a-46d7-a756-f9534ada0003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a5e14e-f911-4453-8144-d687a14e8e59",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13bfe5c-d109-4fa4-b4a8-cde0db3c6c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce75b0f5-78ea-44a9-9d44-a2a84c461043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e648e1ad-9da4-408e-83d2-ec8bd4ddb3de",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94abee1-06bb-421b-8b11-493804894856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366c960d-8754-4578-820e-2bc294ab8e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190a8068-acab-46c3-b691-76256501785a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94931d0-e0e6-42e9-a40c-480805a8bb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0262c5-e738-4646-aef9-c29940de0ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8590fded-45b6-4b8d-a281-26a0034bcbcb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e4ef9e-fee6-4d77-a10a-03c58b43495e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59c7623-4d22-4b61-949a-89e2dbd4ee37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2700373-1c69-4e04-8be7-7c5887838d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212b9c26-7ebf-4bf9-8a84-579901f4f9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdd9ef1-f6f3-417a-81c4-8bdc8bfce8e1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27933f1e-2072-4a7c-b211-cdf3a077f322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa514c50-1864-4a7c-9149-ee0cca46e657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681645e8-95e8-4f87-ace3-7b284de86cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fc2238-9ee9-4ecc-bb5d-bb04e7b7ff09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa56375-941e-45ca-a0ab-caf1be8c9e2e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb28d4e8-87f8-41fd-ba5f-99ddd861d3e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac2bd51c-0e8c-415f-97cc-27c87983c0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5757d40-0571-4a08-ace1-48ec065626e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a677d7-24fa-4c1d-94ca-97979785f008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5600435d-db56-4c0d-bc9d-c6be34cb2dc4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f18e812-464a-46f1-9e0a-a9b2da7d8821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf7fbb87-9ed1-41f2-a19b-666d9055cff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3a702b-580f-4e4d-b291-5d1873ad5e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a022684f-5e22-4e91-951b-9e6b582fe090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb7a3cf-4e19-40b1-8e61-944a78952616",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c920d82-49f7-4780-a8c8-bbc997735345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027e389b-0f42-4beb-bdb0-3330658a00e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42299c53-4f99-45fc-91af-e66ef5061dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d661fd25-5219-46d9-a384-ce2994705cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92102d5c-312f-4e76-a977-e02eca84d128",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ca45a2-5184-43ce-8012-d7169deca81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb09ccff-3d93-490b-ae36-65ffa5857c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baaf8df8-42d9-4d34-8089-a2794f95f558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fba0455-14f3-418e-acb1-d9417d5f3676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a266a2-2b83-4fd9-9f1f-e5bbaf337532",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b76b7a-1199-42ea-a191-f5c22f728c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4baf63d2-92a4-4a9f-8159-36e204513afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6dde77-6a5c-4c9d-996a-0fc0c92025e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c07ecb3-bc09-4779-a34f-ab53966bb729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ef463f-9932-41f5-abbe-9795c7cf10d2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0410165d-55c8-443b-a466-ee07fd26d67b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9817094e-1023-43eb-a767-b23d9afc6181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6de3ca5-8f07-4d68-b12a-600ab0fb7e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81efbd9-7214-44a7-8fe6-3c3d75b15760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7830613-1037-43ba-a580-e0c6b9ae8e8f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cb8dcc-a3c7-4a17-b93c-c4354445da74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4ad7258-7c07-453c-acef-46391fdc632c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7000f6f2-6b7f-4b01-b955-ae78fcbb619e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ffc20bc-641e-4f1a-948d-e601c9b53559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d28bff8-227a-4776-8773-e9d21ce803c5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c7b3ea-7bb2-42b1-9931-c19ce1884834",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aeef7e4-b72f-43a2-bd33-8bf02167272f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bff4ea-9205-450c-9eb0-b55877cb3d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2489782b-0329-41a5-9990-20950cd98385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f789b03-5cea-4af8-991f-656cb2f56e3b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93618af-15e0-4e79-8145-a0bb9d16966f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adb9190-fbe6-4190-85c8-3136933422d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8c95c4-e062-417f-9c02-9de111424ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a63b73-7ca7-41cb-9c3f-074a37acc463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecec781-c666-45c3-a0cc-fe94f2628ec9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f720fe8c-977f-4a2b-865b-9312cdf75d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19af1321-1ca1-4531-8121-582717466fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d37335-39f6-4268-975f-76bc9dbad830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4b0392-1dc8-4707-9f76-1e7fcd450cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31eded9e-d21e-4ba3-98b2-e9e25ff3ded3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208782d0-8ef0-48cf-a10f-ed467acfc74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8771558-7332-4865-bac7-fa38b3cbe14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc56abf-a687-41a4-9716-5e5a77d4e0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23965f0-51f1-45df-bf9b-f2bb22bb6122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fb0785-fe58-4cc4-a6eb-66a5054cccf1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9871231a-bf63-48a8-a1bd-e51f176e43cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809e64af-6ca3-4062-8800-74db08efd144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb758349-557d-4e89-833d-aa3ad967ec48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfecb24e-f2a1-4224-8ba7-55fafbae3cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ef4b6f-5dfc-4817-880c-cbd829231570",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8912c31f-a855-41ae-b086-24b946814702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7565dc-932c-4b5c-b09d-effb171c5782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6de0d7-6428-4ed5-be71-0e53e580a205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a353e8b-f706-45d2-b4af-3860863d0305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d69a115-8872-4b25-9e72-525ddd253870",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f23945d-7658-478d-8ce0-a8db514ca6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1927e713-d69a-4a54-844e-39a9da2a9a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cff25a-271e-4b2e-96d6-9ed37b0245e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f94213-fa44-41f1-9829-3ed481645285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee609ba-0fd2-4edf-90de-9226ecb5a416",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf286f8-dc2d-4281-894f-941c9637723f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4332362d-eb24-4976-aa5a-55422e31800f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2b7ad2-1e08-4204-a361-a5bd8639408c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9adf9d-5712-4a43-be98-5ecf03c38bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abd0186-b90a-4f55-864c-95a4adce0315",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3265ff5-3275-4e18-9b2a-bee8bcaf110e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcef6f21-c465-4179-8155-a71968cf8d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eecd90a-86ae-4d1d-82c3-c33c816737fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c89762-8cf7-478a-9fc5-b24bfd815917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1fe4f1-d04d-4ad0-a011-05b72ab63107",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e24585-c743-412a-b237-e96e9cbbe041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de4e32c5-4860-45ca-bc44-6581b92d361a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad6aab7-cabd-4c45-88e0-a80e515af7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2853d750-424d-4472-aafc-61d0d7650fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801ce410-54c1-47da-90ae-85904fd742b7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f17f96-77f4-4a3f-a3ba-33913493f58e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da7b68da-9989-4a19-9dd9-6f46f50141e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7172ca5-95e6-4fa7-a736-b4e5ee646898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5b7c20-7555-435b-aaa3-0a60b7e22b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aef4b99-6989-4344-b4d0-e0d30a85ee42",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735f7e7f-de03-45eb-a1ab-5d3184b257cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f32ad1-94ac-4c13-b03a-32c1136be01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79be3cc-d2f0-491c-97f0-2e1592945e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c841c75b-133f-4463-bc0e-efe8f3363268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d494141e-bd41-44b4-9b52-4ac145f2c7a5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb84074-22fc-421f-8d33-1c429c15fc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d43f95-9cc0-467a-9722-8580a549d297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43594983-293c-4d6e-97e9-02e51cfe3241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a701072f-8c9b-4853-9982-ede874e8ba6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f7bba3-d5da-4c3b-a6d0-e219cf4fb3b7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5692db-bbd7-498e-8e0d-0b6e5e91f0a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdb05677-3bc2-44d5-a803-472829e2f47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1f6f4a-5ee1-4f37-b034-11657dbdf824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ec4ab4-470b-4b9d-bb88-69b0f51385bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8405938a-c0db-4150-8250-efde08215786",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066d5e31-a7ba-425b-9f61-6c5feb949a5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13f52737-4123-4912-8942-225313afd288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86301ae-946d-417f-8e25-3a7af9449eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c8f1ae-d5c9-4212-8f9d-a7644cb59d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a058a0-9457-4d31-a9f2-c1b41ffa03cd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989cee09-c585-4220-addf-4814f23fd820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68348fa0-1a65-4a0a-a074-92af0fae3a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46c39e9-d8ed-4a47-ad92-9e5c66ba112c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67749481-e543-4027-bce2-c944463821cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbf30be-751e-4c5f-818a-c2c845fc216b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759010e6-8997-43a6-9f34-043d51603e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbc63a0a-ac99-4a15-901b-24540981b221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5967d66-57ae-4520-af66-0995f7613949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f27e457-9555-48af-aecc-c63bc1eebf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a10caaf-8487-4835-9631-ea627e1f36c0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cf2746-6710-4cb4-a251-f0b29fbf3807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53abdfb1-74a7-4461-8261-a93ebae08215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e02b9bd-681d-409d-98cd-3aa895af9158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d766a2-ec4e-418b-96f6-87630d4caad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cd7aeb-716e-45ed-b2af-8743885c4fc9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace0a852-bf16-4edb-9729-523c0538d00c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c493fcab-b5ae-436d-bc6d-fdeb69e6f94e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080bc98d-c353-4ca1-b666-4e9ba6a5b8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5b12f6-68c4-462b-9a67-24dc229d95d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc25b8f2-e997-4f73-aa1f-f371443f94ef",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dd7070-e766-4f10-8bfc-cafbc65142bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b6f5d3-290e-42ae-8650-3f961948ceef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76681a79-9163-40ff-b223-d62391edef3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25ae08f-79d2-4f9e-8376-34c2fcfac0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb438b3-dfc3-464f-ae2e-fc28d843cbc2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9481db-33b7-402f-a075-bce221d4be87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7b7d12-c807-4534-873e-54ca058ae629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8434b03a-cd04-4cf8-b7d8-924ae31ed810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45eb79f0-c83c-4396-bb60-d829217f7fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1014daf-30d7-489c-8871-a96fb9f1aa60",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2399e2f9-7ca0-436e-9ba1-3f90fd0373be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39379c4d-38d2-4e19-87e9-bc7ba83146f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9725be9a-05a0-4470-a26b-6ad97b95f5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced57c62-ce95-4c4d-a707-779803cab9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64489b6-1348-44fb-8b13-ebe19498a859",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33df2ad-2bd4-446c-822c-dfa8fb409073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a394a9-54c0-4d9f-9925-709c59490fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34bd23d-923d-4552-a7fb-5ac785d7a522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9be078a-2ee2-4387-8ada-66c4c260cf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2714ef1a-b915-40ca-a57c-a52afd84e47f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb809b3-39e5-478f-bb3d-1c9d19302603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60afdf6a-eb97-48f2-9479-ab6df8dae970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338593ba-8481-4a3c-87c3-a05c7a8858eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ea62b0-1c7c-4ae9-8054-90afd37d6f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f3e0d3-bcb6-456d-bd84-0ee2bc61e171",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daf414b-d438-4625-9755-47fc9892ea3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ae740f-ade2-4998-a347-e0bb9d66115b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403e49f3-9c5c-4a0b-9c94-7fa8025286b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f450608-5d3a-46a6-a9e4-cf935d6b31ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14fe112-a701-42cf-8d1d-f284a5cc3982",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8050d4-b171-448a-99e0-9cf8a6fdfe1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc178c35-0b47-40c9-bb95-473fa355b4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7bde62-e822-4c74-a1c9-7bc66ca8b705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f00a5c-bd60-4a7a-8cd1-4ff8f215a005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aabea0-8e15-4326-bde0-c3269913df04",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9639b1-56e9-4dc3-8e08-da55c68a8dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6209a147-8fe0-4287-8057-03c2446b4653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b7bcf1-4c74-4924-9f75-9d296f464e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6702687-def0-4f21-857f-431d0d95c608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccb6133-8983-4eef-b11a-5b82f2de8a73",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba37854-f50d-40a6-8fb4-49a3749684f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3770c3-05dd-4079-b915-4564a9e67561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec586d2-b5bf-46ab-823c-6726c73756f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4feeaab-4c04-43d3-ae91-ea683abe66d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71311321-db70-4edb-a2eb-b583ab0ce7d1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cfe336-d15a-4ff8-bd91-763de599999b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c24169-9fe1-4fb9-a5e6-a2a54f2f18dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124e635d-2216-4e71-ae4f-68c2b5158eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3f62c9-79ff-4e32-b79b-62ad895fe161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15eadf6-f9c5-464d-b427-a5e76c830c86",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f1b4e9-959f-4840-a191-8bfce3c23f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5da7e88-f397-4836-b88d-f6b1ebed31af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67cc688-5e2c-4770-ad7c-6e86879ebeb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b6837f-96ed-48d7-8edf-6c733f215bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00bc0f1-0377-4ce7-a3d5-4bd5ac11c2b9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf498ce-0c3a-4719-bada-91c147aa58f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab1fc50-cdda-49ed-996e-be2075b8c253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5335441a-11f8-4988-9df6-6477d1e34559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f65d9fe-b595-4d6e-b2f2-0eed202ee6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a0b19b-f969-4e65-95a2-295eb0939dae",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54163bfa-ecc5-4cd8-b021-c7834af927ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549a341f-f6b4-4b53-931c-96aecbaf3be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39468075-fba1-4932-a7ff-7b902ad6865e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff858070-1137-4ab2-aac9-8ec60152191f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f3867e-ec2d-4196-bc8c-fac71f4bea0f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ba2810-12a6-42f1-98cd-839d535d1895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536779f4-c035-4ccf-85c1-4082e8b3edec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3563bc0f-dce5-40e9-abf5-47568a8b0cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7602cc71-7a2d-498c-9ed6-c5216649a820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568df285-535c-42a7-b33a-92b22d50e348",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330b8a8a-fb9e-434a-b4df-c21b849f3e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6592f7-8f45-404b-848a-bf89adff9b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97f1385-4012-4274-ade2-a934898b853b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8988e572-8564-46e9-a6ad-a37fe1f6b601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39accff1-c5e8-4630-8690-093692d0ea9d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e53eb8-bed2-46d4-8ec6-09be8813a8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77d73eb-52ed-4b78-aee1-063d63249f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10402160-ff6f-4c16-bc29-cfa3e519a202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8c011a-10d2-4b0e-ac66-6ff62d0daadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3b7d1e-95b8-4f68-b481-2d1ddde058ed",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751895e4-ab83-47a5-9cfc-9c7e6f6ad1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd7a013-fb45-42e7-a463-45b8e243352c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5edb050-ac66-4262-bf17-d68039ad4c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904ea4b2-974b-422c-a8f1-1b2334d78b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c197b2-e9ba-4677-8a94-649882e75b23",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15265af8-edc5-4329-906e-be77a033e377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837f7226-2f02-42a0-a0f2-8ca16830b2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12df3c4a-ccfc-4ed9-959c-c859f39b6246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e416b6-ea2c-47fc-adba-32a811fa1aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1d6484-9ab6-4274-afaa-b314ef9950fd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cf4069-31fc-4445-b935-00321433bc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b0f307-2092-4ba4-bfbd-5757a75f203f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883c44f8-2301-4a47-8ebd-bc662e7cd343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0261fb83-03fa-4e3c-b26b-6b6ca857dda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028453f7-9a19-40e8-b43b-75aa2b25f80b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbd8f43-77ca-4fa5-a384-22835b26c78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4029647b-8a95-471e-a0e3-ad9626fd530f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1e0dae-5f4b-4541-bae2-0efe4b81c4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e69d970-acaa-480b-bbe8-106153e9d875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63463447-a7ac-452f-9b60-74555be9822f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6672d018-2884-4871-bc3e-6167e40d8319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c99d79d-3491-4360-8fe8-c2ca8feede59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7ad434-5df7-4eb2-8d5c-d9421ca9dc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5243f6f-f992-431f-b4d2-3d71bd3cdfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2f1e39-8b57-4667-8168-95efdc95a489",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8883b7e-5bb8-473a-9ff6-3d955ad1be10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c57879-c4fc-441e-9057-ce908b9cf5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aacfe21-324b-439a-8b64-b7f7d01305f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135cdc20-3d43-4a06-b8d0-0672f2da1ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300994c6-c437-45e3-85c0-43467f6e5c78",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43379ebf-c892-4d20-91dc-af213ef91fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9601ed80-c10c-4a00-845c-200f4397e24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b58ab9-abb5-4b0e-8f8f-f401e4dd9c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8571db6-3cff-4aea-ade4-e336c1974f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c8f0f2-7bc0-41c2-b1fb-8b9d4f4e37a7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358a2c54-4d5b-4433-977e-1be43be8ceb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07452c5c-0ba4-48fa-b4d4-4c896e73d978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88be753-85bd-4b65-ad77-9b8895dd426e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb715b42-b7ea-4bc5-945f-6671f4717c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66e4f0e-919f-498e-adf7-56cebb241923",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfef9b14-8625-469e-9bb5-fc6c0e40b7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d98d1c-8a51-4031-b171-d32331dbf05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819378f2-7895-4a84-86cb-12a9e103731c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1367767d-274a-45c3-afda-be51b040b377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8893b2aa-25e9-442b-ad26-3bba9601a679",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbaf94e-edf1-434b-8cbc-abdb71a80cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53c843c-61df-4253-a3c1-2a05b950c377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bad991-ebaf-4ae2-9fc8-ff540905ea70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61887a08-817d-4a15-bb5c-03604f6b875d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5033a3-91ee-4d28-9400-b2dfe0e3812c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e211d54a-5b2d-4b09-b7d7-34b296d29d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31665c17-d29b-4683-9004-b650f7c8468f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bbdac1-dda5-495d-acbb-ce843f660166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9834850-72f8-4737-acf0-20baba8d95eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e29a2c-7dfa-4913-9075-7852e4850b6b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d4251b-ac9a-49e1-accd-af18f94eb836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13dd84da-e632-4792-bfda-2a958904fa21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07863db-dec0-45f1-96e5-2de3538269b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48067d2d-4ce9-44c9-9a62-b21c8e667fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89e3179-5e59-4966-b083-c2cd04bee6d1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b0d230-4777-4d10-9da8-014ec3f4c36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e4b063-11bb-4f5e-baec-ee4143e4ccd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598e04c0-4e9f-4195-99ff-cbf1b7acbb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59713b7-cb33-453d-a110-3292eb50487b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c01827-cfe8-4534-9aad-d6d74230519d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c80dca-4479-4fde-8b81-b7d47b6c77e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "312c7195-0b78-4064-9939-600c38686e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da65ccd-f846-47e3-aee4-4171f9b4322a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3534b74-d5bd-4f34-9c49-38f302ecfb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948738e8-0e9d-45cb-a017-8c77bf4ae4be",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e6a892-66d1-4594-b8f4-20976c5dee6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "820e070e-2a1f-409f-8cd7-768e386a89c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccd4bcc-2601-44da-82e0-94eb97e63e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e48750-c14d-44eb-8ce9-33f08a498b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d57b09-2090-42ca-adf2-48aa65a3dfd3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6bc0b1-6f43-4a99-9d56-a527a5b0474c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53bfaa6a-0e4e-46fb-9242-3a7a9692013d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b756dd-3e0f-421e-8e8e-a64797036b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5294c45-8765-481c-bc43-ea05a45eb917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672108ad-4be8-4431-94ed-f40cedc881a6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e00907e-8026-4377-82c1-2871341acb0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40870e03-9c64-4b5a-aa38-2cae43f52b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d63b76-b852-4984-8101-fa73ba3747ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e6d4e7-61ff-47ae-aa0d-3bfa7e13e604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8fb46e-7591-47f0-a7f4-d8b04a3b93d5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6f0382-ecf9-4d7d-92e9-7f162be787b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba6e6882-e0d5-454e-a058-391a301e3a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338bb7db-7259-40f9-9b55-8f66b7e704f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3bc456-10f9-4ee1-9e82-20581ac599c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076efaa3-0a37-4337-8e97-32a411f45c20",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf4bee4-e9cf-44e0-ab63-f625c6d48e99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e624363-da88-48c2-8979-ebc21852caa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95a9856-bd05-4679-9219-f5cd5200b671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188e941a-d255-4e8e-a218-6aab1bd8d0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69db8014-9fac-429c-9d4d-125fcf861471",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab128131-1480-4e68-98f9-634527b45bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c0f52d8-4a18-4563-85ed-be3dac40dcfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cade3bb-3954-46aa-812a-f81e5caf71ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c300494-cbb3-4ef4-9f62-d82fa197136f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b88305-b5e8-4b7b-b356-a9387a0dd8ee",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39a8a91-254d-46bf-b1cb-66334f35b9ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83e9721b-c5ed-44e9-82c9-35665af80ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6687f3-89e2-4f1b-a269-e506cfde1486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8263264e-5d04-47ca-b083-cc53e0c8c591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9efb10-90c0-4fd1-aa29-3c593ca4331f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a3753c-9146-49c7-a12d-5ccfcb57a269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fee1884d-ab65-49cd-96fa-2b168096af3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7144781-5492-485e-95b1-9786e3a96cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739bad77-7e93-4231-a47e-9692f35712d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c0679a-f308-41e1-b04c-1ab4a8433bf5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0083c3-2173-4524-85ac-20fc2fb94792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90d813b9-95b6-41e5-b99d-d6685107ce7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4406ff-1dbb-4ddb-b33b-0e1c5ed30d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971d3df8-cb6e-4a58-a422-a6354c9a7e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c551413-e17d-412a-8e03-f4d0c42fab19",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddaa5f38-e442-4988-b018-7ba28979fcad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fc8c6c1-5f01-4ca5-bfc3-c63a20c5edd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1e9624-cbd6-47d7-992f-1b539c71ce0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a304c6ae-43f9-4d29-9d12-ea93cced9a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355d5d1c-c4dd-46cd-9b87-987080345401",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954b5a2f-d9ad-4690-ad9c-59dd6d1d56ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a7d92a1-71c4-47bc-8345-6209844133b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c505ad32-5de1-4ecc-8d0a-bbe295f303e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0718f0cc-7797-462e-9841-ca550fa87b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b4993a-a01d-4f37-9db7-1e417d0cebfa",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5a676b-72d4-4cf4-bab2-5a557a177f00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f17a777-144d-4f11-b00c-57e54182c92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25aab22e-546b-466b-b481-3e899c0a1184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa5025c-d78f-468a-9556-b74245b08355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9611201-41f1-466d-b940-d3db9288cbd4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5faffe1b-e67b-4c61-a305-bc904ba2a9a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457da847-e3cf-446d-aef4-b4b4dc9efc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c023b95e-9850-43a8-80b5-bed0db25a454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65f7ac4-b668-4873-bb16-7b43b3888f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ccda18-716f-449d-9aa0-ad8312c9e562",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8f4602-5424-4982-9ec5-a84db01ba064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f5fa89e-21ce-476d-885e-3bbdbed3530c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4258eda8-75bb-4a70-ba14-7042976473c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91de9135-51d8-4b3e-be94-5d4ae4840924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c052308b-7bc8-4d28-a5db-44e3345d1ae8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db156d6-4c78-4122-80e6-e63fc7c7060d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fec04ba6-dbfd-4516-8f05-440d22a62f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaacf50c-72fe-47b0-bd64-e21e2447b315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f431f85-604a-4ab0-9b10-f61ddb1cdd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7767d9-2d40-4e6d-bdf3-cefcc767ffcd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ecacd7-6ced-4e4d-93c4-4fd46aea67c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e8ac3d6-ff7b-4117-9138-2118c7176d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e014fb3d-8ed7-4abe-bfae-a78f5a3edaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a67a0ff-e309-4b12-8229-243279b3ffdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9fbdd0-3769-4e87-a5f0-ac333750eac5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d714b7-9dd7-4dd8-906e-febe759bb50d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23537516-a31c-4a1f-b814-14eb57ba56c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c08f27-d025-4180-a824-5a00c9c6b6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9136f95-1026-4298-b0bd-d4ea210b1474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b29ab2-c0ba-4690-9d25-45dde3cf4efa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e162c1f1-3bc1-463f-82bb-2a86368eda7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ebedd4b-79d3-4703-87f4-d639a90f2bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bda238-cd8f-4ae1-b073-84b258ecac43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751940aa-da10-4be8-9d76-99c0fb16356e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074f2b85-2c73-42e0-bc9b-6ef3de398432",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5a715d-4792-446a-a34e-57f68285860c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01c94ed-0751-4194-baf2-253f9b2edb1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f46d73-79e1-4e28-abe5-fefd5693058d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd32e113-b0aa-4ca3-9901-68c8ecadcef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7097a4e-b45c-4a68-9dc1-b581579c8e10",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005a271c-2d34-4467-a972-4dd12fb0fc88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab082b5-6222-480b-9ff5-267e3c2c6fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aff631c-be2e-4639-8fb1-8e8c32682622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7eb9ba6-a351-40ec-87f8-9f3b67e5436e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556becdd-44ba-4027-87b3-3628e1a8abcb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2669b260-dfe2-43a7-8a2a-d5b816272409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de4233bd-4c28-4440-b2ff-e19017747476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4244e3d6-5f6b-417c-b18e-69494f68ec9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41408057-3bf4-482e-a6ac-ca23946b82c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f50b36-1424-4835-b789-1ce93bb83a5f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769acf74-9708-42e3-a231-f9ddb2ffcd91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0631dafd-2033-4b31-a89c-dad8b03ef642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c76b029-1b8c-489f-acd9-91aefc7f8555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a85e37f-5630-41ef-9b24-8a449e9d19a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0d28b6-2487-481a-a691-f35158e66357",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fa2baa-06c3-49ed-8261-2545f84403a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62168ff7-f3e9-4389-baa1-d62786e3039e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6556f1a8-0457-4a04-b08d-b8cf0f660d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b857ae-ba6d-48b1-b1ce-e71c5eabe071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec59fb4-f658-4604-872e-5be36c7ab9ee",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e85a694-6817-4bf4-9689-e5508a7cfff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0f9a43d-49ea-4cc5-8a9a-9ee92031398a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb143f07-5a40-477e-a0f2-f48ee7490bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ef8df1-4adb-43c3-8da3-ace33d462b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f69bd6e-62ce-4cf8-a435-358aed425916",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf1745f-ae32-4632-bb4b-e3ac2c28f41c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27bd78d8-53db-450c-8c5c-62585b853966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61442f73-d177-4ce9-a71e-d5da1cd3f9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5631968f-99fa-470d-bd7c-f897b64bf3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23748941-23a9-42c2-b415-1e1c24e84d46",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105d9676-9add-4c66-977d-7d9dc10bc8cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30032c09-cf6c-4af5-bb97-123ac60de03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0026c52-a97b-4177-9434-719d96636f6a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424b8bdf-5331-4e2a-87c8-e14da7604cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee547748-857a-409a-823b-c613910c3d28",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e2070b-000c-4035-b401-c5016a6dfd65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7b962f3-1735-4733-bb7a-65175fcc6b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a1fab1-94fb-41aa-b4a4-529ba2bafef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abe3223-d861-49a0-a225-053923a83634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3f5288-f3ed-4238-97fe-b97d0d6dcb13",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ad1274-c5ec-4d9f-8cb5-25cef5c16000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0cddd48-fbf1-4eed-8c5a-6539e13f8dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55653ce4-dd90-4a8c-a022-ed5dd55aa224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a134eec-f608-4703-9948-cf6a3c844da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d7192b-3706-480e-81bb-a5bb48470a6e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32404cce-21e9-4336-8d04-d1f2382f5a9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b65a195-bb04-41c5-af2a-4594b8aa9de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff612a85-b64b-41ce-af41-0014beea4cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb72718-557a-4fb0-8ae9-97fd90553b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f9a19a-e1ae-40cf-b184-7d6428013977",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c90be8c-4441-4f98-95bb-e1e7193aaf95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "456cbf31-7a6b-445e-8b0d-dce6d27dcffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd22d01-d07b-4cf0-9b7e-ca80e4fc75f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e406cbe-80c9-4879-ab66-39a722473282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2e4bc1-33f0-4b2d-8e9d-b034458a20d4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403efb8a-698b-466b-b95b-86012854cd2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54932f3d-5624-455a-88ca-07f995166986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded3a4c9-24c6-4f59-8234-b0b9f2ed8cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a05629-ec99-4953-bd2b-ef7a4cd74778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98a531c-3db6-43bc-bb23-dd4975ee74ae",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5a2b94-1cff-4b1a-9c01-6b24fe17d50b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61d5a210-37cf-4caf-87ab-14a69d13cd0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765c2fc9-47fd-4a64-8b97-1329479e9dde",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a78c22-a28c-45b7-b9f3-830082b0b299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000b2d78-ae0c-4a7b-884f-3849572ab9be",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcdd344-2399-45e5-9019-7e661de805fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef0a914-79bd-45d3-8ecb-b34cfd6d2b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6abfdd-5782-4e04-8c08-ceeb982549db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7916a01-75b1-479a-8ec3-44cea665e7ff"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baec15e5-bd87-4817-8657-7447da7f1bb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "752be342-7834-46ed-9572-16fe73a3d2b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d4f58c6-6084-4d5b-878b-190b77636a08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1382b325-c020-43f0-9249-a5bf8982b635"
                    }
                  }
                ]
              },
              {
                "id": "b10cadc4-c339-4e12-bc70-c23ade70f60f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c015305-d1b2-4bc7-ba3a-0cbcf7a5782d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faa1295-1bcb-4ba8-8c4c-ff84f5631635",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e3bec300-4edd-487e-9b82-d5348180b8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "615bda86-1c2f-4e97-837e-d5ffed293470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70775800-c53e-4944-8afb-dbf49822ca7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8631a1a-d088-42a6-89dd-75c4ceac18cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efd7b8d6-88d8-476f-ab57-ca4f8a4b3872"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38956a3c-6edd-4925-b9c4-965dbfc4cd7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35fd48e2-b2a9-4fda-954c-73c15510e146"
                    }
                  }
                ]
              },
              {
                "id": "5a3db9cb-b117-49d5-9bbf-6ff597354ec3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c20385c3-5432-440d-a829-fe488ceca4be",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffacc044-c221-46d6-a9ff-f9871b3f5c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6f5b9c3f-2117-4cef-868c-ba237f8a0a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e9b77d-acbc-4ed1-bada-fd057a5de6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4739ac8-253f-47d3-9d63-e87acb6c21b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4633777e-97ce-49d2-b9a9-77283e5d8e3f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1941aeaa-6818-488a-aac2-83a56cc6e5e9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8ce5289-37b1-4593-b236-7b3b84227f61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7cb2da2d-97ee-4f32-b9d4-49d798f011d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29ec3624-8d51-42df-86fb-70d08a97d44e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e79590b-36cc-46da-908a-ed359cd4a8ab"
                    }
                  }
                ]
              },
              {
                "id": "41527d5d-460b-405c-826a-7a79a9dee495",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63db0a9d-5c0d-4a7e-b483-5e6da7a7dbf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "230f6b92-93a0-42ef-ae22-21b2147c390e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "deb4c7ed-c7d3-4853-9ace-0861692e3849",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66bf110c-ab7a-4000-b80b-3b7a1da76d8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "493393c8-fb8a-4419-89bb-69aeaa4e6726",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b21e7034-06b1-4099-9078-65b54e6ceeed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c94bf907-fa24-46b8-8b8d-afd4b44aab38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2546a596-56ac-41da-8343-daab2df54cea"
            }
          }
        ]
      },
      {
        "id": "546ccd27-63e9-4eba-a249-5a18aa7ba0f6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cb4f4e6c-4097-4c1d-884f-f362dfba9226",
            "name": "Negative Testing",
            "item": [
              {
                "id": "799041ae-553f-41a0-afd6-a663f85f62cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e330327-e33a-42bb-9942-d9265c4cd9cc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f62306-1c74-4689-afb6-33a67c340fb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c4f80dff-0126-4955-8d9e-11a9ae6593d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47287662-528d-457e-aeeb-550ff3bd96fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "451d917c-8205-4d09-8543-ba43bcce49ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80406004-0c32-482d-9b6d-c3527cefc4e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa6b54d0-7834-4e8e-860d-328fefc3920a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f82657dd-399d-40c7-bf0e-e6cdb63333af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "744d7696-6168-4459-bf39-ae86c5948d5d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9b766f0-ecc5-4910-89e8-689e91a0f61a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d19549b3-e414-4c9e-945c-a01f86974411"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "004be9c7-1a8d-4648-a176-6f25442cf4df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "736fa31c-6a0b-4aa3-a8ba-92ae264e069c"
            }
          }
        ]
      },
      {
        "id": "8040cd60-2309-4f55-8975-1bbf17890caf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "79982d5e-237e-480a-9f64-1df1cde2abf7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1fd5d2b-4162-4b78-800f-4e721bae0f12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69156577-a480-4b8d-b360-7514eb8ce71f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e133a9e7-03ae-4e02-ad77-57235efc897e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13e0c16a-ad47-4cae-9168-9dd07f71927b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "784f308e-f9b7-40a0-9f10-f29dd84373e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0585baa-4dad-416c-b324-c846ad5a51a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a5d953b-8e14-42a2-a22c-21a98f8e9ced",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7610e36a-872e-404d-b2c0-b975d38aa688"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "310271ea-1753-47c5-a153-e00b808dbda4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49038d12-815b-48d7-ae5e-219f07d33c7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ab0b69f-ec01-48f5-8079-dfa7b5f44b68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "99ca1e2a-d3da-4cba-af8e-da729b47c904"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96c3ff58-ad81-41cb-8f3f-f926dff76d85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a81655f2-2184-4999-870d-ee8e4c206279"
            }
          }
        ]
      },
      {
        "id": "afaa5c4f-4e48-4eec-b09f-275a742f545e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0522ba10-53a1-4706-ae40-244a14c90dc2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d400696-9fee-489c-b77d-866a8547d506",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb039c83-1916-41e1-abd2-0c4e6938a7e1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c93e56-6a8c-4180-b149-e0e284a29338",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "273b4b60-f01f-4407-97c2-073a6e20dbac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88d8364-fd99-42bc-806b-829208420d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dd6cde2-7519-48c3-902c-0365262d6756"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac8b1da1-fd0b-4545-8409-8b7a15341abd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cefa511-3115-47b2-b25d-dc2d022c662a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4128f59a-510e-41ad-af93-5cf21da405fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58abb890-a68a-4c7e-9dd7-e0df9ede3fad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc2d62fa-c3c7-4b5a-afec-aa1b3ca97c4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d32f6037-cec1-4f43-95f6-39dbe5379b74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d51cad3-791a-4494-8740-e9e564f3024b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91c787d8-cbb8-4760-9f2f-83c6f1a7baae"
            }
          }
        ]
      },
      {
        "id": "e8de58dd-5a02-4db0-b635-aabf67eb4997",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "486d57ce-9fb7-46ec-80f8-53e05f094b15",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5287ae78-680d-457d-85ba-b9d999b64b1b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b07c431d-8660-42ec-a4f0-76f105b64e62",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd6e7494-dbd9-4784-abe7-dd050af66788",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9ffe6b2-4e38-41ec-ab21-dfe4a5535e46",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 60.56349206349208,
      "responseMin": 22,
      "responseMax": 592,
      "responseSd": 42.98246154542458,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724892133741,
      "completed": 1724892157172
    },
    "executions": [
      {
        "id": "bb32dc12-a174-4610-bf53-8f89bd69eac8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9a99a1e2-15bc-4d15-9c1a-d899d37ee3b3",
          "httpRequestId": "91635c02-29f2-499b-8c19-d3cc8de3a6cb"
        },
        "item": {
          "id": "bb32dc12-a174-4610-bf53-8f89bd69eac8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7e4e0a4c-8960-4ce2-866a-cffa373cd248",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 0
        }
      },
      {
        "id": "b655c1c2-37f1-43bc-bbaf-de3fc5d54709",
        "cursor": {
          "ref": "03fecc50-7afc-4608-8eda-926096222815",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0513689d-126b-49d3-bc9c-f525d0351616"
        },
        "item": {
          "id": "b655c1c2-37f1-43bc-bbaf-de3fc5d54709",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b7c2875d-c092-4c76-a90d-f7c72d6127e8",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "7306665f-814e-406e-8c07-43679cadee0f",
        "cursor": {
          "ref": "a9fa00b2-a9ab-4be0-8b16-cfb56db12c9d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8973589c-645a-48ea-ba10-7f3f9692fb41"
        },
        "item": {
          "id": "7306665f-814e-406e-8c07-43679cadee0f",
          "name": "did_json"
        },
        "response": {
          "id": "bc0443d4-32a1-4414-8f92-11826396679b",
          "status": "OK",
          "code": 200,
          "responseTime": 396,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618c34c2-4042-4652-b432-4b5bfd8e37f6",
        "cursor": {
          "ref": "b5d21eea-23a5-46ac-865a-4a573e6bfa32",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f8422742-d5ca-4be6-9a2d-5002e1ce8cd3"
        },
        "item": {
          "id": "618c34c2-4042-4652-b432-4b5bfd8e37f6",
          "name": "did:invalid"
        },
        "response": {
          "id": "c6c479e3-df8a-4577-8400-34a71badce21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618c34c2-4042-4652-b432-4b5bfd8e37f6",
        "cursor": {
          "ref": "b5d21eea-23a5-46ac-865a-4a573e6bfa32",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f8422742-d5ca-4be6-9a2d-5002e1ce8cd3"
        },
        "item": {
          "id": "618c34c2-4042-4652-b432-4b5bfd8e37f6",
          "name": "did:invalid"
        },
        "response": {
          "id": "c6c479e3-df8a-4577-8400-34a71badce21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72a35d2-4de9-46d5-8f97-380781af24a8",
        "cursor": {
          "ref": "b5376bf4-78ad-4f47-a623-6ab25ed532a6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a39e48e4-227d-4fb3-8038-1edfca6bc2de"
        },
        "item": {
          "id": "d72a35d2-4de9-46d5-8f97-380781af24a8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3367743f-1ce3-411f-b4f1-995ebb277e0f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 194,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e13c11c-0af8-4bf5-8d45-a4296eeff6f7",
        "cursor": {
          "ref": "4d4521dd-5317-4c37-b5b8-9fee012fa183",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1f4a8209-8ec6-44ca-a6a9-3a99f7b25220"
        },
        "item": {
          "id": "7e13c11c-0af8-4bf5-8d45-a4296eeff6f7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6f2f9615-33a9-4edf-b17d-6633b3090817",
          "status": "Not Found",
          "code": 404,
          "responseTime": 60,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49192c2-d1e7-4457-a90d-59270419f7de",
        "cursor": {
          "ref": "7b376987-2508-40f3-bdb2-cf192e9708c0",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1a57113f-1a9d-41e9-bd28-b7a6c51f6ed1"
        },
        "item": {
          "id": "e49192c2-d1e7-4457-a90d-59270419f7de",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d1daf720-8ce5-450e-b042-d46bf490835e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cec793-ad64-41cd-81f0-96e135d1e1c8",
        "cursor": {
          "ref": "8f59c94a-8991-45a9-9d51-cf57fa40870c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8dcbe9d4-a5f8-4029-97ac-2ad8b9f8d254"
        },
        "item": {
          "id": "06cec793-ad64-41cd-81f0-96e135d1e1c8",
          "name": "identifiers"
        },
        "response": {
          "id": "1111360c-8dd8-4dad-b8e8-05310dcadc32",
          "status": "OK",
          "code": 200,
          "responseTime": 272,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca16b88-aaec-4f82-8f24-d859e45ee6df",
        "cursor": {
          "ref": "e20cb6c3-222b-4fdd-b8a9-ba0a1d9ab852",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "084f14da-4a0d-4fc5-a6a9-2062307f4488"
        },
        "item": {
          "id": "fca16b88-aaec-4f82-8f24-d859e45ee6df",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2ca0c193-5368-47ed-8b57-18263c25867f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3d5d22-e448-4b72-a44a-637e3de86542",
        "cursor": {
          "ref": "3aa6d463-a6ad-4661-8537-b584f8efaf35",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "280b9d1b-067a-4b4c-8c97-121eaed008d0"
        },
        "item": {
          "id": "be3d5d22-e448-4b72-a44a-637e3de86542",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e88d442e-cfe8-429f-bdc7-7f51de53fb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fc10c0-b220-49ff-80a5-d27a9cebbc0c",
        "cursor": {
          "ref": "e521fd25-148f-4848-b5c2-b6f010e5450f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2929d456-3db0-4246-ae00-7ea8ff5b82a6"
        },
        "item": {
          "id": "e9fc10c0-b220-49ff-80a5-d27a9cebbc0c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "90a98114-23ae-4336-9919-29bfc0abaa17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d26542-f3a9-4a0f-a0c7-77bc2a845d1e",
        "cursor": {
          "ref": "21071a5a-0a79-4455-8f2d-1def5b0b18ea",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b45d10b8-7d72-4465-a427-c0a10d0f6cd3"
        },
        "item": {
          "id": "49d26542-f3a9-4a0f-a0c7-77bc2a845d1e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "67f4cee9-7e7a-499c-9666-152ff452dfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2f4557-5709-4a07-bfeb-7023dc08a7f1",
        "cursor": {
          "ref": "76ce0d9f-ccad-40ef-9fe8-68bbd4d0eaf0",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c392a735-ec1c-40ae-a9bd-015b5d4bb46d"
        },
        "item": {
          "id": "6e2f4557-5709-4a07-bfeb-7023dc08a7f1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f9c85136-33c9-423f-bfe6-ab741c6b2b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d69003d-3a34-4be0-b6ae-f53463731910",
        "cursor": {
          "ref": "8a291e28-efd0-4aad-8a7b-720d5dd73505",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "16826871-1258-4feb-bce2-91b89332ef8f"
        },
        "item": {
          "id": "1d69003d-3a34-4be0-b6ae-f53463731910",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cec3e9bf-3f3e-48e8-9297-06b0e4e18095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8aa4e2-c3cc-4290-ac6e-90a516f584cc",
        "cursor": {
          "ref": "f94acd12-28d6-4210-afe1-d1dd9ab24ed4",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "03b88e84-29d1-4e3f-8cdc-08943b6aabd4"
        },
        "item": {
          "id": "8a8aa4e2-c3cc-4290-ac6e-90a516f584cc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "76d950fd-674a-4ee2-9982-7ec737b017ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba4f06e-bc79-4aca-bfbc-18fb29bc03b6",
        "cursor": {
          "ref": "acd837b1-57bb-4b4d-b373-7b95ca1040a4",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "75a704e7-77a1-4948-b4bc-617766bae1d8"
        },
        "item": {
          "id": "5ba4f06e-bc79-4aca-bfbc-18fb29bc03b6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8b9c2a3b-3b15-4ba0-b797-0c27b1d05bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c842e96-327f-4235-a95f-8fda1ab45a50",
        "cursor": {
          "ref": "435036de-a781-4af8-b14f-b92827c43e94",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7817aef9-f950-412e-b492-41de039a0ecf"
        },
        "item": {
          "id": "0c842e96-327f-4235-a95f-8fda1ab45a50",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "29126fc7-8dec-4d9f-81e7-b60f3995476b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b33126e-6898-4bcb-ad06-882b76059983",
        "cursor": {
          "ref": "142eaf6b-f3ae-4e16-b4a1-10611fd8b333",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4a2889ed-e3fa-41dd-8e2b-f2ab518fa7c9"
        },
        "item": {
          "id": "4b33126e-6898-4bcb-ad06-882b76059983",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8a0ef7e5-b9dd-4113-a60d-32f5bad51958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e389fb64-eab2-41bd-9d68-374e9706ff11",
        "cursor": {
          "ref": "3fc2addf-4e75-466c-9668-07a61a600e06",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "748702a7-be25-450b-9e2e-eb1e6e237b00"
        },
        "item": {
          "id": "e389fb64-eab2-41bd-9d68-374e9706ff11",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0eeab0a0-3ac4-465c-b1f9-39291524a8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef63bc6b-f9b3-4aca-85d4-045a8adf5b8f",
        "cursor": {
          "ref": "744a9d3c-1721-4e0b-81f1-4b56357db7fb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8af5b302-00d1-4b6c-b1a8-12987512c51c"
        },
        "item": {
          "id": "ef63bc6b-f9b3-4aca-85d4-045a8adf5b8f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4823099f-e18f-4963-927e-68cf3fa50282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda1d6bf-8102-4e99-b669-6cbf6a06a134",
        "cursor": {
          "ref": "cc4b002c-d2fa-4948-a056-78bde9627a99",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2ef6979d-b035-4ff6-8bce-d31d540ec560"
        },
        "item": {
          "id": "eda1d6bf-8102-4e99-b669-6cbf6a06a134",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5d1a8a4b-e065-4f10-9041-e6b493147be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358d5892-2459-4252-8ce2-2b576fce93f3",
        "cursor": {
          "ref": "b411b311-3319-419e-bb04-10efbb9bacb1",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7afe4566-ddb0-4fcb-92d3-49da324500ec"
        },
        "item": {
          "id": "358d5892-2459-4252-8ce2-2b576fce93f3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d76b47f3-4134-46fa-8666-e641ba5fa10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0157e9-0bc6-4d2e-8aef-09516dff57c7",
        "cursor": {
          "ref": "cee9d253-8c51-4227-b206-0bb6e42ad7e6",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "05265164-3afb-4d48-acca-c8094f82380b"
        },
        "item": {
          "id": "2b0157e9-0bc6-4d2e-8aef-09516dff57c7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "97f9bafc-80e1-4e90-917b-b150773358ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998585fd-d100-43a1-887b-31a0c076f5fe",
        "cursor": {
          "ref": "ac95d1c8-b64e-4936-b7ec-83e84bf5b25e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "44e5dce4-557f-4158-bb45-66866b5bd778"
        },
        "item": {
          "id": "998585fd-d100-43a1-887b-31a0c076f5fe",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dcb27a2b-74f9-4406-af5e-deca7679805a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d565793-5b2d-4cd1-9942-db4139586331",
        "cursor": {
          "ref": "285e7ed4-91f2-4b0a-9029-92e66315f177",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "930913a8-e627-424e-9df6-c9a6fefcad6b"
        },
        "item": {
          "id": "4d565793-5b2d-4cd1-9942-db4139586331",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "80419562-ccfd-4ac0-855d-7c5082ecb0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde21238-597c-4e99-b51c-18971c4beac9",
        "cursor": {
          "ref": "ed472e88-46c0-4f03-8588-a12e5f8e507f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3d615eb3-62c6-428f-837d-537a5e09ee99"
        },
        "item": {
          "id": "fde21238-597c-4e99-b51c-18971c4beac9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1c611d15-3f08-4278-974e-8a9bcfd1b6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c295b112-e1a4-41d6-b1ce-ee397273d3f2",
        "cursor": {
          "ref": "ffd0e57b-f62f-44da-ad31-29cfeeaae3c2",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "443aabde-c7d6-4297-aa88-0a632b45df30"
        },
        "item": {
          "id": "c295b112-e1a4-41d6-b1ce-ee397273d3f2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5ae723d4-3168-4f9a-9056-32cf4dba9a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67b7daa-59ad-4620-981a-c3279ca1c801",
        "cursor": {
          "ref": "960fa359-6556-4009-a664-7a25a54f607a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1f1e66d0-8a60-4697-bbbe-7c68d03520aa"
        },
        "item": {
          "id": "d67b7daa-59ad-4620-981a-c3279ca1c801",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e4fd4b9f-f5f6-4a87-b827-bf9ea4d74157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24379c7-f21a-415b-a2d5-d7f1738538e9",
        "cursor": {
          "ref": "36509383-d0a7-48f0-9291-88f03783e94c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0d7d5c7a-4412-4a82-8df0-6242ca1484f3"
        },
        "item": {
          "id": "d24379c7-f21a-415b-a2d5-d7f1738538e9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e0f2527a-f2b9-41fe-975b-1762c6de21b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef0fe7d-8f14-41d5-ae28-5339ece83e1d",
        "cursor": {
          "ref": "bf4ef189-7191-41f9-b97a-f0ba762b1791",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e0435c9e-3d96-4005-b55c-f72dc004e44b"
        },
        "item": {
          "id": "fef0fe7d-8f14-41d5-ae28-5339ece83e1d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c217e146-704b-4600-8fe0-ac9fc12046ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a79524-05e5-4cfb-8ac5-a0f3fb01fecc",
        "cursor": {
          "ref": "4376ca20-44e5-430d-9799-b8157d9d71cf",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "44016f5e-01d4-4d54-9fb2-4ce11ae27e6e"
        },
        "item": {
          "id": "b2a79524-05e5-4cfb-8ac5-a0f3fb01fecc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "780ed1b5-2be1-4d7c-9a1f-7c7423ba5e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bdab69-2d3e-404f-8247-b747d258b689",
        "cursor": {
          "ref": "090b86ce-5d0b-4b57-82e9-7d1de1f68baa",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6c4276eb-8c4b-49cf-8474-d29189c4c4e8"
        },
        "item": {
          "id": "17bdab69-2d3e-404f-8247-b747d258b689",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "49114bd4-4dde-413d-abc0-a6be2c3461fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77ecfb5-d779-4fc0-a207-9bd095b32edd",
        "cursor": {
          "ref": "aa0e1de2-0818-4a34-9299-512565c3d5e2",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "95585f98-7e37-4485-923e-6e2b068971af"
        },
        "item": {
          "id": "c77ecfb5-d779-4fc0-a207-9bd095b32edd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "068ecf5e-bd52-40b6-b005-144c6fc32298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6226024a-6f82-4717-bf6f-8b9aec150d1c",
        "cursor": {
          "ref": "2823e316-3c04-4e2a-87e3-72249dcf9ff2",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4a27cff3-f141-4824-b3cf-f8fe438c2693"
        },
        "item": {
          "id": "6226024a-6f82-4717-bf6f-8b9aec150d1c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b79f4a33-ace8-4e73-8e09-aa96f9882954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd43541-859d-4a49-b478-4d61dd691316",
        "cursor": {
          "ref": "3b08af10-d673-4652-95b3-dddef8056894",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "566234cb-0443-4060-bb2d-8ff927de67d3"
        },
        "item": {
          "id": "dcd43541-859d-4a49-b478-4d61dd691316",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8f1d70a8-6e45-47b5-a382-79392f9f8e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8745e528-935d-4554-af27-11c07a778b24",
        "cursor": {
          "ref": "bc1b407e-6e83-4f21-8e21-a1e74d6d4355",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c8a433fd-ac51-44a2-8ef1-fa3cf59a0e00"
        },
        "item": {
          "id": "8745e528-935d-4554-af27-11c07a778b24",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f71068fe-c714-4987-a6dc-daedd6e1c5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1bcc59-3c07-4f4c-9aa0-452fa995f81b",
        "cursor": {
          "ref": "7cc192ec-b96d-41c0-b98d-21d9c7d5ea67",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f4c590e3-3731-4e84-963e-e8f39821191d"
        },
        "item": {
          "id": "da1bcc59-3c07-4f4c-9aa0-452fa995f81b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ac0f7b84-95d1-4f0d-9937-982713b27f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c14e06-ecf7-4828-af53-4773f83ffc1d",
        "cursor": {
          "ref": "6618270c-ce72-40b1-a020-0d62622d7ab1",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e0e84335-25f8-49ca-a540-dfbe01ace192"
        },
        "item": {
          "id": "98c14e06-ecf7-4828-af53-4773f83ffc1d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b6e513d1-2a86-4d64-82bc-bfa6a19ae4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32658e1b-6270-4321-a9d1-9fc559168c59",
        "cursor": {
          "ref": "41b9951c-0fcc-488e-a98c-c792efd3f1a4",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ebc8d9e5-4e3c-4c68-90f6-5ed521f258ff"
        },
        "item": {
          "id": "32658e1b-6270-4321-a9d1-9fc559168c59",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "52e31d54-f685-4a0a-93bc-7d4582304046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3af7e2d-43f7-437a-b5ed-6354ba812756",
        "cursor": {
          "ref": "716e0328-62ab-463f-a04e-15a2bed775be",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "08c7236d-3ec5-465e-bd32-a26e9708d07d"
        },
        "item": {
          "id": "a3af7e2d-43f7-437a-b5ed-6354ba812756",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bec52b39-d3f3-4ae6-b2a4-2f48b7ef7115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b26ea2-df01-4d4e-9e77-90c10a50e64f",
        "cursor": {
          "ref": "70241725-69a8-4d90-ac69-f856a990fd9a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "df4bc36b-14fb-42f7-8e62-ec3022ce13ee"
        },
        "item": {
          "id": "26b26ea2-df01-4d4e-9e77-90c10a50e64f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d88f2911-82fd-45ac-bc71-6baf00ca2891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b065b51f-6878-4b2f-a28c-123a3d0aa29f",
        "cursor": {
          "ref": "51e05bdd-0676-4527-a754-4f78475d755c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7b09d206-4024-4af4-a9b4-7938acc67511"
        },
        "item": {
          "id": "b065b51f-6878-4b2f-a28c-123a3d0aa29f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b68e8876-1aee-4838-b033-89f6a7c71885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae781a13-f10d-49ad-82d3-532c61d8ef7c",
        "cursor": {
          "ref": "d9c1341c-6a6e-4a99-aabc-a965752f7a62",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5e3d4a8d-acf3-4887-8bba-52a03451b9e8"
        },
        "item": {
          "id": "ae781a13-f10d-49ad-82d3-532c61d8ef7c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "12011a6e-6271-427a-bff4-c9dcf7e15393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2210089-0980-47a0-8e8e-c445eaae6651",
        "cursor": {
          "ref": "4279a572-ecce-47a4-a9ab-514f7a1afa0d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "04b1bdbf-d281-4633-847f-e5fec6df4513"
        },
        "item": {
          "id": "f2210089-0980-47a0-8e8e-c445eaae6651",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2fe78645-45cb-4f9a-87c0-7f5ae46aeff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecafe295-7971-4c81-82ce-846ed54e4855",
        "cursor": {
          "ref": "aa927339-4665-4489-9d57-e42c8563737e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "14687b00-85a4-49d8-b329-4133cad4e68c"
        },
        "item": {
          "id": "ecafe295-7971-4c81-82ce-846ed54e4855",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "be0ea89f-3753-4bb5-9754-5a5efe94595b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8737eb18-be70-42d2-ba3e-8c74f4da513d",
        "cursor": {
          "ref": "5554b0d1-9732-4988-9968-e2e1ffdbcc19",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "93782360-6ebf-433b-af1c-6e49e91707d9"
        },
        "item": {
          "id": "8737eb18-be70-42d2-ba3e-8c74f4da513d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "172cb2e1-db1c-4cee-a654-9d363e49c58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37687434-ef13-497b-bf11-cb8555b22d1a",
        "cursor": {
          "ref": "32961c49-a7b3-40bb-a195-7cc7c0530661",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3c24bbe9-77f5-42ee-941e-b4eb25a0a862"
        },
        "item": {
          "id": "37687434-ef13-497b-bf11-cb8555b22d1a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c89e0bfb-86e9-4506-a043-a1a437be9a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8c9c9c-4dd2-4d3f-8ef7-a17194631497",
        "cursor": {
          "ref": "2d016494-3a8e-461a-a9ff-bad5e03996a6",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "044d068b-55fb-4d38-aad3-1d4618ba102f"
        },
        "item": {
          "id": "bb8c9c9c-4dd2-4d3f-8ef7-a17194631497",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "45e82715-d60f-40de-99c0-c929f238c486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e3c291-3717-4a40-b4c5-06614fb122cc",
        "cursor": {
          "ref": "cad1d9f5-c9dc-4f8f-99d7-06bbd48db33f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "21b6540d-ff00-4ff8-91d3-9a02b80f4301"
        },
        "item": {
          "id": "05e3c291-3717-4a40-b4c5-06614fb122cc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8c343673-7061-4388-9a88-2f720b6f2a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080c220b-8bda-41a6-b657-69e12722db50",
        "cursor": {
          "ref": "38e2f152-d89a-4120-ae64-7cb6d1f5a069",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "39808e8b-4052-4ddf-a6a5-c4b295217c23"
        },
        "item": {
          "id": "080c220b-8bda-41a6-b657-69e12722db50",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "943db967-ebf3-4f86-bded-15f04db22e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f143190-70e5-46b3-8270-c6596edb9c0f",
        "cursor": {
          "ref": "38f2767b-e806-4845-ba55-c0af13c7048e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "75f427b3-ccc7-4a4a-a5b8-578f86bd6ef1"
        },
        "item": {
          "id": "3f143190-70e5-46b3-8270-c6596edb9c0f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b91af8ac-591a-4aef-a4d5-b32a75faaae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31681d61-bd84-4be9-ac80-e0b685ac91ad",
        "cursor": {
          "ref": "54035074-ded3-4c51-8360-5bdb1945dfc9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9cc79c20-6907-4e0c-9ed8-f1942d413ab6"
        },
        "item": {
          "id": "31681d61-bd84-4be9-ac80-e0b685ac91ad",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ae730298-69e4-4769-bce0-46e7a9389a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525031a9-07ab-4144-861b-6e04c1798d48",
        "cursor": {
          "ref": "67a0a9b9-eda8-4412-96ff-83b4d80cdcc4",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fbd6593c-2c91-4350-ab08-11cf58a1925d"
        },
        "item": {
          "id": "525031a9-07ab-4144-861b-6e04c1798d48",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e6904577-1e52-4ea5-a65f-1d78934c33bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5630fde3-e3f4-49bf-8628-94d3d474ecd2",
        "cursor": {
          "ref": "8c4c8f62-a9b4-4907-800f-551131c0764f",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "97589cd1-b972-43b7-af68-d7e37be96bb5"
        },
        "item": {
          "id": "5630fde3-e3f4-49bf-8628-94d3d474ecd2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3e02608d-bd72-4436-87bb-88d9e5649455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacf2085-31a0-472d-8153-6a2f93f173bf",
        "cursor": {
          "ref": "3553df15-5557-4452-9e57-7707057cbee1",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "53d479f5-6162-4f95-81ad-a9dd19767506"
        },
        "item": {
          "id": "bacf2085-31a0-472d-8153-6a2f93f173bf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ec1d9d87-184e-47dd-95ea-a5ba5f75ffd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad7e695-7704-4a95-a30e-5b01284a942d",
        "cursor": {
          "ref": "45c235cb-d107-40e2-b13f-76374463cb17",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4165d53e-e6a5-4a5f-8031-1f972f30eb55"
        },
        "item": {
          "id": "1ad7e695-7704-4a95-a30e-5b01284a942d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "711f5144-bd5b-429a-a5e8-b3ac56d1782c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37a0e2b-0347-446b-b0db-65edcae0ac49",
        "cursor": {
          "ref": "683ca573-53ed-43b7-9f7d-ac33e2da95ca",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8e3c8f1a-729c-4bd4-97b5-794836730f58"
        },
        "item": {
          "id": "d37a0e2b-0347-446b-b0db-65edcae0ac49",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "78d30697-e769-407d-9c13-3ca4849a99cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1c02e3-544f-4f50-bb7b-367c050bc775",
        "cursor": {
          "ref": "d78ccdcd-cd28-45fa-a281-77052c55bbfe",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c31fb423-3d1c-4b12-bd20-fa5f9971ac4b"
        },
        "item": {
          "id": "aa1c02e3-544f-4f50-bb7b-367c050bc775",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "981b8160-f314-4850-8ae9-4e4e28300b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610ed53e-c118-4144-b07f-b8bcdcd29e03",
        "cursor": {
          "ref": "8f211b89-7625-4d00-9e23-91fe499592ed",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6db247c9-63ec-4827-b00d-fd83dbecbd58"
        },
        "item": {
          "id": "610ed53e-c118-4144-b07f-b8bcdcd29e03",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "eecd2a7b-9b04-434d-b202-1ead786d3fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7205273e-7789-4bbf-8e6a-87cf53bd3121",
        "cursor": {
          "ref": "d28e4386-1732-4113-a26a-223e59ba3da0",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9f8e12c6-d2a0-4521-8554-127180d47a86"
        },
        "item": {
          "id": "7205273e-7789-4bbf-8e6a-87cf53bd3121",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f7e9c225-02cf-4cf5-a4f9-bf7062b0adf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1469c8c1-d144-47c3-a73e-312023435fcb",
        "cursor": {
          "ref": "9445df92-1ab7-49ac-af09-9741cf524638",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "eb06580b-4032-42db-bfe3-e79906eab5de"
        },
        "item": {
          "id": "1469c8c1-d144-47c3-a73e-312023435fcb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7a8a019e-42ed-40a9-8be6-4734f80587d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cb1314-733e-4167-9c19-43cd024b0375",
        "cursor": {
          "ref": "ba624eca-58ed-4e2e-b70c-1841db0a41aa",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d2690d5d-f5d3-4317-a9ac-9863da5390cf"
        },
        "item": {
          "id": "e6cb1314-733e-4167-9c19-43cd024b0375",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "95a73a0f-a5c9-42d3-b0d4-8c41b4a90b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e379ab96-9167-4631-b97e-0f2323da15a4",
        "cursor": {
          "ref": "7f96243d-9753-4540-b7b6-f5b620e677c2",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "755518b6-3536-43ce-8023-1d292df0b99a"
        },
        "item": {
          "id": "e379ab96-9167-4631-b97e-0f2323da15a4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "802657ae-0579-40db-9b94-ee47922eaec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86270649-d06f-4cae-a7e0-601b47bf3d38",
        "cursor": {
          "ref": "a0c1999c-b298-4771-a8c9-01b1398bda94",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1b7c9ca9-4444-4356-97bc-a79ba30b5f43"
        },
        "item": {
          "id": "86270649-d06f-4cae-a7e0-601b47bf3d38",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ac4342af-7541-4005-96d3-2c29c8f7a51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869c9a18-4b28-4bfd-be0c-ca6f6db06004",
        "cursor": {
          "ref": "d8a07bfc-e565-4bfd-9608-6d4b49d364af",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1f7a2cd3-39b0-4667-a9b5-62d0772f434f"
        },
        "item": {
          "id": "869c9a18-4b28-4bfd-be0c-ca6f6db06004",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4eeb6b82-4da5-4664-a72e-3564d1bc5c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8eeaaf-97bc-4b22-bff9-f28de7325347",
        "cursor": {
          "ref": "7da97843-f8e2-43de-9138-f12d9c6324b8",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "29d51e0d-4feb-4b0b-9e3b-23bef77b3593"
        },
        "item": {
          "id": "3d8eeaaf-97bc-4b22-bff9-f28de7325347",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a6f2d17f-a010-437f-8ed0-d71bd397c57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f798274-7242-4517-89ed-acab95203105",
        "cursor": {
          "ref": "678dda5a-6a65-474b-9b85-e262761e5b31",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "61744c69-7f5a-4ae0-9811-650e1db259e4"
        },
        "item": {
          "id": "3f798274-7242-4517-89ed-acab95203105",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "36a61ff0-e95c-4a77-8ff9-7eb35d9bdd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc8c6fd-e5cf-454c-8409-0d98dcd3e4f0",
        "cursor": {
          "ref": "8abffdf7-4445-44e3-a357-26770536d4d1",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "19a6e048-640d-44d0-b9cb-974f41379c76"
        },
        "item": {
          "id": "2cc8c6fd-e5cf-454c-8409-0d98dcd3e4f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "327cc0cd-be0c-4969-a23e-d04156cb1946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe2344f-d971-405f-8758-27e8cd8e07af",
        "cursor": {
          "ref": "09ad5e71-277f-4f0a-a4b8-76cc126b2f73",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a2a1aae3-3b07-4eef-b919-90d43e604cfe"
        },
        "item": {
          "id": "3fe2344f-d971-405f-8758-27e8cd8e07af",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cc245e84-ed2e-4252-99ee-90207c9a9506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a8c831-1c56-4acd-a699-80cd1619f584",
        "cursor": {
          "ref": "eeb6eeef-8fb0-456d-ad2d-a59356ba4427",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "34671a20-a48a-429d-83d5-8be1f0f29084"
        },
        "item": {
          "id": "11a8c831-1c56-4acd-a699-80cd1619f584",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e984c45a-dcd6-439a-b239-2706d6e9bee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa54fbc8-b392-4538-bdcb-7e8cb2558832",
        "cursor": {
          "ref": "f14fcc35-c8e5-43f1-a1cc-07b14b138c02",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b7155b00-169d-4035-8fb4-9d415dc54bc8"
        },
        "item": {
          "id": "aa54fbc8-b392-4538-bdcb-7e8cb2558832",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "28e2d4fc-d932-4f49-bff1-016291dd30a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cae1184-e52f-4788-a93c-b8885c62b04e",
        "cursor": {
          "ref": "c00f042c-bccc-456c-bf8f-f32f3ffc6b88",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a3509fc4-776e-4f8c-b254-296ba89be123"
        },
        "item": {
          "id": "5cae1184-e52f-4788-a93c-b8885c62b04e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b2994a50-0cf5-47d0-b252-0335fc6eded3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f873b5ad-d521-498e-88e0-4fb528fe6457",
        "cursor": {
          "ref": "26780969-985c-4d0b-801c-382ece733c78",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7662877f-9c9a-471a-b74a-ab2f9a1afde8"
        },
        "item": {
          "id": "f873b5ad-d521-498e-88e0-4fb528fe6457",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "60e120cb-12b6-4efb-8431-bd0f148cb8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4aed59-8c94-4a34-b1b5-babbe2f8cf8d",
        "cursor": {
          "ref": "9ef740ef-688f-42e1-ba5f-c130d39f5d5d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6130755c-b797-403c-999f-8fe4d586ca7a"
        },
        "item": {
          "id": "1f4aed59-8c94-4a34-b1b5-babbe2f8cf8d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "51bb55b7-c9db-411c-9f08-719d215d9120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3141a18-a91f-4b89-907e-a7c57bb1c9b5",
        "cursor": {
          "ref": "a152dabc-68d3-40ee-a43e-e0d4b184fe3b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "94ad1225-1405-46a5-8595-1238fd8b6eee"
        },
        "item": {
          "id": "f3141a18-a91f-4b89-907e-a7c57bb1c9b5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "79361316-0654-4359-8f86-3be05a22d193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18212b85-1d07-4920-b7f8-3c956aad29fd",
        "cursor": {
          "ref": "03574eb7-a69e-4587-aac8-7dd18681ae20",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2e866b75-a8f7-4e06-b52b-02acb319a67c"
        },
        "item": {
          "id": "18212b85-1d07-4920-b7f8-3c956aad29fd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5cfa4a21-63e1-4987-8c57-cbdb9183797a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6650e332-c5c6-4768-bf2c-976ebf345ebd",
        "cursor": {
          "ref": "d1a57652-efc5-40c6-9201-3afa677ad277",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1db87b3e-6a65-4ab7-836a-1085912827a3"
        },
        "item": {
          "id": "6650e332-c5c6-4768-bf2c-976ebf345ebd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "78ee9f2a-04f2-42d4-89ee-9cb399eb669e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384a15f3-0007-486e-9ae7-0df690756047",
        "cursor": {
          "ref": "8712bf61-9058-4b19-b6fc-d938b7a48f0c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "69a72af7-ce1c-4bc2-810d-652bc171dc00"
        },
        "item": {
          "id": "384a15f3-0007-486e-9ae7-0df690756047",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5886720b-f18a-4af6-af3a-29e3ee8021d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29d1d2d-9763-4467-820a-6d17c23e9056",
        "cursor": {
          "ref": "0040ed9d-4c35-4917-827b-3e1f053fbc75",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "24b8ff96-d0cd-4509-be23-ae9b7aa9f7fe"
        },
        "item": {
          "id": "a29d1d2d-9763-4467-820a-6d17c23e9056",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "74543b3a-e941-4d1d-a87e-7989991c7fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01209e2-cee9-4542-a094-5a1c02c53593",
        "cursor": {
          "ref": "d20100ee-cbcc-4536-bbf6-a27aab39d423",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "37b91efb-06f3-4b29-a2ea-7ecf9da3337f"
        },
        "item": {
          "id": "a01209e2-cee9-4542-a094-5a1c02c53593",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "891b1034-4a3f-47ef-b922-a403f3af6bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b181950-f5b4-434d-b459-a482779c5a7c",
        "cursor": {
          "ref": "3561c73a-51e4-4ab6-ae13-ba6f43af86a5",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dd7cd5c5-dd08-458e-99d4-2576123e41ab"
        },
        "item": {
          "id": "1b181950-f5b4-434d-b459-a482779c5a7c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "620c9557-883a-4971-b4d3-e370d03520ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b1ba80-fd69-47d2-bdc8-40188482c3a6",
        "cursor": {
          "ref": "41c4b43d-ae0f-4846-a3e6-7e8f2a74c6f0",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ca0970d0-4fa8-4990-b598-fb932e3bd341"
        },
        "item": {
          "id": "14b1ba80-fd69-47d2-bdc8-40188482c3a6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9ea513ae-19b0-4da4-8320-fe540e515916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6430fa65-d060-4b47-83ea-f8e56cf9eaa7",
        "cursor": {
          "ref": "6d6800ab-f11d-4d02-926c-96e0d7baf8c1",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "af55cbe5-985e-4162-88e6-82351b002de8"
        },
        "item": {
          "id": "6430fa65-d060-4b47-83ea-f8e56cf9eaa7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6d7bffa5-eafe-400a-9452-1a8b36260b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3404348-8749-4e9e-b766-b874ac1dfeb8",
        "cursor": {
          "ref": "8a4296ee-1c0e-4919-b5d0-2b570fe67f94",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9e43539a-dd95-4f90-b9bc-f8c803bc5e59"
        },
        "item": {
          "id": "e3404348-8749-4e9e-b766-b874ac1dfeb8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2647956a-f707-4b85-90b4-270528d3fda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e7f7a9-0c54-43e3-be1d-f13e5b417f81",
        "cursor": {
          "ref": "9221e52f-5cc5-4fa6-855d-cff8acef8668",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5905575d-4226-407c-b9e4-7db821fedfe5"
        },
        "item": {
          "id": "a6e7f7a9-0c54-43e3-be1d-f13e5b417f81",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1ad64dad-9f92-47bb-b435-f0f9479e7d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af04ce5-87e0-4f1c-8b5d-be8a3a384ce3",
        "cursor": {
          "ref": "71e39434-e5ac-4e0e-8c51-77191d20428a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c29b60b4-c6c5-4b74-a057-3f694a229f2a"
        },
        "item": {
          "id": "9af04ce5-87e0-4f1c-8b5d-be8a3a384ce3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2e9f7e2e-9d95-48f8-bcd9-a6a2892b61aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f74b0df-27ce-4f44-a09b-6a8f0ef0dd2c",
        "cursor": {
          "ref": "6cf248ab-1eff-4815-bb35-122fa0ccb1ba",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "77b64539-5d70-45c5-916a-518b2bc805fd"
        },
        "item": {
          "id": "5f74b0df-27ce-4f44-a09b-6a8f0ef0dd2c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "db3e7eb6-caa2-49af-b62e-ea466360aa5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545bf3e3-bcb1-41b0-be33-b2b2f3993b1e",
        "cursor": {
          "ref": "6fdf9320-42e8-4c47-8cbc-7e1c69e4062c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d1041a18-1844-44fb-b899-c6c01b1d8530"
        },
        "item": {
          "id": "545bf3e3-bcb1-41b0-be33-b2b2f3993b1e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0e8d043d-af12-4a31-8b30-965bca161cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87abe8d-083d-4fb0-8c05-76eba098bdc4",
        "cursor": {
          "ref": "cc9e710a-6d1c-449b-bc6a-687aa607bba2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a5bc9198-bb12-45a3-b6d1-38893378e50c"
        },
        "item": {
          "id": "a87abe8d-083d-4fb0-8c05-76eba098bdc4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c52cab3e-abfb-4263-b4d7-31cb01f11c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21368342-a7ac-4294-bf33-8048a8579665",
        "cursor": {
          "ref": "693f2ac6-eee9-418b-9966-62deb3935a85",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "710354e0-217b-4ec1-8149-9a7b8ab3cc99"
        },
        "item": {
          "id": "21368342-a7ac-4294-bf33-8048a8579665",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "23180cb5-ef3b-4e46-a71a-6a9fefa9e685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0b2365-e6e7-4063-84d6-046ea3541acc",
        "cursor": {
          "ref": "d2a80484-668c-4114-bce8-df47584ff342",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "18b770e7-e5b4-4b21-9eee-f6bf934be068"
        },
        "item": {
          "id": "cf0b2365-e6e7-4063-84d6-046ea3541acc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9737f8a8-82c6-4d80-b9ed-368eaaf3188e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1299d8-37f0-462e-8bb2-37739bd83f8d",
        "cursor": {
          "ref": "2c2ae4e4-1562-4b0c-b118-433b79306341",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7f9a441b-eaa1-49c5-a067-006bc77569ae"
        },
        "item": {
          "id": "7e1299d8-37f0-462e-8bb2-37739bd83f8d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1623d63c-9b7a-48f6-9dab-2a30f6e5df68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a848e71e-c243-4c69-a857-591637ae7c9d",
        "cursor": {
          "ref": "71d64d16-a524-4902-b5ff-b1ad5920a3d3",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d27f3df8-1a80-449a-8985-a6c5c67df3fa"
        },
        "item": {
          "id": "a848e71e-c243-4c69-a857-591637ae7c9d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "686c3b0a-7599-48b8-be77-4891a9f87728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1727235-ba88-4ddf-aa62-b0340cf73158",
        "cursor": {
          "ref": "debf9b2b-22ae-4c53-9acb-2f761f977f14",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "80c81151-f959-4eaa-8a24-5669a8b2ab2a"
        },
        "item": {
          "id": "b1727235-ba88-4ddf-aa62-b0340cf73158",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cc08a2d3-1602-4a02-9641-11b05a3f27b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f8f63c-c847-4662-8449-808731e5aa5c",
        "cursor": {
          "ref": "11a41119-fc01-4f3a-a25c-fb402e7b8ede",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0e77986c-1a6a-4481-a0f7-b7d40386d401"
        },
        "item": {
          "id": "50f8f63c-c847-4662-8449-808731e5aa5c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "394a7910-fedc-4f5b-9e04-20b626348914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce0fac0-03ee-4d89-84ea-6da9d894b601",
        "cursor": {
          "ref": "4f7be051-0332-4d46-ab22-923b09d802c5",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "98a95d42-2f41-4fe9-8f46-f9ad51d90109"
        },
        "item": {
          "id": "9ce0fac0-03ee-4d89-84ea-6da9d894b601",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7458d7d8-68b0-4fba-a51d-a2f57f42ea04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b791b9e-70c8-4a7a-ad92-f4885e004aa8",
        "cursor": {
          "ref": "b886c11c-c21e-4a98-8672-2251fbf7a15b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "036d037d-d9ef-43a1-955d-23379d5653f8"
        },
        "item": {
          "id": "4b791b9e-70c8-4a7a-ad92-f4885e004aa8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2c6095c0-c617-4c9b-8b33-a9f4c619db05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6f88f8-bdbd-48cc-a4d7-d70480bd4c58",
        "cursor": {
          "ref": "e99b3a23-7097-44e9-b63f-35129cb4f166",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "35d778e9-dc6c-4af3-868f-271ff3e44069"
        },
        "item": {
          "id": "fe6f88f8-bdbd-48cc-a4d7-d70480bd4c58",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fd54a01a-a8d4-4a54-b9ca-0c67e89e72ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cf6ad3-ea07-40d2-bbaa-677269733f0e",
        "cursor": {
          "ref": "efe54db6-e504-4b87-a66d-ff7442863dc2",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "55d0559d-b5b8-4fb0-b5ed-c857239964f2"
        },
        "item": {
          "id": "e5cf6ad3-ea07-40d2-bbaa-677269733f0e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0d579532-23d3-4358-87dc-b9d3d3bff441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb4ac97-7396-4cdb-9e21-93e158ac9221",
        "cursor": {
          "ref": "2322478e-ff6c-4f27-8316-926e5ebe60d7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a0c26293-0c78-4b6e-a64c-64dc457cd032"
        },
        "item": {
          "id": "cdb4ac97-7396-4cdb-9e21-93e158ac9221",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1dd37f9e-edff-4638-8c0d-d44260fe22a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7976d917-61fd-4eb1-8b8b-5dcdfeaa1895",
        "cursor": {
          "ref": "8f97923a-26a1-48bf-a466-933e46978500",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cf2f6085-9985-41f9-9a83-0d799b4126a6"
        },
        "item": {
          "id": "7976d917-61fd-4eb1-8b8b-5dcdfeaa1895",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2931334d-5681-4b7e-a9b5-6d6fb4fa8409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63499c2-68c2-455c-85fe-5baaa120a247",
        "cursor": {
          "ref": "28c0f343-2e46-4f6d-83b5-8a68870a080c",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "12f5b931-a744-468b-823e-9c48ebda6529"
        },
        "item": {
          "id": "e63499c2-68c2-455c-85fe-5baaa120a247",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4743f93b-708e-4fa3-bd07-09c68ebade75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b217418d-5b28-4fa0-9248-c7d7c6b421c5",
        "cursor": {
          "ref": "c8d511d2-e747-442b-8383-cb6bf9fc4776",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a910e32f-b7d8-4782-9344-e3e60c847c5c"
        },
        "item": {
          "id": "b217418d-5b28-4fa0-9248-c7d7c6b421c5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "20250fce-a2d4-4401-af3e-3637a0a798d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8e2c9e69-7de6-41ec-8b65-408554a5c5ff",
        "cursor": {
          "ref": "73f98ca7-82f9-4cbf-a892-189d1ce006d6",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "df3f13e6-5a49-4d80-973a-9f237c0e434d"
        },
        "item": {
          "id": "8e2c9e69-7de6-41ec-8b65-408554a5c5ff",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "98d621e6-ad88-466c-8448-f3beeaf8d62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "442df722-562c-4674-9362-73c119459c72",
        "cursor": {
          "ref": "f3e5906e-3598-49a1-a558-99fb3b25145f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b04c1d6e-582a-4d80-8c17-8199f3da1606"
        },
        "item": {
          "id": "442df722-562c-4674-9362-73c119459c72",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e963fe1e-4e94-46fd-90d7-2e9ccc1270e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c23d5718-6f55-4c40-93e8-f4f765ea352d",
        "cursor": {
          "ref": "f42a2432-2b46-4653-82f2-8b3fdbc56612",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "423dab32-053f-435d-8f4f-a7dd912307bb"
        },
        "item": {
          "id": "c23d5718-6f55-4c40-93e8-f4f765ea352d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5f375a91-2916-4dbb-ad6e-b684aae40f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "9610122c-11b6-4d4f-a0f6-73d2cf353a94",
        "cursor": {
          "ref": "8b32ce7a-7776-43fb-a3fc-de39b8937674",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f84c43ea-3ada-43ca-87a3-3b80bf34d113"
        },
        "item": {
          "id": "9610122c-11b6-4d4f-a0f6-73d2cf353a94",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "548632a1-a4f2-4c1d-b5aa-ddc6faa1c9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6d915410-16ce-4555-97fb-7b15022d280e",
        "cursor": {
          "ref": "76ba517c-07bc-4217-8d97-aa1c1b4a36fa",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1b6832ff-62a0-4ccb-a38e-3f6a26573b34"
        },
        "item": {
          "id": "6d915410-16ce-4555-97fb-7b15022d280e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "55ba0695-7dfa-4b39-aa20-92e552520022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "01b01566-3cf2-4a10-9109-702cc81b9b4b",
        "cursor": {
          "ref": "82ba5529-b1c1-4c45-9e28-a6e79b6441b4",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e964925f-b5b1-44f8-94ca-2522232bccef"
        },
        "item": {
          "id": "01b01566-3cf2-4a10-9109-702cc81b9b4b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f7ac6e35-5444-4054-a0dc-900135250577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199d43a7-d6ab-4c4d-9000-17382be5e79b",
        "cursor": {
          "ref": "41b084b5-3a4b-4f7f-af5e-b466cd573657",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3cc50179-751b-4cfd-a266-a69314511980"
        },
        "item": {
          "id": "199d43a7-d6ab-4c4d-9000-17382be5e79b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d4142248-94db-4135-ac97-8e961b855728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bf3057-8ce1-4502-948e-7a610602a9bb",
        "cursor": {
          "ref": "1a9b3078-1e10-4d61-b3cf-df773584556a",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c35bae53-43ba-43f3-a159-574ff8c1a752"
        },
        "item": {
          "id": "46bf3057-8ce1-4502-948e-7a610602a9bb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4290df28-c629-4a45-b558-7d2d9ad4a964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b85126-f802-49c5-b0c5-aea145fc7b9e",
        "cursor": {
          "ref": "077b96fe-d2c5-457e-b90e-014a946a172e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "153de464-15a3-48b2-ac5a-988874fb7e70"
        },
        "item": {
          "id": "b5b85126-f802-49c5-b0c5-aea145fc7b9e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "57e3c5fd-776b-4831-876c-1358e4fe92f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7e2a64-c1da-42bd-92b3-c5db1c4ac1f7",
        "cursor": {
          "ref": "47a999ac-34bf-4b0f-84a8-5682dd982bf8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "671e4eeb-aecb-49d0-ba52-8a07928b4c7b"
        },
        "item": {
          "id": "4d7e2a64-c1da-42bd-92b3-c5db1c4ac1f7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c805cdb8-751b-492e-abf1-f2a700b50a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb288f03-d839-4a2c-be23-e1dd5b15964c",
        "cursor": {
          "ref": "aa324c99-07af-4704-b7cd-ab591be68feb",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c0b91c5a-33e8-419e-8d84-8b2534969ca4"
        },
        "item": {
          "id": "cb288f03-d839-4a2c-be23-e1dd5b15964c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0ff09d17-858d-445c-a3ca-7afe10f94870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c80dcd-13f3-41b8-8be6-39efc7824856",
        "cursor": {
          "ref": "5a495e54-7c62-4bf1-9b3e-85fa4c3b2e17",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "faba79ba-7d5e-4564-bdea-482541c21dc2"
        },
        "item": {
          "id": "a5c80dcd-13f3-41b8-8be6-39efc7824856",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "026b8c27-d5b2-445f-8ca1-b60bf370a35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37eda6b9-b188-43eb-be30-c65c663f057d",
        "cursor": {
          "ref": "0f04ef17-f24d-40dd-b86f-62c3b0bc49d5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f8a86be5-28ec-4be5-ac60-5247cffd59e2"
        },
        "item": {
          "id": "37eda6b9-b188-43eb-be30-c65c663f057d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1dfe4da7-5b80-4793-b566-45fb23d6fd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab583a92-b31b-4f46-bc46-e666d1fc876c",
        "cursor": {
          "ref": "549926ac-b3bf-4150-b665-019a6f7b440f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f95c11ff-7782-4d1c-afdd-601cc2e13db1"
        },
        "item": {
          "id": "ab583a92-b31b-4f46-bc46-e666d1fc876c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a8fea530-7622-4818-b194-090664eae5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d682288-3e78-4e17-90e8-63590df1e746",
        "cursor": {
          "ref": "ba009c44-d4c0-4473-bf35-92a82f425067",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9f3ea08d-141a-4cc0-8f9e-a0b2ca5b4033"
        },
        "item": {
          "id": "2d682288-3e78-4e17-90e8-63590df1e746",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "66767d58-02a2-4492-9319-3a600d4442b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f202e93-9584-4668-afa6-73d92db4083a",
        "cursor": {
          "ref": "256cbd6f-3d62-44e8-b2ff-5e97db76deff",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a0981f06-6a42-424a-a372-232043982afc"
        },
        "item": {
          "id": "7f202e93-9584-4668-afa6-73d92db4083a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ff014906-dd9e-47fa-b497-091e66b1722b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84591c4b-099e-40d3-bcc5-a072572c28bf",
        "cursor": {
          "ref": "2c6f539d-990e-4ff9-a9dd-485b7c14441e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "42a4a5da-632a-4ceb-9097-d8f4a3c88b8b"
        },
        "item": {
          "id": "84591c4b-099e-40d3-bcc5-a072572c28bf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e721f25a-c447-4c59-9181-47e5c1a80cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07301d4f-8bf4-4558-9cbc-dcbd75ee847e",
        "cursor": {
          "ref": "968b5da3-cb3e-44ae-81ca-f84acc74e177",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "eef52039-e706-4a3f-a884-4b870fd09716"
        },
        "item": {
          "id": "07301d4f-8bf4-4558-9cbc-dcbd75ee847e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "98dc6f79-10ed-4c09-a439-c7543757be6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd61073-4f2d-46cb-a9e9-431087f8aab0",
        "cursor": {
          "ref": "355754c7-11d0-4972-8a83-74291b2c2233",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c2fc7660-7719-43b7-8976-4491e0aa323b"
        },
        "item": {
          "id": "5bd61073-4f2d-46cb-a9e9-431087f8aab0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6b24bef2-9668-4d1a-bba6-ff93d5687760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ecc464-a21a-4a6a-83d9-8f62d3943405",
        "cursor": {
          "ref": "539116d1-fe44-4b8e-a06b-c2d5f67d2493",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5aa6ba8e-e43c-4c3c-95f2-41d237676736"
        },
        "item": {
          "id": "a9ecc464-a21a-4a6a-83d9-8f62d3943405",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "96a80ef0-77de-456c-99ca-409040e5a49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17c5def-f635-4ad3-a124-fc82fccab848",
        "cursor": {
          "ref": "1521954e-7119-40f7-a165-00a1d520db13",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a4068888-8e24-4a6f-b738-a9bd1d965b50"
        },
        "item": {
          "id": "a17c5def-f635-4ad3-a124-fc82fccab848",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "925d42eb-2102-400e-b91a-fbbeee6479c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9788f00e-b90f-4383-9ed3-1cf98a59f249",
        "cursor": {
          "ref": "56ac6f92-ba4f-4f18-9583-01bd4ac33636",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e84db8c7-f76b-4d52-b952-66caa724d0b4"
        },
        "item": {
          "id": "9788f00e-b90f-4383-9ed3-1cf98a59f249",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "347c6ac3-3a13-4d59-b35d-71bddad13128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f3dedf-6f0c-4f41-8690-2e4bce6eb402",
        "cursor": {
          "ref": "e1ae8bf8-cfd0-41be-9eb2-aa304d4e8373",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cde4b68c-60b8-4fd5-a8ef-3e0d636ac366"
        },
        "item": {
          "id": "e7f3dedf-6f0c-4f41-8690-2e4bce6eb402",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2a12b34d-a76c-4dbb-969b-6fe44609d21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba287d6f-2782-44aa-94ee-aba975b419eb",
        "cursor": {
          "ref": "fa263f89-5968-4a51-a600-2cbd2a595c6d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c31e321b-4638-4273-9c80-8f4c77537cbb"
        },
        "item": {
          "id": "ba287d6f-2782-44aa-94ee-aba975b419eb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "82fbd2cf-c10d-4a13-81e3-ed69b4aab15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54571c4-452f-4a96-a444-8b590f89093c",
        "cursor": {
          "ref": "3f173c5e-fb01-4734-9a11-aa96b6b7d91f",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f5ae6fdd-b529-450e-83bd-17d38f54769f"
        },
        "item": {
          "id": "a54571c4-452f-4a96-a444-8b590f89093c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0e80c187-f103-4a40-85d6-023825665843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33552c18-cd46-47f8-ad4d-31c24d1e6e3a",
        "cursor": {
          "ref": "e55e893a-9e23-4849-a498-6b46ec1eee27",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5d0940fc-753a-4f88-bdd9-24cfa1b20a7c"
        },
        "item": {
          "id": "33552c18-cd46-47f8-ad4d-31c24d1e6e3a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "58b32f95-3db8-4c65-af57-1732e228c5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4731e0c9-bde5-4c18-8d63-4376bcac6352",
        "cursor": {
          "ref": "200e0670-5f5f-41e4-9473-17040343e241",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8ef25de5-098d-4b99-a090-84d6d56fb449"
        },
        "item": {
          "id": "4731e0c9-bde5-4c18-8d63-4376bcac6352",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "db65f43f-c75e-429e-b928-46ebd95b4830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8feba80e-4d5b-4f07-a873-5e2ff31f8c9d",
        "cursor": {
          "ref": "cf056181-2b6d-43a2-9474-4b5287f16d81",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "68ca2c0f-97b2-4afe-b853-3826ba631cd4"
        },
        "item": {
          "id": "8feba80e-4d5b-4f07-a873-5e2ff31f8c9d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "217f8d5e-9622-43c8-8e43-f29319fbe814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6a9ace-fc33-4d1c-b97f-36eb549c9f47",
        "cursor": {
          "ref": "2b22c7f9-35ba-41bc-b270-f9b3149c33bf",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "96131556-70e5-4471-88aa-f6c611da26bf"
        },
        "item": {
          "id": "2c6a9ace-fc33-4d1c-b97f-36eb549c9f47",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "189b0924-6a1d-4f1c-8a80-4692da18f4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dff87a-65ba-434d-a606-139a36729a1e",
        "cursor": {
          "ref": "94e630fd-d2cd-4d71-877c-09ad0f44bfdc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2001b637-f45a-4291-95c4-aaa2e344388a"
        },
        "item": {
          "id": "40dff87a-65ba-434d-a606-139a36729a1e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4815ee67-4b97-4fa1-b686-62c89ed3e799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8497a1-9db0-4888-a9bb-7e94779bc4f2",
        "cursor": {
          "ref": "88a7386e-24bd-47e4-843c-81ee71368304",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f4a808f0-eb83-45cc-b876-5f0c31780da1"
        },
        "item": {
          "id": "6b8497a1-9db0-4888-a9bb-7e94779bc4f2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "88d9099b-65d7-450d-b979-2e2af67de813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b231c60-93a0-4992-b6cb-46a444eb6ae4",
        "cursor": {
          "ref": "5873253f-7d32-4e38-bac8-5b5089e6fb45",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "672d74e9-0412-436b-a286-ec23433bcba4"
        },
        "item": {
          "id": "4b231c60-93a0-4992-b6cb-46a444eb6ae4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "99ca2b69-2115-4cae-a59e-4aa5f4a4de9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf16e68-8c11-4a7a-9b2f-79322fa46c15",
        "cursor": {
          "ref": "817d0469-9549-4234-b4e6-1ccd6392c3f4",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d9be35bc-6ab0-4677-bf50-bee859cb75d3"
        },
        "item": {
          "id": "bcf16e68-8c11-4a7a-9b2f-79322fa46c15",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9b3d0e0e-3517-4db8-9877-2a03f77f92fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6aebeb-bb53-4342-b5fc-ff7c2428f7d0",
        "cursor": {
          "ref": "9cd4975a-7654-49bd-8f41-6cbdd9ca3aac",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "05fb83dd-32bd-4e6a-8de7-e81ddedf3231"
        },
        "item": {
          "id": "9f6aebeb-bb53-4342-b5fc-ff7c2428f7d0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f0dbf550-6f0a-4c6f-8508-de2f8de3657b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7405f575-1d60-4185-9f1d-120782eab436",
        "cursor": {
          "ref": "fa4fe9ae-176f-4552-bc0b-72559c646953",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a71e631a-b8c6-4e36-bd24-de11814db84f"
        },
        "item": {
          "id": "7405f575-1d60-4185-9f1d-120782eab436",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "68d998d4-335f-4fca-8f99-6b2c4fb24a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ad5287-d1c9-4da0-927a-d909f123c346",
        "cursor": {
          "ref": "75d2cb60-7d86-4bc8-84c2-2cb9455cb9f3",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0ec6c3ce-66c9-457a-af0d-eb0e4ece3a96"
        },
        "item": {
          "id": "88ad5287-d1c9-4da0-927a-d909f123c346",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9e1b2e25-053e-45e6-b2d4-2709c843ca25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cec173-adb7-4e65-b0d5-b69c1724c18a",
        "cursor": {
          "ref": "e3910299-58b3-418d-a3fb-62425e359933",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2a1656df-b2e6-4244-b91b-e3cbf4bebdcf"
        },
        "item": {
          "id": "c8cec173-adb7-4e65-b0d5-b69c1724c18a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fae6e7e1-ea82-4f9d-a220-ee9b818e87ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53325d6d-27e5-4b40-90e3-4ca42df48c6a",
        "cursor": {
          "ref": "9ee88b33-ae52-45da-8b70-cbe3d7c1d9fa",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "12107f7f-03b0-41ec-a8e9-c6cac6ef2a3a"
        },
        "item": {
          "id": "53325d6d-27e5-4b40-90e3-4ca42df48c6a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a30dbb22-04e1-48d2-97af-62a8818f5b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9c0231-f73f-4f3c-b1f1-f5dd0f6d37d8",
        "cursor": {
          "ref": "d5d34194-b69a-4a67-bae7-2f034dd4af00",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "212baada-b47a-41f6-814f-b3a7e092cb6b"
        },
        "item": {
          "id": "ea9c0231-f73f-4f3c-b1f1-f5dd0f6d37d8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c0ef830c-50c8-47b2-a1c9-7f9749a9a300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a815b7c6-ff9a-400f-989e-ac7f924a1180",
        "cursor": {
          "ref": "e8973dcb-20e7-4474-bb3a-4fba1baa050c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e8a12db0-30b7-4a7c-aef2-52f1b8f74e72"
        },
        "item": {
          "id": "a815b7c6-ff9a-400f-989e-ac7f924a1180",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "782dd40a-3572-446e-9076-7c9daf29bf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41517c57-df3f-425d-a17c-68f3cb988fb5",
        "cursor": {
          "ref": "a0a0b781-138e-4284-9cf5-13d046da4dc3",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0fb99fb6-0fa2-4982-bc78-2bf48b34642e"
        },
        "item": {
          "id": "41517c57-df3f-425d-a17c-68f3cb988fb5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "91b3ca9a-1a38-419d-b985-60ea2d5733b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3044cb-229e-4bd7-a049-2ee7b38c6ca9",
        "cursor": {
          "ref": "8de80523-c0da-4a03-8cc3-0ec9a13fed2d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "65d5a1cf-3332-46d6-85e7-122bac426648"
        },
        "item": {
          "id": "ae3044cb-229e-4bd7-a049-2ee7b38c6ca9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5780c4c4-0600-4791-a9a0-30020c88732c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20822982-307c-4081-9d81-ea7305192a3c",
        "cursor": {
          "ref": "4c67f2c6-1221-4e5c-9681-46c686bf5f27",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8aae24bd-60db-4e39-b3df-06c2811928fa"
        },
        "item": {
          "id": "20822982-307c-4081-9d81-ea7305192a3c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f9e48039-b65f-4c16-819b-fece79815e55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda90cbb-ed9c-437e-b026-dcd7bd35ebf1",
        "cursor": {
          "ref": "00c53a1a-9f66-4a3f-bfa0-71c4a0b4011b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fbcc20c2-83b9-410d-9ec6-eb9c309be3ac"
        },
        "item": {
          "id": "cda90cbb-ed9c-437e-b026-dcd7bd35ebf1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9f2634cd-5253-46fa-af32-e8bb0e9a3aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794842d8-e079-48bb-8a5c-27888667a9fc",
        "cursor": {
          "ref": "03553c87-d248-4262-90d3-fb31e91939eb",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2e9a16e2-ccad-4c6b-9385-d38a8da4d7a6"
        },
        "item": {
          "id": "794842d8-e079-48bb-8a5c-27888667a9fc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5b227dc9-867a-4517-bb82-53a03d718ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b7bdfa-2ae9-497a-9e4b-2723889f646b",
        "cursor": {
          "ref": "f0f782a7-193a-4b79-8d9f-7eb4061afb86",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "41f64c19-1362-48e9-b0d5-9fb2edad1029"
        },
        "item": {
          "id": "41b7bdfa-2ae9-497a-9e4b-2723889f646b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "86123198-1537-4d3f-88a4-ae554ccf7b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a5e14e-f911-4453-8144-d687a14e8e59",
        "cursor": {
          "ref": "dec6c7b2-0b25-4357-b1b0-b799688ae915",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e1ded67b-7779-42ca-9ec5-7d153bdf22e5"
        },
        "item": {
          "id": "e1a5e14e-f911-4453-8144-d687a14e8e59",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4ad3ff83-d1bf-4302-8aa3-43f161f94112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e648e1ad-9da4-408e-83d2-ec8bd4ddb3de",
        "cursor": {
          "ref": "af870a59-f744-4f7a-9b36-87b879041062",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c9708660-a0f3-426b-bf4a-1488b2764b17"
        },
        "item": {
          "id": "e648e1ad-9da4-408e-83d2-ec8bd4ddb3de",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0a12abad-5587-4133-af35-f8dd0ab83c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190a8068-acab-46c3-b691-76256501785a",
        "cursor": {
          "ref": "09efcc09-019a-4db0-a022-987f6ef6e6b3",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "649b59b1-ba2d-4356-945f-e639978c7b09"
        },
        "item": {
          "id": "190a8068-acab-46c3-b691-76256501785a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "536184f4-505a-4485-96e8-a5d6efcdf591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8590fded-45b6-4b8d-a281-26a0034bcbcb",
        "cursor": {
          "ref": "b9abc37c-5282-4232-adfe-f8b4b80e0a52",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "72616c3c-6e33-4268-b984-285e4f5b4441"
        },
        "item": {
          "id": "8590fded-45b6-4b8d-a281-26a0034bcbcb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ac003245-ab9b-4c4d-b620-ea18abaa44dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdd9ef1-f6f3-417a-81c4-8bdc8bfce8e1",
        "cursor": {
          "ref": "c5f5d5be-4eb7-46ff-a5ee-5aec0c7c7d5f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ddcaa1cb-a5b9-4826-bc49-18b091311dff"
        },
        "item": {
          "id": "2fdd9ef1-f6f3-417a-81c4-8bdc8bfce8e1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c3b0b89d-2850-4b5a-a4bd-8085ea342bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa56375-941e-45ca-a0ab-caf1be8c9e2e",
        "cursor": {
          "ref": "86c24982-255c-44c5-9624-364f7feef209",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2fe6a313-babd-407a-94f2-efc8a107c4c3"
        },
        "item": {
          "id": "8fa56375-941e-45ca-a0ab-caf1be8c9e2e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "253e6670-8a8b-4823-89a9-a25b6b5286d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5600435d-db56-4c0d-bc9d-c6be34cb2dc4",
        "cursor": {
          "ref": "311280c6-fedf-420c-a618-8eb6d963e541",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c131577c-cb16-4125-8c3d-e89c49f0e81f"
        },
        "item": {
          "id": "5600435d-db56-4c0d-bc9d-c6be34cb2dc4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a8ad81ab-bffc-4ade-ac94-4fb2ac2509b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb7a3cf-4e19-40b1-8e61-944a78952616",
        "cursor": {
          "ref": "4df3633a-2848-419f-8069-3f5256dc1996",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "88be12d3-d395-45d7-b706-81b8cc538fe7"
        },
        "item": {
          "id": "7cb7a3cf-4e19-40b1-8e61-944a78952616",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "823f47d5-1eaf-4c74-b35c-86a9596bfb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92102d5c-312f-4e76-a977-e02eca84d128",
        "cursor": {
          "ref": "c7f56a84-4563-4dd7-a5b8-bfe5bf883d72",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0a8d1943-361e-4f2f-b496-d271aa14e90d"
        },
        "item": {
          "id": "92102d5c-312f-4e76-a977-e02eca84d128",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8e4bb9f0-b746-400f-b3d7-63a5ce82e31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a266a2-2b83-4fd9-9f1f-e5bbaf337532",
        "cursor": {
          "ref": "8c4842a2-5883-4f7f-b378-ad951dc043f5",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "afdb0057-8963-4144-a7b8-f88f45287110"
        },
        "item": {
          "id": "99a266a2-2b83-4fd9-9f1f-e5bbaf337532",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "372cc0c7-d2c1-4e63-8f76-3b90c94d6125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ef463f-9932-41f5-abbe-9795c7cf10d2",
        "cursor": {
          "ref": "3b89a7a7-9f8f-4adb-ab00-abadcd3b26ab",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "94a49da9-48b7-456a-a849-645cfa5374bc"
        },
        "item": {
          "id": "f4ef463f-9932-41f5-abbe-9795c7cf10d2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6a51c20d-4b79-4185-9c39-95788d415fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7830613-1037-43ba-a580-e0c6b9ae8e8f",
        "cursor": {
          "ref": "bbda9bc2-fd62-4cd6-9161-aaa12d4a2854",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "07f8ea1c-aca5-45a3-8fb7-f0bbb2e44fe9"
        },
        "item": {
          "id": "c7830613-1037-43ba-a580-e0c6b9ae8e8f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d6dbb23a-9826-45c3-9287-188fa51efe3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d28bff8-227a-4776-8773-e9d21ce803c5",
        "cursor": {
          "ref": "f2d3069a-2299-4d22-90f9-e38d0035d252",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "11d65ec2-42e6-477a-af4a-c04f0c959f0a"
        },
        "item": {
          "id": "3d28bff8-227a-4776-8773-e9d21ce803c5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1ae815a7-1a54-4520-b947-730170a718ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f789b03-5cea-4af8-991f-656cb2f56e3b",
        "cursor": {
          "ref": "100b5d55-6fd8-4b87-94fe-b05cb1854c55",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7c57bfcf-9157-45b7-9227-2b5dc6622340"
        },
        "item": {
          "id": "1f789b03-5cea-4af8-991f-656cb2f56e3b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "072ddede-7d90-4d8c-a07d-3db3fa004937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecec781-c666-45c3-a0cc-fe94f2628ec9",
        "cursor": {
          "ref": "b98cf22d-f26d-48e1-af68-bb20a66092f0",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "efbb7f43-6f3d-4e60-84fb-2dcfad3fc274"
        },
        "item": {
          "id": "3ecec781-c666-45c3-a0cc-fe94f2628ec9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "56fd4c41-c31a-4856-9426-f7fdfd9ed5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31eded9e-d21e-4ba3-98b2-e9e25ff3ded3",
        "cursor": {
          "ref": "21537d0e-bfa5-4990-9d01-dc81d0e63489",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d744438a-84fa-49ce-8f1e-8e799df14b80"
        },
        "item": {
          "id": "31eded9e-d21e-4ba3-98b2-e9e25ff3ded3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f2fa365f-c6a7-4166-bcb8-a18d4bc31a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fb0785-fe58-4cc4-a6eb-66a5054cccf1",
        "cursor": {
          "ref": "44a48976-cfd3-4342-8fa8-4527016dc8a5",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "11156ce9-879f-4d78-b1fd-49b461766a4f"
        },
        "item": {
          "id": "b3fb0785-fe58-4cc4-a6eb-66a5054cccf1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "467fbf13-49ed-4c76-a4c1-0ddb6ccb8da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ef4b6f-5dfc-4817-880c-cbd829231570",
        "cursor": {
          "ref": "5f9b1925-5f58-457b-897e-cc336d1dabde",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "04f1081c-3618-4f5e-8bcd-b6ab04f3e9e8"
        },
        "item": {
          "id": "51ef4b6f-5dfc-4817-880c-cbd829231570",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "faba6975-18bf-4d96-80d6-d6329361aa98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d69a115-8872-4b25-9e72-525ddd253870",
        "cursor": {
          "ref": "79f45998-b481-4db6-a83a-20397b9e5c05",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "516ed61e-549c-4d74-ba77-2af17768a1d1"
        },
        "item": {
          "id": "3d69a115-8872-4b25-9e72-525ddd253870",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "72c2289b-e6de-47e3-9f84-e52582276e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee609ba-0fd2-4edf-90de-9226ecb5a416",
        "cursor": {
          "ref": "470b6de7-f8f1-4a67-9148-69b92c9455f8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c4ce2660-2219-4f69-af70-02b9e6898149"
        },
        "item": {
          "id": "cee609ba-0fd2-4edf-90de-9226ecb5a416",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fa341784-9fd0-4e32-b7a4-eaac599d0149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abd0186-b90a-4f55-864c-95a4adce0315",
        "cursor": {
          "ref": "6acc8a91-79a7-4069-b15c-d5252893e820",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "41294ce1-5ffa-4419-9251-1fc133089455"
        },
        "item": {
          "id": "3abd0186-b90a-4f55-864c-95a4adce0315",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8c60fd7f-b0e9-4d1b-85b4-3ebd166292ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1fe4f1-d04d-4ad0-a011-05b72ab63107",
        "cursor": {
          "ref": "495daa3a-f8d9-4b8e-9e63-2a3da20eba83",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3e9aa004-e539-4689-b02e-43f386d82aa5"
        },
        "item": {
          "id": "ef1fe4f1-d04d-4ad0-a011-05b72ab63107",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "83bf5035-9053-4379-a905-f62ca8cb73c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801ce410-54c1-47da-90ae-85904fd742b7",
        "cursor": {
          "ref": "84699a9c-fc57-4ac5-adca-14cab17f4f65",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f5fbc7b9-e56c-4700-b978-4d08bea3e012"
        },
        "item": {
          "id": "801ce410-54c1-47da-90ae-85904fd742b7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7291d5fc-758a-4553-96d9-55e02779e51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aef4b99-6989-4344-b4d0-e0d30a85ee42",
        "cursor": {
          "ref": "ce69330d-d7d1-4626-982a-654e5bdad579",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "73318050-61da-4a60-91ea-f834ea433898"
        },
        "item": {
          "id": "7aef4b99-6989-4344-b4d0-e0d30a85ee42",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ecc7c886-7cd7-4327-9d64-c1f6c4b4cd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d494141e-bd41-44b4-9b52-4ac145f2c7a5",
        "cursor": {
          "ref": "0688462b-db31-4016-adb9-891865538ee0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "658791d9-9ec7-42cc-99c8-7e0607f5b13a"
        },
        "item": {
          "id": "d494141e-bd41-44b4-9b52-4ac145f2c7a5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7d0ae7d8-de3b-4b97-bfad-2ce2191b2917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f7bba3-d5da-4c3b-a6d0-e219cf4fb3b7",
        "cursor": {
          "ref": "861fc560-6111-4f0d-819e-5a001d8d678b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c9146ea3-73d1-43fd-874d-550e20ad8cba"
        },
        "item": {
          "id": "c3f7bba3-d5da-4c3b-a6d0-e219cf4fb3b7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9e367184-bf1f-489b-bda0-eb723a8bc2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8405938a-c0db-4150-8250-efde08215786",
        "cursor": {
          "ref": "a34eceeb-e3be-4c1c-842b-a44abe1f2296",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0c76a043-d2df-42c6-b357-0f91ba494e70"
        },
        "item": {
          "id": "8405938a-c0db-4150-8250-efde08215786",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7c0620a9-3721-4fa4-a6b7-36f7f8758aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a058a0-9457-4d31-a9f2-c1b41ffa03cd",
        "cursor": {
          "ref": "73a05887-28b8-4ba6-a9cf-a33ae7c76b38",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4628f4ed-133d-422d-855c-3f88b0bf4d8a"
        },
        "item": {
          "id": "48a058a0-9457-4d31-a9f2-c1b41ffa03cd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2eee5513-a13c-4b6d-ac3d-b9461b52c6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbf30be-751e-4c5f-818a-c2c845fc216b",
        "cursor": {
          "ref": "734ddef5-5e52-4cd0-9874-e1c7399d91f4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c0b11532-fe30-4060-b80e-e0deb0adb6f2"
        },
        "item": {
          "id": "5dbf30be-751e-4c5f-818a-c2c845fc216b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f5d026e3-7e1d-4bd0-9c8c-0cbf10caeade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a10caaf-8487-4835-9631-ea627e1f36c0",
        "cursor": {
          "ref": "d46df449-78e2-404d-9774-7207481caebe",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4e2b43d7-3e05-436c-8c5e-3b3013aa8497"
        },
        "item": {
          "id": "8a10caaf-8487-4835-9631-ea627e1f36c0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "20c6ce5c-2144-4148-8b9e-07a940458d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cd7aeb-716e-45ed-b2af-8743885c4fc9",
        "cursor": {
          "ref": "185f2fc0-2d3f-43d8-b1cd-28b2366e8d70",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "453ed626-8b45-4fc1-9864-9e65984ac843"
        },
        "item": {
          "id": "f0cd7aeb-716e-45ed-b2af-8743885c4fc9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7c3676ce-9db4-4e7d-bbfe-b6801624845d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc25b8f2-e997-4f73-aa1f-f371443f94ef",
        "cursor": {
          "ref": "352dc5d7-51da-47d6-94fc-d15a089cad57",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c969e759-8743-401d-afed-97c35efeaa73"
        },
        "item": {
          "id": "fc25b8f2-e997-4f73-aa1f-f371443f94ef",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1d807794-20a2-4d48-b1a8-8283ba667fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb438b3-dfc3-464f-ae2e-fc28d843cbc2",
        "cursor": {
          "ref": "48f5f74b-2294-4411-ab14-18a602071d9b",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4678cf18-4e5f-44e5-a42e-0cd5f913cc52"
        },
        "item": {
          "id": "3eb438b3-dfc3-464f-ae2e-fc28d843cbc2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "81e6fafb-384e-42db-8f35-78ea8a9deae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1014daf-30d7-489c-8871-a96fb9f1aa60",
        "cursor": {
          "ref": "fd6751e7-ffb4-43cb-b868-0a38eb2067b5",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a304c2d7-1260-46e1-b952-e5b68a1cda8f"
        },
        "item": {
          "id": "b1014daf-30d7-489c-8871-a96fb9f1aa60",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b4852f06-8162-4f96-9558-3bb429e814f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64489b6-1348-44fb-8b13-ebe19498a859",
        "cursor": {
          "ref": "ee724f64-9054-4825-bf0a-0b1826187df8",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "22adf19c-4789-4461-ac58-53fda4a29a41"
        },
        "item": {
          "id": "a64489b6-1348-44fb-8b13-ebe19498a859",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "85094fd2-34f4-49a1-8212-573f42863d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2714ef1a-b915-40ca-a57c-a52afd84e47f",
        "cursor": {
          "ref": "d168c64d-06e5-4f9c-872b-e98a536cc378",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e4ec2696-367f-4f75-ba6e-6102a7042233"
        },
        "item": {
          "id": "2714ef1a-b915-40ca-a57c-a52afd84e47f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9064b35e-85cf-4b83-9b27-9dc807d4ddeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f3e0d3-bcb6-456d-bd84-0ee2bc61e171",
        "cursor": {
          "ref": "15a45892-82dd-42ad-ad63-650c5f43962d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "92de5d6e-3e0c-40bf-bff7-51d6d8022fba"
        },
        "item": {
          "id": "05f3e0d3-bcb6-456d-bd84-0ee2bc61e171",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fa400338-0a56-46a3-ba80-9a04afb7d9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14fe112-a701-42cf-8d1d-f284a5cc3982",
        "cursor": {
          "ref": "aece8424-f243-4298-95a5-4b9f326ffb8f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3f04f14f-92bc-4e04-89db-bf0bf67df911"
        },
        "item": {
          "id": "c14fe112-a701-42cf-8d1d-f284a5cc3982",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3bcd7d85-8ae6-4105-ae6c-62ac8f868818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aabea0-8e15-4326-bde0-c3269913df04",
        "cursor": {
          "ref": "992b1510-bdfb-437a-97c1-ddcd684eeca8",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8d18550e-3773-4976-b3a3-9c89a94f8d4b"
        },
        "item": {
          "id": "89aabea0-8e15-4326-bde0-c3269913df04",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1d9728eb-d701-42a9-a71f-18921feb7754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccb6133-8983-4eef-b11a-5b82f2de8a73",
        "cursor": {
          "ref": "fe45cc4f-11fd-4606-b79d-ff10db866fc9",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "031e254d-84ae-4a58-897c-7a331ff70caa"
        },
        "item": {
          "id": "eccb6133-8983-4eef-b11a-5b82f2de8a73",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c181ce96-b8f4-45a0-9479-c4a0b1016c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71311321-db70-4edb-a2eb-b583ab0ce7d1",
        "cursor": {
          "ref": "697826ca-e588-49b4-b124-6d5bda5855c8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e5980635-ce16-4bbc-bda4-e161b6142ab8"
        },
        "item": {
          "id": "71311321-db70-4edb-a2eb-b583ab0ce7d1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "634b27a7-aae3-475f-bd47-272539ed5622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15eadf6-f9c5-464d-b427-a5e76c830c86",
        "cursor": {
          "ref": "9840a159-93dd-44fb-b3a7-b82183816d77",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4b622be6-c9f3-4d15-955a-c63d16320cf5"
        },
        "item": {
          "id": "c15eadf6-f9c5-464d-b427-a5e76c830c86",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7ed190ac-7ba6-4277-b3a0-453aad9a5621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00bc0f1-0377-4ce7-a3d5-4bd5ac11c2b9",
        "cursor": {
          "ref": "31c8de77-b898-4183-9458-99e63db22f2c",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d3622ba6-0dba-4672-b3b2-89d89f292074"
        },
        "item": {
          "id": "f00bc0f1-0377-4ce7-a3d5-4bd5ac11c2b9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fdc74942-eee6-452d-a4e0-38d4b71fc452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a0b19b-f969-4e65-95a2-295eb0939dae",
        "cursor": {
          "ref": "e576f9df-7132-41a9-ae5c-be145c82f093",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "58381c1b-7153-4862-bc90-fd3ab80d6bc1"
        },
        "item": {
          "id": "b3a0b19b-f969-4e65-95a2-295eb0939dae",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7dd97b86-185a-41c7-887b-89c07dab40fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f3867e-ec2d-4196-bc8c-fac71f4bea0f",
        "cursor": {
          "ref": "f3752b2f-213f-4d76-99b8-757d80c4049d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1b5c257f-c329-4b93-b0cf-87f0daa29fa0"
        },
        "item": {
          "id": "02f3867e-ec2d-4196-bc8c-fac71f4bea0f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bda873b3-ae50-4dc3-a4d9-305089d111a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568df285-535c-42a7-b33a-92b22d50e348",
        "cursor": {
          "ref": "5eb74edb-683f-4400-b916-d478c5426860",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1f839830-22ac-474c-93c9-572f5f4a1d6f"
        },
        "item": {
          "id": "568df285-535c-42a7-b33a-92b22d50e348",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8b3a43ce-a11d-4abf-82fd-2e31d9b85fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39accff1-c5e8-4630-8690-093692d0ea9d",
        "cursor": {
          "ref": "e365abc0-f197-4e9b-9b91-b439561df130",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9f9ef8d9-9bb3-4358-a426-5035521e7275"
        },
        "item": {
          "id": "39accff1-c5e8-4630-8690-093692d0ea9d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e0e2a557-f0e5-4229-8202-38c839300f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3b7d1e-95b8-4f68-b481-2d1ddde058ed",
        "cursor": {
          "ref": "33665afb-c502-4aaf-a3a8-9b2065f010ac",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6ad10176-588d-410b-a66e-e89188ae70e5"
        },
        "item": {
          "id": "ef3b7d1e-95b8-4f68-b481-2d1ddde058ed",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "eac97c80-8019-4fac-bf21-ee765351d57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c197b2-e9ba-4677-8a94-649882e75b23",
        "cursor": {
          "ref": "bdd539e0-125b-48b9-9765-1455f46c5b37",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3e36c13e-256b-4bc4-9799-9c8c057d9c0f"
        },
        "item": {
          "id": "19c197b2-e9ba-4677-8a94-649882e75b23",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4ff630bb-923f-4611-b3e2-92a0407da623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1d6484-9ab6-4274-afaa-b314ef9950fd",
        "cursor": {
          "ref": "8c0dc748-9286-4950-bd40-adf0eead2aa7",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dbfcb6d7-5a77-46b8-aba0-e5f6a343009e"
        },
        "item": {
          "id": "0a1d6484-9ab6-4274-afaa-b314ef9950fd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "49e582aa-82c8-40af-9844-6ffd69d707e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028453f7-9a19-40e8-b43b-75aa2b25f80b",
        "cursor": {
          "ref": "fa097496-dbaa-491b-a15b-3f3672181870",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f2ba178f-d2a5-468a-b795-7ddca850b43d"
        },
        "item": {
          "id": "028453f7-9a19-40e8-b43b-75aa2b25f80b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "44290c29-9205-4ca0-af2f-b505fc559569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63463447-a7ac-452f-9b60-74555be9822f",
        "cursor": {
          "ref": "01a1cef0-0805-4c37-a687-b2f5b889e0fd",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "42537498-5785-4773-9c1d-6563b52f1786"
        },
        "item": {
          "id": "63463447-a7ac-452f-9b60-74555be9822f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8593ac8f-a9ed-495d-bbfc-1e9908cb88e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2f1e39-8b57-4667-8168-95efdc95a489",
        "cursor": {
          "ref": "3fbf1c92-67e7-41b9-93d2-d186df47090d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d0e386b7-7e57-41d8-bf61-e69dd63064de"
        },
        "item": {
          "id": "fe2f1e39-8b57-4667-8168-95efdc95a489",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e0a0a05d-9543-43cb-bd3b-2af34768bbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300994c6-c437-45e3-85c0-43467f6e5c78",
        "cursor": {
          "ref": "438b68dd-f183-4ec8-8138-aa0578338014",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "767d1605-f723-4795-aee0-e4e7a18fb2f4"
        },
        "item": {
          "id": "300994c6-c437-45e3-85c0-43467f6e5c78",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "efcd3b4f-9828-49ef-8cfd-98fd213cc868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c8f0f2-7bc0-41c2-b1fb-8b9d4f4e37a7",
        "cursor": {
          "ref": "00001ddb-918d-404c-9a18-10aa93014ee0",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0af114f8-df48-4808-8c2b-7c33eddbbb12"
        },
        "item": {
          "id": "f4c8f0f2-7bc0-41c2-b1fb-8b9d4f4e37a7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "53a89467-9b78-4fea-9f7d-3cba463b0df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66e4f0e-919f-498e-adf7-56cebb241923",
        "cursor": {
          "ref": "32183eb2-294a-4742-9ddd-3cbad3c34aa5",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "735b335b-35f1-4eeb-b9a4-382c818bce33"
        },
        "item": {
          "id": "c66e4f0e-919f-498e-adf7-56cebb241923",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fea078d3-2087-4e8c-a17a-8b5dee6b5f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8893b2aa-25e9-442b-ad26-3bba9601a679",
        "cursor": {
          "ref": "294eab83-ba41-4fc2-ab6c-9f69e5118653",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1c80c4c7-d2fa-41ea-88bd-ed90310a93a3"
        },
        "item": {
          "id": "8893b2aa-25e9-442b-ad26-3bba9601a679",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "747ebbce-6e89-4cdd-9b10-71a4dcb5e428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5033a3-91ee-4d28-9400-b2dfe0e3812c",
        "cursor": {
          "ref": "ce82c5f5-d13f-44d7-bc99-5e1b276797d5",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b4ee6c4f-b45e-40eb-b7e8-21be8db7c162"
        },
        "item": {
          "id": "8e5033a3-91ee-4d28-9400-b2dfe0e3812c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2726e6b6-df23-41d2-b962-f942f005ead9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e29a2c-7dfa-4913-9075-7852e4850b6b",
        "cursor": {
          "ref": "c7d5a8e4-0360-443d-892b-71d7c43e9fea",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b9ae9aae-da7d-432f-83b1-84a8225c09a2"
        },
        "item": {
          "id": "f9e29a2c-7dfa-4913-9075-7852e4850b6b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "008ffbc0-a804-4742-9b3d-59ff9550b0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89e3179-5e59-4966-b083-c2cd04bee6d1",
        "cursor": {
          "ref": "e9e45e06-6edf-436b-84bd-8db3a1748cce",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2f1a6e79-f973-4ab3-81d5-77d6943b22bf"
        },
        "item": {
          "id": "b89e3179-5e59-4966-b083-c2cd04bee6d1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bcc09cc4-dddd-4a0a-881b-66f61d5a4d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c01827-cfe8-4534-9aad-d6d74230519d",
        "cursor": {
          "ref": "f0ecb032-d2be-4222-8dd0-e17fa1669d4c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e13cceac-b32a-4d39-afe3-739efb7d83c6"
        },
        "item": {
          "id": "75c01827-cfe8-4534-9aad-d6d74230519d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1bc6f715-e0a9-44aa-bcc5-fccf2a03573b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948738e8-0e9d-45cb-a017-8c77bf4ae4be",
        "cursor": {
          "ref": "802d6196-f05f-4372-bf94-cc6bacd42174",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "00dc3572-6361-467b-b4b0-a56f2e02a394"
        },
        "item": {
          "id": "948738e8-0e9d-45cb-a017-8c77bf4ae4be",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "831e9543-1061-4b03-8b61-e90c46d78bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d57b09-2090-42ca-adf2-48aa65a3dfd3",
        "cursor": {
          "ref": "2f830bf4-1476-46d0-91b9-983dc95dff11",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "29430ab6-b809-4d70-b985-0d483e86fab2"
        },
        "item": {
          "id": "58d57b09-2090-42ca-adf2-48aa65a3dfd3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7d689378-c678-46f0-bb00-88ea99e40d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672108ad-4be8-4431-94ed-f40cedc881a6",
        "cursor": {
          "ref": "4de12270-19bf-4494-a973-fad1307b4df9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e3070874-c97b-4f7b-b04f-511838a1ec9a"
        },
        "item": {
          "id": "672108ad-4be8-4431-94ed-f40cedc881a6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c016fa74-50c3-4418-95b0-de118112abd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8fb46e-7591-47f0-a7f4-d8b04a3b93d5",
        "cursor": {
          "ref": "cbe622f3-bdbe-44e1-b536-cf8fad15f1aa",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dd6a244e-464a-4abf-a01b-5c45999a26c4"
        },
        "item": {
          "id": "9f8fb46e-7591-47f0-a7f4-d8b04a3b93d5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2b181d73-fe57-4267-bcfe-47b3c66dc8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076efaa3-0a37-4337-8e97-32a411f45c20",
        "cursor": {
          "ref": "661ab59a-07f2-40e4-adca-835237f39e32",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5c94f03f-9a1b-429f-9c01-11c07ea9cc01"
        },
        "item": {
          "id": "076efaa3-0a37-4337-8e97-32a411f45c20",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e3cdcba3-dd1d-4a0b-bff1-2e8c49ab8ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69db8014-9fac-429c-9d4d-125fcf861471",
        "cursor": {
          "ref": "f013436d-c3b7-4603-a823-03b9fdc0d6e9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0c223933-ef20-4bcf-924b-390618612bfb"
        },
        "item": {
          "id": "69db8014-9fac-429c-9d4d-125fcf861471",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9bbc28b7-8452-484b-8c9b-b02137910f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b88305-b5e8-4b7b-b356-a9387a0dd8ee",
        "cursor": {
          "ref": "e3a55c93-7cc9-490c-a00f-d1c7d389c70f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5d0bb93d-d29d-491b-9474-2e3d2d419523"
        },
        "item": {
          "id": "10b88305-b5e8-4b7b-b356-a9387a0dd8ee",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "05d438a2-8f68-4ae3-87d9-d4e56f424c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9efb10-90c0-4fd1-aa29-3c593ca4331f",
        "cursor": {
          "ref": "31d6e5fd-07bf-4c74-bf06-69cb6569524c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "71cd0700-6ba3-445e-833a-3aeca8a23f2d"
        },
        "item": {
          "id": "1d9efb10-90c0-4fd1-aa29-3c593ca4331f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "93bac443-dd87-47f1-98aa-48232d506a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c0679a-f308-41e1-b04c-1ab4a8433bf5",
        "cursor": {
          "ref": "5d5d2d82-9a8c-4c22-bc45-4cfa1ad601af",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4e1e51e2-8549-4c3f-93a4-9077024d39ec"
        },
        "item": {
          "id": "18c0679a-f308-41e1-b04c-1ab4a8433bf5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "55c1a75b-3144-417f-9d5f-902901b2203b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c551413-e17d-412a-8e03-f4d0c42fab19",
        "cursor": {
          "ref": "21ab69f1-3230-472f-9e2a-4a0405313c41",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "43398002-6495-49bd-8bbc-83b6dc99cea5"
        },
        "item": {
          "id": "6c551413-e17d-412a-8e03-f4d0c42fab19",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b0bb8de5-dc0b-44a1-9fd6-8a0df0125cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355d5d1c-c4dd-46cd-9b87-987080345401",
        "cursor": {
          "ref": "c9e17873-710a-4707-a121-40db192405bc",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e17a6b35-1f74-4a26-b801-e9680bb09146"
        },
        "item": {
          "id": "355d5d1c-c4dd-46cd-9b87-987080345401",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ea87c76a-c2b1-4e74-b782-d691292c10c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b4993a-a01d-4f37-9db7-1e417d0cebfa",
        "cursor": {
          "ref": "9268c609-58d9-4bbd-96e6-584804bd9541",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "97c1ec81-0a40-493a-9ca1-8df455d37774"
        },
        "item": {
          "id": "d1b4993a-a01d-4f37-9db7-1e417d0cebfa",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "235c842a-58e3-40b1-864c-658e1828d87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9611201-41f1-466d-b940-d3db9288cbd4",
        "cursor": {
          "ref": "e07b30ab-dfb4-4531-84aa-5d3aa468121d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "462b9a5e-9fb9-4e0a-ac31-780229f98e14"
        },
        "item": {
          "id": "f9611201-41f1-466d-b940-d3db9288cbd4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2d06e300-8697-41f7-a3b7-ce54c1a08afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ccda18-716f-449d-9aa0-ad8312c9e562",
        "cursor": {
          "ref": "eba0ad9a-6769-4c19-8d20-75307bffe94d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "333602fb-2f21-484b-85b9-6f590b8519ee"
        },
        "item": {
          "id": "68ccda18-716f-449d-9aa0-ad8312c9e562",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4a0897b8-498f-4425-a8ce-5946128e2211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c052308b-7bc8-4d28-a5db-44e3345d1ae8",
        "cursor": {
          "ref": "6fbfecdb-7c40-4d58-b19d-7ae529db94c7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0ba999d6-ce64-49ec-b6fe-d2a820e746e2"
        },
        "item": {
          "id": "c052308b-7bc8-4d28-a5db-44e3345d1ae8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8be22425-09a9-49b0-9721-9d7565849837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7767d9-2d40-4e6d-bdf3-cefcc767ffcd",
        "cursor": {
          "ref": "c156deb3-e693-4848-850f-100db4f7e99d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f6ffd3f3-0530-4136-ba43-81a447edf401"
        },
        "item": {
          "id": "1d7767d9-2d40-4e6d-bdf3-cefcc767ffcd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c78b0c19-1913-4ccf-b994-a7dcfe2bd10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9fbdd0-3769-4e87-a5f0-ac333750eac5",
        "cursor": {
          "ref": "9c8e704b-43fb-483e-bbbb-8d514e31ca3a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e309ee8a-d696-4c63-a9ab-ab79cee413b4"
        },
        "item": {
          "id": "2a9fbdd0-3769-4e87-a5f0-ac333750eac5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3a93216c-e0c9-40bd-8041-4fdbbf03286c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b29ab2-c0ba-4690-9d25-45dde3cf4efa",
        "cursor": {
          "ref": "024e310b-e814-41b6-b9c3-807ad817a14a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "191e8d36-4e6f-479b-93be-b12d00656a81"
        },
        "item": {
          "id": "09b29ab2-c0ba-4690-9d25-45dde3cf4efa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bb17b594-0c84-46f7-a9ed-765214f975a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074f2b85-2c73-42e0-bc9b-6ef3de398432",
        "cursor": {
          "ref": "92b6b16b-33dc-4eb4-8f2b-729187fcde1a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "56c275f4-dc4f-4bb2-8485-343b1ebc0bad"
        },
        "item": {
          "id": "074f2b85-2c73-42e0-bc9b-6ef3de398432",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5c9f8b71-effb-4179-93db-e60dde9b87c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7097a4e-b45c-4a68-9dc1-b581579c8e10",
        "cursor": {
          "ref": "d3ca1162-550c-4e99-addc-175b735bd178",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "65a296b8-49a1-4381-b33c-418f96296786"
        },
        "item": {
          "id": "b7097a4e-b45c-4a68-9dc1-b581579c8e10",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7fd6905a-f0eb-4264-a5f7-4c47baf936cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556becdd-44ba-4027-87b3-3628e1a8abcb",
        "cursor": {
          "ref": "6701b115-8bd1-44cc-adfd-95fe00378dd7",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "098bb386-f910-43a2-bf66-4998e3639d68"
        },
        "item": {
          "id": "556becdd-44ba-4027-87b3-3628e1a8abcb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ec647ed4-47af-4f6d-b3f1-954ddcc1db45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f50b36-1424-4835-b789-1ce93bb83a5f",
        "cursor": {
          "ref": "1aa8b6d9-b70d-494f-b81f-280f76981147",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c34b511a-912c-4d8e-859d-da25f8e978ee"
        },
        "item": {
          "id": "c4f50b36-1424-4835-b789-1ce93bb83a5f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6f42a76a-388b-423b-b4f2-299f9e20e9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0d28b6-2487-481a-a691-f35158e66357",
        "cursor": {
          "ref": "312a1df1-c044-45a4-8526-bf8fb97c46e0",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6bcd34f2-4f54-424a-97f5-54ac90ba8dbf"
        },
        "item": {
          "id": "3b0d28b6-2487-481a-a691-f35158e66357",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e9ad0b30-a8cd-4669-a0de-e4e726539cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec59fb4-f658-4604-872e-5be36c7ab9ee",
        "cursor": {
          "ref": "77d59915-e9d7-47bf-8cb2-4a1d86574657",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "661ca209-0d6b-43bd-9a4f-bc4e58be8caa"
        },
        "item": {
          "id": "aec59fb4-f658-4604-872e-5be36c7ab9ee",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ed8d343e-ac1b-418e-8e9c-7b81fa2ed58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f69bd6e-62ce-4cf8-a435-358aed425916",
        "cursor": {
          "ref": "27bde9c2-e51f-4971-9387-335393a0675c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c8b59692-2ba6-42e0-a1cd-92adbbadbff7"
        },
        "item": {
          "id": "1f69bd6e-62ce-4cf8-a435-358aed425916",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "62f8d3f3-6be5-4487-929b-b6753b92f25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23748941-23a9-42c2-b415-1e1c24e84d46",
        "cursor": {
          "ref": "f8e06045-24e8-41e5-a1b2-f1abfcc1bd8f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "56ef4338-34ac-4028-a9ab-e7123af44354"
        },
        "item": {
          "id": "23748941-23a9-42c2-b415-1e1c24e84d46",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b9c2818b-88b9-470e-a005-b2e23e159a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee547748-857a-409a-823b-c613910c3d28",
        "cursor": {
          "ref": "400f55fe-d480-4357-a9f6-dc3ae19177b3",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b2fe2ad8-5714-4307-8140-936ed260c8fb"
        },
        "item": {
          "id": "ee547748-857a-409a-823b-c613910c3d28",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6f07fc01-f728-4822-8035-5151d14c3543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3f5288-f3ed-4238-97fe-b97d0d6dcb13",
        "cursor": {
          "ref": "aefd51ed-6f5a-4408-9d90-84db79244011",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "afcc566a-147e-411e-9c06-2cec7903d226"
        },
        "item": {
          "id": "1f3f5288-f3ed-4238-97fe-b97d0d6dcb13",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4a06a68e-deb1-4b60-b742-a786bf39a164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d7192b-3706-480e-81bb-a5bb48470a6e",
        "cursor": {
          "ref": "aa3905eb-1fa5-428c-b5a5-50ef4e9dc876",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "393e0b61-bc18-47dc-8f4c-723a74c9c952"
        },
        "item": {
          "id": "56d7192b-3706-480e-81bb-a5bb48470a6e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c4878481-e759-4860-af95-bcce5fa60649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f9a19a-e1ae-40cf-b184-7d6428013977",
        "cursor": {
          "ref": "c2079d16-7811-41ea-a6f8-b9eed8cdce03",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f8cf62cf-ee29-4594-ae8c-2d41ef4c8623"
        },
        "item": {
          "id": "f8f9a19a-e1ae-40cf-b184-7d6428013977",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e30d0cec-73b1-412e-8cd6-d3f850b187d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2e4bc1-33f0-4b2d-8e9d-b034458a20d4",
        "cursor": {
          "ref": "46cfa596-6648-4016-8924-3c4bd97a2ead",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "092370d9-b359-4e0b-a2c9-c1763dd530a6"
        },
        "item": {
          "id": "3e2e4bc1-33f0-4b2d-8e9d-b034458a20d4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "aebb76e3-9704-4fc0-8271-74d0a454a9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98a531c-3db6-43bc-bb23-dd4975ee74ae",
        "cursor": {
          "ref": "aeecd6f2-31dc-40e6-9a4b-e4aea252f77c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7e18c1cd-f719-46fc-b047-b7536642432d"
        },
        "item": {
          "id": "b98a531c-3db6-43bc-bb23-dd4975ee74ae",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "40b24c5b-5774-4314-9b19-9f3df1da6cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000b2d78-ae0c-4a7b-884f-3849572ab9be",
        "cursor": {
          "ref": "412ed495-2633-4de1-8f12-3aae92c96f58",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2bf2dfd8-aa1a-4ca7-9f7f-b55cfe860c65"
        },
        "item": {
          "id": "000b2d78-ae0c-4a7b-884f-3849572ab9be",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "50456615-7ac4-4d31-b27c-a10c71065c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c015305-d1b2-4bc7-ba3a-0cbcf7a5782d",
        "cursor": {
          "ref": "6704df06-7d81-4838-8c4f-dbc69fe01b26",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3d7050bc-5162-41ca-828c-e478b95d4f80"
        },
        "item": {
          "id": "9c015305-d1b2-4bc7-ba3a-0cbcf7a5782d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1e60578a-e724-47e1-9ca7-e128fc175f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20385c3-5432-440d-a829-fe488ceca4be",
        "cursor": {
          "ref": "75401791-8a31-4fef-8b19-517796b6a5ea",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "762222e0-4d94-41c8-ba66-c1819eff61b2"
        },
        "item": {
          "id": "c20385c3-5432-440d-a829-fe488ceca4be",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "16230aeb-4470-4f07-931b-2ae7bff7f368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "1941aeaa-6818-488a-aac2-83a56cc6e5e9",
        "cursor": {
          "ref": "71f5ae41-c7cd-4712-a933-6388ca340594",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0c60eee6-0b29-48e3-ab81-848c363dea4e"
        },
        "item": {
          "id": "1941aeaa-6818-488a-aac2-83a56cc6e5e9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b0e640fc-5edc-4f3f-ae1d-9f71c534cb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "41527d5d-460b-405c-826a-7a79a9dee495",
        "cursor": {
          "ref": "5dccb0c5-3b13-4343-b8c2-2195430cee57",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "aa32d6eb-8e10-406c-a805-965eab9cdeda"
        },
        "item": {
          "id": "41527d5d-460b-405c-826a-7a79a9dee495",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "76c106bf-1d0d-4211-addd-b65589bf299a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "1e330327-e33a-42bb-9942-d9265c4cd9cc",
        "cursor": {
          "ref": "25b650d8-dad4-4fc4-a92e-ea21dac7e43d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "46d0c6d8-bc54-46ac-a7ef-517b234ef603"
        },
        "item": {
          "id": "1e330327-e33a-42bb-9942-d9265c4cd9cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ca5efd78-bdac-4a35-90f6-15c93b8bbc56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e330327-e33a-42bb-9942-d9265c4cd9cc",
        "cursor": {
          "ref": "25b650d8-dad4-4fc4-a92e-ea21dac7e43d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "46d0c6d8-bc54-46ac-a7ef-517b234ef603"
        },
        "item": {
          "id": "1e330327-e33a-42bb-9942-d9265c4cd9cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ca5efd78-bdac-4a35-90f6-15c93b8bbc56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69156577-a480-4b8d-b360-7514eb8ce71f",
        "cursor": {
          "ref": "c7dd8373-fcb6-4668-b64c-85cf496145de",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1d821b02-1f2c-4007-842e-6c650ac07b68"
        },
        "item": {
          "id": "69156577-a480-4b8d-b360-7514eb8ce71f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "deb4f697-f7da-4007-b08c-7c0ecf08264e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb039c83-1916-41e1-abd2-0c4e6938a7e1",
        "cursor": {
          "ref": "78f0ee6f-7316-4d17-9505-c5d92cb11121",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a54fa89d-737f-4d8c-90fa-30a2cc2a0014"
        },
        "item": {
          "id": "eb039c83-1916-41e1-abd2-0c4e6938a7e1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "87064bf7-80b0-4ea6-9cb3-3100c6912be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}