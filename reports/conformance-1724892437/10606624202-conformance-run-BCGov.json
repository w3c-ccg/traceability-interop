{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b495ca7a-b445-4627-a3b8-4d135050c3b3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8c10e988-3be1-43c4-a749-8796d5ad2146",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f55a5f3-1e08-49f4-925d-7428ccd8959f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a2370ae2-ac9b-454f-a8a1-10f9b1629fef"
                }
              }
            ]
          },
          {
            "id": "f1e8ba14-76ce-4744-a71f-79e0e4b8c011",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "390cbc61-bc04-400d-a1c1-1c61c282fd01",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "02a122a5-8c05-48b4-9436-2628367dac46"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "61f0ee7b-6c9b-4f33-90b7-e8ff4f4fb8a9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c55eaf63-8ba3-4b98-ac62-befdbdb2c01c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c36bee68-12e9-4bd1-9a1c-e192917d45e3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12f7515d-6e87-45cd-b919-0134554fb642",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "353346bd-b5eb-47bb-b961-204db085a1f6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f841c67e-13a9-42c4-8501-1bdd4035789b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4bf46ee9-5d3f-4d77-b5f3-68de696ffee0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d41804ce-2c0f-4dc7-868d-6cdb71838c34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08ecba02-54ea-467c-8b6f-2321e0b6c4f2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc53346e-feb5-41a9-aa57-deaf3997d7be",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cc7e8dc1-f850-4a18-bcb5-e09e31b749a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12fe772a-07d9-41ef-8945-1a11881d19c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e7e0133-8027-4ef5-b688-9b906217ca33"
            }
          }
        ]
      },
      {
        "id": "6000853c-03d1-43c9-9a34-0c5a9b8022be",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "947d80de-61f2-4dfa-bda9-e07ab5a5a1cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83f83108-996a-4a74-9623-65067f03d52f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "34cb55c3-3f40-41bb-bb97-360ec0bca196",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11d21d7-a262-430b-867e-f31d2d35d4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ab76164-c1ff-4a6a-b3c0-bcf696cfa8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a03655-1511-4da1-9f22-e9d9cd6529f7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892cd7e9-6165-4439-ad04-e735574a02ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a3c4522-4b96-4537-bd1a-c1d75bf0ebc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd035ac-656f-4d88-beea-f5833d17ea86",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddcbaf7-7e8d-428c-9e26-9bb9e0b1726e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fb00c6c-ee6a-435a-a466-e2b0f9f334e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c9c07f6-2562-49d4-8b56-91c3640f590b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59f2b292-b26c-4891-b016-7e112f80bfa7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99872cf7-7837-4dc6-be39-aad57705c694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7deb36a1-c3d3-4609-8eed-81859520a9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b401635c-8934-4509-a7ca-ec167cc081dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c51113-2da1-466d-a88f-f46cbc91be2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1fc3d188-329b-4029-8dda-d66d99959a2c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4172c72e-6b7f-4578-aa69-bc57bc52c45e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2b55f43-3c31-4683-bccb-cb8a48698baa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c7561eec-6622-4387-8354-3eddbac253df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75ec8217-24a2-404e-9eca-9460d18a7757",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "15e99b84-89f4-4c54-b435-e39cd39b17c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc15e225-a43b-407c-92ff-44f354a428c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "878143eb-3c9f-4b07-8316-ee5125f73427"
            }
          }
        ]
      },
      {
        "id": "bbe6ccc4-0612-4183-b246-27c2081bebe0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "827a32df-4396-4fa5-96c4-bcc3237e723a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b228e86-fd2d-4f41-8e34-a5c77e6fb39c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "54e69e08-546e-4b1a-baa2-5239d7b1f2e0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee822d1d-d4e7-457f-b873-9c8200bbc773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca50fc49-8fc1-4ae8-8be3-04d42cbb55df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697a1f09-5adc-4520-8ab6-33f7b9bf5bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff365de6-1994-43a3-9061-9b44b1c1d047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861ce7e4-08ee-48a8-847e-972c2031046c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4390f44f-cea9-4b82-bf1b-3156fd6efd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b12280-47d8-403f-9a16-cfd68dc80cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e56e6f-7022-465c-b0aa-f50f6642d4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dae809ba-9533-4379-9b32-e450ab067838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33fc8f1-48e8-4cf6-b69a-79cb9c5de728",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e777d945-ee2d-4efb-9bcb-47b57ac05169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b103c38e-c69d-4052-a3f1-7b4eb06c6c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb23fd3-7fa7-4ddd-8e19-50ec3762feac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35b86f54-2e7c-4898-9e69-014807f95a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c533d65-6d6e-47c8-a258-c9c8641d9c6e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c55d4e-29a3-492c-86ab-a6013b979829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b70e5aa-f840-4c82-9e9b-76575dc9d7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86596f8-8795-4d7a-a349-e6142e42403e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "434c3bfc-6612-4df2-ab48-9ac49181e3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a30cd7c-bf83-42de-b4d5-60912d4a4fda",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41c594c-8087-4c2a-a52c-d3699d41347f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06136f13-d313-4edb-abce-3f408623ad1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abaeab9f-2092-4134-bf2b-ddced61d794f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eed3dfb-60ae-45a6-a627-c1d9f34527db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35841449-6b30-45d0-baf6-154d0ab543f9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9efead-1f71-4ccb-bfed-01477802406d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881f73f7-a2cc-4e33-a84f-d070c914a72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616ae17e-43bf-47e4-9610-ebb8099bd9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63dbdb96-facd-4eb8-9f5a-2e2f4ed7f466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af65c14-6864-4597-a701-b25e1d53c80d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6032475e-ec83-41ed-a9e8-e12675af7a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d68bc8-b2d1-41fb-9332-9dd2de69d16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c2e3ce-32af-4fe6-9c65-8ae8511bc778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c811f2c3-b355-40a3-b6a5-b5be6dcc98bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1b5146-d68a-46a6-9509-20781e2d530d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a32f5de-4bc3-41b4-98da-34e415b1ab08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c597be0e-a8df-443e-acbf-b6be06558f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d34e233-1d1c-4353-87d9-480802ce149b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89cd1e4e-35c0-4acc-8879-52f13d9b7048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7679091-c381-4bf8-8fba-d8586acab245",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e3e549-44f7-40cf-ac1f-9c0389df6262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d946dd33-fde9-46ec-af4f-0f5dd7831852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb2a696-89ef-449a-af13-6d2031bcd5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4341681a-8174-45a4-8c32-3668a77e00ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c15a81-9ba3-4d07-a057-fe5128a637e6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9f7963-8d12-4bab-8dc4-c626fd2b740e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfc54ec-826b-4d8a-82ee-01ed00d933c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec576ff7-75f8-476b-9c03-a6c9c9093bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e9b3110-c399-4340-b00b-680821bd2048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f6693d-eda3-4a85-b3c6-0052fa2b029b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90add2e1-a7b3-4b6c-9348-6fed545a2bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf2c5a4-3bb8-491b-b05b-498d8df7e3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c40bb9c-ddce-4568-acff-53c8823e0221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13fc5385-c057-4763-98c5-62bee9b0d5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7467f3c-6993-419e-bb11-b03e54786604",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b2e30c-0c01-42f1-b034-47761309fa48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11011df-94ff-4147-86c5-26763b8ccbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199ae5f9-faf9-4578-b9c2-712824c6135c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fabcb658-8b65-44ae-8e86-47624469c529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b1eb49-a2a2-4cbd-9c46-7987b874d686",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b56cb0-2832-4903-81cc-b5d1b348c076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd33b84-129d-4bbc-a9bd-6f8965de7cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af851ba-bcd2-44e8-93dc-e801adde9936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f173416-9a0d-40c9-8542-6641c26df096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331ba9e5-7fc8-4fca-b3d3-24d75c75e85a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23157ff8-b2b5-4ac0-9bfe-a18f56105fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f46a813-ed00-4fd0-90b5-41078dfdcca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b0ad2f-bb57-49ae-a74c-9eb7a5f2e9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69d20bb2-7151-49a9-800e-bc4267a92a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b101368-9af5-44e2-b12b-b94645d67136",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37a1fa4-66a8-484f-b564-c0e377efef8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a297e40-6342-4170-bb8c-a31e10ecdf3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b41282-e72c-4670-92e7-62af55b85d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84b08647-6191-4ee0-b63d-6780d85ba0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4548521b-183b-489b-a9bc-c0d533205aa8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c1318b-ecfc-4864-b51a-efaec736226f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7771ac02-6006-4ae9-be80-babcc28d762c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb1e222-5092-4c5b-b725-30a3dedca7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b6537fc-9285-47ed-98eb-3badc0a64a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5edf5b-c4a7-4545-8c8c-a8596552118d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1715685d-1d05-4c29-889c-d88749dabd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3968732e-9ca8-4284-903f-de137c6e9c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cf184b-31d8-41c8-8a93-fa56c5ff5f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a37abf0-609f-4837-bb0f-764979a5ebee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a8f8dc-a6d2-4123-9b08-b40dfd951624",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc472fb1-ff21-49dc-a13c-531e2f4b4092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfab0e98-86c3-4f8d-93e9-bc0990f28a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d460b302-4748-4c07-97fe-e93db201db59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c1b823-7924-4e93-b5f0-54022e8bd9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd975f50-d47b-4642-8665-b0a308048959",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed82f983-fae0-47fd-82c1-e407a7899d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad54f93-f2f4-4b40-856b-9b043d015823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f377b6e9-8366-4736-b06e-3e26567e55e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4770b024-648b-48e9-957f-7bb1f98841ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56105b5b-cf7d-4312-8ad6-f57b6adf60bb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa545fa-1ccc-40eb-a31d-32ed66f5acff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68827db6-7ed6-443a-bd12-810f084bb708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc19777-42cd-456f-bd3e-2c4e7d645c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6528f42-442d-4a32-9893-6637ab52437f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb3e416-c2ca-471d-b7b8-7a18c35c3b51",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2e3f7b-877e-49bd-915f-c0e69b167474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b40efae-a047-4e62-9167-fe64aca071df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ae0d88-5f81-4b32-8e8a-64c72566d21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4cb77d-fef2-4b3b-961b-31cbfda06790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bdd717-f143-4738-99bc-808d17486e6a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38531ffe-f216-407b-b05b-690adda493cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd861cd-4c9b-4d04-bb7b-201229d7a5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb682618-a66d-42c9-a76d-106be7c77c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "763d9fd3-645a-4d6f-9e83-a1798cef49e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656d09f2-7a44-41c5-a929-c9f577d18b22",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2454426d-5df8-468f-b731-d4679e4f798e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb16971-cbe3-4965-8140-8822cf37dd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f399c4-5771-49f7-9d46-21e246edf50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42a8c2b9-5af9-4dad-a354-66abdc244298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d3c675-315b-4371-a0f5-d712c894c911",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c3f503-6a93-4314-80a1-1f64bc095257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b095503-4566-45c1-b370-b7a9dd4ff4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22af8058-dc91-4818-8a33-3d69bf9c9eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb26e7aa-3885-4004-b55c-c97d367027db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892df915-3580-4b3e-8e68-94b92ef73015",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d435cf8c-d726-4204-895e-2948a3274ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5653bb8e-405c-4dd3-9585-f2eb3d991c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7c568c-ccc8-4bb0-8930-fe77aceabfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a148000-1b9e-4315-a2e1-ea38064d3c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce58b01-480a-492a-ab8b-d474c7c233a5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fd9b4e-d3c8-4770-9c9f-4ca64761467c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f969694-0cee-402e-b448-002f9622f89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fd3174-3132-4e28-8016-63a9d413f534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "264a4551-e62c-4fa1-ba46-f260a978a029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d9137d-7bed-4cdc-90bb-313b4d17eeec",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c85dc47-2871-4480-9376-9192adf91f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357d18a0-bfa7-450c-9865-0b46e86e11e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69d304a-6111-49e7-9afe-68bb3c9598f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56566cd3-ab42-4f36-8b22-32f6f0b677f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56a36ed-62bf-4ee3-be8e-9583418eceb0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46c1d28-d93e-4145-ba04-47abbda505d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c3d9cc-67f9-482c-899b-ae1ecab1f036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e7c71b-8e35-4bc1-b5e8-63bac371ae8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3457c1d8-ea15-4482-940d-9fc142b115a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd078f0-5f77-46f0-adba-83ba3cfa6502",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a71a910-10ea-4ee3-a86e-8dee6b200546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1345ba9-5c98-4a9c-b2ad-18cd01c8711e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74383d7-eb74-494b-9949-347dffd21a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee26bd26-52e0-42dc-940b-4014f1ef5859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f314d13b-e59c-410a-b2e8-dc803f787f2d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc226d48-9066-4d78-9eac-bdbc6de8a953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e350acca-aa70-41d2-8a79-52bf0afb5e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9343ebf-f893-4381-a087-a9fee0220c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b612717e-1944-4a9b-8795-af093486668b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2371ef16-93c3-4295-a8f1-d179647f42e3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2331ba-0270-44c9-af83-aa89e526816d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96337f7-726d-4847-b660-0e193044e2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ecef08-45db-4208-87cc-d9b1f1c12955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01d4495f-f824-4ef7-89fa-ae510c1a4907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddcbb82-f9cb-4a21-8e17-0782348ab97f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abab9ed-3d16-4611-9128-8fb0448e00a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4c2ea2-7a1a-4a15-b1d2-91456e9e77c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87539c8d-12bd-4979-af43-cf28c358fdb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a12cf416-dc35-4937-8df5-b10bcfa08ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98ee3b0-51b9-4ed7-b3b6-c4e10de1c44d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857cd2f3-60a7-4cd4-8cc3-fea73d2b8f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1508bade-c02f-4081-8538-e1b34c7ef6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc2d26e-b1c2-4ae9-b1da-2a393753f022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72f29b55-276b-4f34-bf6c-aaa35070015e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dc6785-025c-4596-82ca-61383e8ea4e4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a43fcba-0d15-4c2d-9c60-12abd51ecc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4b15ca-09e8-4313-b9e4-7c7224693a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4c7ac4-1921-4432-87ec-01285d32e928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "626ebcfc-b768-4235-a3a7-8afd185b1101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa172b9e-6698-4135-871a-36044ea60ce2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281da2a4-ac1c-4ed7-812f-8d2b8c69146a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e77e15-7174-424d-86c4-e999689020e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa250d4a-fc02-4194-acac-ced56d1e0ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b05dfe26-20a0-4002-82a8-06b27098f8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc03ffa-f372-4d73-b0b3-5b35a24986fe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dfec72-792c-4353-949c-b07c0caa722f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04ea0ed7-7d5b-42c2-80aa-89f9f97defe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563d7d09-93a0-446b-8bc7-c69ad22bad3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f6e872-33b9-4fd5-a414-8a50eb36ccfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ab73e3-6ebc-4560-8382-daabecca321a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bbcfc9-c04c-4ba4-beb9-d66cec1e1c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03854c41-92d7-4b8a-b1b5-d47cce1d2fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e51c1c-7d50-41eb-b8c0-3c0b3ab48fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d600a4ea-1f02-4ad2-9eb9-b0e60e4236b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a2663f-b7d5-4ebb-9525-92e6399ce19f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b172383-e570-45da-9d2a-ab68bf4a54cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8740ac03-cb7c-409f-9cc3-3adb5ea253e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41bb4ad-f4f9-429c-8494-92b3bf02cf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ebfc11-5f59-4d6f-9247-77ca042c325b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5d8ddb-5525-4444-8bf4-0e841345aef1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d742729-1c9d-435c-bb96-cc3f913c0a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73f9f0c-1e07-4e37-94b0-8017b9f549ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0498ef9-2e16-4f96-adfc-39b782bec53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a535114-c39e-4dfe-b0ce-66ab0274bad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cd832f-7f66-45bd-84e9-4995167fa6d2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce2407d-b08a-4d61-be36-367acdf6312a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59557a9f-a5ef-4cf3-a742-ff2400e803ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0952e55-43d8-4411-8778-88c07b8d48c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8616ef7c-dab1-4539-8eed-d3bbcad8d88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9b054b-54ae-4964-962b-0112fd7e9bb8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0d21d8-c647-4ce0-8070-20bd5181b3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24091cbb-f85b-42cf-8941-a09402be8d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e46d7ed-5b11-4b18-a1be-e36eee486b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "44e62f71-d397-4ee7-88c5-1cf84ff07cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19837537-8d22-45b5-acbc-6fc71df8c68d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e24eee-761e-47cf-9941-44c7f8a55060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45ce350-9cc9-4f67-bbac-225ba36e5e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5c5c48-ace4-4c10-a3fa-5ab4bb130078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "faef2666-7199-4d93-ab72-41b887a63f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac733b8-8098-41c1-8260-e4a10d5607fe",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a135ce1d-1a82-4f40-8d4b-60d9fa0ea26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7138dc1a-5d3b-4ae4-b801-2d407811bc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ee2482-f1f1-4e67-921e-56d2cc2df738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "97f3e198-bbf3-4aa0-ba82-ce05a4833474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e624bb4-e6cc-4460-938d-66848d6c0eb2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766d624f-39c4-4044-b0b1-5ee9085de164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956404b8-6e27-4a79-a875-9775ab247855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6513bab-62e1-4b50-995a-6b17a39e68c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "84fa510a-c7da-4311-a76c-c0ac63a5d113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88613163-4c7c-493f-b26f-23d698168f50",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1bbe30-077b-4038-a5cf-34f0f7de8eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa03cded-2e10-472a-b7be-59c70cd7fb9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b929ac5a-468e-4413-a57f-85b065f9ac1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8280e9-4ad0-46b7-8b76-b9ff763dfe78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1c8a00-26a1-441c-b812-5b4691dc47d3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7959c9-76fb-4e02-89c9-05902682556a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b5723a-9d67-45f2-9baa-203018cdacdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8a90f1-8146-4bae-b46c-73fe48073815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb59a73a-d233-4db2-a090-624ff537d624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55c90dc-e54d-4147-8b60-a702b694c469",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845bb6c2-4c9d-43de-b9eb-0286d71f765a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ae60c5-dda8-4dff-a439-c4c8aa9f4479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cb0eb7-67ff-4551-8eb8-4b73d09a7517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf5f138-b22a-4924-b7c5-2d707aa5ef4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbb80e1-4315-4ff9-bf55-4dec698b962d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6098ae57-41e0-41c4-8718-8c6be1b1a447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6424bc50-5a86-4a36-b2b3-66d9e844c16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683795b5-741e-48eb-ad9a-36d5f7b40b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5a489e-62d2-4c5f-839d-db3572de058b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3073f3b7-645c-4612-96d0-b0f907b44523",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6d2b3b-22df-440b-bec3-64591c536d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91db3c82-3eea-4bcb-91c1-83a3116dc677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f53ecb-098b-4ce1-800d-6b564faeeb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c995f75-ec0e-4b60-81d7-b7eff4a48436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508411a3-9a5f-4250-be0b-e9e35d6954c2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6443f5-bf85-4535-b79d-46802dcd0014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979795f4-aeeb-40d5-97eb-dc0c80d45765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ebfa92-042f-4f94-98bc-e58da95de989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65f04188-b5ee-4a0e-b3c1-3901f34eda0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef65363-e821-4cdc-8af0-ede84c485754",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe222ec-d174-49c3-8606-8e76c51c05fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef98fa22-fb3c-40a9-a969-62ebe3c8a305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f44467-a693-4b88-b5da-4e6b824ee680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed7d3b2-4779-4cae-84aa-ae5ecbdaee28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd1880e-53e0-48c9-84b9-ad0a952ad434",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67672968-19f5-411d-b4db-6127256894d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988d06d3-85df-4b35-8846-75a4f21f144f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237ff23b-76bf-4915-b990-c92bbe643855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe28eb77-212f-4d03-85b3-422042cbdc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbff1b53-b53f-4960-ba6f-7182c765c797",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d68cef-b95e-4a18-8763-eb90757765e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e9daae-3bf2-47ca-b314-35060e119c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda91172-03c8-492c-a0e8-f7ef08ac513a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8493f56-bca8-4aaf-955b-fff0d934a256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41baef37-df22-46f2-92a3-8735e7f24351",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a07e105-607c-45b8-8c02-8177e58dd2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff6132e-09ea-4b2f-a3d6-5320d4f26694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f731bd-dd32-46db-b682-b07256e95265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6af72216-a243-4d8d-a440-19674a945572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec6f511-0276-40e3-a9ed-00fbb9b1c181",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418a5f12-9c92-4a23-b790-c937938ff7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f575da25-1b66-49d9-a190-506f4529ab0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea94ec2-5a17-4351-b876-5d24028629da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a6c6af-6e80-4769-bbd9-595bd845038e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf29a54-ee56-4ce8-9af2-a1633fc00045",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d9a0b2-8719-477b-b025-a2f718f339bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37d306e-5d5b-4002-8bca-33d449ddc297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2da5616-e987-425f-87c0-18d95ac0bde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "39d4aa04-ae41-4ef7-8dd7-cd0d9b644abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2063dabb-5f21-4e23-88b5-233ff794b762",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1a5024-be44-4012-b5f6-98ca57487822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c813ea4a-5327-4ed7-8758-064018f0df2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dada10a-4dda-471d-a45b-a0d02703f700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "af94d938-c0b2-451f-bdc3-2156a70e9aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0baa8c4-3527-4c6a-b588-2777081be31d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f7b3a4-1445-4021-91c0-ca65c3c7b6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c59ae0a-d26b-40b8-9fa4-ab037616157e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bff467-fac0-428e-ae72-09539c4db656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0a7aae-cd9a-47da-9903-18e2d58a8ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bc52ab-56d9-4410-a378-2c99b3d54644",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d03c823-d2c2-49a3-be67-310182f96937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f16cd8e-c52e-4b3f-a1a6-4d4d64ed90a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78877cd1-dde0-4a26-9beb-c2642be40985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa50a19f-c02f-4bdd-aa9e-f85b5553ae10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cdbf44-01a5-4d3f-9b1a-4da7d3462e13",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26d63f4-2254-48b8-aa7f-1b3b590cb5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634fa73d-d8b4-41a5-aee9-15d6dc7f401d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2054d6ac-9254-44ba-9542-07057df8ab7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7bbfd4-eb10-40fe-8441-d3423b6f018e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263442ca-3882-4108-b732-ca20e643ae65",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8180353e-a9db-4a8a-8e53-f0e7d81d5ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd69522-2734-472c-9738-6a22873fed84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717aa6fb-937d-45b3-b740-dee8690c216c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa0e749-3711-45e4-bba9-95382549947d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f8fd52-63d8-42ba-943a-9629aada9b48",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0205bc8-84c9-49c0-a2ce-31c5ddaf10fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45fddf3-75cb-4f7d-b403-3debf1afc694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b957303-a2b5-4a4c-8819-a526addc8d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "88ddcc10-8949-4034-8bff-7f1d97e0f6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35da5291-e540-4a6d-bee9-bfcd87f1df51",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ab348b-62f5-4fb9-9907-7449c281ea67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b287b57-a022-4294-9691-ab7c18922b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811a1bed-91ab-4f08-8238-6a58cc54dbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b7fd39-34a2-4401-acf0-9ba903fe3774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d903bf5-7eec-4986-b4ef-42f73cd0789f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5c4794-5ca9-46e2-ad80-48e42598178a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eceec455-b40d-4898-974d-c1852fdaa829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c71fa56-2244-4188-b9e7-4bd0faf12361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8a1d07-552f-42fe-8487-5d983ea0388e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dc196d-ddb9-4599-a357-e0d479fce06b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2bb676-604c-491a-9715-e4471f386ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853bf56f-1cbe-4d1c-ab42-58dfd53d4c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d524ff79-011f-4295-8bcd-8e85eb46f719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c09cbc8b-8875-4018-8f6c-54c7a53f550d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d237fb-c2b0-4cce-ac2a-a8453dc8cf14",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0fe176-99bd-4dc0-b963-8b422ccb3f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e69dd1-7c5f-44c6-8472-83b6004cd162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5c8f09-e58b-44a5-b417-b5d9ef80f0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "199ec063-3765-4b45-ae59-a7f331ce2896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df18bd05-e080-4b89-a5e5-42bd731fbadd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c041d15a-5445-460d-91b0-bb81ddfb00d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8acd31-2ca2-4a44-8784-ad55b1f0b7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376a8da2-a83d-472e-ac5b-77fd2d7e2147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19d3654c-56c1-41ef-a0b4-b05aecf33940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76edb335-a11d-4a17-86a6-4950798ff680",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e50efde-d99f-4c2c-8a4a-dafefdf191b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d44a3c5-2d3f-4f85-8238-3b355054b023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2c57b2-8678-4fd3-9e3c-707107e1fc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e32523-bedf-4718-80e1-c983b76452a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb805c69-125e-4b99-8cae-9b1a00b11244",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760bfba4-1dad-443c-84a0-a7c3e6dad645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b631d89b-3a16-4fcd-822f-2b4b43d937a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e8f9d5-0c62-4eb6-af09-4d14fbf0c372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7897d9-7166-4cca-8100-8a0ff76413f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc451f3-6f27-4e40-8517-6ca4f12c0b53",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb801e12-34a6-4868-9321-ed6b46b2543f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c71c8c-cdd1-4a07-a359-33cb71b54705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58420278-1c15-44a0-ba73-3d3405981baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be135629-c7f5-4007-a68c-9265334d055f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c433bcc-b789-4f97-af20-5590fb23880a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c91fc43-29a1-448b-832e-c662e56a9308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0453323f-d123-4146-a875-3e0d13d0340f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e43b14-ccc2-42b7-956d-a9d28e262272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "235e5b22-585b-40cf-a482-d4f40ba2a246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d062f60-50d5-4a41-99b2-977062ab8b20",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2578b490-534f-4fb9-9956-3677c4d99ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46192e1-fcc4-47b4-b9b9-c68a184a390a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a200a22e-089f-4c0e-8d7d-64cc137f9f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29acab49-9ebb-43a8-8f45-b066f2dcec04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6215a3f5-c8ff-47ac-8056-7148372ad0b6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f1f92e-ec24-4bde-a149-47c52e7213ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8792790-1de6-4914-a0ad-7ec7d7485c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb528bba-4fb3-420b-8ca6-626036e670ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2f0bd1-48cf-4e0d-ad24-21839504b9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c096ee1b-5312-4084-98e9-3334354c4811",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22815493-4f16-4e2a-bdf6-bfda76a80501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80cb41c3-5542-486e-ba2e-851cf1787d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f28ea4-846f-46c5-9e5a-b9de7fcb8d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a306e425-5550-442d-9a5a-2d1626ba41d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cfddb6-d8c0-45d0-8e9f-a428e5fa6610",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac2aae4-92b8-4e59-bac3-4e4348d2b050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa711628-1c5d-48f8-ab59-1d2e0b77a3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5142fb8c-df07-406b-b997-8c138374a2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd8db5c-96c1-4ff8-9482-8db57581c3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85ee66a-06fc-4fe5-92cb-db2933c971d6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be336414-b1e3-46e5-a89c-2278c08c4fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338fe2f3-261a-4075-857e-d9f5e27b22ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c33b6c-1603-4396-b7f1-89e35593d1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8563d6-0d07-4700-be07-ea80fb55757e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58ab5f0-9beb-4f52-9547-6142a7ae5674",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d100170-9f09-49f1-97bd-5e8121ca38c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfa4420-66b1-4127-a1e0-b158a5762ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c0b808-df34-440f-8961-47e98eddf9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a355a207-f956-4577-9798-6db59a67898d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3861a3-2b7f-4aee-8012-98c2e9dc2024",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67eb1be-e0e2-451b-b2a3-ead5b70c5bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9504084-7852-47ac-97f3-ae8275b26b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c4a160-4383-44b7-8752-ae1602d2c837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4ccb1c-8b63-4df0-9735-f389085c00eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcc088b-31de-4a2f-a73b-89e3671e6133",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2031892-6a88-4acf-85b6-348e67d803b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def7d3ef-3d8c-4afb-93c7-0bb4990f0852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b46e0f1-3a9b-43cf-a5a8-e2ea8f400237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c015b8bf-5f27-4707-a54f-125c103cee44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167fdc00-a054-497a-9d99-2a6b1ef50fec",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b91781e-55e4-4a53-8daa-d20171a21390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271b038b-46c8-4b40-a3d0-1515add3f00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb202cc-bb96-4d51-ac0a-8df11e855167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a628e8c3-70d5-451d-923c-2d71ba3b61f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d3b99c-becd-4bc3-bffb-cf1385dab9a5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b03b313-06d8-4a67-8834-e2cbf1827a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79de2b2-2048-4a97-8402-b2549707ebb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b235a58-26ba-46fc-b8eb-e76994ada17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf52b83-948a-4f90-a796-2e71a6dd33a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc1084c-e576-4c4b-877f-2c9a92091924",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdde7ef-2413-4c53-94a9-6fb739bee248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163fbacb-06d8-43a7-aed0-be56105e89a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98e30f9-ee07-4b52-a94f-a1e578a785a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9688ec9-d801-4204-927d-02e2c0c1ee81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1baeeac0-c47a-4b26-9255-b0249fac4ea1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcfdab8-c14f-4fd5-aa33-975fc0d0c5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59cd2d6-df17-413a-b447-5845801eaae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f26c3c-7d61-435f-966e-5257a36dd4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d540c942-108a-462b-9a7c-bef47df04f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f4c5c0-ea07-4774-bc41-10f812a33a6d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb9ccf9-d1ba-4cc0-8308-535eea8ec555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9abcea91-12e6-4ffe-b345-d90370a24f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2644950f-56ee-45a9-a018-20152f8b4a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61232562-96d0-4d5f-a4f0-998cafdf8d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2763eea-4ca3-430d-9635-2c246760600c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29749c04-96ae-4618-b6e5-4c6b7131135e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebc6fde-1961-47c9-b412-732aefab8452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f3844a-cdc1-4936-983c-03e9a3c46483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0603e5-6e51-4044-9d34-73ddb68d5a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dff3dce-007c-406c-be5c-77a3e16ea13c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32444568-a652-427c-be8d-53c5b4c2789f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee53f6d-c30b-4c1e-9028-28c78e0dc903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99aab41e-25a6-4648-8e3c-3e50ad1333da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7911e361-46ab-4e26-9018-c21442093069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb76c443-2f8f-4aca-92ba-a4ee1edd1bb8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d658bc-5ebf-4da2-a2a7-96be4afc1d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d6af28-4c34-4b12-807c-124666287487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04987ec2-465c-4fa4-a6ae-ef93818d15af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0f530e-b868-4a51-8945-20517b0c33ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56d27e6-afa5-4f40-b523-c08cfaf29a5c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74549f6-e845-45cf-87c0-efdfc2efd427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e6644c-a951-44e6-aa5b-84b5f79b8428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2406926c-19b1-4f2d-bc7d-d71c3094c51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2394e56b-783c-43dc-82a8-664a2e9d385b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d2586c-3586-4be7-a6e2-711e0dd1e6bc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09495672-0707-422c-8840-6d419e85ee80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d513106-1b12-4320-9305-8115b543eba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bc585d-b8f0-4f25-b869-090d0d8692b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe34e3e-2edb-4bd2-8928-a04b15279126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612f7c5c-1ccb-4566-9e74-5c1d2e4b9508",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1e1c91-9bc1-4cd3-bb29-cca6e01d1840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2af04e-70b0-4d5b-84bb-7618469a5693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068aea59-78f3-46c8-873a-d78128580780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b64837a1-a3dd-438d-b669-90664d51a4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b846dd-38ec-4f43-a925-16d6e40a8769",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482ab551-ec49-4ea7-8a33-80c9f82f5121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6860adda-0e0b-41dc-8397-94ad8343e1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22fe692-c456-429c-af6d-92497b2ac259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc485b16-3428-4c81-b194-3473589125fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6102720a-c5d0-4358-a50c-b86d46bdd756",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8cdc97-541a-4918-91d6-03d491654f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d8edc029-d78a-430a-add7-a77efecedfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6c1ece-29de-4a93-a3d7-ba9dc312db7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "92e15f96-2347-4440-8235-7c8aac595f5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22bb625b-5142-43e0-badb-d633831a6325",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a163a317-fdf0-4fa0-9e82-a156c3b23a2a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f5b21b-3bcf-4bcd-af42-ad125f85b3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6389843-2352-4ea5-b573-53b6fbe2fed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a99def0-91b8-49f3-94e8-aafd44806242",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd06e7fa-b83f-4e93-8fa5-9b0ca5d95e38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8409e97-543f-4b4e-aedb-031534fb7781",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a1f2362-5b96-44f0-879e-138349c1aa2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c9f0e42-eb37-4153-bcba-539a8ffa7888",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aff228cd-cf76-41da-86e4-73adfa74e85f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b32421a-e113-4573-b9af-7269a0068294",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "712cafff-1506-47e6-a82b-8caed4c8a838"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3a59fdba-8223-40bb-ba5a-0d2da4bf68ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "51ccab4d-7839-405d-a91e-ac62e01edec9"
                }
              }
            ]
          },
          {
            "id": "1a6c955e-08c1-4e74-ae47-52b13db643d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4d2ac21e-1544-4d19-81f2-8e3b3669ef0a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0098d29c-eecf-49f8-973c-430560f954fe",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299ba0e1-e500-4793-ae07-6f5664ab5886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8cc5b530-2d9c-4f9f-a35f-ad506952c023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec2bc86-6fb4-424a-b6d5-08a10fd76666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb47918-1112-458b-b360-69b1cce78bd9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "63621337-4b92-4bba-8da3-b768023b21c0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "233ca56b-7dad-494c-b41d-4aec51d450fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc84956c-96c1-4eb1-bdda-21b545283151"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbc2b3d0-7e82-4157-8028-0d3d6ac9eb04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3cb993f3-aac0-4642-89f2-082cffdff0df"
                    }
                  }
                ]
              },
              {
                "id": "5a2b22a4-ef5f-4592-9307-078d25ffe4dc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a39ff38-7852-4e2e-b979-a13f3db8b0b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3519325-80cb-49c5-8ed8-43c71cc66735"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f94e948-c5e2-4412-8579-39a81990589d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b99d94a8-ee5a-475a-8a76-b1a67ae43d7e"
                    }
                  }
                ]
              },
              {
                "id": "fe502e29-f559-4280-8a3a-632f618e75af",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19b6262a-577b-41b1-b8c7-37b6ed7a741d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e7d56bb-b347-4ad2-b3a2-9c3e96545140"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7800686e-fd7b-4011-9ebc-5af682a5c715",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0c89500-b1c9-4b98-81c5-55feb795ec6a"
                    }
                  }
                ]
              },
              {
                "id": "1e3f338d-e618-4785-9cd8-e81329219016",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e77af5f-2f58-4dee-a420-7805cfc1bb53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db61ab04-68ad-4be6-b894-93ced9ee3698"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87c5a88c-3435-454e-8028-890aaedeed08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "df6d8072-324e-4040-a7b7-d2ddeb15f1df"
                    }
                  }
                ]
              },
              {
                "id": "9dc34a8b-28c4-4ded-abba-0314e2b014dd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "478b4535-bea3-42ba-8192-5fba9040a925",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4549c627-65e4-4c81-9028-91d7f51ac819"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2cf116e-06e9-45eb-91ca-07dd0271fcba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3af55c33-9333-4eeb-aefa-511c18cf42f8"
                    }
                  }
                ]
              },
              {
                "id": "c082ac3e-08f8-4762-a032-0b67ea3ea3b3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a573014d-7306-4819-9387-86b667afc18b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62f3a3e2-c1f3-4f2a-ac3d-71a8b6243a44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d7fc0f2-0ded-4733-bd5b-7755aaa76929",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0cb6f781-286c-4f60-9b56-b9ff655bdb66"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89432ee9-b6c2-4cb6-ba9b-6d340db1d004",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "806cd511-5653-4bb3-89ef-dd43a7c09820"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b393f292-4528-4cd9-86c1-e43958ddfec2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fcb52d62-ea61-4196-86af-a045bbd1bac2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "288d21da-e249-4f8f-9447-4035a079bf4f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9c798b8d-08c5-42a0-9fa3-ebd95ca2ea4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c53ed9ab-6085-413c-b921-55c9b3dda3b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1601ef25-cfb1-46e8-bc75-5f894fa22c0f"
            }
          }
        ]
      },
      {
        "id": "9b8abfb9-3ab6-493a-9344-37a131a4fbae",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "37366968-6aec-42b8-a3a3-6ff9f7ef8daf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88ee583a-e32f-4fb9-9043-73d0fad936c7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2feb5097-a4df-49ce-8d81-f12222a68792",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3976d91b-7e38-41cb-b19a-17bb737292e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40c2e0b-b477-4004-bb9c-e9f620670a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52aab03a-1edd-428a-9e55-4d6317d659fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6da044f-f566-4055-a2d4-81a3f6091cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495a1be5-cf75-41df-a271-7df6db56bb34",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5781f2d1-4ab8-4666-8edb-dc06dcbaf231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06dd30d-262e-4285-8854-98772fb798a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec0b467-f680-4ad0-acb4-e188554599de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94f35c23-4dcd-4261-b482-57793040240a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187ddded-dec4-46a0-bd3d-642501766c01",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c49dda8-f776-4709-b1a4-10b322a9f58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce04303-fcef-44e5-b2b1-60ea8beb7493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f46e06-a778-410a-87e4-7b213bfaaed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d74549-2ed2-406b-a69e-6a194f823486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cdbbf2-d175-4f1e-8c44-d9bc34f6722f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135a2a45-9bc0-4fe3-9de3-f007c2af1536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c3800d-d240-4d82-8c18-0905b830ed38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4aa13b8-38e4-477c-954c-4f59b56c288f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd840465-5c40-42ee-83c0-feacee6f52f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56ec31f-74a3-428e-b09d-894a2d89f65f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0539b43c-5027-4b1b-b55a-b6e032c48a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71f198a-d8a9-44f8-bf09-823993f98e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1d1fcc-a1d5-4828-9003-d16c64a43293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57aa2597-a91d-43c7-9030-2a58a7f8fd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca4e957-de9e-46fd-9ec3-cba8a87b0acb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93075e49-557f-4f6e-a90b-4fb3b0fc13c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad947f8-6739-4ddb-b4b0-484b16eb6cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86be5a61-f105-4b54-b5ff-5ef61053fb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5931e4-2bcb-4512-b7b4-1a2e6bdfb4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0ff427-782a-4653-bb12-447ead312784",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5670563-4395-4e9c-827b-bfc1d41cea99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd9f03d-dfc7-4d1c-a42a-913a82246419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aece4977-aea8-4c96-93d6-841393a6248f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0e6320-6e3e-4e11-b9bf-1fd9e88c0e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3504b60-e7b9-49e4-ba44-a2d80761d74c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba66b40a-46a9-459f-b1e6-298fd2adf4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c166287c-2251-4a18-adba-427b615c9c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bbc324-7ff2-4286-9f16-ba2e1083e7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76e26e77-959b-47e8-907f-047e21bdf451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4552fde-c554-47f7-8746-bd03e3522043",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb8024f-480f-4517-a629-97b66b00b4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f82ede4-6946-4072-9b02-69a12173912f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ec4534-141b-4343-b138-31ae1c328f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c56e7b3-a68b-484f-afca-963e7c261feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb940fb-fa65-4775-8ca9-26e769ec0cd9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8d2a6b-81bc-48c7-b009-8d09ade85175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996aaf39-7593-4c6f-828c-c089da54b749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651ea3b1-2686-4782-8dfd-a367f722083a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec06da48-c822-4895-8f7e-54bbe0fa1cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a583d67-177e-4844-b2f2-2851bb37eef7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92327a35-41c5-42ff-b09e-73d86bb377a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dba1889-1270-48fb-aafc-ecd39c7f4b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8530c2-6353-48c2-bc43-84e4229be951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "59ad513e-d582-4ba4-8d4a-5cd24842bbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4682484-b3f9-428f-a58b-817f52e68f26",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120669fe-adae-4028-b263-b1a2567d0e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8ee011-6462-4292-b821-644c5793df5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f76395-860c-450a-8959-22d982037c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2b57c2-55e6-46b1-8fae-4e1d56f69078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbd59d3-dec3-45c3-b146-ee04bd7b869d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4932998b-40b9-44e5-9fcb-c163d14d3356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40eca95e-45c8-4425-af77-2fe3bee3db10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dc134d-c70c-42cb-8c19-f492d9ccc663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97ce77e2-919e-4a2e-9cce-1b1cff6ef168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719e014a-3ba4-4b7a-b3e8-2d14e0d80b07",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c8851d-bbf8-415b-9226-bec6ea173f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e420908a-8263-464b-a5e8-d14235cdafd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5347679-3d94-46e2-92a6-d46e85604703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0879ec16-55d0-460b-9d15-92fabe2f5f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db68db2-a0be-4cac-9492-c438a2a84261",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636ed3f2-91ce-441d-b6de-c06780655465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c2a1a9-3f8a-4f2f-9ef1-d1812f47ceb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e39d11a-c661-4f2e-b5de-44e2dff43f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "011b9373-d451-4e70-ba68-1e04302fd97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0cce73-38ce-4552-80c5-63a390d0bffe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65dcaad-51dc-416b-b72c-54d81a25d151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6252e15-1d32-4a08-a369-7e4f78e31863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5797c7a-f5d5-46e1-a3d3-7c37ea65a7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "544e8cb8-5cc5-4ac6-9d90-61f91c38ba3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbb5193-074c-4154-9dea-d825091b5acb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cb44cb-70fe-4f3d-aaab-a7e59ccfa723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba4be31-e250-415f-b66a-eac3184e1d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d670aef-a303-428d-be15-a6f5a0a28d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b714980-78fa-4ce0-8281-8ca518226418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7317cf90-d67a-463d-99ed-db0d8198e6af",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ea45e5-f784-4373-b202-0a8485cf0c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed95087-9f4c-40f5-8447-bda5365838f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2215afc0-9206-4d22-aa0e-9a95392ef224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d1a30f-fbca-40fb-8b96-3604e7f98b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa801905-dc46-4e0e-b4ee-e40e171794bc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb37a185-13e3-45dc-8f2b-dc2150cac707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0dd140d-0dc0-4838-9f4a-fe11a96d3aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de82452e-f2c1-48fe-9e5a-039f0eabc833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f65717-bc4e-4eb1-9d8f-cbc38ae5cf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97a2f86-f102-408e-a1a5-25a3032a04c8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc673d5-6a8d-4fc6-8878-a80f99aaa179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397b157d-c144-49f6-84b0-6dc63619af9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28442358-b8b3-48da-82d6-01a090303735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac287f3-4e95-4b8c-82e4-06f936607427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae40c18b-d9f3-4929-889b-2e60d82279e3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96233698-b95d-4a2c-bb54-6c6f3df300b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76b7265-d767-48ce-97a5-da977540c6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8b7f85-1fc1-4186-b2d5-c966878de05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5e0e56-7500-40aa-96bb-aa7f0e717b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172defec-e2e9-467a-88c9-e05886d8c5d4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ce0bf8-1b13-4572-8c46-c294b53514ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec24622-7b61-4ef9-b1aa-c38b5aebe804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d3f100-e849-4135-9dfe-36b195546271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1923e0a7-0253-4465-9154-9e5976b650ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2531d495-c01d-4fce-8dba-dd9611c9535e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4fca7f-4257-4e08-bdfc-7e5c15d85fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0dfb5cc-95f3-4fec-92e9-c7c41c402f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44e7807-a4c3-4f47-8af2-5c12120fde58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4175b536-96bd-4017-ac32-07701400b00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b8a50e-76e6-4442-b113-a1a706287e14",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7372eb22-1f79-4c57-8d41-5e936abe9fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9816d0c-1611-4d0a-a88b-0d4c4645d258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6da560-69b8-4bac-832d-42408f056e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "382a5c4e-2f26-4ad1-b6fb-cdfb7925f65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091cdacf-935c-4a61-8cdc-431ee8cf2dc7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6787af20-4fb9-4582-a885-6d4c1603fed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0b4dc0-1251-4263-b9aa-d5b348f39242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb47942-7663-41c4-9595-febfaa5b0b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02193e7b-708a-4e3e-99e6-8648168dacad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c81a2fa-e5c9-4dcd-b785-7908f9c9255f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6583bf49-cc11-482a-ad50-570c0852703d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2c8da7-3ec0-4c76-8f15-3ce26c1b965b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7897f7-3856-4cc2-b486-4e192c0daab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4439ca9-4269-49d8-847b-ccd2f0605c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db1cfbd-919c-45d0-960d-707a18651d84",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9e04e4-3770-49fa-a06f-fac2da70407e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1a1e12-ce4c-4ed2-bff8-d9b70df11c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687f3167-f051-4198-a861-fa76d30ee21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9632503-6208-4d81-a88a-7737fc872824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effa1290-44b9-45f3-8de2-327e7b11a221",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55074790-f68f-4d0a-b362-0c9a3cbfd073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88773bd-0281-4bc1-af9a-05430f991053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29848f1e-486a-4866-815f-b57e12335c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e492511a-2faa-4899-b790-ee5aa5c80509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be570a16-2f4f-4a54-b1b2-0e379290b808",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e2dc15-b1a9-4741-8c6c-f3ce63cff9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59d24e7-1a5a-44e7-84b1-d0d7a1755e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af01609f-a906-4c43-9295-8bb9e2e0b721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0da9e6-aabe-4f96-9eab-86c5610eee35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f051397a-0c22-4e1a-ba0e-909344cbcbb6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a99b1f-da19-4175-9e6a-c709d9b4d6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4674090-641b-4a44-b13b-3dfa2467a02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e9abf7-5247-4259-af8c-d19b503aff86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5295269-2cd9-4cf1-89bb-ba3985f34225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa6ed5a-875f-41ad-880c-2deea6804755",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b9ba3c-a089-4e3b-a673-060426809811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baed5880-5078-44b9-9732-662b6976aa78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48be1e3-9fea-4e53-a967-1454b28526a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c31e0e2-88c9-4e70-b4f3-e3bb755b33cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fa05b4-c583-4ea9-986b-c7cad50345f1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455141e2-b0cd-4471-9bfd-6fd0e7be8fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a45f5c-5132-4281-a29b-22c8f0e1b04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9655ebb-b0a1-48ef-b717-ddf78cd880e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f74bfd64-89e1-4163-bbd4-ca3e059c8427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee81a75-53ce-43b1-8804-7d5a622876b1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bbc5b1-f944-4e23-8052-16c33e824022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d211b31-3a32-4336-ab00-8817c415150e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd56629-ce30-43f3-b97f-36a2f3c9087d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe99d74-daeb-4e89-9326-9dfee711b632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277f8702-123e-4c2a-a070-ff9b5caa9e9f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2169990f-c4d4-4a74-9652-96606c56713b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54008611-12d7-4cf7-8aeb-211af880677e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4aac58-46c5-4c8a-ae52-3cfbac519891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bcdca72-d82b-4fc8-9dfe-6e796001d7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92f31cc-1ad1-4707-867d-2e01fd6b198b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f425237b-e977-4c91-a7e2-2eeb65e95aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4bbc0a6-c979-4f33-ab02-e6a6addced00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb12b3a-b0c0-412a-829f-6b0165d7895e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea16066c-566d-4183-bee6-4a0c79ea84ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21276415-ab41-48a1-9522-95e679f74753",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a25a813-6f6d-4310-b9b2-393df7b5a3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a251ce7-dc82-4b2a-8abd-617be81ad487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79517eb1-a802-49d7-aaf9-5f1aa4c816cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32759f1e-3e4e-4e2c-a7a4-03b4b192bb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8047b568-b0f9-44a6-88cb-70ab2e7b98b9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c66478-f3b5-4b24-9d26-f6808ed8b202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0d991c-3de1-4583-974c-b8f4e2bc8c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851e18d2-a00c-4ea9-9321-a02ff2e7a29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84a8ef0b-1d99-4c48-be15-37593b0db0f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5038578f-f14a-45cb-a345-17e37e8c74ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9125e09f-465f-437e-a043-8efe8c101f49",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d24765-fc67-4cc0-8e28-edac52205d18",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4a283d74-c5e6-476c-a4d3-f4c06ebe28ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a892cc4-be50-4684-8b5c-e4fa6d453dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15a9b46a-1b8d-40d1-a303-1f5daa17c7a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f0c5308-d3fb-4b38-9f1a-4fff0a8f05ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5621ae0-43ab-48e3-8147-9e633e12c63b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a466c4c7-39b8-4f6b-ae72-cd178f93f2d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d2d69e6-cc4f-4355-a9ba-771735e16b91"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85cbcfb8-5d03-495a-bec6-3a9be7c0f186",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e3e51985-ccca-4aa9-868b-bde48a8ff4a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adc913c8-ba06-4855-bb85-9d0afc3b981a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff979ba2-ae48-4092-96e7-ade4cd226623"
            }
          }
        ]
      },
      {
        "id": "38244607-8e9a-4d8b-8344-8133c57e7df5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bcb8bd77-f76d-4365-8322-7be26cd3a981",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f8ddd41-af55-41c5-a06a-f13feaa55cb2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23062f8e-5c3e-41ef-9ba8-4882de3d63e0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fcb9a6-9765-4c40-98b1-e7deb8a9867e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a8f5a3-2e5e-4546-9dec-636aef090127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ac4d57-066c-4dd1-a053-13c4644f8e56",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9eb161-c51b-4a66-86fa-39f3f93a5d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185cb418-1aec-4ca7-b44b-7f1eb111e003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9005ce-9291-4bdd-95dc-552664d6c679",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8cd897-25c0-44f8-abf5-6c264f2372f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e830e51-e9cf-4585-8ac5-08dc86a0bdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373f2172-5206-4f27-9aa7-ca63436f47ce",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdae12c9-2937-4877-b890-a8336236d645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a816fb-d4f4-4013-9b13-4c35633b20ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eff7ef7-2a70-4efc-8e96-f0bbf07d90c7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1b592c-f41e-4ba9-a575-cafbf7b794c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105afb34-af7b-49d8-ad28-6ff2e9cee753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462ab3a7-bc6c-4cd3-bba8-fa5fcb85bac1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf097cb-73fc-44da-bee5-4189b8113884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec89468-5801-44c1-b3bb-2269f78f64b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dddb32-16e2-48a0-9293-ffdb083e4dcb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cdb0f8-af40-401e-892c-07765546269f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1d36d8-e0b0-48dd-97ec-1626436f5315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d1fc98-0886-4a3f-8f2d-84c80b6cd6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b150db-4039-4530-951b-e1856fa6ba76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d849547-d4de-487f-952c-86a89384b71f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1997604c-f53b-4a55-96d2-ec2b51c72435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b44b4e4d-4e1a-4dc2-84c9-698c297e55dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446742b6-8300-4c22-9c5e-72638d1170e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b0500b-38c4-4b3b-ab86-62774197a17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbe6990-f813-4bc9-bbf8-25345b695c41",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4035a1-b47d-4a25-8fec-51656c863d1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10745a82-a426-49a2-896d-1dab9c43af0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bd150f-0745-414d-b51d-2e91403831f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75914c16-d4f9-4a93-80e6-2a4372bcdbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b8b8e3-6519-4573-abb7-48d93257ec81",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dbd0f2-a075-4171-aff9-cd218e0dfb40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e446f50-d4c1-4750-9491-f71466b5ea30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96504b6d-8c5c-4f5b-a98d-e9df4b3cdd74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d918d211-1500-4d17-9d9f-656c5aa79e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f611b69-fa30-444a-8bf4-3a099ee25b75",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eea8d95-4a75-48f6-88f7-e2ac70884408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c113f4-5902-435b-aec3-72cc0c9612c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4cf553-7e42-43a3-803e-fb77dad4ce0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24fb36f-b417-4242-b5fd-21260c023807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f54ea4-c176-4efc-9cc7-8e55f5793853",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493a51c3-3a6e-4117-ae3f-75ca8aca9e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34bb6967-eeb3-4279-8e81-c9858ff53ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcbedd1-5722-4788-b6b5-60bee4a69c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb1df56-b365-4320-82b8-669ef6017ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3c9bab-f3f4-4561-a0c9-a1a112f1cc4c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c28929-06ab-4ea9-95c0-0913bce61e33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72cdd0a4-ae36-4763-9fda-5285fdf3054d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee932cd-d219-41ae-bab7-62ee8b8ca90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d06cfe-e84d-4c02-975c-979fe5641baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38466a0-0884-436b-8441-7ab3814cc2f5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13257de2-b0aa-4746-994f-54a3070ff560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a258e3-2baf-4a54-9edd-17d69493e1ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d66acc6-53ab-4f62-b050-d79b6e15248e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d942f9-cbf9-4cc4-8708-6531cad13b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9aada4d-57a3-4585-abdd-743074364e57",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f88ff8-07ed-4713-b99c-44ab1f399716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f8f9d22-9a61-4da8-834b-b92ab0776fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe7f5a5-b17a-4e53-a104-990f80f667c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536748bf-0eb2-4988-990a-0f3d2b7deac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3655366e-f3e3-4367-a777-99bdea8b31f3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47857678-df43-4aa5-9c0f-5dbd6c2afe3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "055a7561-566e-47d6-85d2-884c35fc9708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6132ba-f028-4430-8b16-59786ba8c1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab54dfc-c47a-42e5-b251-228daabdce92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e496ea3a-9bea-4d84-892a-c26fe4db3e90",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e61db5b-109f-4b04-bb7f-0e5dbb111c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a62b7c3-305e-4235-9ceb-2ce0597a2895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d406f2b4-e8e9-49d2-8770-b04744d50611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d143b0-625b-40c2-9c72-85e9f1a7cf2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af0c1ea-9c8b-47b2-bfa2-9fee5c586c27",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176a934d-f517-471b-941e-ccd67d158995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdadd84a-e622-4cc1-ae70-5c3864191e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724883d9-763a-4e23-82b0-345263f4f333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cf1271-9e33-41f9-b765-b1dad906b8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7627aea6-21ad-4f41-b9d2-dc3c3dfb2158",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14855994-80f1-4131-b498-3f2777a575b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a8d720-23bc-45af-a954-6c97f5863518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb84f4f-778e-4586-9ee9-e50145f602d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfabe746-7d3c-47d6-8c88-7317f817d481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfe5dd8-78b9-43bd-979a-aae9f6a7bc73",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc59cc4-6e92-49b3-9405-01b1f0e934b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ea75e5-3509-452b-8621-1b1463bbb7c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76601650-fafb-437a-9797-c4a6b9b7cf85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1032b2-4d61-44d0-b6f4-87a7e6053d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b113b1eb-a072-4dd5-80d9-f0bcd17920de",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab524a37-251c-49e1-b32f-90f5230085ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c569867-5129-46c7-8bb0-0eb273871226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22e1262-4cd3-4868-bb68-33882076ec3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497c8f4e-d245-4e3e-9ebc-39ab3c635c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc12a180-33f0-4fcb-a779-808ae3217701",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf8ea7c-49c1-4bc2-886a-02c2e5a1eee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65dab7b-1f60-47e6-9e18-98bbdfe0c17f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6dfd50-f31c-4620-af9a-976fe6b0d6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82717a81-cc3d-4d3b-8d82-82898757bb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0d81f3-ade5-436f-b67c-8b4f92b255b3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01d9001-3bc0-4517-b96d-bde80a5a1356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd24c12-42ba-40ff-b70c-8639c7cb081e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aeabb2-a31c-4155-923a-b00ba270c50f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "becb410b-725f-405b-aaee-2f045f8d5066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113c6d03-86f0-4aa9-a601-1998eb014e7c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df433c30-b241-4a45-af23-a4e4481487ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a420b1-b097-4116-92db-7560713572e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d127fd0e-2cfe-4148-bf35-a760be0e7f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d8d700-2ec1-468e-9d25-f1b516746155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e1af05-d312-4e14-9fd0-238bbe9a8540",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f78beb-7ec4-45c8-8d33-8a2f839e898b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8695d49f-afd2-408c-ae2a-36813cc32600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561db245-ca2a-4b00-8975-f25f63f237ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb12ad15-854a-439c-be00-6ee988ced551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4feb3e05-9a18-45e3-b019-3eab2a131e74",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef966a43-4be8-4a41-9406-71762ae597a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbeec42e-0176-4ab9-865b-e3580b9c2b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50286cf7-6b2c-4d02-b307-bd50f303b02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83c6c10-065c-4e5b-a703-b97e6b83d8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fea61bb-821d-43df-ab63-595615ce32e4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62da44c8-750c-42b6-a212-c283d8c261da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b867ae9f-b840-4e85-a959-213cf0918037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed4d8b8-b0ee-4804-95a8-0f2e2a78abbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8cb641-a000-4e8c-9a27-0b0645cdc307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55945c0-0b7c-46cc-90d5-2b2adfa773bc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74653db-cf5c-45ce-822a-c7de395748f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc132da0-abca-4262-b11e-dc0931499f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75eb12d5-e60d-4a68-9804-608446a6069e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2954b4d-3be1-4ed5-8ea1-a173285e9a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab70553-7565-4e5a-88be-bb1957a52d09",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22e5549-7dde-4921-ba8c-60020c52fe80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9353712d-e027-479a-a6c3-a2549e82442e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91095e66-0a6e-49f5-ae0e-7d46518b4d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864af412-51fa-4ab0-a50b-20f1e21274bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ed63c0-f619-4804-8843-235ffca66c37",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8728f699-7505-4392-af3b-605148f08ea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4167ba94-8376-4b3d-b66a-a159cde23501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a568c5a9-8bd8-44a4-bf94-921c957c7c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa79d5b-54c7-47a1-8dd2-e0d7dea21e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d17227-1cf8-4cbf-ab5b-21ae673c5cb3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d4d4f1-da4b-412b-a783-db59d3a8b08e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "767ecc67-7dbc-4602-8628-9af6c98bbdfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3859cff7-dafa-499c-bb1a-01ec575be70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c91834-7337-4229-aa94-1035f90c509b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b676c196-24ff-431a-a8e2-969de4b60b3c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6964511-65ac-4529-a012-fa94011602c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5981c1f7-6ecd-4b13-bf43-8e3f83c7f5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b1a8ff-39a3-4ec4-9543-bdee493655f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb14c05-4396-40df-93f7-a0bd391cc671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a7bd31-29b0-423c-a57d-304a7f6c9358",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e23b7c-7e84-4699-93a3-53e0b9f5be11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdfd1d89-fba0-4694-8192-3b4b7dba7bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b25e7c-f5d0-4364-89a5-f8ad109c82d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7148fa5-e49c-43e6-aa54-ea9bf7766a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b31e854-b12b-436a-bb4a-66ec79326b89",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a57284-9b05-4abe-9d81-7517f2f8d211",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e5c94ba-67f0-4c28-9cef-3eba746a087c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6dcf29-e320-47e9-a1ce-8de651055343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9cb335-6bb5-424a-99b8-f4c463d31bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a586dac6-3c45-4a56-98b4-a878b157c792",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5192da47-ca31-4564-9214-c8ae3263d315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d832400-24a6-4ac3-87ec-f2dcdf3c223e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7254eceb-a661-4484-983f-3f37ac13c217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc65682-ccfb-48a4-9766-ab123835dedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c3b7fc-96c2-4dee-a592-574ac5fcde17",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff9d742-74b4-4eb7-adeb-c0c4f8ebcd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1014c1b6-d22f-46d4-9154-6e9febbe0d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f698ec45-fa05-4f07-ab4a-c09df8c925a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afad48b0-bf43-4d65-84ee-3741093592cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022f2392-f298-42fd-b2a9-3761c96f4be1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f68b36-c634-41c4-a4a0-973ab79a60db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cc81c7-7a2d-4fdb-8062-ddefa6f673b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c4ea5d-d836-4849-886f-2407a50b7476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ffbfd3-42c5-461a-a035-3f63d8299bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875a68a1-b353-4d2a-b4d1-e510d04016fe",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f414a2-67b1-475c-83d5-b657d1e0aaf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6db8fc-a396-429b-9595-b99d0b03eb23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ad2a72-4319-43d7-8e3b-b460635b5dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e634351c-e5de-4ae7-b2b1-e7499eeb4756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2c5396-0c8d-4d78-a50b-e6ca0a9d7a70",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f495ad-7598-4ae2-9d7c-6b1c8a6ec18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ddf90c-aaa5-4a95-9424-e426574f117b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7927efd9-b7b0-4911-a629-39fbbdaf6f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c341634-0250-41a2-97ad-940ace112fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20009477-4e09-4a42-8866-f9b99893aaf2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624e6915-c78b-4441-8d8b-ba0a6fbcbeec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050a9583-f194-4da8-854a-7e7657b5cc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "826086b7-62ac-4428-84dc-2ae6b35ef258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b714cb8c-9887-4f16-8687-0aa321318512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c42ddd-cfec-47fc-97f4-9d5294d72f6e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713ced93-9152-4df6-bcbd-de56b7a14ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f70b586-adb4-47d8-a19f-69ca0cf4b7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1aef59e-13a3-48c0-a789-bf5585edd0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc9b1eb-897b-40e2-af61-4461896fafe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035cfb7c-74b8-46fe-b7c9-56b204ddb8f5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36eec134-a336-40f4-ad93-e9aedf0618bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7400687-d83f-46d2-b244-1778af5814a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44808d62-b080-4561-866b-4978039e490f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58487b92-a1c3-4cb1-874a-1666ff0e8173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fefebb8-562c-4705-a353-fb69c0709da2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85de8d0-cdff-412b-8b2e-0cf09c1fe762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e05b9e-9a84-48a9-a299-c5f23b3df7eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17c6424-11bc-465e-a69b-43aefe2f085c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f45d06b-dcdf-415a-8a63-9a2f72a1791f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452f98c4-02bf-488c-a2ce-ce6eff31e323",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7d1a4d-1a09-4b83-948b-540b9a53c3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70048774-b33b-4a5d-95ff-58dd8efaecc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae662e25-0041-4cd1-9ec5-dd7e1f1697d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13154a31-78a4-4dc7-a71a-ea40681d57ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a926ab-7578-4d6e-857b-4355e95a746b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b4f109-96f9-4daf-a3ea-528ef579e2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "118d8604-ef85-417e-88b7-b452ddf37e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36001051-83c4-4e75-85f5-c39c7c589c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e08a5a-73a0-4b60-be33-741b0b63dcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544f7801-61af-408d-b5dd-45d3b978d463",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4749b65-8f9c-449f-ba69-bb80bf7d319e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e14a304-2ecc-43f0-af46-fe7517323ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c04724-1a8c-4aca-acb8-332e8046462e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e933c452-d0b3-48cf-ba3d-83d6e8779fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246f45de-b5b1-4aaf-a9ce-5c03839e47b6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994b8c65-fb6c-449d-bb54-dfbd07c12d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bc7188-1d55-44f5-aa91-733ef071ab77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea165f4-0898-4b33-88c5-f4d8fcffda3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7240fcfd-d672-4464-893b-82b1a3802f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583c73c3-2f6f-49ba-b28f-c95b243f3eb2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedef8aa-89b7-4522-8ece-fbb4cd37ff94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8df4959-7a72-48a6-9132-1c1bef82bb4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe54e618-a179-4a00-b69b-7e36b229df0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194e5097-2fb2-4bfb-81f0-20f352a0cbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e22f9cb-e278-457c-9105-39ed3f1e0fdd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2848e2db-a5f7-4fea-a22e-7d3b17e58223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e756e56-67cc-4f45-8a6d-add9a438a01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebf13eb-422d-4582-b96f-814a831d1bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768481d7-4427-4ca4-869e-70dcbb433261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b88935-4db5-4ebd-a749-f0df7bfc2e1c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d67ead3-796f-4ee1-a7f2-3c29ca6e2803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2cfd234-c7d3-4b5d-a39d-5f466691a33e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96748c16-2d45-4ab4-8261-902046421f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fef459d-ef4a-4d9d-9081-63cba8dd3c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0d472e-5407-4171-99a4-8d7c4045df79",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa924313-b169-4b98-b923-5e2e32cad755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b8c6e4-f53a-4976-8cec-d22bd7d11106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebdae4b-0381-4a20-a832-343745e85e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ca1961-145e-4c4b-aae7-a8ddccd941b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13dec575-8be6-49bc-a7e0-dd33e990abd5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d22e4b-0fb4-4d06-b1fb-5823abe9af16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cefc5357-9e05-4c3f-96df-e5b2c14e255d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b3fa0b-c059-40e5-a40c-641347bace42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5825afff-820f-4d76-a96e-39285c6b207a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1a002a-159f-44c4-83c2-d75e13d22ce4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb235a9-d7dd-4342-a185-21343f00cd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc79907-d55a-4ee1-8dfb-6e33e3586cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ea0af1-3cca-4c44-95f7-d88fabce1451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a02884-cce8-4658-9400-0bd98cd6863c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676ec917-cfbb-4c0f-a773-32f23a3bce47",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d87fcb-4747-4800-af06-ee0bdc4536e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7815e0fb-1109-489f-b75d-d106143fca89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3631289-26ec-4529-a224-3fdc0dbfdf34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26d9d15-26b6-4018-9542-beffcaa1ef83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac66bacc-3eb0-4a40-851a-a592aedc420b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393c3f18-5efe-42e6-8257-abb368e0fb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207f1973-0d86-4156-a956-276d4be9a1b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9514e948-d090-4b9a-a416-acbdad6ab763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c83873-0779-424f-919c-48515db00534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a77644-7a92-47a3-bd5e-e8574f86fcb0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a42800-fc6f-41c0-93da-a877e2e0c837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6a3523-6711-482b-a6cb-f96c48d372e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf3cd55-73e3-41ad-a56b-601bc106ee59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7794a76-3f05-4cb0-b810-8074770d2e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ae3711-414f-4220-9777-f6c81bdd2047",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff211e57-9d4b-414a-9854-4a979af93326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693aa84c-afc2-466f-b66c-c5e1b388c257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94b9c9b-e791-42f8-bd43-872ea11a714b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622f3885-ad0a-44c1-9eb7-6ae1b52a0dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1d2403-a58b-4523-9c19-b198ba4cc8a2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad119d1-167b-4b95-b613-3e478dab2ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83076915-322b-455f-b72d-f0921b932947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f42b74-83ee-4230-a08d-bde1c0f04ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9802774-deac-493c-96b5-41ca9c765630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec82e9bf-6d85-4c16-804f-987c500743bf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9761cd-be39-46e4-b8b0-9c2da291f4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10cd545-6c8e-4044-88cf-a78dd5bc6077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2791fe44-ba71-4168-91d8-161a9587f416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f839d2d-2dd2-4a00-8224-ecf38d98a74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8b9648-3a0a-4d65-b4a8-4ffda5cdf517",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77783b1-1a25-4229-8d59-3ac9d9dbbe7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53dec632-cfb2-4c0c-89c5-0566e91b6cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b06c5a-65b8-4455-9cae-92e784905f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d87aa9f-2d61-4375-8946-51151f4c0d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea2b687-e651-4192-aa8a-32cbb9945234",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a2471e-3334-4c3c-89fa-af0e03a40289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319a9e1d-2819-4a29-855d-1250019ea2b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf5da20-1a87-4d4d-aecf-f2b464fc1607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbe4078-dfb9-42f4-875c-59c359498c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51eccdb-b9b4-499c-9fda-0c29570f1479",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e02c38-ed4a-4117-846d-745dc717529c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553c40d1-3f28-40ad-abb7-dcf30fa0bc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3c1745-eaa0-4ec3-855a-2b25ed7239c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a1c342-1ff7-4af0-8998-b98bbc81d1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416a7502-c4e3-49fd-98da-53a6ef61cf64",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1664bb-1df4-46f9-abb7-54cf5dfe7ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbf0e1b-1727-45fb-98de-4651d3b95803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb7919d-a759-4e69-bd5b-1e8099f85f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc9dda4-9d0b-4a93-8839-a256caacc44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee700482-e07c-451c-a319-153ea6bf396b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4267a9-9093-4a62-a43b-e4603fe8abf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a5451b1-4455-4d2c-b411-12bed4f09f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f43493f-3971-45c7-91b0-4a5281cecc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a404f1a5-ca4e-4380-b90c-c65fde838639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8140471-93a5-4286-b383-ce54761509e9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5edc91-de1d-4403-87de-ac10f73d1799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b7ce489-2cb5-4c30-beef-261c021f4587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51d6461-6edc-47b3-8356-4a402fcb635e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e78a4be-569c-4ce5-8eb2-7bc8513ae211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b756e7-8d5a-40fd-b180-4daa528d62d4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2147fada-8fcc-490d-8b46-2286adc39afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df4daf3f-c294-40de-bb8b-9edb81ea47ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36577280-5ba7-4485-9608-c5bb8899491c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0ac89b-1bb6-4ec3-9d5e-16a7357a306b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25043bb6-7841-4e0a-b3d4-a119d7bd7f38",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55477943-86db-4d70-8106-37e398ba4dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b012d98-ad66-47f5-a1a4-530935c08889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b5ac80-aa18-44cd-9f9d-1b0f22845f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf65fee3-8a14-4d85-97eb-26bc16bc3284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2520f4-0683-40c4-ab91-43fbab44f786",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d92254-61ca-4b3a-80a5-d5d406f9a755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad0c01e7-9d1f-4cc6-8de8-c0e67dcb3bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48c7634-ac27-431a-87a8-6a41cf293951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ac21cd-b5d2-41b4-8cb4-5320c4aae57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb2fadb-dd9b-4b98-9d6a-0da70f991207",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa38f97-a7ca-4609-9b42-bb2fb8327b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a23a13-1c66-4d50-aa52-38584e307b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac82bd5-4fea-4cd8-811c-24ec2ee1245e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599cc420-4eaf-4c49-aedb-a3a9a444d6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ef12e4-1713-4a7f-8a33-ec1d2f8e9bbd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a08498-6eaf-4051-964f-0bd2554af3f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "228488a5-a757-440f-9b6d-c9d505b0facc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1b2fde-c65c-4e50-9c9e-bf766f5c420a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da17f50-55b9-46cd-b491-afb822b091f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2474d1-d410-4cdf-a88f-9a6b4f55d932",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7a6aa5-e737-4f06-980c-3404a9d4eb2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdcc68aa-8518-44d8-a6b5-80a7c942c66b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8fd0ef-14c8-4e62-bc64-90486d9c3897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922915b4-0dc6-478b-b047-f2ccf76937b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75231e86-1cdf-4c9b-a1a9-53bbc19e40b0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b16011b-5b06-4bbc-aab9-53e929db494a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b66fbd7-66e9-4713-bc61-ddece35c28f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e303d0f-93a0-4a6a-b8f0-1681e74fbe35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78940cc-3fb9-4b23-af23-c7c847547e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089e61a6-993d-42a8-bff3-3f29a9a1f910",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e91f2e-abec-422b-bbc0-f95eacb667a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7ee72c2-510d-4f67-965f-b1219feea58d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763f32a7-b37f-4e6c-b94a-8c32e403425b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7fbe39b-b427-450f-9dbb-830ac80735ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5656dc49-e038-4433-971a-d38053c0eaff",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca29fb9e-bd66-47d4-b765-422c96b2c43f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3463d951-3837-4430-bdcf-0ef9bf1931f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69de16e-ed1f-436b-8a41-cacba09c326e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d577123-de2d-4bb7-ac58-a742c464318b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36857fcb-4eaa-47c0-b8bd-3066fd47b617",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2e03dd-0da9-484b-9869-b8516b88bccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a05d2d20-9c09-478a-94c6-52d56f7ca90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27152964-4247-414e-9d57-b25c419d7a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7555e2c2-863a-4a0a-8a9b-ea8eb2510c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27150d11-faa7-47d8-9cfa-a14b9c0214fa",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5757f7-be71-468c-9a23-f11456c4e40e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10f58135-5497-4a67-b9b4-0cfdd80bd87e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf59d93f-982f-4a42-ad55-958760b99015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ea71d0-3bce-4db6-b04f-b3d177e0fa5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16992a0-bc07-405e-a296-354d4b8ed661",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff63ad9-6636-4f7f-9d32-ade55d20fc8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b443cfdc-30d3-4ddb-9cfc-6af96d10ce4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c33271-f540-49c2-a211-2c18568eb441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5979992-f765-4e9e-9350-a6efca2c4f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72489a2e-ff03-4d4f-b972-9fc6bce7d2a4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54855937-40f9-4d19-83f4-c034560af269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4c8bd3-cb03-4f10-a60d-bcb98ff12ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647a8c7b-2326-4720-b7fb-e4664879f04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108c80b7-e3e9-4a94-a538-4a2ef3cc76cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f414350d-6dce-4344-9f6f-a707f5676721",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fee880-438c-4fb1-9af4-6b9fa37bf642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edbac4e4-6963-4cad-80ec-d6973d94ba2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f6ff5e-563f-4eae-84da-2c3749b6bac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd3531e-3dc5-4ed5-9ce8-bee495092990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d9814c-356c-4b55-b946-6503e1927309",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bd3643-7c79-48a6-afb4-83c8ea33db17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37ef69d2-3750-425b-b075-49bdec0edfd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250b07ad-e6bf-461f-9750-2f4759468bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d6952c-b24b-4e30-a56c-85e0a4d9a4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bf44cb-f16e-4913-a0ee-7541ede70bda",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a22a70-c1c8-417b-ad05-f8607557cfd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "296e0865-deaf-4d15-aa79-ad098f2d0264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089cfd03-78b7-4786-ad24-158843b95ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0fb02b-7879-45e9-afcd-54ed6b399470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48743fd-df01-4c10-b889-24da21e05b22",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af75395-7005-4cbf-afc1-ea70cd8d25cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4682ce0c-82e6-4b00-81cd-aaf90c510fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d82feca-f942-48d4-901a-80af27f756f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73537f2-11d0-4c51-b795-a7513980f205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72885f9d-4bec-435e-b0ad-19cd6519db29",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e30480-72cc-444d-8577-8a2d8a52963b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8db64c43-57ce-40b7-afb0-9ba79344223e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a1358a-9d74-4f4a-9981-fafbc53727d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd5130a-6bcb-48cf-b4af-e68dba1dfbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9cae04-f740-4872-972d-ae097bde8c0c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50dee02b-2eab-4b7e-b814-80dd8c4d5ed1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "772ef6f8-3c24-40d4-b20e-677c62cdc453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cae1d8f-b338-45f8-8680-f319af683469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a93de6b-42ed-4290-b5cb-e26fa2c2a3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35db5aa8-87bb-463b-b15e-48fe95f8c04c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9f0001-c48f-42e7-a552-750569252f46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "823b4b7e-c96a-459e-8eab-cd1bb77c238c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7f0a5e-7868-40c6-b9b9-998cbe589f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fdc906-0262-4962-91b5-e2cdb06fb786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddba810c-cbe2-4745-bad7-447cca2abae5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2bcea8-5308-4f65-8b88-7adf1fd8674a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad24a5c0-7a01-4b96-85b0-f9b81119b676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746fa464-2ce7-47d0-9046-e358d250eec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f59509f-3845-4af7-b608-92420c2beeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83904a5-8e13-4818-a49b-416f2783794d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f87daff-0150-4c7f-a1a6-43897035e09b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed36c6d-1b43-4e96-a965-d559465fe5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c851c7-ae99-490d-85d3-6253a6c500a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da45675-f80a-4d87-ab98-ab811707ab58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0e12bd-f02b-4a63-8001-69b45344dd03",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6eab7b-6a05-417b-a78f-18d44506a76b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a19f5c-73c4-483f-a013-e30f4536289d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e426e41a-9b4c-4de5-9373-9210a8ab8572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e4a7ed-fb70-4f6b-9fb5-eb832102b72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6363f71b-a637-454c-8d86-106b60fffcc0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d8393f-d446-4020-9a14-e71898ccce6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21fc9020-92d9-4876-a635-922bcbd35b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba89cae-ce24-4772-9a92-4e0fdd7bac0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafa2d11-c7fb-4857-a4f9-1885b8416669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c434f5-470f-4c0e-94ac-7792c36038a4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbf47b1-9fcb-489e-9bfa-7839361569c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42f5d1d2-5e48-4069-ac64-0cd58a3b15d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f026dc7e-057b-499d-9249-1d4747bcac78",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad4053d-66e8-4e7a-b02d-399e6d49b546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fac150a-2f59-49d1-a2ab-0aaec6933cbc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462b7ba2-8e4b-4d8d-be22-2e1e7cc821eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a90394e0-9355-4f46-b9ab-bdedcfad2694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ca53a6-7cc8-42d6-9151-086f08b7bad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ebc64d-cbf8-4821-bd66-d398346c3bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60829831-a554-46f2-a7ec-adfaaa719372",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01c7ed6-3731-427a-bdeb-c192b1a511e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88110f1e-8510-494b-9aa1-2a7b0127664a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af5121b-3dc3-4a4b-9396-eb9f70a8f69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a56eddb-2dc7-4491-947a-b7dca0b4ebce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd3c756-c673-44a3-9ef0-f965b7aa4a07",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04719c4e-8a9f-4bd4-81ff-472fa7cf5c88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c983ddd-328a-4daa-9a8a-cb0cfa51b74c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bdad53-6b00-48f6-9515-b493d5d9e758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72f6e3a-78a1-421e-964b-70c896d97b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe0e65a-5cc3-46a5-9dc9-76b440a3c9b6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9456851-8e38-4b99-958b-0d156339cc70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f473b297-60c2-455a-b16a-2e01e3bc26a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09865654-c4f6-4bfd-80f3-c91b78719030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a02ab7-4637-459f-af48-f19ed8d1189c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5fcdcf-5726-4853-b718-9b0120945a9b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc42052-d800-4157-9d33-56de41ca66a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe2cb119-208f-439f-90d9-2527797cbd7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e19dab-5618-4b3c-b87f-b603ea65ccbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27c904f-21a3-4e83-a9db-b4f21bed1c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d164b362-6073-4065-bd09-18daf61ff5c2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c660edfb-4afa-4cba-8e60-03a196050075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd099fa4-1352-4108-acad-67e77ef72149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d984f724-1fb3-4c0f-bd3e-9cff4014f021",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046742a1-5b75-4f6d-9ad2-44ccacf30913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874c1e64-2b4e-4326-b4fb-2d0c80caa686",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affaffd8-7b8d-40e6-8a2f-65db8369dd82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dbf0cda-1c3b-4047-9468-a7094c334af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46c11f8-0f36-4f98-baa4-b4ad49fa07ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aab8634-e287-42e0-94bf-53ff35be77d3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84a1c1a9-4e9a-40cd-b0bc-cfc4edca8e9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2d6158c-b6c5-47e3-ad5c-c24637140818"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7dfe29b-e778-449b-b324-57bd291f1f37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bfb5a0a5-a665-4d08-b809-3363c44ac5b2"
                    }
                  }
                ]
              },
              {
                "id": "4dc5fad1-a66a-4ff8-8e4b-6df9c21d02a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4e750a0-adf0-4234-aa2a-1594dff7c8be",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d1e6b5-c16c-4666-8428-cef38aa9d013",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "462dbfd1-5011-4c28-ba68-670f2b555f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd4dcd5-0a97-446b-b695-575bff023fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fc51648-db14-4366-8d5f-ac8dfe4952f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c91fb7ca-0ab7-43bb-ab77-d131ed27dae8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ed02296-f872-482e-b8fe-f43931af5f04"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d10a6aaa-19d9-45d5-9a60-6b4149a2bb5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79b24a6a-f77b-4647-b913-ab6ca596d3e1"
                    }
                  }
                ]
              },
              {
                "id": "0fbb4404-95be-40a4-aa8e-f1c6ce7489b1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0e606b3f-fffb-4481-a748-611a0a93c0dc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76890f24-6d3e-4f52-ba80-973fba426edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a554a0fe-c9ab-4606-8e05-2942d19e3a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5891af-160c-490a-9954-646f09e668df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66804dd2-0386-4d1f-8b70-7eb5e65a4960"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5f8a18c4-5e3c-409d-b7e9-48ae0ada4080",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b59b6ded-8b89-467f-bdf9-fd91d08b98f3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8a0fd57-2a4c-4df6-aaef-6c180f8c8512",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "680eeadf-3256-4e94-815e-6e689ed7f164"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "316be0de-3fd9-49bd-a772-b8188f363565",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acd17a45-b4a1-453b-a8b2-07cdfcd4405c"
                    }
                  }
                ]
              },
              {
                "id": "e1192f3c-39a0-431b-958b-64bb9767ea18",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a896df16-a440-4668-a6ec-446594b80d53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d0866cda-fabd-424a-8507-3fb6a5f62353"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81d97d60-f1df-42d6-9814-bf8661f02ef3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4ce781c-394b-4f58-9dbb-77d36245289d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac3b1abd-7ebe-4235-a044-212710473e60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a0100b9d-053a-4679-82b0-40030145eb25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e12d949-21ac-42b6-9c3b-80747ff3a280",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a477a9cc-f87b-4764-aa30-2d2a9aeb8394"
            }
          }
        ]
      },
      {
        "id": "2345386e-4238-495c-8c99-7cea15b7753b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "08e52210-58f2-4541-89b5-9043cb5c05a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa05d107-3050-4121-a06b-848d79ddb716",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0bf6835-a496-41cf-880c-279e669c0419",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2b13dd-9a6b-4bf1-b7db-5bf349c60907",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a296c324-be71-420f-b36a-bf8c2f7ec4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3df98d-704d-4c2c-84c8-683398053d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de330131-2f80-47f3-a3bb-997b5df99b29"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33fb2c4d-f92e-4de6-91c2-b445ca428c04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10ce4435-c5cb-4942-a6c7-78ee087795df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99e1f8ad-ede4-4e8e-9f5e-09407b67e4f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54a0da26-74cd-4614-a5f7-fefdb8ffd24b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "027c5b84-4d82-4531-939c-6c443aa6ecf9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "65e4a48a-8561-4055-b770-79233f2b39dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a295130-fde6-469c-adc7-6a076d9b1af9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab998285-a9ef-4ba5-8024-f77e03fadc88"
            }
          }
        ]
      },
      {
        "id": "6b491c77-a994-4769-93d1-87d6c5430b95",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ebb79201-2a0f-4352-b788-4c3532032bc6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "404d05ad-71b7-4a24-8d5e-95489b4f1d4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45f41544-836d-4682-a8d2-472560aded45",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50767166-c558-4788-b295-6794695252ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "981a7223-6a6d-4f11-85b7-5c1708a3c647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa86e499-20c2-453b-9f8e-d0fefeaaef22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f76a158-2efe-4ae0-bc3f-048d5f358b21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "514eb036-e05a-4083-863d-7c7c1880c378",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fdeecb4-e828-4ac2-a40c-1b915d5ce103"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf3c2554-db7a-485c-af2d-55fede4d0f44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da2d5c84-640d-412e-8006-58e5f5086624"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77a7229f-aa8a-41e1-abf6-6fb213657ee3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7c3b8eb-75cb-4f83-9744-5a5b3f7638b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13d7913a-11b5-48cb-95c2-7dc017f35e28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cf5981c-0497-4a19-b374-d55565136db6"
            }
          }
        ]
      },
      {
        "id": "5373ca24-d422-467c-9e9f-18fee38b8922",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a7822a4f-4c42-4bcf-8d10-7d29fcc9283f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a3269c5-898a-47bc-88cb-4d5c193c7cec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "694af931-13e7-442e-bd09-389becc7dbf0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31236588-5d32-48aa-b3be-1e4fa43b3646",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49841928-3231-44dc-a493-5a85a65092a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171ec435-ace1-455b-abdc-772e610d123d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6079dc07-5bc9-4d09-a428-566c20aacfa1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce826320-0615-473e-9e13-14c65ca8b4cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee922606-5d3d-4811-a8e0-0c84a44e3a40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "636ae6fb-8ff0-4d36-8612-aae7efd5a6e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce6c8beb-95b0-41c4-af3f-f129d4a6cbf8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06253de3-e476-4090-a01f-cd4b7f2a4504",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "11444cb0-5d83-49ca-8a29-9cff578b9c7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b92f3ef2-4bb3-47ba-b61c-518bdc547566",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff0a98ee-2b89-46bf-91df-df937920d1e7"
            }
          }
        ]
      },
      {
        "id": "e763275c-858f-42ec-980e-0d85541e2096",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "876db476-67db-4fbd-8f1f-ef2fb5f8a8a9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84f809b4-9cac-405a-81b0-d2c6ce0953b4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4a79ea95-28ee-4927-9b91-b71d887a9375",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6766447-32c6-4c6e-b357-7b0d0c00e5ed",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e39344be-411d-4501-8bb4-7465d53fc80e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 434.23809523809524,
      "responseMin": 10,
      "responseMax": 13052,
      "responseSd": 1880.6881716186253,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724892131078,
      "completed": 1724892248985
    },
    "executions": [
      {
        "id": "8c10e988-3be1-43c4-a749-8796d5ad2146",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0542c5c6-000b-461b-b5f0-8451c1408a46",
          "httpRequestId": "d743d664-93d4-47d3-9d74-b97e417456cf"
        },
        "item": {
          "id": "8c10e988-3be1-43c4-a749-8796d5ad2146",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "72a047cb-7c86-4f0f-9eec-422820a22790",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "f1e8ba14-76ce-4744-a71f-79e0e4b8c011",
        "cursor": {
          "ref": "846c9f66-04a8-4c5f-95fb-d95b2df15b63",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "563437ca-45bc-4037-b055-575ce65dfa7d"
        },
        "item": {
          "id": "f1e8ba14-76ce-4744-a71f-79e0e4b8c011",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b5bf1014-a432-4e1e-8eeb-49cc9204b5f1",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "c36bee68-12e9-4bd1-9a1c-e192917d45e3",
        "cursor": {
          "ref": "7ddc88e6-5013-45c3-8df4-9993c7d05113",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ae22a6d8-169d-473f-a67d-cbf5c2b28cd0"
        },
        "item": {
          "id": "c36bee68-12e9-4bd1-9a1c-e192917d45e3",
          "name": "did_json"
        },
        "response": {
          "id": "e196c81d-63cc-402b-b305-43e5d0395026",
          "status": "OK",
          "code": 200,
          "responseTime": 487,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cb55c3-3f40-41bb-bb97-360ec0bca196",
        "cursor": {
          "ref": "196dee5e-88e2-4a2d-b86c-52ef8d614316",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4d78aee9-fb2f-4b40-bb8f-ba30f4d08ba8"
        },
        "item": {
          "id": "34cb55c3-3f40-41bb-bb97-360ec0bca196",
          "name": "did:invalid"
        },
        "response": {
          "id": "175ae118-5f8b-4425-9046-17f8af395f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2048,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cb55c3-3f40-41bb-bb97-360ec0bca196",
        "cursor": {
          "ref": "196dee5e-88e2-4a2d-b86c-52ef8d614316",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4d78aee9-fb2f-4b40-bb8f-ba30f4d08ba8"
        },
        "item": {
          "id": "34cb55c3-3f40-41bb-bb97-360ec0bca196",
          "name": "did:invalid"
        },
        "response": {
          "id": "175ae118-5f8b-4425-9046-17f8af395f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2048,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a03655-1511-4da1-9f22-e9d9cd6529f7",
        "cursor": {
          "ref": "414a37c6-0458-461f-9a68-69981052850c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6a5f71df-489b-479d-930a-4131d61590ea"
        },
        "item": {
          "id": "18a03655-1511-4da1-9f22-e9d9cd6529f7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d05cd834-52eb-4355-a66a-bcae3aae7bf6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2279,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd035ac-656f-4d88-beea-f5833d17ea86",
        "cursor": {
          "ref": "eefb4fd9-e733-4b11-8a60-b9c6436c6a49",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4f4553dd-ce4e-4579-8d8b-13f2aceb60c7"
        },
        "item": {
          "id": "fbd035ac-656f-4d88-beea-f5833d17ea86",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4fb11755-3885-4411-9b7f-840601a212fd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2032,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f2b292-b26c-4891-b016-7e112f80bfa7",
        "cursor": {
          "ref": "ce98765a-2178-468c-aac2-fe7ea8dff7b2",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4d8aac74-1571-41e4-9451-08a22ae160e6"
        },
        "item": {
          "id": "59f2b292-b26c-4891-b016-7e112f80bfa7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e38c5013-de27-42d0-800e-4592e29ce65e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4172c72e-6b7f-4578-aa69-bc57bc52c45e",
        "cursor": {
          "ref": "eedf049e-1e8c-4d45-bb66-24e91a428968",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2b7df964-fac8-4557-92a4-234dade2b6ce"
        },
        "item": {
          "id": "4172c72e-6b7f-4578-aa69-bc57bc52c45e",
          "name": "identifiers"
        },
        "response": {
          "id": "57e95bd9-06cb-47fb-8fbb-6ca6ce829e79",
          "status": "OK",
          "code": 200,
          "responseTime": 2171,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e69e08-546e-4b1a-baa2-5239d7b1f2e0",
        "cursor": {
          "ref": "4f5bca3f-17ae-4895-b48f-62b5224953af",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "24542415-def2-4fad-b478-8a89dbff752b"
        },
        "item": {
          "id": "54e69e08-546e-4b1a-baa2-5239d7b1f2e0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "916b0e4a-8814-42c4-8615-5ded7120dc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861ce7e4-08ee-48a8-847e-972c2031046c",
        "cursor": {
          "ref": "f00ce5c5-69d0-4c05-8e6e-a8777f5f3fe0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7f30bb67-e30d-4d6b-a8c8-ac1e7976e90a"
        },
        "item": {
          "id": "861ce7e4-08ee-48a8-847e-972c2031046c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cb2ffa5d-144c-4fb0-8d36-4b930636cc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33fc8f1-48e8-4cf6-b69a-79cb9c5de728",
        "cursor": {
          "ref": "98cb06b5-a644-4519-8b21-9bbc7c353971",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "54c13158-9250-4c30-a5cf-e34b5541aa66"
        },
        "item": {
          "id": "e33fc8f1-48e8-4cf6-b69a-79cb9c5de728",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0a118b9b-31ba-4692-a899-6c26542da109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c533d65-6d6e-47c8-a258-c9c8641d9c6e",
        "cursor": {
          "ref": "2f703f78-e916-4d1b-b3e1-4487a6c55f0b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6e1ce46e-9e16-40a6-bfab-a37959ce9714"
        },
        "item": {
          "id": "3c533d65-6d6e-47c8-a258-c9c8641d9c6e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2e77c975-686d-4c29-a79f-b20219fcb64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a30cd7c-bf83-42de-b4d5-60912d4a4fda",
        "cursor": {
          "ref": "62773e87-c5f9-4484-a25e-b723a1b0c196",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9b61d5fc-eb7f-4118-be1f-7b9fba6c5770"
        },
        "item": {
          "id": "5a30cd7c-bf83-42de-b4d5-60912d4a4fda",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4aafd38d-8c83-4fdf-872f-74d56132da36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35841449-6b30-45d0-baf6-154d0ab543f9",
        "cursor": {
          "ref": "e809be8c-19a5-404b-8a52-c2a2e64cea6b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "39c35fe0-6e13-4bde-9158-e96365c3a4ca"
        },
        "item": {
          "id": "35841449-6b30-45d0-baf6-154d0ab543f9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0cfa62f0-623c-4419-8ec1-ef803db70365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af65c14-6864-4597-a701-b25e1d53c80d",
        "cursor": {
          "ref": "92bdc4bf-06c5-4c11-8c77-d9f4d7a53898",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "112b07ef-bf53-4cdb-bc45-36b9332e175f"
        },
        "item": {
          "id": "6af65c14-6864-4597-a701-b25e1d53c80d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5cab1029-027b-4bd3-af77-e2ad0050dc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1b5146-d68a-46a6-9509-20781e2d530d",
        "cursor": {
          "ref": "1a647b98-231a-491f-8465-2c9d36c452d7",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "10b0abe8-b40d-4e78-bb74-0febe89992ec"
        },
        "item": {
          "id": "1e1b5146-d68a-46a6-9509-20781e2d530d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7032ddbc-2c2a-437c-b3d5-cba66d8cf8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7679091-c381-4bf8-8fba-d8586acab245",
        "cursor": {
          "ref": "82dd2b0b-d658-4c94-92c7-525ce7747fc3",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6b75cbb9-62f3-44f1-a997-46f979f2f0a1"
        },
        "item": {
          "id": "d7679091-c381-4bf8-8fba-d8586acab245",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "126fac1d-3b0f-4284-af5e-aab466bdf0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c15a81-9ba3-4d07-a057-fe5128a637e6",
        "cursor": {
          "ref": "4337ab67-4c30-4c1d-bcde-8e889551e1e6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e0d5e70f-dff4-4b40-9ff2-3465ff133479"
        },
        "item": {
          "id": "c7c15a81-9ba3-4d07-a057-fe5128a637e6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6dcc4fbc-3429-4424-bc36-cf7acae9a3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f6693d-eda3-4a85-b3c6-0052fa2b029b",
        "cursor": {
          "ref": "a21845e3-1368-4292-9a0d-8ed8ce02ba06",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a5d8beef-b410-4c96-9c5e-b1ed0f7dc717"
        },
        "item": {
          "id": "05f6693d-eda3-4a85-b3c6-0052fa2b029b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "650af506-57d9-4883-9ed5-142df36c0bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7467f3c-6993-419e-bb11-b03e54786604",
        "cursor": {
          "ref": "75aaa9e0-f321-4086-b294-22f83c494b4d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "35c88667-9f0c-44a6-ae1e-5a3a3c3a59a2"
        },
        "item": {
          "id": "d7467f3c-6993-419e-bb11-b03e54786604",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7bd3b4bd-9cf4-44c3-8cc6-58c37798d926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b1eb49-a2a2-4cbd-9c46-7987b874d686",
        "cursor": {
          "ref": "2617fb48-fcd0-417c-a0ea-c147a58f5525",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b61ff587-8246-4cb8-af82-88dec38c8783"
        },
        "item": {
          "id": "f3b1eb49-a2a2-4cbd-9c46-7987b874d686",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "430b048d-da16-477d-9c7b-393739afff52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331ba9e5-7fc8-4fca-b3d3-24d75c75e85a",
        "cursor": {
          "ref": "32196618-c665-4f0b-9073-4d0ee3eafb98",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "45015fe5-20e2-4065-95df-75a7e335efe6"
        },
        "item": {
          "id": "331ba9e5-7fc8-4fca-b3d3-24d75c75e85a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "80242750-825d-4598-bdc3-12402d4c0e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b101368-9af5-44e2-b12b-b94645d67136",
        "cursor": {
          "ref": "b5f1b37c-e294-4b52-a383-3711a5ffb153",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "29a16922-7bac-4170-916c-0283a73edb5b"
        },
        "item": {
          "id": "2b101368-9af5-44e2-b12b-b94645d67136",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a53c63b3-dd4d-4908-889f-c28080215394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4548521b-183b-489b-a9bc-c0d533205aa8",
        "cursor": {
          "ref": "82c9ba43-9350-42bb-9e5d-e653685659e9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b54deea0-7633-42e5-9111-fc2ca36c71e7"
        },
        "item": {
          "id": "4548521b-183b-489b-a9bc-c0d533205aa8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bc8c267c-d248-468f-992b-179afb502c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5edf5b-c4a7-4545-8c8c-a8596552118d",
        "cursor": {
          "ref": "df56584b-6969-4b32-980c-03902d9a4bd6",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bf100c99-5a16-43c1-af5f-5d7b234200c6"
        },
        "item": {
          "id": "6b5edf5b-c4a7-4545-8c8c-a8596552118d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "588334da-8936-46de-bdbc-b310006519d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a8f8dc-a6d2-4123-9b08-b40dfd951624",
        "cursor": {
          "ref": "8aa2e43d-fadf-41e7-8add-ee2f0855c59e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c314ca58-aa27-4642-8eff-05c2e41ff5af"
        },
        "item": {
          "id": "45a8f8dc-a6d2-4123-9b08-b40dfd951624",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9591f782-b345-4e68-b4d8-f997f48d4b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd975f50-d47b-4642-8665-b0a308048959",
        "cursor": {
          "ref": "4c0a1046-3d4e-4ebc-8b89-e5e264ab0b54",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "58ce17b3-b24c-490b-b3cf-0ede70124680"
        },
        "item": {
          "id": "cd975f50-d47b-4642-8665-b0a308048959",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "dda77d43-26d5-40a4-a779-06b7e8ef61be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56105b5b-cf7d-4312-8ad6-f57b6adf60bb",
        "cursor": {
          "ref": "5083cd88-80bd-4d18-a71f-76bd38a33fc6",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "870eac41-7f27-4556-85c6-2c1fb3910949"
        },
        "item": {
          "id": "56105b5b-cf7d-4312-8ad6-f57b6adf60bb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a4a662a7-ab2c-4a62-a0be-5fc948bdb920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb3e416-c2ca-471d-b7b8-7a18c35c3b51",
        "cursor": {
          "ref": "9c6ec5e5-3e37-4fa6-9bdc-ab57802e29cc",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5e47ac6d-1091-4a8d-888d-392a7bd059b6"
        },
        "item": {
          "id": "6bb3e416-c2ca-471d-b7b8-7a18c35c3b51",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "960c3bcc-6c78-4805-a548-922a8420890c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bdd717-f143-4738-99bc-808d17486e6a",
        "cursor": {
          "ref": "2c4ce43b-8618-48b0-854e-730ce2538c4a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d876ea9d-6bde-4280-b808-c3b0d8f468b2"
        },
        "item": {
          "id": "22bdd717-f143-4738-99bc-808d17486e6a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c04b3148-2df2-437e-b667-dba6e5d5ce13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656d09f2-7a44-41c5-a929-c9f577d18b22",
        "cursor": {
          "ref": "9dd2693a-1dc4-49aa-b683-ec0feef31d4a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5649c0c1-2ef7-4402-9f59-02c640b6770b"
        },
        "item": {
          "id": "656d09f2-7a44-41c5-a929-c9f577d18b22",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c81f8326-edf2-4251-84a9-83567bb24cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d3c675-315b-4371-a0f5-d712c894c911",
        "cursor": {
          "ref": "29757a50-70d8-4322-8720-006a79bc23b3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2d6f4880-ed01-4868-bb59-9ace20c8f845"
        },
        "item": {
          "id": "29d3c675-315b-4371-a0f5-d712c894c911",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1a2eb72a-d017-4135-a4f5-b60709fe4d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892df915-3580-4b3e-8e68-94b92ef73015",
        "cursor": {
          "ref": "feb43e01-9893-4177-a10d-d9d4e465c800",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0ae262c1-d461-470f-aea7-5b9381340492"
        },
        "item": {
          "id": "892df915-3580-4b3e-8e68-94b92ef73015",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0d4deee6-33e5-4929-81ce-e1f5df59447c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce58b01-480a-492a-ab8b-d474c7c233a5",
        "cursor": {
          "ref": "eb34513c-7705-407f-9b9e-65ccdbead0ad",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7e668fd7-8c1a-401b-990d-13a57a82bc9d"
        },
        "item": {
          "id": "4ce58b01-480a-492a-ab8b-d474c7c233a5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d865679a-6a8c-4fae-8a72-0c44a0962856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d9137d-7bed-4cdc-90bb-313b4d17eeec",
        "cursor": {
          "ref": "3a476e64-92bd-421f-8dce-e7743f486f26",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fcd226d5-006d-400b-8426-093f9a0b962e"
        },
        "item": {
          "id": "09d9137d-7bed-4cdc-90bb-313b4d17eeec",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b034d676-f468-4d1d-8cdb-9ab49f549217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56a36ed-62bf-4ee3-be8e-9583418eceb0",
        "cursor": {
          "ref": "4b06319b-e637-4fc3-b9a0-f834b66014a6",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6c33fd8e-fe2d-43bc-8328-e042fda5a716"
        },
        "item": {
          "id": "b56a36ed-62bf-4ee3-be8e-9583418eceb0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1ce71620-c06c-4dc8-8954-42217dbe34be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd078f0-5f77-46f0-adba-83ba3cfa6502",
        "cursor": {
          "ref": "fe1a04b5-d91d-4cae-b2b2-205da2eaa6a4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5347ecec-dea5-41df-bafd-681acc20c5ec"
        },
        "item": {
          "id": "bbd078f0-5f77-46f0-adba-83ba3cfa6502",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cfcfe024-19dc-4992-89b6-8e2260a68259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f314d13b-e59c-410a-b2e8-dc803f787f2d",
        "cursor": {
          "ref": "280670cf-7963-4825-95f9-f5cba740d2d0",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dc662f01-37e3-4690-b31b-ca4c33403135"
        },
        "item": {
          "id": "f314d13b-e59c-410a-b2e8-dc803f787f2d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "05b4a5bc-7deb-46b7-ba81-a08b93fa940e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2371ef16-93c3-4295-a8f1-d179647f42e3",
        "cursor": {
          "ref": "1e68a975-8f21-4a40-9892-33fd0047b8d7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8833ac5f-9f9c-4210-a2e9-eb840b15a1b1"
        },
        "item": {
          "id": "2371ef16-93c3-4295-a8f1-d179647f42e3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c95e9154-f98d-4919-8d24-2eae70a6d4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddcbb82-f9cb-4a21-8e17-0782348ab97f",
        "cursor": {
          "ref": "28100814-2969-4388-9f26-423bd5228421",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "451297e2-359c-4b12-8a5d-a46c050f88d2"
        },
        "item": {
          "id": "9ddcbb82-f9cb-4a21-8e17-0782348ab97f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "538cc8bc-f515-4f89-a975-3fed2ef407d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98ee3b0-51b9-4ed7-b3b6-c4e10de1c44d",
        "cursor": {
          "ref": "e2fa71fe-5e4e-43e9-96bc-1d04ab6dfdc0",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "76c74ebe-fde0-4a02-9e93-28eb084417aa"
        },
        "item": {
          "id": "c98ee3b0-51b9-4ed7-b3b6-c4e10de1c44d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2106c234-4c67-4c16-a35b-a20940531093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dc6785-025c-4596-82ca-61383e8ea4e4",
        "cursor": {
          "ref": "90698b7e-4d75-4adb-890e-9ad095cc743c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "79d26bf9-910b-4850-ad78-e5c53e029605"
        },
        "item": {
          "id": "10dc6785-025c-4596-82ca-61383e8ea4e4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fbbcb1ad-a717-4409-ab72-7c6fa1a32fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa172b9e-6698-4135-871a-36044ea60ce2",
        "cursor": {
          "ref": "020003ad-2cd3-4664-b0bb-1b19442aa368",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e6b4fee7-966b-4442-b3d7-9f9196e3e792"
        },
        "item": {
          "id": "fa172b9e-6698-4135-871a-36044ea60ce2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bdfb01a9-7a50-406c-994c-b45454d9e986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc03ffa-f372-4d73-b0b3-5b35a24986fe",
        "cursor": {
          "ref": "8dc45ca4-449c-4f30-b044-de819e477d09",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7e0962d6-9a04-471c-9eee-5c91f757cd03"
        },
        "item": {
          "id": "ebc03ffa-f372-4d73-b0b3-5b35a24986fe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9c5000c6-4760-41fb-989e-5417e81dd07c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ab73e3-6ebc-4560-8382-daabecca321a",
        "cursor": {
          "ref": "3c156490-89e6-47fa-a692-356508cb9c2f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8ce4e248-a87e-42f9-bdc1-a5ef09e04a01"
        },
        "item": {
          "id": "a1ab73e3-6ebc-4560-8382-daabecca321a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "116adfbc-1753-436f-8343-8634a09a1be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a2663f-b7d5-4ebb-9525-92e6399ce19f",
        "cursor": {
          "ref": "35325983-ff92-4827-9619-3bbc5b94491e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e45c31aa-2821-412d-a02c-83273a5ab5e1"
        },
        "item": {
          "id": "b9a2663f-b7d5-4ebb-9525-92e6399ce19f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9d2d300a-76b8-42ad-80f5-2819593f3835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5d8ddb-5525-4444-8bf4-0e841345aef1",
        "cursor": {
          "ref": "2f6c33c3-1974-428b-aff2-3c22795a989e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ebdb66ba-8699-4d39-a7b3-f505613b25ac"
        },
        "item": {
          "id": "ce5d8ddb-5525-4444-8bf4-0e841345aef1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "da28a610-d9cb-491a-b040-e6847a44f732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cd832f-7f66-45bd-84e9-4995167fa6d2",
        "cursor": {
          "ref": "de33c302-3f88-4abd-b231-86885a470ff5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cd437962-cccc-4544-ac1c-dd6fa7ea6cd6"
        },
        "item": {
          "id": "f7cd832f-7f66-45bd-84e9-4995167fa6d2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "97fe5f14-1f78-415b-9606-6e43568bd64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9b054b-54ae-4964-962b-0112fd7e9bb8",
        "cursor": {
          "ref": "2ae453e4-27b0-4fad-b012-1c31d0b505e0",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8e797851-2cb5-4701-930e-0cff5e077e32"
        },
        "item": {
          "id": "0f9b054b-54ae-4964-962b-0112fd7e9bb8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "abbfb76b-5ad7-4ae9-a89c-e33dc1447258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19837537-8d22-45b5-acbc-6fc71df8c68d",
        "cursor": {
          "ref": "f3614cea-a75e-4045-9b8a-957cb26569a5",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "efacd7c3-5a92-4567-82bc-5fd6bcdf40fc"
        },
        "item": {
          "id": "19837537-8d22-45b5-acbc-6fc71df8c68d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "73fe6cd4-0e3a-47f8-bdf0-6281bfa15fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac733b8-8098-41c1-8260-e4a10d5607fe",
        "cursor": {
          "ref": "a667391d-f36c-4dc8-a770-1da0c66a8321",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8cf535a3-048a-44d1-ae4b-718935019ba2"
        },
        "item": {
          "id": "aac733b8-8098-41c1-8260-e4a10d5607fe",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7864ce58-9934-4a29-8e85-272cbb293fd0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e624bb4-e6cc-4460-938d-66848d6c0eb2",
        "cursor": {
          "ref": "fecff595-21fc-4d13-b28d-2b88db37da13",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d9105f49-0fa8-473d-abe7-621a1ed11dfd"
        },
        "item": {
          "id": "3e624bb4-e6cc-4460-938d-66848d6c0eb2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dcbb9b5d-2256-44de-b2bf-90eeb68f4d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88613163-4c7c-493f-b26f-23d698168f50",
        "cursor": {
          "ref": "ee238fe1-2edd-47e4-9282-d72b37df7c20",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d3dafefd-3b06-4873-b306-790fae3a9410"
        },
        "item": {
          "id": "88613163-4c7c-493f-b26f-23d698168f50",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9ba1f4be-a760-4419-964f-1ca717c2d963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1c8a00-26a1-441c-b812-5b4691dc47d3",
        "cursor": {
          "ref": "33cb67d9-847b-4660-8f27-36780a0ef782",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "81c4b714-4ca1-43cf-8b4d-48dc661a850f"
        },
        "item": {
          "id": "7f1c8a00-26a1-441c-b812-5b4691dc47d3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1f2648c5-6cc5-456a-baa6-081d66cf6012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55c90dc-e54d-4147-8b60-a702b694c469",
        "cursor": {
          "ref": "95ed15de-b33e-4422-9ab8-ab0e3f773271",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a3ed7c4d-903d-453a-9b52-fe66ac855e4b"
        },
        "item": {
          "id": "e55c90dc-e54d-4147-8b60-a702b694c469",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "84cc9ec9-cccc-432a-97f9-10e86e908f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbb80e1-4315-4ff9-bf55-4dec698b962d",
        "cursor": {
          "ref": "add91e80-7da5-4230-99bc-b04bb341c58f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "706bc271-e7a6-4edb-a314-4cb39fc82e3f"
        },
        "item": {
          "id": "cbbb80e1-4315-4ff9-bf55-4dec698b962d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ee2e2942-0929-41eb-bf88-b1c30734150d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3073f3b7-645c-4612-96d0-b0f907b44523",
        "cursor": {
          "ref": "41d1f866-794c-42f1-be5e-5f95d5163db0",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cec53e6c-ddab-4fa7-bf1d-4e443b146aee"
        },
        "item": {
          "id": "3073f3b7-645c-4612-96d0-b0f907b44523",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cc69d153-6120-4126-be22-d2c8b3ebad3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508411a3-9a5f-4250-be0b-e9e35d6954c2",
        "cursor": {
          "ref": "a1e06aeb-37e0-4171-9864-6ff1d1da8bae",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f26d4db8-bae6-40b3-af96-a0f8ab982f88"
        },
        "item": {
          "id": "508411a3-9a5f-4250-be0b-e9e35d6954c2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6273519d-4ae3-405d-8a50-4a239e504a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef65363-e821-4cdc-8af0-ede84c485754",
        "cursor": {
          "ref": "97b14fed-bbfe-4daf-b425-3138124cac2f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8a2916dd-1615-4b40-afeb-da06e386b9b1"
        },
        "item": {
          "id": "eef65363-e821-4cdc-8af0-ede84c485754",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "79df94bc-7c5b-4fca-a4b3-ed66f6d2a446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd1880e-53e0-48c9-84b9-ad0a952ad434",
        "cursor": {
          "ref": "dc4e7467-92b8-4d4b-84cb-f544f5964945",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6c7e7fb3-64ed-41e9-aadd-b40494024c7b"
        },
        "item": {
          "id": "1bd1880e-53e0-48c9-84b9-ad0a952ad434",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fb8f9d92-bff5-47f1-8389-57dfb0a916ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbff1b53-b53f-4960-ba6f-7182c765c797",
        "cursor": {
          "ref": "2d9e12ed-9324-45f0-a8e5-b8de215c1139",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0b481b1b-1573-4eba-95c8-880d0a0ea762"
        },
        "item": {
          "id": "fbff1b53-b53f-4960-ba6f-7182c765c797",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "458e3296-0f29-46af-808b-09372e5c483b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41baef37-df22-46f2-92a3-8735e7f24351",
        "cursor": {
          "ref": "28600c6f-0dee-46ec-bf8e-b90e9703a92f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "afbd7195-83a9-4015-8b75-afc33ebe3942"
        },
        "item": {
          "id": "41baef37-df22-46f2-92a3-8735e7f24351",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1e0ab763-480b-41dc-bf2a-bfc87a1c95e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec6f511-0276-40e3-a9ed-00fbb9b1c181",
        "cursor": {
          "ref": "03fa531c-85e2-4b89-9e22-32b100370823",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "365e4b04-f72c-44c8-a830-1a3bf266a1f1"
        },
        "item": {
          "id": "5ec6f511-0276-40e3-a9ed-00fbb9b1c181",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7bed71d2-5b39-4423-9102-1e15c1ddea9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf29a54-ee56-4ce8-9af2-a1633fc00045",
        "cursor": {
          "ref": "c195a295-c061-4b25-a18c-67e29a597ac0",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ea1bb0e3-7b97-4985-9196-10f48d34bb87"
        },
        "item": {
          "id": "0bf29a54-ee56-4ce8-9af2-a1633fc00045",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "aae6b63c-9096-4770-8a5a-ba7edf0fcaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2063dabb-5f21-4e23-88b5-233ff794b762",
        "cursor": {
          "ref": "e63f94cc-7c2a-4a9a-ad06-16118b55d24b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2ae855f0-b5a5-404f-a959-9eab671bb92d"
        },
        "item": {
          "id": "2063dabb-5f21-4e23-88b5-233ff794b762",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d8d3d1eb-fc9f-443c-b80c-211e8a3e576b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0baa8c4-3527-4c6a-b588-2777081be31d",
        "cursor": {
          "ref": "c574fb18-161c-4371-bcbf-1283789ddc3a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "046b854d-8564-4f16-83f4-7c549b836bef"
        },
        "item": {
          "id": "b0baa8c4-3527-4c6a-b588-2777081be31d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "92b67e4d-91ff-4005-bd28-17122196b052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bc52ab-56d9-4410-a378-2c99b3d54644",
        "cursor": {
          "ref": "b73546ec-bf91-4c33-a9fc-72f1661c09d6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "78963b04-1841-412f-b000-81e58cad1b6c"
        },
        "item": {
          "id": "00bc52ab-56d9-4410-a378-2c99b3d54644",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "04837dae-bdb5-48cf-ba33-8b2f1ff29b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cdbf44-01a5-4d3f-9b1a-4da7d3462e13",
        "cursor": {
          "ref": "e3f10998-1fbb-4aed-8d66-cea3d94de007",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "95105779-2aaf-44f3-ac13-12924913ed0d"
        },
        "item": {
          "id": "18cdbf44-01a5-4d3f-9b1a-4da7d3462e13",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "420534c9-3bba-44c4-a26b-c9d3190aa3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263442ca-3882-4108-b732-ca20e643ae65",
        "cursor": {
          "ref": "21cdb71e-117f-42ef-86a6-9826f9c792d0",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2faac466-3968-4341-a239-9b410233796b"
        },
        "item": {
          "id": "263442ca-3882-4108-b732-ca20e643ae65",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "13fc776f-d8a0-48e7-a433-d4a74287cb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f8fd52-63d8-42ba-943a-9629aada9b48",
        "cursor": {
          "ref": "8b29a309-7f81-4a03-a4a6-d4d23bf42d8f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a51b7162-a94b-435e-acb5-6eb5981637a3"
        },
        "item": {
          "id": "13f8fd52-63d8-42ba-943a-9629aada9b48",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3cc12204-7188-4797-b46f-9a124dfc68b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35da5291-e540-4a6d-bee9-bfcd87f1df51",
        "cursor": {
          "ref": "59cce544-ad37-480d-b95b-f622de176815",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "306f54f0-a73f-4395-898e-4d3d30959345"
        },
        "item": {
          "id": "35da5291-e540-4a6d-bee9-bfcd87f1df51",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5abf3eec-f250-4fa8-ab1a-1d7e1ac2d524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d903bf5-7eec-4986-b4ef-42f73cd0789f",
        "cursor": {
          "ref": "0ce67573-b06b-44e9-8a56-b728578f192a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3f98f5e2-2ced-4fde-b1a7-346583d5dda1"
        },
        "item": {
          "id": "6d903bf5-7eec-4986-b4ef-42f73cd0789f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8c48d8df-a412-4d9f-87b8-b5cb9170d26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dc196d-ddb9-4599-a357-e0d479fce06b",
        "cursor": {
          "ref": "f1d4a4ac-5a23-49d7-8db8-f490092045b5",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "dbd48b90-ae04-4f6a-a548-d1a00abc2a43"
        },
        "item": {
          "id": "a8dc196d-ddb9-4599-a357-e0d479fce06b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "acb32d0b-9206-447a-a653-79cb195a00fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d237fb-c2b0-4cce-ac2a-a8453dc8cf14",
        "cursor": {
          "ref": "91794fc2-2580-402c-85e1-e046ae05e629",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "92622aa5-8d19-4141-88d9-2751a3ad24e6"
        },
        "item": {
          "id": "f6d237fb-c2b0-4cce-ac2a-a8453dc8cf14",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "54735ddf-5ff9-4c74-87e6-810c10a5cf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df18bd05-e080-4b89-a5e5-42bd731fbadd",
        "cursor": {
          "ref": "72bfcb46-d191-4533-8c6e-7093389c9e7f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b9067bd7-fded-4d9e-af73-450f4d55f580"
        },
        "item": {
          "id": "df18bd05-e080-4b89-a5e5-42bd731fbadd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3e2984f3-260f-4c67-9bff-60b3ee0de24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76edb335-a11d-4a17-86a6-4950798ff680",
        "cursor": {
          "ref": "12cafc2b-440d-47de-8d9c-a514225c5eea",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9d8bc71a-1fe9-409f-b272-174f732b7469"
        },
        "item": {
          "id": "76edb335-a11d-4a17-86a6-4950798ff680",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "334558a3-f155-4d19-a8fd-6955a0f654ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb805c69-125e-4b99-8cae-9b1a00b11244",
        "cursor": {
          "ref": "01fc0a6c-3ec8-4a0d-ac7b-2f57523b3ac4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4aa8c96d-2b60-4172-a6d4-58a39a37f988"
        },
        "item": {
          "id": "fb805c69-125e-4b99-8cae-9b1a00b11244",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3b4a23fa-edb4-440f-a95c-a4f151859bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc451f3-6f27-4e40-8517-6ca4f12c0b53",
        "cursor": {
          "ref": "80b6cdf4-fd04-49b6-9e93-de406023267e",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fe0430b3-96ce-4dab-a404-da17c36043e2"
        },
        "item": {
          "id": "6dc451f3-6f27-4e40-8517-6ca4f12c0b53",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ce08c446-1eae-4656-8a5f-73b3c7c3c856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c433bcc-b789-4f97-af20-5590fb23880a",
        "cursor": {
          "ref": "b1bcbca5-61c4-4d35-aa4f-cd9c9ddda7d5",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7976a768-d084-43ae-81de-76b19f4ae5b0"
        },
        "item": {
          "id": "8c433bcc-b789-4f97-af20-5590fb23880a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "04d3eb92-69ab-4042-add4-5a1e255c01c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d062f60-50d5-4a41-99b2-977062ab8b20",
        "cursor": {
          "ref": "d87c014b-738b-4fa5-b9fa-4edbb542b13c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ce2fbb58-71f9-4285-a5dd-c691d613ce4d"
        },
        "item": {
          "id": "1d062f60-50d5-4a41-99b2-977062ab8b20",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "193c1be4-3962-4695-948d-0e464ec76494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6215a3f5-c8ff-47ac-8056-7148372ad0b6",
        "cursor": {
          "ref": "e5869667-d391-4dd9-ab51-3c5a1ce332e6",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0a283409-9257-4ccb-802d-1217a5b6a6b5"
        },
        "item": {
          "id": "6215a3f5-c8ff-47ac-8056-7148372ad0b6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "76ebdba0-b3ee-4a45-92c8-fd7796337955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c096ee1b-5312-4084-98e9-3334354c4811",
        "cursor": {
          "ref": "9d226e67-ab45-422a-9692-86ff4bc09374",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fedf4fa1-c7ba-4c4c-8551-eb9493f92a41"
        },
        "item": {
          "id": "c096ee1b-5312-4084-98e9-3334354c4811",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "09c313da-6094-4b1d-9f90-9cef3d99d52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cfddb6-d8c0-45d0-8e9f-a428e5fa6610",
        "cursor": {
          "ref": "5fce5689-4879-49fd-a357-f81f2c0ce59c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c6d019ae-f929-41c9-8672-74059f7abebc"
        },
        "item": {
          "id": "16cfddb6-d8c0-45d0-8e9f-a428e5fa6610",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d47f6d4c-5be4-46c9-9969-c4d9fb0ea056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85ee66a-06fc-4fe5-92cb-db2933c971d6",
        "cursor": {
          "ref": "52a00d49-28f7-48fd-aeaa-a4f6aee2ca8a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "26b88093-adf7-42c1-a5d7-bf1af8abd126"
        },
        "item": {
          "id": "d85ee66a-06fc-4fe5-92cb-db2933c971d6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c32439e4-01b6-446e-b3c3-a639df5a36e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58ab5f0-9beb-4f52-9547-6142a7ae5674",
        "cursor": {
          "ref": "4db84b70-bdc6-4689-8c71-53705a856a1b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0c260455-879c-4a1a-ba42-61a47bdcd7fd"
        },
        "item": {
          "id": "e58ab5f0-9beb-4f52-9547-6142a7ae5674",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "599eed3f-fafc-4b70-86f5-79cbf2e9691c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3861a3-2b7f-4aee-8012-98c2e9dc2024",
        "cursor": {
          "ref": "ab45d2c0-7317-4806-9c0e-c8f03bbe45a5",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "90096bd2-1352-413e-b421-6eb2c510f055"
        },
        "item": {
          "id": "fa3861a3-2b7f-4aee-8012-98c2e9dc2024",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3c76936a-899c-4e86-93e4-96c7a8083112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcc088b-31de-4a2f-a73b-89e3671e6133",
        "cursor": {
          "ref": "d5b6e88f-ee99-458e-895f-81c463ad6584",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "abafa0bb-c887-4662-b406-dfb1004d1cbd"
        },
        "item": {
          "id": "4dcc088b-31de-4a2f-a73b-89e3671e6133",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "29d47282-37f8-4ba4-af78-cdd7661560b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167fdc00-a054-497a-9d99-2a6b1ef50fec",
        "cursor": {
          "ref": "6aed76d9-1400-49bf-b950-1eac2db418fb",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a3f041da-aa14-4be0-93e2-a87601f66d1c"
        },
        "item": {
          "id": "167fdc00-a054-497a-9d99-2a6b1ef50fec",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b3c3310c-2664-47a3-87df-bbe84d168757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d3b99c-becd-4bc3-bffb-cf1385dab9a5",
        "cursor": {
          "ref": "3760e7ff-4f33-47fa-91df-17cfe02722d8",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2f2870ba-0786-4c3c-b98c-5c38c27a4fa1"
        },
        "item": {
          "id": "50d3b99c-becd-4bc3-bffb-cf1385dab9a5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b2630ee8-4fb7-4615-82d9-71e7b447a86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc1084c-e576-4c4b-877f-2c9a92091924",
        "cursor": {
          "ref": "ff9ff21d-9970-4a3b-ac75-2e37b60f4879",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1918d611-f4c4-4f74-b5b0-c3ea28639fa8"
        },
        "item": {
          "id": "6bc1084c-e576-4c4b-877f-2c9a92091924",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "62f55318-95d6-4266-b936-8a6b5569d436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1baeeac0-c47a-4b26-9255-b0249fac4ea1",
        "cursor": {
          "ref": "8885daa4-c8eb-4b14-b759-e8afdbb0e22e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e0212096-e5ea-4bc0-baaf-b844f78aa18d"
        },
        "item": {
          "id": "1baeeac0-c47a-4b26-9255-b0249fac4ea1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "61d2a858-6468-4171-ae58-588138f887fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f4c5c0-ea07-4774-bc41-10f812a33a6d",
        "cursor": {
          "ref": "9156194a-ecd4-4edb-923b-65edc6560b7d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1d53101b-bd48-41fa-ac07-035ceb732639"
        },
        "item": {
          "id": "43f4c5c0-ea07-4774-bc41-10f812a33a6d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4772a193-a42d-450f-83d3-50839c92c243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2763eea-4ca3-430d-9635-2c246760600c",
        "cursor": {
          "ref": "8cfa46fa-31e6-44b2-b0ad-95f568cad82c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7258c52a-0cc1-49f3-bb24-c59724990f18"
        },
        "item": {
          "id": "c2763eea-4ca3-430d-9635-2c246760600c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bdcf9404-029c-48ad-9737-1256c9ae9ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dff3dce-007c-406c-be5c-77a3e16ea13c",
        "cursor": {
          "ref": "dd0f1155-bf03-432a-b7ac-f82f7c4f8034",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3f6c1c17-f5d1-4352-bd2d-0b1cd375c447"
        },
        "item": {
          "id": "9dff3dce-007c-406c-be5c-77a3e16ea13c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bfde45c5-1afc-4087-9183-bee9ce9e77d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb76c443-2f8f-4aca-92ba-a4ee1edd1bb8",
        "cursor": {
          "ref": "ecb3782f-e740-49f4-a05c-fbe940c00ee1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dc8447f6-78d1-4a59-ab7a-f730a40a7c95"
        },
        "item": {
          "id": "fb76c443-2f8f-4aca-92ba-a4ee1edd1bb8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "29011a43-a6be-4c83-9873-377621e4b214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56d27e6-afa5-4f40-b523-c08cfaf29a5c",
        "cursor": {
          "ref": "80caec5d-7b7f-41f3-aeeb-343bf25becfe",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7c2a3564-4010-49df-9bb3-8e7963798529"
        },
        "item": {
          "id": "a56d27e6-afa5-4f40-b523-c08cfaf29a5c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5ef84203-f5ea-4f24-9391-e1c90631e7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d2586c-3586-4be7-a6e2-711e0dd1e6bc",
        "cursor": {
          "ref": "34269d52-15db-4d95-bbbf-586589c9d79c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f78f9a91-554f-4167-aa15-8ff06968066c"
        },
        "item": {
          "id": "c7d2586c-3586-4be7-a6e2-711e0dd1e6bc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ae262978-da07-460e-8f08-f2850888c018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612f7c5c-1ccb-4566-9e74-5c1d2e4b9508",
        "cursor": {
          "ref": "2e497a8b-42e9-462f-876c-b9897fee82ec",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2bcc66cd-7d58-4095-a9ff-22539271e0dc"
        },
        "item": {
          "id": "612f7c5c-1ccb-4566-9e74-5c1d2e4b9508",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "35be00d2-5578-4d61-9f63-e62fe6d66af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b846dd-38ec-4f43-a925-16d6e40a8769",
        "cursor": {
          "ref": "92633728-bfbe-4aa6-bab6-307fa9fa891d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d328c4c6-a4e7-4cad-89cf-5594d89d5c31"
        },
        "item": {
          "id": "67b846dd-38ec-4f43-a925-16d6e40a8769",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3bbd4d0b-4989-471f-975f-8383d5b8b954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6102720a-c5d0-4358-a50c-b86d46bdd756",
        "cursor": {
          "ref": "63ada8ab-6dd9-4831-be08-f699bd3b4353",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8c47eab5-7ce3-4f6d-bb07-7545152ef08b"
        },
        "item": {
          "id": "6102720a-c5d0-4358-a50c-b86d46bdd756",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fc6b3fe8-1472-4511-853b-d49aa8af5177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a163a317-fdf0-4fa0-9e82-a156c3b23a2a",
        "cursor": {
          "ref": "967e9582-fe1f-4089-bd14-dcaa8f6d889b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "14fda733-a88c-49a9-ac98-944117041570"
        },
        "item": {
          "id": "a163a317-fdf0-4fa0-9e82-a156c3b23a2a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "558549ee-3a3d-4681-8244-0028c60bdf63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0098d29c-eecf-49f8-973c-430560f954fe",
        "cursor": {
          "ref": "7f3d03ff-2481-434d-abe4-1b55f59e77c1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5733cf97-5b4e-41fe-81f1-6cdda085a2d0"
        },
        "item": {
          "id": "0098d29c-eecf-49f8-973c-430560f954fe",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "71e1b57d-67aa-4ba9-9405-da47325c8c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "63621337-4b92-4bba-8da3-b768023b21c0",
        "cursor": {
          "ref": "77ef6eee-2e59-4c59-b79f-a4e8a08054e1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9489391e-ae2b-49e4-a421-197632d1e6db"
        },
        "item": {
          "id": "63621337-4b92-4bba-8da3-b768023b21c0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "53c11c93-0851-463a-b3cf-fd9bef4ef593",
          "status": "Created",
          "code": 201,
          "responseTime": 13052,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2b22a4-ef5f-4592-9307-078d25ffe4dc",
        "cursor": {
          "ref": "f0642be0-9187-4cc3-8045-1c4e51eb17c4",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "05c5bb62-b8f8-44d7-b13c-66854d3e764a"
        },
        "item": {
          "id": "5a2b22a4-ef5f-4592-9307-078d25ffe4dc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1f92abe2-237a-4517-ad0f-1e56ea4570dc",
          "status": "Created",
          "code": 201,
          "responseTime": 12665,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe502e29-f559-4280-8a3a-632f618e75af",
        "cursor": {
          "ref": "0ce51f4d-68ea-4ede-a7f4-5b4a71481f45",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "21a544e3-febb-4d38-a1b4-ceddb21de5cd"
        },
        "item": {
          "id": "fe502e29-f559-4280-8a3a-632f618e75af",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c53196aa-b74c-4730-83ba-cbbd345197d5",
          "status": "Created",
          "code": 201,
          "responseTime": 11800,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3f338d-e618-4785-9cd8-e81329219016",
        "cursor": {
          "ref": "93819ec7-7028-45e4-a079-b5b25c6c62f8",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f0ed3528-a4c1-4939-9b99-e89707c1f092"
        },
        "item": {
          "id": "1e3f338d-e618-4785-9cd8-e81329219016",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ec146d44-a1ed-4265-a963-26b5416773b6",
          "status": "Created",
          "code": 201,
          "responseTime": 11944,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc34a8b-28c4-4ded-abba-0314e2b014dd",
        "cursor": {
          "ref": "6fbf0299-6c5d-4683-920b-bb92456383f3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9aa8fc33-022b-4e44-839c-e92e2c459d08"
        },
        "item": {
          "id": "9dc34a8b-28c4-4ded-abba-0314e2b014dd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c35df018-84fb-4baf-bfb8-1a813213d070",
          "status": "Created",
          "code": 201,
          "responseTime": 11869,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-29T00:43:32Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-29T00:43:32Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c082ac3e-08f8-4762-a032-0b67ea3ea3b3",
        "cursor": {
          "ref": "072df945-8624-41ad-af59-c096b637fc86",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f52f3645-0fbb-4c77-8e12-60e684d28422"
        },
        "item": {
          "id": "c082ac3e-08f8-4762-a032-0b67ea3ea3b3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2fe36b4a-8845-4c16-bf5f-08789af77f52",
          "status": "Created",
          "code": 201,
          "responseTime": 11898,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2feb5097-a4df-49ce-8d81-f12222a68792",
        "cursor": {
          "ref": "c6c7810c-e537-412f-b41d-4feb44dd3407",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8a454e6e-98a8-4df4-8b2c-c7bf65564aa2"
        },
        "item": {
          "id": "2feb5097-a4df-49ce-8d81-f12222a68792",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b2d079d1-b3ab-4f7a-a52d-1bd9fb407f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495a1be5-cf75-41df-a271-7df6db56bb34",
        "cursor": {
          "ref": "267d73f2-c3ce-4ee3-8ede-6e658c6c844e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "45dfc320-b031-4450-8afd-7b540ece172c"
        },
        "item": {
          "id": "495a1be5-cf75-41df-a271-7df6db56bb34",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ba37b3e4-257b-456f-a5ea-047ce139e723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187ddded-dec4-46a0-bd3d-642501766c01",
        "cursor": {
          "ref": "52d5edfe-0371-4044-affd-58c7fb1e9430",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "eec5a055-7363-4339-835f-a58bc8e0d180"
        },
        "item": {
          "id": "187ddded-dec4-46a0-bd3d-642501766c01",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ffbba533-cfd4-4b0b-8fef-d3e29d0258d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cdbbf2-d175-4f1e-8c44-d9bc34f6722f",
        "cursor": {
          "ref": "c2ccd255-0e34-4258-afde-30c0fe4c42e5",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0fa68bed-2bb4-4672-846b-385a4ef9448b"
        },
        "item": {
          "id": "07cdbbf2-d175-4f1e-8c44-d9bc34f6722f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5ce409ee-cf38-4a20-9323-6267fe0a30e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56ec31f-74a3-428e-b09d-894a2d89f65f",
        "cursor": {
          "ref": "d29bfadb-f25c-4074-bd81-23cbaa43d5a1",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a4f58c3c-3d49-463f-afcf-30cd1f7d461e"
        },
        "item": {
          "id": "d56ec31f-74a3-428e-b09d-894a2d89f65f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c4e52832-e7a1-4694-9ba1-63d079ea495a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca4e957-de9e-46fd-9ec3-cba8a87b0acb",
        "cursor": {
          "ref": "ae825296-86e5-402e-b1aa-f2fac7f56c6e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5439f436-12e8-4e36-9a9c-0f15c3c787dc"
        },
        "item": {
          "id": "aca4e957-de9e-46fd-9ec3-cba8a87b0acb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "019ded2a-350a-4106-8e4c-b53e1a74b340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0ff427-782a-4653-bb12-447ead312784",
        "cursor": {
          "ref": "96489a4c-e0fd-42f5-88e7-d3878be1ee2e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d7ce598c-bcb3-4341-aee0-c68c68f6406e"
        },
        "item": {
          "id": "6a0ff427-782a-4653-bb12-447ead312784",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d64145c2-5740-4ca8-bfa2-d92826473952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3504b60-e7b9-49e4-ba44-a2d80761d74c",
        "cursor": {
          "ref": "bc5110e2-b347-48e0-98de-174c3862027e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6f7a1207-c25b-4c09-b96b-154f0af0e8be"
        },
        "item": {
          "id": "b3504b60-e7b9-49e4-ba44-a2d80761d74c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "45226551-31bd-46f1-b319-73c54a952732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4552fde-c554-47f7-8746-bd03e3522043",
        "cursor": {
          "ref": "7e686d0b-e3c9-43fe-9386-2c2871a3166e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c8e019f7-43c0-4a4f-970e-cd120c41ebfa"
        },
        "item": {
          "id": "f4552fde-c554-47f7-8746-bd03e3522043",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c992e0fd-a6cc-42d8-bf3f-9e16917f44e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb940fb-fa65-4775-8ca9-26e769ec0cd9",
        "cursor": {
          "ref": "52ab43fb-91ed-4c50-ad65-febdbacc955c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b7d1011b-b82b-40bb-98d1-730723a2a4ad"
        },
        "item": {
          "id": "dcb940fb-fa65-4775-8ca9-26e769ec0cd9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3497016b-e4ec-45fa-9fea-fee9c78aafd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a583d67-177e-4844-b2f2-2851bb37eef7",
        "cursor": {
          "ref": "17eaec8b-446a-4cb1-898b-143953d6c322",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6e94712e-68a8-4759-9a3c-880f5015c3ad"
        },
        "item": {
          "id": "3a583d67-177e-4844-b2f2-2851bb37eef7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "51499bd7-250e-4ca9-8fd9-fe29670423b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4682484-b3f9-428f-a58b-817f52e68f26",
        "cursor": {
          "ref": "78c730ca-ceeb-4f4e-bd4c-873f8c715da7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8858f9df-0a0f-408a-8919-414c5bc89f2f"
        },
        "item": {
          "id": "f4682484-b3f9-428f-a58b-817f52e68f26",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a305ec94-8f4a-4e6f-af1d-28d8c903444d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbd59d3-dec3-45c3-b146-ee04bd7b869d",
        "cursor": {
          "ref": "4694f416-7f50-4987-9b74-4c1a12e8f7cd",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "74adf774-cbd1-488f-a557-e81ffe59e6f5"
        },
        "item": {
          "id": "1cbd59d3-dec3-45c3-b146-ee04bd7b869d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f3dddfcc-6a53-445c-92f0-0d981b83ea0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719e014a-3ba4-4b7a-b3e8-2d14e0d80b07",
        "cursor": {
          "ref": "ab5818a1-8678-4e7a-be61-a430ad236ac1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fba05a2a-ecf0-414f-b13e-58de93acfdbf"
        },
        "item": {
          "id": "719e014a-3ba4-4b7a-b3e8-2d14e0d80b07",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a061758c-6d39-41d1-91ba-75e812e578d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db68db2-a0be-4cac-9492-c438a2a84261",
        "cursor": {
          "ref": "bbfebdab-de9d-49f4-9d0e-57ccd5326a8e",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "24c6ff7b-ea40-4927-8682-482f0ab25f93"
        },
        "item": {
          "id": "6db68db2-a0be-4cac-9492-c438a2a84261",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9ded6c5c-644c-4efe-a261-4c63750f8187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0cce73-38ce-4552-80c5-63a390d0bffe",
        "cursor": {
          "ref": "bfd61f59-a788-474e-8cfe-58cfa142a843",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "76484c1a-3a56-4772-ba8d-fe81032d5b29"
        },
        "item": {
          "id": "cb0cce73-38ce-4552-80c5-63a390d0bffe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "37b23393-9be5-46a7-81e5-3ebd96963b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbb5193-074c-4154-9dea-d825091b5acb",
        "cursor": {
          "ref": "71884488-4eae-46ff-ab84-778d883b88d3",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b5d02b79-c2bb-48d9-80ef-d7fe4f533b30"
        },
        "item": {
          "id": "cbbb5193-074c-4154-9dea-d825091b5acb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b5a5465d-c174-4d78-be7e-f718d5fa008e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7317cf90-d67a-463d-99ed-db0d8198e6af",
        "cursor": {
          "ref": "0e3dc218-8390-474d-948c-f3a3d523c217",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c4baf7e3-2d0e-48b0-b72a-bb40a1741deb"
        },
        "item": {
          "id": "7317cf90-d67a-463d-99ed-db0d8198e6af",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c3c67d18-d646-4f3e-a4f3-9de01cd2bee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa801905-dc46-4e0e-b4ee-e40e171794bc",
        "cursor": {
          "ref": "a9a8a2cf-dcd6-459c-ac9a-332b7c311a8e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1354fe1c-4de0-46cf-9bbe-43cdd90a5ee3"
        },
        "item": {
          "id": "fa801905-dc46-4e0e-b4ee-e40e171794bc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "291f32eb-aacc-4b3c-8e9c-9ed4f9c430cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97a2f86-f102-408e-a1a5-25a3032a04c8",
        "cursor": {
          "ref": "63f2b6e1-1830-4d85-9bbf-51c69f54384b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "87283310-a8df-4965-8a2c-94ef542a40a9"
        },
        "item": {
          "id": "d97a2f86-f102-408e-a1a5-25a3032a04c8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6b831558-eeb4-4157-b805-3acf53013f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae40c18b-d9f3-4929-889b-2e60d82279e3",
        "cursor": {
          "ref": "85e5b865-7bff-42bd-8864-a42417c5974d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8cf08c7a-22f6-4116-9fdf-fab9073379f0"
        },
        "item": {
          "id": "ae40c18b-d9f3-4929-889b-2e60d82279e3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dbd4d73c-af9b-468d-b6fa-ee1defb0810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172defec-e2e9-467a-88c9-e05886d8c5d4",
        "cursor": {
          "ref": "a6d9bb27-08a3-4f2b-abda-bb8f43954090",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c700d18a-990e-48e5-9c0b-f2f155f22c2d"
        },
        "item": {
          "id": "172defec-e2e9-467a-88c9-e05886d8c5d4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9f95c9da-96cc-4c1d-a393-42e243cae86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2531d495-c01d-4fce-8dba-dd9611c9535e",
        "cursor": {
          "ref": "d82fc8ba-34e4-4aeb-9a9e-1375f1e32b34",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "805a8f51-7594-4780-ae3e-4bf434766a10"
        },
        "item": {
          "id": "2531d495-c01d-4fce-8dba-dd9611c9535e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "401310f0-696b-4ab3-8f39-68cc6b4bcaf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b8a50e-76e6-4442-b113-a1a706287e14",
        "cursor": {
          "ref": "3dcee262-f57c-4c06-99c1-9096b5519b8c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f86d1d96-d248-4789-946b-1ed40f274f7b"
        },
        "item": {
          "id": "25b8a50e-76e6-4442-b113-a1a706287e14",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4af6e788-f50b-417b-8b2d-91187a666af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091cdacf-935c-4a61-8cdc-431ee8cf2dc7",
        "cursor": {
          "ref": "a9948b5b-8e9e-4ec0-b55e-2c57e0a26c08",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d8cd834e-a7e9-47c6-b733-ed8aaf46923c"
        },
        "item": {
          "id": "091cdacf-935c-4a61-8cdc-431ee8cf2dc7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "885b070a-6767-4c5f-809f-25f35677120b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c81a2fa-e5c9-4dcd-b785-7908f9c9255f",
        "cursor": {
          "ref": "70e3b594-faf7-4fa7-a96c-82b3f26bfb45",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "124c6762-e720-48b9-baf3-a89a901fe40f"
        },
        "item": {
          "id": "3c81a2fa-e5c9-4dcd-b785-7908f9c9255f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f390e2db-fe61-4f38-ba2f-04c0bd4a104f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db1cfbd-919c-45d0-960d-707a18651d84",
        "cursor": {
          "ref": "66207eb6-3a16-4a56-a842-72de4ff3e29f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dc0268e9-2936-458b-ab2b-9786cce6cd66"
        },
        "item": {
          "id": "4db1cfbd-919c-45d0-960d-707a18651d84",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1dcee27c-1675-4180-ab47-826eab44a557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effa1290-44b9-45f3-8de2-327e7b11a221",
        "cursor": {
          "ref": "cde6a3f0-aead-4a10-8d54-ebc1afb4011f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e82eb812-f213-41db-bec7-e9aac202d7b3"
        },
        "item": {
          "id": "effa1290-44b9-45f3-8de2-327e7b11a221",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "61ff485b-9793-4c20-926b-42d6a4ae82a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be570a16-2f4f-4a54-b1b2-0e379290b808",
        "cursor": {
          "ref": "1d39f23e-97cc-42bb-9b56-0531c7fa9b41",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "604a5a1d-6ab5-44e3-8f77-f5d5aa9a8329"
        },
        "item": {
          "id": "be570a16-2f4f-4a54-b1b2-0e379290b808",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "038429ab-23d2-4f9b-a184-71be74d9dc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f051397a-0c22-4e1a-ba0e-909344cbcbb6",
        "cursor": {
          "ref": "cfe4b0f6-d6e5-4206-b0fd-6fa6070f39a5",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6ff02b78-a5fa-4dd6-a9b5-8ef01ea32b32"
        },
        "item": {
          "id": "f051397a-0c22-4e1a-ba0e-909344cbcbb6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dbbd9baa-949b-4db3-875f-5c8d16b8437f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa6ed5a-875f-41ad-880c-2deea6804755",
        "cursor": {
          "ref": "fea2bbd7-8329-487f-a3f2-cdb03b2927a6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f5c61fb2-bf78-4514-b243-88c6e858e37e"
        },
        "item": {
          "id": "0aa6ed5a-875f-41ad-880c-2deea6804755",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b898a445-046d-4e9c-b51e-3bec949fff63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fa05b4-c583-4ea9-986b-c7cad50345f1",
        "cursor": {
          "ref": "01a420bb-54b8-46b2-a1c6-c31df43e9d94",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f969fe2e-83d5-428a-87e3-2d6c9d7ada8a"
        },
        "item": {
          "id": "d5fa05b4-c583-4ea9-986b-c7cad50345f1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f44e78dc-0288-4b73-b235-1013b7150962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee81a75-53ce-43b1-8804-7d5a622876b1",
        "cursor": {
          "ref": "9a28d550-5ecc-4067-beab-7d4905c59696",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "29de93b9-e2f3-40be-b881-3494db430ae3"
        },
        "item": {
          "id": "dee81a75-53ce-43b1-8804-7d5a622876b1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3b7419d4-2649-49b2-8259-b7e4675143f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277f8702-123e-4c2a-a070-ff9b5caa9e9f",
        "cursor": {
          "ref": "b4de0133-2fab-4c66-97fc-3b492772fc3a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7531d97b-18ee-4536-a884-17fe231d179d"
        },
        "item": {
          "id": "277f8702-123e-4c2a-a070-ff9b5caa9e9f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6e69058a-1df0-4287-bb34-94279774204b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92f31cc-1ad1-4707-867d-2e01fd6b198b",
        "cursor": {
          "ref": "a93248e3-8fb9-4942-980d-0e84ba8c3e32",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f92aad56-783c-47af-812b-4060cc281850"
        },
        "item": {
          "id": "d92f31cc-1ad1-4707-867d-2e01fd6b198b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fc411f5e-d7e9-4797-bba0-783c7914f6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21276415-ab41-48a1-9522-95e679f74753",
        "cursor": {
          "ref": "260ae7bb-6178-48af-ad09-c915e94de9a4",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "15ba0c0a-1e06-4460-bdf4-285ea9a9e93e"
        },
        "item": {
          "id": "21276415-ab41-48a1-9522-95e679f74753",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9ee1abca-ad75-4056-888b-9457e9046a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8047b568-b0f9-44a6-88cb-70ab2e7b98b9",
        "cursor": {
          "ref": "9cac7cb8-16c8-4998-993f-2cec2ce29d78",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0806c1b9-21a9-4688-8785-b90e16d8bc46"
        },
        "item": {
          "id": "8047b568-b0f9-44a6-88cb-70ab2e7b98b9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8019b976-481b-42a4-924b-abd9a652dc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9125e09f-465f-437e-a043-8efe8c101f49",
        "cursor": {
          "ref": "30e3c445-dcb5-4e18-a9ba-44960e51acd2",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "436250ec-2dfe-4771-a94a-c837d481c2bf"
        },
        "item": {
          "id": "9125e09f-465f-437e-a043-8efe8c101f49",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5f7e30e9-49f4-461f-8639-d2279d885bca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23062f8e-5c3e-41ef-9ba8-4882de3d63e0",
        "cursor": {
          "ref": "1caad711-c55c-4be5-99e9-347c724c90df",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "994cdd2b-4c38-4beb-9385-6e1efaf05a1e"
        },
        "item": {
          "id": "23062f8e-5c3e-41ef-9ba8-4882de3d63e0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8890355d-bc63-4460-a7b5-a4743240b29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ac4d57-066c-4dd1-a053-13c4644f8e56",
        "cursor": {
          "ref": "3768fcb6-83ba-45cb-acff-8b282e19c0e8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3ed61638-bed5-4ea6-981a-cc16396d3b36"
        },
        "item": {
          "id": "c0ac4d57-066c-4dd1-a053-13c4644f8e56",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a1cab98d-749e-4239-ba35-6f78c2f9e29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9005ce-9291-4bdd-95dc-552664d6c679",
        "cursor": {
          "ref": "20d1ae95-503c-425d-a9f2-77bfc2d4de8d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2b9d5d57-643e-4e47-9820-96b8cdae926f"
        },
        "item": {
          "id": "4d9005ce-9291-4bdd-95dc-552664d6c679",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "331c8939-58c0-4630-8395-c829a58bb573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373f2172-5206-4f27-9aa7-ca63436f47ce",
        "cursor": {
          "ref": "0e70a89d-95df-4da4-8668-cff8abda4066",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "39bca2a7-1942-4fcd-9ca0-32bf897ab76a"
        },
        "item": {
          "id": "373f2172-5206-4f27-9aa7-ca63436f47ce",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1ab113cc-d634-49e5-b90d-79805c5fb668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eff7ef7-2a70-4efc-8e96-f0bbf07d90c7",
        "cursor": {
          "ref": "2aa569ac-0cdf-4dbb-bd29-17db437bd0d8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "615ce435-a3f1-44b0-80a4-6178c5204579"
        },
        "item": {
          "id": "8eff7ef7-2a70-4efc-8e96-f0bbf07d90c7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6dfc7716-2ec0-44a1-b0cb-211da54ab786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462ab3a7-bc6c-4cd3-bba8-fa5fcb85bac1",
        "cursor": {
          "ref": "c676cb04-b068-49da-b26f-ebb2bfc6893c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ae05d612-29be-4e03-b5c8-ac81a5ad16a8"
        },
        "item": {
          "id": "462ab3a7-bc6c-4cd3-bba8-fa5fcb85bac1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6ac6715d-7f8f-44b2-a5c9-8e39eb309985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dddb32-16e2-48a0-9293-ffdb083e4dcb",
        "cursor": {
          "ref": "fca47750-24c2-49d4-92bf-55ca3d7cd5ba",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5e7da808-b84f-4e64-817b-ead38cc517f7"
        },
        "item": {
          "id": "94dddb32-16e2-48a0-9293-ffdb083e4dcb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0e7d9590-e6dd-4404-9458-6a22af68a955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d849547-d4de-487f-952c-86a89384b71f",
        "cursor": {
          "ref": "790d8afa-a8e1-4774-9a61-b5689b229cd2",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ce296680-b370-4ba8-ab1b-0aa93937ae00"
        },
        "item": {
          "id": "5d849547-d4de-487f-952c-86a89384b71f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "606bc76b-4b97-4f3c-be3a-0815a74d369d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbe6990-f813-4bc9-bbf8-25345b695c41",
        "cursor": {
          "ref": "62fdcb0c-a342-4781-91cb-27647cd37623",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "caa3923f-65b7-4eb3-a661-39f4cdec7d1e"
        },
        "item": {
          "id": "1dbe6990-f813-4bc9-bbf8-25345b695c41",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "60cb4071-c017-47f1-a94f-5f23c53b0c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b8b8e3-6519-4573-abb7-48d93257ec81",
        "cursor": {
          "ref": "b34cd710-33aa-4c80-aaa6-8440564b426e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0b4cb31f-09ad-4865-892a-9ed491b91ecf"
        },
        "item": {
          "id": "72b8b8e3-6519-4573-abb7-48d93257ec81",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "10c8638c-153a-459f-9863-0401c82e6343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f611b69-fa30-444a-8bf4-3a099ee25b75",
        "cursor": {
          "ref": "753e374f-94a5-4570-9aa9-a99751cc0393",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "47b8aa42-efa0-4f88-9835-7fceb2eacd1f"
        },
        "item": {
          "id": "8f611b69-fa30-444a-8bf4-3a099ee25b75",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "93a828b2-1149-45f8-9677-eb970228a6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f54ea4-c176-4efc-9cc7-8e55f5793853",
        "cursor": {
          "ref": "e7baf965-303f-495f-b0f3-8289a69cc51e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8a9aea17-d9e6-4f17-99c2-a2dea06b5791"
        },
        "item": {
          "id": "e5f54ea4-c176-4efc-9cc7-8e55f5793853",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6240d533-de6d-4713-95dd-42daf5d7fbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3c9bab-f3f4-4561-a0c9-a1a112f1cc4c",
        "cursor": {
          "ref": "f588cd98-3391-4a03-ac9e-218f72f0e769",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f87744c8-dc46-47a6-812a-ab815afa5fc7"
        },
        "item": {
          "id": "dd3c9bab-f3f4-4561-a0c9-a1a112f1cc4c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a651f60d-2978-44fa-b426-16ec73b3ac95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38466a0-0884-436b-8441-7ab3814cc2f5",
        "cursor": {
          "ref": "45af4e16-8857-4f66-8999-1503fa562dc1",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c1108ca8-bf06-469d-a1fc-1cf3c717f33f"
        },
        "item": {
          "id": "f38466a0-0884-436b-8441-7ab3814cc2f5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "860f565f-f0f8-442a-b615-494a79244dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9aada4d-57a3-4585-abdd-743074364e57",
        "cursor": {
          "ref": "4b338108-6ca0-4b6d-83dd-0bb6833063d3",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "95ac2aac-0da2-45e5-9387-a67236eac6dd"
        },
        "item": {
          "id": "e9aada4d-57a3-4585-abdd-743074364e57",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "da642201-5e38-4609-85ec-e15423f950b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3655366e-f3e3-4367-a777-99bdea8b31f3",
        "cursor": {
          "ref": "5f32e205-de79-4a54-b13f-2de32fc9427e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ff93de20-c266-4b06-9c6a-e4ab4084e9f6"
        },
        "item": {
          "id": "3655366e-f3e3-4367-a777-99bdea8b31f3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1134ce8e-2426-4773-bf46-708154f08b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e496ea3a-9bea-4d84-892a-c26fe4db3e90",
        "cursor": {
          "ref": "2f33c508-236b-4f30-a923-a378913ddd40",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "33fa3280-3351-45ed-9e2d-1ea98edf3d64"
        },
        "item": {
          "id": "e496ea3a-9bea-4d84-892a-c26fe4db3e90",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5a1b10ab-d078-4200-968d-24922e0e088b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af0c1ea-9c8b-47b2-bfa2-9fee5c586c27",
        "cursor": {
          "ref": "c3851f1d-d0bd-48e8-bc12-14d6315e61e2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "52329f69-dee0-4359-b527-34e30b3edacd"
        },
        "item": {
          "id": "9af0c1ea-9c8b-47b2-bfa2-9fee5c586c27",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5c45b90f-e4ba-4099-8d02-eb79d317dde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7627aea6-21ad-4f41-b9d2-dc3c3dfb2158",
        "cursor": {
          "ref": "d5c3c66c-dd17-4cd5-bca6-339137a7f5bd",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fc528f67-da40-42ba-b528-93d1b6880f2f"
        },
        "item": {
          "id": "7627aea6-21ad-4f41-b9d2-dc3c3dfb2158",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a66ad425-889d-4097-8998-3fc5b8a6a328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfe5dd8-78b9-43bd-979a-aae9f6a7bc73",
        "cursor": {
          "ref": "60967aef-afad-4936-8c03-9f05a7a34b9a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2552e131-1d05-4490-b608-94defc7e2902"
        },
        "item": {
          "id": "2dfe5dd8-78b9-43bd-979a-aae9f6a7bc73",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1b09182d-40fe-4326-aa54-a2a3bb0f0b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b113b1eb-a072-4dd5-80d9-f0bcd17920de",
        "cursor": {
          "ref": "3fb3e40b-4978-4bc9-9d6a-60e23f64c57e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "38a4bc94-8c6e-4534-8779-716036192bd8"
        },
        "item": {
          "id": "b113b1eb-a072-4dd5-80d9-f0bcd17920de",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1567bbb5-adcf-4855-a6fd-418a99be3db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc12a180-33f0-4fcb-a779-808ae3217701",
        "cursor": {
          "ref": "b8b48183-114f-48dc-90da-719aa13eff4e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fa8a59b5-2d80-4d79-ad56-cd7116c0647f"
        },
        "item": {
          "id": "bc12a180-33f0-4fcb-a779-808ae3217701",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cb967696-3023-4449-9c2c-3835ad9791e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0d81f3-ade5-436f-b67c-8b4f92b255b3",
        "cursor": {
          "ref": "aaf28c80-54f8-400f-a4f8-2aa82ca1d846",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "920a90eb-5a2b-4d1e-99fb-e80d609aade0"
        },
        "item": {
          "id": "ec0d81f3-ade5-436f-b67c-8b4f92b255b3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4b7c1fd8-db0f-40c0-abf2-94e48400ed05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113c6d03-86f0-4aa9-a601-1998eb014e7c",
        "cursor": {
          "ref": "d3eaba3f-30f9-4fe3-98db-cb5ed6097953",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "aaa00591-9afd-485c-a03a-8acc57d96b92"
        },
        "item": {
          "id": "113c6d03-86f0-4aa9-a601-1998eb014e7c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "505c33e1-50bc-44c9-84a7-85675b243614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e1af05-d312-4e14-9fd0-238bbe9a8540",
        "cursor": {
          "ref": "b12af2c9-4b97-4704-be64-669427272656",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "009bd014-7af4-447c-830e-fc0b7c93ed49"
        },
        "item": {
          "id": "b1e1af05-d312-4e14-9fd0-238bbe9a8540",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "93948f45-a277-43d1-9706-613b1b66f249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4feb3e05-9a18-45e3-b019-3eab2a131e74",
        "cursor": {
          "ref": "dc9bc9dc-1067-4cfd-b9af-7f30c827206e",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "01aaa274-bd43-4c89-8c28-dc237929443e"
        },
        "item": {
          "id": "4feb3e05-9a18-45e3-b019-3eab2a131e74",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9f67bcd8-809c-4cf4-873b-f37448299ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fea61bb-821d-43df-ab63-595615ce32e4",
        "cursor": {
          "ref": "69d88c84-5e94-45a7-b1f5-6c9f1802f9a0",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fbcece8c-a9f1-44bf-ab7e-9ed8704f5ce1"
        },
        "item": {
          "id": "7fea61bb-821d-43df-ab63-595615ce32e4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "913cb0f6-9758-4418-9b55-0258e4625af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55945c0-0b7c-46cc-90d5-2b2adfa773bc",
        "cursor": {
          "ref": "dcff29ee-bc01-4ce7-ab0a-fb8dd623473d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "991ed283-9d96-409b-ac71-70f7e811dd6b"
        },
        "item": {
          "id": "f55945c0-0b7c-46cc-90d5-2b2adfa773bc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7bf41332-e0df-4b36-a9c8-2ba4f13cb699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab70553-7565-4e5a-88be-bb1957a52d09",
        "cursor": {
          "ref": "f35d9f73-0f55-40d7-aef6-c56115a04b1f",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fb714905-fa74-4cae-af65-b6d0dca4c584"
        },
        "item": {
          "id": "dab70553-7565-4e5a-88be-bb1957a52d09",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "af035531-60c4-491f-ba6a-9b2a370a1d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ed63c0-f619-4804-8843-235ffca66c37",
        "cursor": {
          "ref": "13aceadf-1743-4d63-b89d-f8ee40faf0d6",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8525b055-9e3e-4cc9-8f77-86abcdcf01b1"
        },
        "item": {
          "id": "62ed63c0-f619-4804-8843-235ffca66c37",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "79c50aa5-e727-493d-a916-6ce31944ad61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d17227-1cf8-4cbf-ab5b-21ae673c5cb3",
        "cursor": {
          "ref": "ddf7b1a4-8259-4d7f-8ed0-9169d1e2d4ce",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e2f07096-4991-4a35-8fad-f2b0f1343326"
        },
        "item": {
          "id": "81d17227-1cf8-4cbf-ab5b-21ae673c5cb3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c7106331-cd27-4469-94fb-bc3609d2dc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b676c196-24ff-431a-a8e2-969de4b60b3c",
        "cursor": {
          "ref": "873b2c13-1903-4598-bb4c-18fe5813f048",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "eb2570e7-3b5a-4f6c-a7f3-1d394557236c"
        },
        "item": {
          "id": "b676c196-24ff-431a-a8e2-969de4b60b3c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cd70402c-8056-41c8-bf9e-17b96ac1a2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a7bd31-29b0-423c-a57d-304a7f6c9358",
        "cursor": {
          "ref": "429cd064-5736-4c9a-ad87-37524093f91a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5fd883ce-f09f-4159-8117-7d622f7f8cda"
        },
        "item": {
          "id": "38a7bd31-29b0-423c-a57d-304a7f6c9358",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "48492caf-1aeb-40e9-8e33-e5590fdfd3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b31e854-b12b-436a-bb4a-66ec79326b89",
        "cursor": {
          "ref": "7fe1fe7d-916f-48f0-b638-9b3265897897",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "267b9257-091e-469e-b113-adad8965181d"
        },
        "item": {
          "id": "6b31e854-b12b-436a-bb4a-66ec79326b89",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7f9c556c-e260-43fa-870e-2d4f5776ca9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a586dac6-3c45-4a56-98b4-a878b157c792",
        "cursor": {
          "ref": "d61e1e64-354e-467f-bf41-23c652a89808",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "75145740-cfd9-4831-b1b0-dd8b812009f6"
        },
        "item": {
          "id": "a586dac6-3c45-4a56-98b4-a878b157c792",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "81fbbf02-e292-4694-a70b-34dc1436798c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c3b7fc-96c2-4dee-a592-574ac5fcde17",
        "cursor": {
          "ref": "4441d44b-9f1e-48b8-983c-a1a21c5227ff",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a5649727-e7ee-45d1-9c0b-90f622ccab5f"
        },
        "item": {
          "id": "e1c3b7fc-96c2-4dee-a592-574ac5fcde17",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f36a471a-6d9c-47a6-855f-05874b1e9301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022f2392-f298-42fd-b2a9-3761c96f4be1",
        "cursor": {
          "ref": "2144252b-bead-4653-8d5e-bb04f3a21c59",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e64db91a-23a2-45e1-a3b3-041e898acc29"
        },
        "item": {
          "id": "022f2392-f298-42fd-b2a9-3761c96f4be1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f83f3014-1872-499f-b875-255aa03eada2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875a68a1-b353-4d2a-b4d1-e510d04016fe",
        "cursor": {
          "ref": "63dfb883-0362-40e2-8c4b-3c56e84852c4",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e472a8a6-f0ab-43a7-a0fd-7acb667f16a8"
        },
        "item": {
          "id": "875a68a1-b353-4d2a-b4d1-e510d04016fe",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3bc6ff48-c8ad-407c-90c8-4d5d61f0dfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2c5396-0c8d-4d78-a50b-e6ca0a9d7a70",
        "cursor": {
          "ref": "0a3b22a5-984f-45fd-9c69-70535348cdbb",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "716e7f3a-cf3f-4d17-8d0e-0a46e62350fe"
        },
        "item": {
          "id": "cc2c5396-0c8d-4d78-a50b-e6ca0a9d7a70",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f8ea9a3b-740f-489e-8a39-64f577fc2a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20009477-4e09-4a42-8866-f9b99893aaf2",
        "cursor": {
          "ref": "fcc97416-e08d-4f64-80c3-5b7699705271",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f8ae8773-9ce2-4da0-b59f-2e6a0eb01eb7"
        },
        "item": {
          "id": "20009477-4e09-4a42-8866-f9b99893aaf2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0e783cce-a76f-4f55-84bf-e2affeec9812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c42ddd-cfec-47fc-97f4-9d5294d72f6e",
        "cursor": {
          "ref": "f8d47c29-081d-4524-af3c-6fcd528dd06e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d7c22830-ebcd-4c92-a811-6c77caabae37"
        },
        "item": {
          "id": "b7c42ddd-cfec-47fc-97f4-9d5294d72f6e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1a08333b-5b80-4bfb-ae32-b6acfcee1118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035cfb7c-74b8-46fe-b7c9-56b204ddb8f5",
        "cursor": {
          "ref": "64ee3be7-07e1-4ebd-a8c8-9f86a6f7697b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0c1afc43-57f9-4c92-b9e8-a4d6a2111cee"
        },
        "item": {
          "id": "035cfb7c-74b8-46fe-b7c9-56b204ddb8f5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "64155c77-c34c-4ad3-b0c5-90b96b89f3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fefebb8-562c-4705-a353-fb69c0709da2",
        "cursor": {
          "ref": "ea4b3fa3-025c-497d-8776-2f84fb32ced5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "10b7bbcd-49d5-458f-a5e6-99d9d99871ab"
        },
        "item": {
          "id": "7fefebb8-562c-4705-a353-fb69c0709da2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d567a229-5c92-4560-aaea-a972a45ca78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452f98c4-02bf-488c-a2ce-ce6eff31e323",
        "cursor": {
          "ref": "15022b2e-6bb9-43e7-86ba-f42d2b8ccc48",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c4fe0de6-49ad-455b-ae85-4a92342e16ee"
        },
        "item": {
          "id": "452f98c4-02bf-488c-a2ce-ce6eff31e323",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "acad4dd8-d349-478a-856d-7383aef8d58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a926ab-7578-4d6e-857b-4355e95a746b",
        "cursor": {
          "ref": "a1e3403d-6ed5-420a-a6ad-7e72518018be",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e474878d-423e-4f46-9514-876b3a4d2728"
        },
        "item": {
          "id": "97a926ab-7578-4d6e-857b-4355e95a746b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0b82d8ab-ea7a-4e59-9121-4784126b2e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544f7801-61af-408d-b5dd-45d3b978d463",
        "cursor": {
          "ref": "0e694482-2b08-4760-be97-420cae3cd0fd",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "83826b0f-d446-481c-b89c-026818353f83"
        },
        "item": {
          "id": "544f7801-61af-408d-b5dd-45d3b978d463",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ca0212ba-d5b5-4f30-b485-8f124a0e42d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246f45de-b5b1-4aaf-a9ce-5c03839e47b6",
        "cursor": {
          "ref": "2196922f-8d10-4b29-bb58-d1592ccfeb17",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2b7436d1-917e-41bb-a96a-313826f04cf5"
        },
        "item": {
          "id": "246f45de-b5b1-4aaf-a9ce-5c03839e47b6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5e8ea1d7-2f79-4aba-8419-ac08d2fc93d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583c73c3-2f6f-49ba-b28f-c95b243f3eb2",
        "cursor": {
          "ref": "cfb568a7-6c52-4ddf-bff1-4050debdc258",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5aefe441-ae62-489b-ba6b-12fd185ba71a"
        },
        "item": {
          "id": "583c73c3-2f6f-49ba-b28f-c95b243f3eb2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8d9290a8-5a96-43b8-a05c-8051668d0d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e22f9cb-e278-457c-9105-39ed3f1e0fdd",
        "cursor": {
          "ref": "e8c92f44-1a4d-4987-a073-f02aaee388d8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2b063170-62e3-4dcd-9230-a24d915db4c1"
        },
        "item": {
          "id": "2e22f9cb-e278-457c-9105-39ed3f1e0fdd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "75e7a70f-3d80-4bbb-8cbd-0bdafe1f88e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b88935-4db5-4ebd-a749-f0df7bfc2e1c",
        "cursor": {
          "ref": "b6e30950-4837-4f33-82ba-4aa6dcf4c917",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ee17eb48-f094-497f-bc41-56f936a07a6f"
        },
        "item": {
          "id": "e7b88935-4db5-4ebd-a749-f0df7bfc2e1c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d49f115b-cd25-43f6-8a8d-39c3f435625b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0d472e-5407-4171-99a4-8d7c4045df79",
        "cursor": {
          "ref": "202aa820-4940-4638-8b63-c067c4c05e05",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4ae9bff2-06e1-4fc2-9e80-30871e8e67da"
        },
        "item": {
          "id": "ce0d472e-5407-4171-99a4-8d7c4045df79",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "324dff74-db39-46f3-863d-8fdbd73021ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13dec575-8be6-49bc-a7e0-dd33e990abd5",
        "cursor": {
          "ref": "ae2c5a2c-2138-42e3-b92d-3739faf2f732",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d0afe007-2628-4a9a-91a2-238c0eeef5b6"
        },
        "item": {
          "id": "13dec575-8be6-49bc-a7e0-dd33e990abd5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5a73d1e1-f43f-43a9-8647-d6801fb6fdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1a002a-159f-44c4-83c2-d75e13d22ce4",
        "cursor": {
          "ref": "46d80ce8-8afc-4e59-b7e6-c3bb5ad0b79e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8b93876f-4643-43f1-bb2a-e0879b049722"
        },
        "item": {
          "id": "ba1a002a-159f-44c4-83c2-d75e13d22ce4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f66ac422-246f-43c1-b201-99c01e4eac34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676ec917-cfbb-4c0f-a773-32f23a3bce47",
        "cursor": {
          "ref": "452df19b-6ab8-4c9a-950c-aa9a95ed51d7",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "86e6b73b-ecbe-444b-8663-40a114bf530d"
        },
        "item": {
          "id": "676ec917-cfbb-4c0f-a773-32f23a3bce47",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d6e121c9-9d96-4549-a273-c94d929746da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac66bacc-3eb0-4a40-851a-a592aedc420b",
        "cursor": {
          "ref": "daa10236-44b1-47f4-8075-e02d63130a85",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "41441cdc-d9f2-4203-8c55-1df8c8d2d151"
        },
        "item": {
          "id": "ac66bacc-3eb0-4a40-851a-a592aedc420b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "584ad6f4-c107-4a06-8c09-f36b1526ee59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a77644-7a92-47a3-bd5e-e8574f86fcb0",
        "cursor": {
          "ref": "a89033c4-790f-4d93-9a91-0e882f94537b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f6802dc4-5705-486e-8636-df7c0c779bb9"
        },
        "item": {
          "id": "a9a77644-7a92-47a3-bd5e-e8574f86fcb0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0145349e-c099-4ab5-8050-2f173ad937e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ae3711-414f-4220-9777-f6c81bdd2047",
        "cursor": {
          "ref": "831a4151-9972-42dc-a997-4012a29f7f45",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7a24c85d-5cdc-455b-8e0d-403167409eac"
        },
        "item": {
          "id": "f8ae3711-414f-4220-9777-f6c81bdd2047",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "36520d16-6130-480d-aa81-fbec4adf8888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1d2403-a58b-4523-9c19-b198ba4cc8a2",
        "cursor": {
          "ref": "1ae0d3e2-e5a2-4038-a343-e4591effc9f3",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "584d1152-fdff-4e26-9c14-308fd86490b7"
        },
        "item": {
          "id": "ef1d2403-a58b-4523-9c19-b198ba4cc8a2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e054b0a8-8ad6-40cd-aeb2-e33693268a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec82e9bf-6d85-4c16-804f-987c500743bf",
        "cursor": {
          "ref": "a15ecb1c-045b-44f1-9289-d64b2d37fae4",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5f1fa64a-5291-420c-b1b5-515b1dcb1423"
        },
        "item": {
          "id": "ec82e9bf-6d85-4c16-804f-987c500743bf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "823edf83-5cb9-4e5e-abc5-48c77c135a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8b9648-3a0a-4d65-b4a8-4ffda5cdf517",
        "cursor": {
          "ref": "377e89ba-8357-4394-b08a-9cae40f438b5",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7da66b37-49a4-4ad9-8444-7a58c084a3a8"
        },
        "item": {
          "id": "df8b9648-3a0a-4d65-b4a8-4ffda5cdf517",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "393fdbb9-0dd1-4997-8270-82e146bd643f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea2b687-e651-4192-aa8a-32cbb9945234",
        "cursor": {
          "ref": "9d309c16-658b-4074-8885-e81914c4453a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f0c3296a-82a6-410b-822e-3aacc9743ac6"
        },
        "item": {
          "id": "cea2b687-e651-4192-aa8a-32cbb9945234",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4f63cc94-a841-4f50-a071-682d1bfa60c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51eccdb-b9b4-499c-9fda-0c29570f1479",
        "cursor": {
          "ref": "ae1da757-2f8a-482d-8240-143662d2f200",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ba599c9a-4568-48ac-83b6-feebe6e23993"
        },
        "item": {
          "id": "a51eccdb-b9b4-499c-9fda-0c29570f1479",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c6553145-7953-4343-9d5e-16ad3d009cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416a7502-c4e3-49fd-98da-53a6ef61cf64",
        "cursor": {
          "ref": "48d89fd4-02ef-4ac2-b7e5-29373f2313b9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9c3c559c-9691-4e59-b7c4-c375115bd2ff"
        },
        "item": {
          "id": "416a7502-c4e3-49fd-98da-53a6ef61cf64",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e0cd72a7-8063-41b8-8015-d8adb0e2af6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee700482-e07c-451c-a319-153ea6bf396b",
        "cursor": {
          "ref": "618528c2-a905-4020-a1a2-94642ed83950",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "68ef4351-a13a-47af-ac1a-9ae42c89a085"
        },
        "item": {
          "id": "ee700482-e07c-451c-a319-153ea6bf396b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "284bd59c-70d7-4d4d-be34-8a3bd0171cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8140471-93a5-4286-b383-ce54761509e9",
        "cursor": {
          "ref": "6c0d5334-ecd7-44bc-84b5-52aa76e75920",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "503c0620-9864-4044-9661-66b7ef0198d1"
        },
        "item": {
          "id": "c8140471-93a5-4286-b383-ce54761509e9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "27120b0e-3fb8-47e0-b144-c1c3b88a3389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b756e7-8d5a-40fd-b180-4daa528d62d4",
        "cursor": {
          "ref": "95bc94f0-f4a7-4cf0-8f07-7741a9329ab9",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d2501743-85a0-486f-be13-132efb81a351"
        },
        "item": {
          "id": "71b756e7-8d5a-40fd-b180-4daa528d62d4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a924d28a-94c1-4aca-b6d2-13493657ee46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25043bb6-7841-4e0a-b3d4-a119d7bd7f38",
        "cursor": {
          "ref": "04a70f94-a7cf-422f-a7b6-60b73298404d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3153ceca-ddac-4665-b94d-80b57d44b237"
        },
        "item": {
          "id": "25043bb6-7841-4e0a-b3d4-a119d7bd7f38",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1e0f04f8-6098-4a82-8697-5faa379207b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2520f4-0683-40c4-ab91-43fbab44f786",
        "cursor": {
          "ref": "5d8e8ba5-642b-4683-926a-363ef4089b74",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e59e93c2-b670-4f4a-8e4a-2bf11ede69e4"
        },
        "item": {
          "id": "7a2520f4-0683-40c4-ab91-43fbab44f786",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "94712268-9bb4-4a06-835a-1e9b593dbf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb2fadb-dd9b-4b98-9d6a-0da70f991207",
        "cursor": {
          "ref": "fa44dea2-af7f-4458-a3d1-940599ead87b",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e75d35e1-f6b8-42d8-a7b8-56c07a4a946d"
        },
        "item": {
          "id": "efb2fadb-dd9b-4b98-9d6a-0da70f991207",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a9e735ae-124b-414d-ae19-c4e54e83818d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ef12e4-1713-4a7f-8a33-ec1d2f8e9bbd",
        "cursor": {
          "ref": "57474812-7752-4236-8c19-a8c085d89942",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "64d157bd-e79a-4c1d-bf31-37ab5b8e00a8"
        },
        "item": {
          "id": "46ef12e4-1713-4a7f-8a33-ec1d2f8e9bbd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3dbd075b-322f-401e-90fa-49329bbe3ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2474d1-d410-4cdf-a88f-9a6b4f55d932",
        "cursor": {
          "ref": "83a087be-a027-46bf-b0f6-140b70fbcf77",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c667876f-f832-43e4-8ed6-f738f448ac51"
        },
        "item": {
          "id": "9b2474d1-d410-4cdf-a88f-9a6b4f55d932",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7377dc4e-868a-4023-bc37-04764b37209d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75231e86-1cdf-4c9b-a1a9-53bbc19e40b0",
        "cursor": {
          "ref": "b921c872-f431-469f-a741-03298beb8f68",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "383de231-ff97-4c13-a3d2-2c1a3929283f"
        },
        "item": {
          "id": "75231e86-1cdf-4c9b-a1a9-53bbc19e40b0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "30e49551-1490-4b84-b60c-5c62eef46834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089e61a6-993d-42a8-bff3-3f29a9a1f910",
        "cursor": {
          "ref": "07cfb5b4-ef4d-4b1a-8b74-e015bc85816e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fb4af1bb-d244-43cc-8cb2-e7ee9d112259"
        },
        "item": {
          "id": "089e61a6-993d-42a8-bff3-3f29a9a1f910",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a2d94ef9-dc42-44b8-8c05-a9129debcc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5656dc49-e038-4433-971a-d38053c0eaff",
        "cursor": {
          "ref": "a8f67e1a-592a-497d-85fc-99af98c75e9b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3ef1de68-9328-4aea-99ff-d19d9eed7407"
        },
        "item": {
          "id": "5656dc49-e038-4433-971a-d38053c0eaff",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "eb1e5329-3c47-47a2-8d52-b1b80ce57840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36857fcb-4eaa-47c0-b8bd-3066fd47b617",
        "cursor": {
          "ref": "9dcabe85-338e-4752-a319-2410f3a04fb3",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "66a1cc82-cb6f-4c92-8a7b-4830ce31849c"
        },
        "item": {
          "id": "36857fcb-4eaa-47c0-b8bd-3066fd47b617",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e1085e9e-2f84-41fc-9d6e-f204b67fa849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27150d11-faa7-47d8-9cfa-a14b9c0214fa",
        "cursor": {
          "ref": "178f204e-43df-481d-a25c-9f1f601ed3d4",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "09ba6df1-77ae-47ab-9ab5-7938226d761c"
        },
        "item": {
          "id": "27150d11-faa7-47d8-9cfa-a14b9c0214fa",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6b4e6040-1a5b-43fa-add1-664c8d296539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16992a0-bc07-405e-a296-354d4b8ed661",
        "cursor": {
          "ref": "735400e2-1ea9-418a-b326-2d47170b4421",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c88af955-a700-49df-abe9-80486ff158eb"
        },
        "item": {
          "id": "d16992a0-bc07-405e-a296-354d4b8ed661",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e283366a-9294-4044-82c6-3adc6949452a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72489a2e-ff03-4d4f-b972-9fc6bce7d2a4",
        "cursor": {
          "ref": "da6d4408-3a22-4703-97ed-30842bdcc5c8",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "55f8f9f8-58ab-4c38-8ab6-ad9ede46e327"
        },
        "item": {
          "id": "72489a2e-ff03-4d4f-b972-9fc6bce7d2a4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f44329bc-4502-4947-9176-63b4b4035d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f414350d-6dce-4344-9f6f-a707f5676721",
        "cursor": {
          "ref": "d32f437f-f236-41c5-8016-e40c29df3087",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "856058cb-46af-49bf-8ead-fc9fc67b880a"
        },
        "item": {
          "id": "f414350d-6dce-4344-9f6f-a707f5676721",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "de1ed52a-992f-4e9c-9470-bdb201fbbc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d9814c-356c-4b55-b946-6503e1927309",
        "cursor": {
          "ref": "6fd20c24-107c-4a0c-97da-5a6089b52968",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "13d8a471-5a47-4e65-9ba5-36e6e42454f6"
        },
        "item": {
          "id": "28d9814c-356c-4b55-b946-6503e1927309",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cebaf588-5471-4430-8ab0-9912a3f9581a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bf44cb-f16e-4913-a0ee-7541ede70bda",
        "cursor": {
          "ref": "8645b24b-63ff-4fa3-bcd6-8abcc3c625dc",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "af17ecb0-e832-4c96-adbe-55cebe7e3c00"
        },
        "item": {
          "id": "f9bf44cb-f16e-4913-a0ee-7541ede70bda",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ea2630e3-a467-4329-ac75-9fc466a5d778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48743fd-df01-4c10-b889-24da21e05b22",
        "cursor": {
          "ref": "2dd6ac3c-1464-42ec-8b26-0cab23d127d9",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b770c669-c1cb-4575-96fd-12c043c0b33b"
        },
        "item": {
          "id": "e48743fd-df01-4c10-b889-24da21e05b22",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "eaf32fca-d332-4fa5-954e-2a35e684e1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72885f9d-4bec-435e-b0ad-19cd6519db29",
        "cursor": {
          "ref": "e2f01d84-172f-4de8-9c50-d6ce47b33f4d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a5f5113b-a4d0-48d6-b4c4-894946aac45b"
        },
        "item": {
          "id": "72885f9d-4bec-435e-b0ad-19cd6519db29",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2467d9aa-a25f-442d-a4c5-85364ad86778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9cae04-f740-4872-972d-ae097bde8c0c",
        "cursor": {
          "ref": "5f5e4f4c-733b-47f4-875c-f484ee05e700",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8c54777f-ec4f-40a0-bca8-0cb6fd0511bc"
        },
        "item": {
          "id": "5b9cae04-f740-4872-972d-ae097bde8c0c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b995a308-a93b-428c-a3e3-b11e386aff18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35db5aa8-87bb-463b-b15e-48fe95f8c04c",
        "cursor": {
          "ref": "ff81c6d6-6d2c-4bd5-9932-1c94744c442c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "97e8afec-48f7-46c0-8819-bcdcccc276ec"
        },
        "item": {
          "id": "35db5aa8-87bb-463b-b15e-48fe95f8c04c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6e011afe-d292-40a4-93fc-ce91c4f8b635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddba810c-cbe2-4745-bad7-447cca2abae5",
        "cursor": {
          "ref": "8af3c620-e831-4c4f-8578-a1535a019495",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "787d2aa9-4592-44fa-9c1e-d56a1003b56b"
        },
        "item": {
          "id": "ddba810c-cbe2-4745-bad7-447cca2abae5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4a1a3e19-b196-4023-8e0d-67de2ee57dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83904a5-8e13-4818-a49b-416f2783794d",
        "cursor": {
          "ref": "4cf26078-231f-40e6-b6b9-893fe40f9955",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a459b646-fdda-4381-a27f-7b1cccebdc3f"
        },
        "item": {
          "id": "a83904a5-8e13-4818-a49b-416f2783794d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2ddb9aca-d3db-4194-a793-d3b7768472cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0e12bd-f02b-4a63-8001-69b45344dd03",
        "cursor": {
          "ref": "152d7727-c939-45d3-98ff-281fb07018b5",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "62fe8fc5-2f4a-4da7-b70e-74aa4e6835bf"
        },
        "item": {
          "id": "5c0e12bd-f02b-4a63-8001-69b45344dd03",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9b19de08-d66c-4716-9bc2-94f67a6a60bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6363f71b-a637-454c-8d86-106b60fffcc0",
        "cursor": {
          "ref": "b3621e40-98a6-4385-9112-7b9f1f840f96",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fb6a99ae-846c-48bc-9009-8b56a1ea6451"
        },
        "item": {
          "id": "6363f71b-a637-454c-8d86-106b60fffcc0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "aaf1a077-66e6-4f95-a62b-0f2f1605e6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c434f5-470f-4c0e-94ac-7792c36038a4",
        "cursor": {
          "ref": "308f2ca7-3eb5-4445-bf1d-c6bed60e82de",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "15770c94-a3b6-4771-ac2a-816bcf3f1917"
        },
        "item": {
          "id": "35c434f5-470f-4c0e-94ac-7792c36038a4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "412d8d8f-b4ba-4654-b685-fe5ccb747adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fac150a-2f59-49d1-a2ab-0aaec6933cbc",
        "cursor": {
          "ref": "5446cdc0-c22b-4e6a-831a-6d2e953c1c0d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "34fc8b2c-e763-4e09-bb34-a3f2d4595c8c"
        },
        "item": {
          "id": "1fac150a-2f59-49d1-a2ab-0aaec6933cbc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d0aac469-25f7-40e7-9f49-b812622c68ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60829831-a554-46f2-a7ec-adfaaa719372",
        "cursor": {
          "ref": "de5643c4-3c98-4ddc-860e-345d582428c1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5ec3498e-015c-4d0c-bd2a-2e73408d0909"
        },
        "item": {
          "id": "60829831-a554-46f2-a7ec-adfaaa719372",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "89878e37-7509-40a6-b247-f9813ccdfedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd3c756-c673-44a3-9ef0-f965b7aa4a07",
        "cursor": {
          "ref": "3e7d0779-06f4-49db-9e63-a960793a9800",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "83be2459-3074-4c7e-9418-99dfba76e62e"
        },
        "item": {
          "id": "4cd3c756-c673-44a3-9ef0-f965b7aa4a07",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "246189b0-9b02-43f7-821c-af69e6a08a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe0e65a-5cc3-46a5-9dc9-76b440a3c9b6",
        "cursor": {
          "ref": "85f4a3ad-2ef0-4358-8ad5-f091bcd63691",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1e6d4173-00f9-4c62-8e07-a969d4b0678c"
        },
        "item": {
          "id": "efe0e65a-5cc3-46a5-9dc9-76b440a3c9b6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "da79ce75-8510-49ca-9347-6d8aa0173e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5fcdcf-5726-4853-b718-9b0120945a9b",
        "cursor": {
          "ref": "2be088e6-fae2-49c1-b33a-cfc88a84d442",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e43157b2-b692-4fe5-a00a-003e15e569be"
        },
        "item": {
          "id": "0c5fcdcf-5726-4853-b718-9b0120945a9b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ec08e94a-6c2f-47c1-baa0-7fd213ecd1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d164b362-6073-4065-bd09-18daf61ff5c2",
        "cursor": {
          "ref": "ad4c3347-333a-4747-987c-0237f56710ad",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "abbc4567-d319-4a30-9ef7-9ac76d2e6a6b"
        },
        "item": {
          "id": "d164b362-6073-4065-bd09-18daf61ff5c2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2cae1972-67cd-45c7-9966-0a0ea6f5ac73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874c1e64-2b4e-4326-b4fb-2d0c80caa686",
        "cursor": {
          "ref": "b5397d56-cef6-4396-87f2-186c8381c844",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d1a87e80-44db-4985-9850-95f426bf1b8c"
        },
        "item": {
          "id": "874c1e64-2b4e-4326-b4fb-2d0c80caa686",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cc615752-50ce-4df5-99f6-7ac8ae8d3ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e750a0-adf0-4234-aa2a-1594dff7c8be",
        "cursor": {
          "ref": "2626f493-0041-4efa-8cfa-a44e34abd05e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "698b2528-bc73-40ae-843d-2c42f6c524c1"
        },
        "item": {
          "id": "f4e750a0-adf0-4234-aa2a-1594dff7c8be",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1a2b4e7b-8812-4491-9ff7-33b7b53c2ba2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e606b3f-fffb-4481-a748-611a0a93c0dc",
        "cursor": {
          "ref": "b44714e3-f421-4e00-ba49-5f24bda639a4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "17ab5b26-5e44-4536-9b7a-9384a4740891"
        },
        "item": {
          "id": "0e606b3f-fffb-4481-a748-611a0a93c0dc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7f9b6602-aa6b-410b-9a64-ed2ec9086325",
          "status": "OK",
          "code": 200,
          "responseTime": 1932,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59b6ded-8b89-467f-bdf9-fd91d08b98f3",
        "cursor": {
          "ref": "bb3aaa99-a335-430c-ad31-d8e3f8e6895c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "58a95ad2-f383-4595-a62f-bad6f7bd42f6"
        },
        "item": {
          "id": "b59b6ded-8b89-467f-bdf9-fd91d08b98f3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "41e13bdf-a301-46a6-96b3-8bb2e4aba165",
          "status": "OK",
          "code": 200,
          "responseTime": 3241,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1192f3c-39a0-431b-958b-64bb9767ea18",
        "cursor": {
          "ref": "caf2512c-4148-4354-aeb5-192e2ad9e965",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6025c04b-4c5c-4a40-bf2f-22bb99837b13"
        },
        "item": {
          "id": "e1192f3c-39a0-431b-958b-64bb9767ea18",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e3f196a4-9c4e-43d3-8697-b5676e57fe83",
          "status": "OK",
          "code": 200,
          "responseTime": 3086,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bf6835-a496-41cf-880c-279e669c0419",
        "cursor": {
          "ref": "14e23a7a-ef23-47f2-9079-5fd066627edb",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3683a585-7658-40a4-85da-65ea7892dc78"
        },
        "item": {
          "id": "b0bf6835-a496-41cf-880c-279e669c0419",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cd555270-f5c0-4e5e-a335-a191618b7481",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bf6835-a496-41cf-880c-279e669c0419",
        "cursor": {
          "ref": "14e23a7a-ef23-47f2-9079-5fd066627edb",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3683a585-7658-40a4-85da-65ea7892dc78"
        },
        "item": {
          "id": "b0bf6835-a496-41cf-880c-279e669c0419",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cd555270-f5c0-4e5e-a335-a191618b7481",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f41544-836d-4682-a8d2-472560aded45",
        "cursor": {
          "ref": "4afd35bc-601d-4b5a-95b4-ef27c985f8a5",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "483101b3-01c7-43d8-952e-6a859be78702"
        },
        "item": {
          "id": "45f41544-836d-4682-a8d2-472560aded45",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dbf0d083-2304-4bb1-854f-6ae70aecfebf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694af931-13e7-442e-bd09-389becc7dbf0",
        "cursor": {
          "ref": "b0f74b26-8d49-43e9-b166-bd576be7ab7e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e9b5319a-6f49-4a29-8d9c-574f05776ef6"
        },
        "item": {
          "id": "694af931-13e7-442e-bd09-389becc7dbf0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a9a9bd89-2b17-4077-8ea0-cb658ce467a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}